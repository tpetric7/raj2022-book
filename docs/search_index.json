[["index.html", "RAJ 2022 Introduction Course Kapitel 1 Einführung", " RAJ 2022 Introduction Course Teodor Petri 2021-11-28 Kapitel 1 Einführung In diesem Einführungskurs machen wir Sie mit quantitativen Methoden zur Erfassung von linguistischen Merkmalen in deutschen, englischen und slowenischen Texten bekannt. Unseren Kurs beginnen wir mit wichtigen Grundlagen für die Verwendung der Benutzeroberfläche RStudio und die Manipulation von Dateien und Datensätzen. Neben einigen Base-R-Funktionen lernen wir vor allem, mit den Funktionen des Programmbündels tidyverse umzugehen. In mehreren Kurseinheiten beschäftigen wir uns mit kleineren Datensätzen aus dem Bereich Sprachverwendung und einigen grundlegenden statistischen Testmethoden. In einer Kurseinheit vergleichen wir Ermittlungsfunktionen in R und Microsoft Excel, einem beliebten Tabellenprogramm. Das Thema mehrerer Kurseinheiten ist die Zerlegung von Texten in kleinere Einheiten und ihre Bearbeitung auf verschiedenen linguistischen Ebenen: auf phonetischer, graphematischer, morphologischer und syntaktischer Ebene.1 References "],["namestitev.html", "Kapitel 2 Namestitev 2.1 Osnovni programi 2.2 Dodatni programi 2.3 Pomo 2.4 Druga orodja 2.5 Oblane storitve", " Kapitel 2 Namestitev 2.1 Osnovni programi Za raunalniko podprto delo z jezikovnim gradivom uporabljamo brezplana programska orodja, tj. programski jezik R. za udobneje programiranje grafini vmesnik RStudio in za nameanje razvojnih programskih razliic v okenskem okolju tudi RTools (slednji ni obvezen, vendar priporoljiv za napredneje uporabnike). Programe R (4.1.1 ali novejo), RStudio (2021.09.0 ali novejo) in RTools (4.0.0 ali novejo) prenesemo z naslednjih spletnih naslovov: za Windows https://cloud.r-project.org/bin/windows/base/, za MacOS https://cloud.r-project.org/bin/macosx/ https://www.rstudio.com/products/rstudio/download/ (Windows ali MacOS) za napredneje uporabnike, ki elijo dostopati do razvojnih razliicah programov na portalu github in nekaterih drugih storitvah https://cran.r-project.org/bin/windows/Rtools/. Na novejih raunalnikih teejo veinoma 64-bitni operacijski sistemi (Windows, macOS, Linux). Zato je priporoljivo izbrati 64-bitne razliice programov. Na 32-bitnem operacijskem sistemu (e e uporabljate stareji raunalnik) potrebujete 32-bitne programske razliice. 2.2 Dodatni programi Po namestitvi programov R in RStudio je mnogo funkcij e na voljo. Na strenikih CRAN je mogoe dobiti dodatne programske funkcije. Vse so brezplane. Vedno ko elimo dodati programske funkcije ali knjinice (library), jih najprej namestimo s strenikov za programski jezik CRAN. V programskem okolju RStudio to lahko doseemo na ve nainov: Zaetnikom se bo zdelo najlaje v RStudiu klikniti zavihek Packages, potem Install in v novem pogovornem oknu vpisati ime zaelenega programa ali paketa (package). Pozor, programski jezik R razlikuje velike in male rke (v nasprotju s programom Excel). Hitreje namestitev novih programskih funkcij opravimo z vpisom ukaza install.packages(\"ime-zazelenega-paketa\") v konzolo (console). Ime paketa mora podati v navednicah. Programske funkcije, ki niso sestavni del osnovega programskega paketa (base R), je treba naloiti v pomnilnik raunalnika. To storimo z vpisom library(ime-paketa) (navednice tu niso potrebne) v dokument, v katerem shranjujemo zaporedje ukazov za analizo, tj. v programski skript (privzeta pripona datoteke: R) ali Rmarkdown dokument (privzeta pripona datoteke: Rmd). Mono je tudi zagnati knjinico (library) z vpisom v konzolo, vendar se vpis tega ukaza ne shranjuje v dokumentu. Med pomembnejimi dodatnimi knjinicami (paketi, programi, zbirkami programskih funkcij) za raunalniko podprto delo z jezikovnim gradivom in statistino analizo bomo uporabljali: Zaetnikom bodo nemara privlani programski dodatki, ki omogoajo izbiranje ukazov z miko in ve e vnaprej pripravljenih delovnih postopkov. Taki dodatki za statistino analizo so npr. RCommander: library(Rcmdr) Rattle: library(rattle). Taki dodatki ne zahtevajo, da bi si morali e kar v prvih tednih ali mesecih dela morali zapomniti imena knjinic ali ukazov, ki jih potrebujemo za analizo v programskem jeziku R. RCommander vam zaporedje ukazov tudi izpie, tako da se laje nauite sestaviti programski skript ali rmarkdown dokument. 2.3 Pomo RStudio ima tudi vgrajeno skrbno dodelano pomo (Help), ki jo doseemo na ve nainov: Izberemo zavihek Help in v okence Search vpiemo poizvedbeni niz (npr. ime ukaza ali funkcije, o kateri elimo izvedeti podrobnosti). Potem se preklikamo do zaelene strani pomoi. Druga monost pa je veinoma prironeja, e smo neko knjinico (paket) e naloili v pomnilnik raunalnika, tj. z miko pomaknemo kazalec na ime ukaza in pritisnemo funkcijsko tipko F1 za pomo (Windows). Na ta nain priletimo veinoma na relevantno stran. 2.4 Druga orodja Poleg programa za preglednice in grafikone (npr. Microsoft Excel ali brezplane razliice kot OpenOffice ali LibreOffice) nam lahko pride prav brezplaen program za statistino analizo, e nekega analitinega postopka v programskem jeziku R e ne znamo izpeljati: npr. jamovi (https://www.jamovi.org/download.html), ki pod pokrovom dela s programskim jezikom R in zna pripraviti lepa statistina poroila in prikaze; Jasp (https://jasp-stats.org/download/), ki ima podobno kot jamovi ve arovnikov za pripravo statistinih poroil in prikazov, vendar glede programskih funkcij zaostaja za prvo imenovanim programom. Za hitro in nekomplicirano analizo besedila (ali manjega tevila besedil) je zelo prirono spletno orodje Voyant Tools (https://voyant-tools.org/). Z raunalnika naloite besedilo (ali s kopiranjem v pogovorno okno), kliknete Anzeigen (Show) in e po nekaj sekundah vam program pripravi celo paleto diagramov in preglednic o lastnostih besednih oblik v besedilu. V primeru vejega tevila besedil, ki jih je treba loeno analizirati, postane delo s tem orodjem neudobno, in je laje delati v okolju RStudio s programskim jezikom R (ali z drugimi programskimi jeziki, npr. priljubljen je tudi Python). Druga prednost programskega jezika R in Rmarkdown je tudi monost izdelave poroila, lanka, bloga ali knjige, ki vsebuje celoten postopek, rezultate analize in spremno besedilo. 2.5 Oblane storitve Za napredneje uporabnike velja omeniti portal github (https://github.com/), ki je za zdaj e vedno brezplaen (eprav ga je kupil Microsoft). Omogoa hrambo analiznih postopkov, programskih knjinic, objavo delovnega gradiva in sodelovanje med programerji in uporabniki. Tudi knjiga, ki jo berete, ima svoj dom na portalu github. Omeniti velja, da lahko programski jezik R in RStudio uporabljamo tudi v oblanih storitvah, ne da bi bilo potrebno namestiti R in RStudio, npr. RStudio cloud: https://rstudio.cloud/ Google Colaboratory (https://colab.research.google.com) Kaggle (https://www.kaggle.com/). Te storitve zahtevajo, da ustvarite raun in se za vsakokratno delo prijavte v spletni portal. Te storitve lahko uporabljate brezplano. Prednost je, da se vaa analiza izvaja na zmogljivem streniku v oblaku, izognete se morebitnim programskim sporom in nezaelenim spremembam operacijskega sistema in obremenitvam lastnega raunalnika. Slabost brezplane uporabe storitve RStudio.cloud je, da vam v primeru veje besedilne zbirke dokaj hitro zmanjka pomnilnika, tako da ne morete ve delati naprej in izgubite e pridobljene rezultate. Google Colab je namenjen predvsem programerjem, ki delajo v programskem jeziku Python. e delate v programskem jeziku R, morate raunati s tem, da doloenih programskih funkcij ne bo (npr. knjinice readtext za lahkotno branje besedilne zbirke). "],["showcase.html", "Kapitel 3 Showcase", " Kapitel 3 Showcase 3.0.1 Data PreparationWere using data from Chart2000.com:Music Charts 2000 - 2020 library(knitr) library(kableExtra) library(flexdashboard) library(tidyverse) ## -- Attaching packages --------------------------------------- tidyverse 1.3.1 -- ## v ggplot2 3.3.5 v purrr 0.3.4 ## v tibble 3.1.6 v dplyr 1.0.7 ## v tidyr 1.1.4 v stringr 1.4.0 ## v readr 2.1.0 v forcats 0.5.1 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::group_rows() masks kableExtra::group_rows() ## x dplyr::lag() masks stats::lag() library(ggthemes) library(DT) library(plotly) ## ## Attaching package: &#39;plotly&#39; ## The following object is masked from &#39;package:ggplot2&#39;: ## ## last_plot ## The following object is masked from &#39;package:stats&#39;: ## ## filter ## The following object is masked from &#39;package:graphics&#39;: ## ## layout library(EnvStats) ## ## Attaching package: &#39;EnvStats&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## predict, predict.lm ## The following object is masked from &#39;package:base&#39;: ## ## print.default library(ggstatsplot) ## You can cite this package as: ## Patil, I. (2021). Visualizations with statistical details: The &#39;ggstatsplot&#39; approach. ## Journal of Open Source Software, 6(61), 3167, doi:10.21105/joss.03167 library(ggtext) knitr::opts_chunk$set(echo = FALSE) all_songs &lt;- read_csv(file = &quot;data/chart2000-songyear-0-3-0062.csv&quot;, na = c(&quot;&quot;, &quot;-&quot;)) ## Rows: 2100 Columns: 11 ## -- Column specification -------------------------------------------------------- ## Delimiter: &quot;,&quot; ## chr (2): artist, song ## dbl (9): year, position, indicativerevenue, us, uk, de, fr, ca, au ## ## i Use `spec()` to retrieve the full column specification for this data. ## i Specify the column types or set `show_col_types = FALSE` to quiet this message. attr(all_songs, &quot;spec&quot;) &lt;- NULL From the site https://chart2000.com/about.htm#fairuse we downloaded the file chart2000-songyear-0-3-0062, which you can also find on my github profile at https://github.com/fjodor/dataviz_ideas. It contains the top 100 songs for each year from 2000 to 2020. library(knitr) library(kableExtra) library(flexdashboard) library(tidyverse) library(ggthemes) library(DT) library(plotly) library(EnvStats) library(ggstatsplot) library(ggtext) knitr::opts_chunk$set(echo = FALSE) all_songs &lt;- read_csv(file = &quot;data/chart2000-songyear-0-3-0062.csv&quot;, na = c(&quot;&quot;, &quot;-&quot;)) attr(all_songs, &quot;spec&quot;) &lt;- NULL First we filter out the most successful artists: The Top 5 in terms of total score, i. e. the sum of Indicative Revenue (IR). According to https://chart2000.com/about.htm, IR is an attempt to measure the complete revenue generated by a song or album over a certain period. It does take inflation and currency conversion into account and can approximately be related to total revenue generated across the whole music chain in thousands of dollars. top_artists &lt;- all_songs %&gt;% group_by(artist) %&gt;% summarise(total_score = sum(indicativerevenue)) %&gt;% arrange(desc(total_score)) %&gt;% head(n = 5) %&gt;% pull(artist) songs &lt;- all_songs %&gt;% filter(artist %in% top_artists) %&gt;% mutate(artist = fct_infreq(artist), indicativerevenue = round(indicativerevenue)) datatable(songs, filter = &quot;top&quot;) 3.0.2 First Boxplot: Some tweaks to a basic ggplot2 chartusing ggthemes by Jeffrey B. Arnold This is our first attempt at summarizing indicative revenue of the Top 10 artists. What we have already done: Chosen a new theme: ggthemes::theme_solarized(). Thanks to package author Jeffrey B. Arnold and contributors Increased font size Ordered artists by total number of songs in top 100 for each year 2000 - 2020 Rotated x axis labels Removed x axis tickmarks Removed vertical grid lines theme_set(theme_solarized(base_size = 15)) theme_update(axis.text.x = element_text(angle = 90), axis.ticks.x = element_blank(), panel.grid.major.x = element_blank()) ggplot(songs, aes(x = artist, y = indicativerevenue)) + geom_boxplot() + labs(x = &quot;&quot;, y = &quot;Indicative Revenue&quot;, title = &quot;Indicative Revenue by Artist&quot;, subtitle = &quot;Artists sorted by number of songs in Top 100 per year&quot;, caption = &quot;Source: Chart2000.com, Songs of the year, Version 0-3-0062&quot;) 3.0.3 1. Show Ns Visuallyby specifying varwidth = TRUE The trick here is simply the varwidth = TRUE argument in the geom_boxplot() call. ggplot(songs, aes(x = artist, y = indicativerevenue)) + geom_boxplot(varwidth = TRUE) + labs(x = &quot;&quot;, y = &quot;Indicative Revenue&quot;, title = &quot;Indicative Revenue by Artist&quot;, subtitle = &quot;Artists sorted by number of songs in Top 100 per year&quot;, caption = &quot;Source: Chart2000.com, Songs of the year, Version 0-3-0062&quot;) 3.0.4 2. Show Ns Numerically using EnvStats::stat_n_text() by Steven Millard and Alexander Kowarik We could, of course, calculate Ns and display them using geom_text() or geom_label(), but well use the convencience function stat_n_text() from the EnvStats package by Steven Millard and Alexander Kowarik instead. ggplot(songs, aes(x = artist, y = indicativerevenue)) + geom_boxplot(varwidth = TRUE) + labs(x = &quot;&quot;, y = &quot;Indicative Revenue&quot;, title = &quot;Indicative Revenue by Artist&quot;, subtitle = &quot;Artists sorted by number of songs in Top 100 per year&quot;, caption = &quot;Source: Chart2000.com, Songs of the year, Version 0-3-0062&quot;) + stat_n_text(y.pos = 900) 3.0.5 3. Show Summary Statistics on Hover (Mouse-Over)using plotly by Carson Sievert Note that plotly uses a different calculation method, e. g. a different definition of outliers. songs %&gt;% plot_ly(x = ~artist, y = ~indicativerevenue, type = &quot;box&quot;) 3.0.6 4. Label Outliersvia a user-defined function and geom_text() A user-defined function (found on Stackoverflow, answer by JasonAizkalns) returns songs of outliers, NA otherwise. This newly calculated variable is passed to the geom_text() function. Introducing color for a clearer group distinction. In this case we suppress the color legend, as the groups should be clear from the x axis labels. is_outlier &lt;- function(x) { return(x &lt; quantile(x, 0.25) - 1.5 * IQR(x) | x &gt; quantile(x, 0.75) + 1.5 * IQR(x)) } songs %&gt;% group_by(artist) %&gt;% mutate(outlier = ifelse(is_outlier(indicativerevenue), song, NA)) %&gt;% ggplot(aes(x = artist, y = indicativerevenue, color = artist)) + geom_boxplot(varwidth = TRUE) + geom_text(aes(label = outlier), na.rm = TRUE, nudge_y = 1500) + labs(x = &quot;&quot;, y = &quot;Indicative Revenue&quot;, title = &quot;Indicative Revenue by Artist&quot;, subtitle = &quot;Artists sorted by number of songs in Top 100 per year&quot;, caption = &quot;Source: Chart2000.com, Songs of the year, Version 0-3-0062&quot;) + scale_color_discrete(guide = NULL) 3.0.7 5. Display Individual Data Pointsusing geom_jitter() You can get the same boxplot for different distributions, e. g. a normal distribution (most data points around the mean) vs. a u-shaped distribution (two peaks: one below and one above the mean, with very few data points near the mean). So displaying all data points gives a better sense of the underlying distributions. It combines macro and micro levels. Inspired by Edward Tufte, see his great book Envisioning Information. Note the use of alpha (opacity), width and height in geom_jitter(), which reduces overplotting. ggplot(songs, aes(x = artist, y = indicativerevenue, color = artist)) + geom_boxplot(varwidth = TRUE, outlier.color = NA) + geom_jitter(alpha = 0.6, width = 0.2, height = 0) + labs(x = &quot;&quot;, y = &quot;Indicative Revenue&quot;, title = &quot;Indicative Revenue by Artist&quot;, subtitle = &quot;Artists sorted by number of songs in Top 100 per year&quot;, caption = &quot;Source: Chart2000.com, Songs of the year, Version 0-3-0062&quot;) + scale_color_discrete(guide = NULL) + stat_n_text(y.pos = 900) You could use plotly here again to display information about songs on hover. At the moment, a hack is needed to remove outliers from the boxplot - maybe support for that will improve in a future version of plotly. Plotlys way seems to be to display the data points side-by-side to the boxplot, not overlay it. 3.0.8 6. Use Aesthetics to Include Information on Another VariableCombining shape and color, using RColorBrewer by Erich Neuwirth Aesthetics for color and shape defined inside geom_jitter() (otherwise, there would be separate boxplots for the groups) Two aesthetics represented by one legend, as they refer to the same variable and are named the same Using RColorBrewer by Erich Neuwirth songs %&gt;% rowwise() %&gt;% mutate(no1 = any(c_across(us:au) == 1, na.rm = TRUE)) %&gt;% ggplot(aes(x = artist, y = indicativerevenue)) + geom_boxplot(varwidth = TRUE, outlier.color = NA) + geom_jitter(alpha = 0.6, width = 0.2, height = 0, aes(shape = no1, color = no1)) + labs(x = &quot;&quot;, y = &quot;Indicative Revenue&quot;, title = &quot;Indicative Revenue by Artist&quot;, subtitle = &quot;Artists sorted by number of songs in Top 100 per year&quot;, caption = &quot;Source: Chart2000.com, Songs of the year, Version 0-3-0062&quot;) + scale_color_brewer(palette = &quot;Dark2&quot;, name = &quot;No. 1\\n(Any Country)?&quot;) + scale_shape_discrete(name = &quot;No. 1\\n(Any Country)?&quot;) + stat_n_text(y.pos = 900) 3.0.9 7. Add Meansfor comparison to medians ## Warning: Removed 5 rows containing missing values (geom_segment). Interesting to see how in some cases (The Black Eyed Peas) median and mean seem to overlap, while in other cases (Ed Sheeran) there is a notable gap between median and mean. As is often the case, the mean is considerably higher, as it is influenced by outliers at the high end of the range of values. Here Id rather not show the individual data points to avoid information overflow. This chart focuses on summary statistics. ggplot(songs, aes(x = artist, y = indicativerevenue, color = artist)) + geom_boxplot(varwidth = TRUE) + # geom_jitter(alpha = 0.6, width = 0.2, height = 0) + stat_summary(fun = &quot;mean&quot;, color = &quot;black&quot;, shape = 8) + labs(x = &quot;&quot;, y = &quot;Indicative Revenue&quot;, title = &quot;Indicative Revenue by Artist&quot;, subtitle = &quot;Artists sorted by number of songs in Top 100 per year&quot;, caption = &quot;* Mean\\n\\nSource: Chart2000.com, Songs of the year, Version 0-3-0062&quot;) + scale_color_discrete(guide = NULL) + stat_n_text(y.pos = 900) 3.0.10 8. Calculate and Display Statistical Tests for Group Differencesusing ggstatsplot by Indrajeet Patil The ggstatsplot package by Indrajeet Patil is very powerful and flexible, well integrated with ggplot2 and well documented, see help(package = ggstatsplot). Note that this package adds a large number of dependencies. There are several tests to choose from, including non-parametric, robust and Bayesian. See ?ggbetweenstats() and Website Documentation. ggstatsplot::ggbetweenstats( data = songs, x = artist, xlab = &quot;&quot;, y = indicativerevenue, ylab = &quot;Indicative Revenue&quot;, plot.type = &quot;box&quot;, type = &quot;p&quot;, conf.level = 0.95, title = &quot;Indicative Revenue by Artist&quot; ) 3.0.11 9. Group Differences:Example for a significant test While Ed Sheeran reached the highest average indicative revenue, he also recorded a much higher standard deviation. Therefore, only Justin Timberlake averaged significantly higher than Miley Cyrus in this comparison. Note the p value correction for multiple comparisons (corrected Holm method). songs2 &lt;- all_songs %&gt;% filter(artist %in% c(&quot;Ed Sheeran&quot;, &quot;Justin Timberlake&quot;, &quot;Miley Cyrus&quot;)) ggstatsplot::ggbetweenstats( data = songs2, x = artist, xlab = &quot;&quot;, y = indicativerevenue, ylab = &quot;Indicative Revenue&quot;, plot.type = &quot;box&quot;, type = &quot;p&quot;, conf.level = 0.95, title = &quot;Indicative Revenue by Artist&quot; ) 3.0.12 10. Use Images as Labelsvia ggtext by Claus Wilke This is made possible by Claus Wilkes excellent ggtext package. Downloaded the files beforehand and stored them in the report / dashboard folder. A named vector of labels is passed to scale_x_discrete(); besides, theme(axis.text.x) needs an element_markdown() function. # Download and rename files labels &lt;- c(Rihanna = &quot;&lt;img src=&#39;pictures/Rihanna.jpg&#39; width = &#39;100&#39; /&gt;&lt;br&gt;*Rihanna*&quot;, Pink = &quot;&lt;img src=&#39;pictures/Pink.jpg&#39; width = &#39;100&#39; /&gt;&lt;br&gt;*Pink*&quot;, &#39;Maroon 5&#39; = &quot;&lt;img src=&#39;pictures/Maroon_5.jpg&#39; width = &#39;100&#39; /&gt;&lt;br&gt;*Maroon 5*&quot;, &#39;The Black Eyed Peas&#39; = &quot;&lt;img src=&#39;pictures/Black_Eyed_Peas.jpeg&#39; width = &#39;100&#39; /&gt;&lt;br&gt;*Black Eyed Peas*&quot;, &#39;Ed Sheeran&#39; = &quot;&lt;img src=&#39;pictures/Ed_Sheeran.jpg&#39; width = &#39;100&#39; /&gt;&lt;br&gt;*Ed Sheeran*&quot; ) ggplot(songs, aes(x = artist, y = indicativerevenue, color = artist)) + geom_boxplot(varwidth = TRUE) + labs(x = &quot;&quot;, y = &quot;Indicative Revenue&quot;, title = &quot;Indicative Revenue by Artist&quot;, subtitle = &quot;Artists sorted by number of songs in Top 100 per year&quot;, caption = &quot;Source: Chart2000.com, Songs of the year, Version 0-3-0062&quot;) + scale_color_discrete(guide = NULL) + scale_x_discrete(name = NULL, labels = labels) + stat_n_text(y.pos = 900) + theme_solarized(base_size = 14) + theme(axis.text.x = element_markdown(color = &quot;black&quot;, angle = 0)) "],["r-rstudio.html", "Kapitel 4 R &amp; RStudio 4.1 Knjinice 4.2 Textdatei öffnen 4.3 Odpiranje ve besedil 4.4 Odpiranje preglednice 4.5 Odpiranje Excelove tabele 4.6 Shranjevanje datotek 4.7 Nalaganje s spleta 4.8 Mape 4.9 Stisnjene datoteke 4.10 Pregledovanje datotek 4.11 Prebiranje datotek 4.12 Pretvorba kodne strani 4.13 Priprava podatkovnega niza 4.14 Pretvorba R skripta", " Kapitel 4 R &amp; RStudio Eno izmed prvih vpraanj po namestitvi programov R in RStudio zadeva odpiranje, shranjevanje in urejanje datotek, ki jih imamo na svojem disku ali so dostopni v medmreju. 4.1 Knjinice V tem poglavju uporabljamo tele knjinice in zbirke knjnic: library(tidyverse) # zbirka knjinic za delo s tabelami library(readtext) # branje besedil library(readxl) # branje Excelovih preglednic library(writexl) # pisanje &amp; shranjevanje Excelovih tabel library(rmarkdown) # tu: za lepi izgled tabel library(kableExtra) # za lepi izgled tabel Nainov za odpiranje in shranjevanje datotek je veliko. Tule bom pokazal nekaj najbolj razirjenih: 4.2 Textdatei öffnen Odpreti in prebrati elimo besedilo, kasneje pa analizirati. Ena izmed monosti za odpiranje in ohranjanje besedila v pomnilniku je kombinacija dveh ukazov ali funkcij: - read_lines() za odpiranje in branje datoteke; - file.choose() za izbiranje datoteke z miko. Odpre se pogovorno okno in tako kot v urejevalniku besedil (npr. Word, Open Office, ) ali pregledninem programu (Excel, Calc) je treba poiskati mapo z zaeleno datoteko. V tem primeru je to besedilna datoteka tom.txt v mapi /data/books). Vsebino besedilne datoteke shranimo v spremenljivko besedilo. Po navadi elimo ta postopek avtomatizirati in v programski skript zapiemo pot do datoteke (torej skozi katere mape se moramo prebiti) in ime datoteke, ki nas zanima. Uporabniki operacijskega sistema Windows se morajo navadati, da je treba namesto poevnice \" uporabljati poevnico/ (tako kot v operacijskem Unix ali MacOS). Navesti je treba pot do zaelene besedilne datoteke. e besedila ne odpiramo v okviru RStudio projekta, moramo napisati celotno pot do ciljne datoteke. e smo v RStudiu ustvarili projekt (New project v menuju File), potem ni potrebno napisati celotne poti do datoteke. Zadostuje navedba tistih map, ki so podrejene delovni mapi (working directory). Kako izvemo pot do delovne mape? - Napiemo ukaz getwd(). Izpisano pot lahko prekopiramo, lahko pa jo tudi shranimo v obliki konstante (ali spremenljivke). - V datotenem upravitelju ali raziskovalcu, ki ga v RStudiu privzeto najdemo na desni strani, lahko z miko kliknemo opcijo More in nato izberemo opcijo Copy Folder Path to Clipboard. V menuju More najdemo tudi opcijo za spremembo delovne mape Set as Working Directory (kar v RStudio projektu po navadi ni potrebno). Nastavljanje delovne mape opravimo tudi s funkcijo setwd(). getwd() ## [1] &quot;D:/Users/teodo/Documents/R/raj2022-book&quot; moja_delovna_mapa &lt;- getwd() mein_arbeitsverzeichnis &lt;- getwd() my_working_directory &lt;- getwd() V naem primeru je pot do delovne mape: D:/Users/teodo/Documents/R/raj2022-book. Zaelena besedilna datoteka tom.txt je v podmapi /data/books). e smo prej ustvarili RStudio project, zadostuje zapis podrejenih map in dodano ime ciljne datoteke - vse med narekovaji. library(tidyverse) # in RStudio project besedilo = read_lines(&quot;data/books/tom.txt&quot;) Celo pot do ciljne datoteke lahko prekopiramo in prilepimo. Da se izognemo pisnim napakam, je bolje sestaviti programske skripte v okvriu RStudio projekta, saj ni treba toliko pisati. library(tidyverse) # full path besedilo &lt;- read_lines(&quot;D:/Users/teodo/Documents/R/raj2022-book/data/books/tom.txt&quot;) e ena monost je lepljenje naslovov ali poti do datoteke s funkcijo paste() ali paste0(). Prva funkcija lepi s presledkom med posameznimi lepljenimi deli poti, druga pa lepi brez presledka. V spodnjih dveh primerih lepimo tri sestavne dele oz. dva dela. library(tidyverse) # full path with paste0() besedilo &lt;- read_lines(paste0(moja_delovna_mapa, &quot;/&quot;, &quot;data/books/tom.txt&quot;)) besedilo &lt;- read_lines(paste0(moja_delovna_mapa, &quot;/data/books/tom.txt&quot;)) Poleg funkcij paste() in paste0() uporabljamo za lepljenje tudi druge knjinice, npr. glue in here. Za lepljenje sestavnih delov datotene poti je priljubljena knjinica here. Funkcija here() sama ugotavlja trenutno delovno mapo. Sestavne dele poti povezujemo na isti nain kot s funkcijo paste() ali kar z vejicami. Prednost funkcije here() je potemtakem izogibanje poevnicam v datoteni poti. Uporabniki operacijskega sistema Windows bodo te funkcije e posebej veseli, saj sprva pogosto spregledajo, da uporabljajo napano obrnjene poevnice v datoteni poti. library(tidyverse) library(here) # full path with here() besedilo &lt;- read_lines(here(&quot;data&quot;, &quot;books&quot;, &quot;tom.txt&quot;)) here(&quot;data&quot;, &quot;books&quot;, &quot;tom.txt&quot;) ## [1] &quot;D:/Users/teodo/Documents/R/raj2022-book/data/books/tom.txt&quot; Odpiranje besedila s spletnega naslova (url) je tudi mono, vendar je veinoma dodaten zaplet potreba po odstranjevanju html kode. url &lt;- &quot;http://teachsam.de/deutsch/d_literatur/d_aut/bor/bor_kuech_txt.htm&quot; teachsam_kuechenuhr &lt;- read_lines(url) head(teachsam_kuechenuhr) ## [1] &quot;&lt;html&gt;&quot; ## [2] &quot;&lt;head&gt;&quot; ## [3] &quot;&lt;meta NAME=\\&quot;author\\&quot; CONTENT=\\&quot;Gert Egle\\&quot;&gt;&quot; ## [4] &quot;&lt;meta NAME=\\&quot;copyright\\&quot; CONTENT=\\&quot;Gert Egle/www.teachsam.de lizensiert unter Creative Commons Lizenz: Namensnennung und Weitergabe unter gleichen Bedingungen, CC-BY-SA 4.0 International licenxe, OER\\&quot;&gt;&quot; ## [5] &quot;&lt;meta NAME=\\&quot;keywords\\&quot; CONTENT=\\&quot;Borchert,K&lt;fc&gt;chenuhr, Die K&lt;fc&gt;chenuhr,\\&quot;&gt;&quot; ## [6] &quot;&lt;meta NAME=\\&quot;description\\&quot; CONTENT=\\&quot;In diesem teachSam-Arbeitsbereich k&lt;f6&gt;nnen Sie sich mit Die K&lt;fc&gt;chenuhr von Wolfgang Borchert befassen.\\&quot;&gt;&quot; ienje spletne strani je vsekakor laje z drugimi programi (npr. s knjinico rvest). Pridobivanje besedila ali preglednice s spletnih strani (webscraping) je tehnika za napredneje uporabnike. library(rvest) ## ## Attaching package: &#39;rvest&#39; ## The following object is masked from &#39;package:readr&#39;: ## ## guess_encoding html_document &lt;- read_html(url) # detected with Selector Gadget in in Chrome browser path &lt;- &quot;blockquote blockquote&quot; text &lt;- html_document %&gt;% html_node(path) %&gt;% html_text(trim = T) Besedilo, ki smo ga pridobili s knjinico rvest s spletne strani, e oistimo s funkcijo str_squish(), ki odstrani nezaelene presledke. Besedilo si ogledamo s funkcijo str_sub(). V spodnjem primeru prikazujemo le prvih 200 znakov besedila. Ni priporoljivo, da zahtevate izpis celotnega besedila na ekran, ker to lahko traja precej asa in zaseda pomnilnik, ki ga potrebujete za analizo. teachsam_kuechenuhr_rvest &lt;- text %&gt;% str_squish() str_sub(teachsam_kuechenuhr_rvest, start = 1, end = 200) ## [1] &quot;Wolfgang Borchert, Die Küchenuhr Sie sahen ihn schon von weitem auf sich zukommen, denn er fiel auf. Er hatte ein ganz altes Gesicht, aber wie er ging, daran sah man, dass er erst zwanzig war. Er setz&quot; Dokler gre le za vsebino ene spletne strani, programiranje v programskem jeziku R ni nujno potrebno. Besedilo bi seveda lahko prekopirali s spletne strani v beleko (Notepad) ali urejevalnik besedil in potem shranili v datoteko. Vendar je webscraping s knjinico rvest mnogo uinkoviteja tehnika, saj je v zelo kratkem asu mogoe potegniti ve tiso besedil (npr. asopisne lanke) s spletnih strani na raunalniki disk. 4.3 Odpiranje ve besedil Uporaba funkcije readtext() je preprosta za odpiranje ve besedil z diska. e namesto imena datotek navedemo samo zvezdico + pripono datotek (npr. *.txt) v izbrani mapi (npr. data/books/), potem bo program odprl vse besedilne datoteke s to pripono in to zbirko shranil v spremenljivki (npr. besedila). Program ustvari tabelo prebranih besedil. readtext() odpira besedila z razlinimi priponami: txt, csv, docx, pdf, xml, . Z opcijo encoding seznanimo program s kodno stranjo besedil. Privzeta je po navadi kodna stran UTF-8. V narekovajih lahko doloimo tudi drugo kodno stran, npr. latin1 za zahodnoevropsko kodno stran. library(readtext) besedila = readtext(&quot;data/books/*.txt&quot;, encoding = &quot;UTF-8&quot;) besedila ## readtext object consisting of 2 documents and 0 docvars. ## # Description: df [2 x 2] ## doc_id text ## &lt;chr&gt; &lt;chr&gt; ## 1 prozess.txt &quot;\\&quot;Der Prozes\\&quot;...&quot; ## 2 tom.txt &quot;\\&quot;Tom Sawyer\\&quot;...&quot; Tudi odpiranje besedila s spletnega naslova (url) je mogoe, npr. PDF datoteke. Besedilo se shranjuje v obliki tabele, ki ima hkrati lastnosti podatkovnega niza (data.frame) in seznama (list). library(readtext) url &lt;- &quot;https://www.moutard.de/wordpress/archiv/sek2dt/muster/kuechenuhr_i.pdf&quot; pdf_readtext = readtext(url) pdf_readtext ## readtext object consisting of 1 document and 0 docvars. ## # Description: df [1 x 2] ## doc_id text ## &lt;chr&gt; &lt;chr&gt; ## 1 kuechenuhr_i.pdf &quot;\\&quot;Wolfgang B\\&quot;...&quot; 4.4 Odpiranje preglednice Funkcija read_csv() ali read_csv2() sta le dve izmed tevilnih funkcij za odpiranje preglednice s pripono csv. Zaetnikom se bo zdel privlaen uvoz tabele s pomojo menuja in mike (File &gt; Import Dataset &gt; ). Potem se odpre pogovorno okno s arovnikom za uvoz tabele ali podatkovnega niza, podobno kot v statistinem programu IBM SPSS, ki omogoa opredeljevanje oblike. Poleg tega vam RStudio tudi pokae, kateri programski ukaz za odpiranje tabele bi lahko vstavili v programski skript. Tako se lahko nauite potrebnih programskih korakov za odpiranje tabel. Za samodejno izvajanje programskega skripta pa je najbolje, da sestavimo ukazno vrstico za prebiranje tabele in (neobvezno) njen prikaz: library(tidyverse) # read data frame tabela = read_csv2(&quot;data/plural_Subj_sum.csv&quot;) # show first rows head(tabela) %&gt;% rmarkdown::paged_table() # prettier RStudio omogoa tudi uvoz podatkovnih niz iz nekaterih drugih statistinih programov (npr. SPSS, STATA) in pregledninih programov (Excel). Z dodatnimi programskimi funkcijami pridobimo e ve uvoznih monosti (npr. s knjinico readxl za uvoz Excelovih tabel). Odpiranje tabele s spletnega naslova (url) je prav tako mogoe, bodisi s funkcijo read_csv() oz. read_csv2() bodisi s funkcijo read_delim(). url &lt;- &quot;https://perso.telecom-paristech.fr/eagan/class/igr204/data/cars.csv&quot; car_dataset &lt;- read_delim(url, delim = &quot;;&quot;, # c = character, n = number col_types = &quot;cnnnnnnnn&quot;) ## Warning: One or more parsing issues, see `problems()` for details car_dataset &lt;- read_csv2(url, # c = character, n = number col_types = &quot;cnnnnnnnn&quot;) ## i Using &quot;&#39;,&#39;&quot; as decimal and &quot;&#39;.&#39;&quot; as grouping mark. Use `read_delim()` for more control. ## Warning: One or more parsing issues, see `problems()` for details car_dataset &lt;- car_dataset[-1,] # remove first row after column name head(car_dataset) ## # A tibble: 6 x 9 ## Car MPG Cylinders Displacement Horsepower Weight Acceleration Model Origin ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Chev~ 180 8 3070 1300 3504 120 70 NA ## 2 Buic~ 150 8 3500 1650 3693 115 70 NA ## 3 Plym~ 180 8 3180 1500 3436 110 70 NA ## 4 AMC ~ 160 8 3040 1500 3433 120 70 NA ## 5 Ford~ 170 8 3020 1400 3449 105 70 NA ## 6 Ford~ 150 8 4290 1980 4341 100 70 NA Z opcijo col_types poskrbimo za ustrezen podatkovni format (rkovni niz, decimalno tevilo, ). 4.5 Odpiranje Excelove tabele Funkcija read_xlsx() ali read_excel() omogoa odpiranje Excelove preglednice s pripono xlsx. library(readxl) excel = read_xlsx(&quot;data/S03_Vokalformanten_Diagramme.xlsx&quot;, sheet = &quot;A1-4_alle&quot;) head(excel) %&gt;% rmarkdown::paged_table() 4.6 Shranjevanje datotek Privzeto spodnje programske funkcije shranjujejo podatkovni niz po kodni strani (codepage), ki omogoa tudi posebne jezikovne in druge simoble, tj. encoding = \"UTF-8\" / fileEncoding = \"UTF-8\". library(tidyverse) # shranjevanje posaminega besedila write_lines(besedilo, &quot;moje_besedilo.txt&quot;) # shranjevanje tabele, v kateri je zbirka besedil write_csv2(besedila, &quot;moja_tabela_z_besedili.csv&quot;) library(writexl) # shranjevanje preglednice write_xlsx(tabela, &quot;moja_tabela.xlsx&quot;) # shranjevanje tabele, v kateri je zibrka besedil # Excel dovoljuje do 32767 znakov. # ta zbirko presega to mejo, zato je ne moremo shraniti v Excelovi preglednici # write_xlsx(besedila, &quot;moja_tabela_z_besedili.xlsx&quot;) Basic operations in R: * Download (zip) files * Extract compressed files to a folder * Check &amp; Create a folder or subfolders * List &amp; Read files in a folder 4.7 Nalaganje s spleta Programska funkcija za nalaganje datoteke z medmreja, in sicer s funkcijo download.file(), ki zahteva url in pot (location) za shranjevanje datoteke. V spodnjem primeru bomo stisnjeno datoteko shranili v delovni mapi tega R projekta. Da ne bi bilo treba toliko pisati, si spet pomagamo s funkcijo here(). url &lt;- &quot;https://github.com/tpetric7/tpetric7.github.io/archive/refs/heads/main.zip&quot; # location &lt;- &quot;d:/Users/teodo/Downloads/tpetric7-master.zip&quot; location &lt;- here(&quot;tpetric7-master.zip&quot;) download.file(url, location) 4.8 Mape 4.8.1 Preveri obstoj mape Ali mapa e obstaja? To preverimo s funkcijo dir.exists(), ki zahteva navedbo datotene poti. Tudi tu si za navajanje datotene poti pomagamo s funkcijo here(). Izpis TRUE pomeni, da mapa obstaja, izpis FALSE, da je e ni. # pot &lt;- &quot;d:/Users/teodo/Downloads/tpetric7-master&quot; pot &lt;- here(&quot;tpetric7-master&quot;) exist &lt;- dir.exists(pot) exist ## [1] FALSE 4.8.2 Ustvari mapo e mapa ne obstaja, jo ustvari! e mapa e obstaja, seznani uporabnika! Ustvarjanje nove mape opravimo s funkcijo dir.create(), ki zahteva ime poti nove mape. Ta programski ukaz pogosto zdruujemo s pogojnim stavkom ifelse(). Pogojni stavek zanemo s pogojem. V spodnjem primeru je to exist == FALSE. e je pogoj izpolnjen (tj. da mape e ni), potem program izpie TRUE in ustvari mapo z imenom po nai elji. To opravimo s funkcijo dir.create(). e pogoj ni izpolnjen (tj. da mapa z navedenim imenom e obstaja), potem izpii directory already exists. ifelse(exist == FALSE, dir.create(pot, showWarnings = TRUE, recursive = TRUE), &quot;directory already exists&quot;) ## [1] TRUE 4.8.3 Ustvari podrejene mape Ustvariti elimo ve map. - Najprej doloimo vektor z njihovimi imeni. Ime vektorja subfolder_names bomo potrebovali v programski zanki. - Uporabljamo programsko zanko for(){}, ki se izvaja, dokler program ne dodeli vsaki mapi ime. - Kolikokrat se zanka izvaja, doloimo s tevilko. Zapisali bi lahko tevilko 4, ker smo prej doloili tiri imena za nove mape. Elegantneja metoda je uporaba funkcije length(), ki programu pove zadnji len zaporedja, tj. konec zanke. tevec i je najprej enak ena, po vsakem prehodu zanke pa se mu priteje ena. Glede na to, da imamo v vektorja tiri imena, se izvajanje programske zanke kona po etrtem prehodu. - V zanki izvedemo funkcijo dir.create(). Rezultat zapiemo v spremenljivko z imenom folder. V spodnjem primeru bo program ustvaril podmape v mapi (spremenljivka ima ime pot), ki smo zgoraj ustvarili. subfolder_names &lt;- c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;) for (i in 1:length(subfolder_names)){ folder &lt;- dir.create(paste0(pot, &quot;/&quot;, subfolder_names[i])) } 4.8.4 Odstrani mape Program lahko tudi odstrani mape, in sicer s funkcijo unlink(). V spodnjem primeru bomo odstrani tiri (prazne) mape, ki smo jih malo prej ustvarili (imena map gl. zgoraj!). Odstranjujemo eno mapo. unlink(here(pot, &quot;a&quot;), recursive = TRUE) Odstranimo lahko tudi ve map hkrati. V tem primeru potrebujemo programsko zanko. V spodnjem primeru odstranjujemo preostale tri podrejene mape (zato se tevec i zane z 2 in kona s 4, kar je doloeno z length()). Opcija recursive = TRUE pomeni, da program zbrie tudi vse podrejene mape v navedenih mapah. for (i in 2:length(subfolder_names)){ unlink(here(pot, subfolder_names[i]), recursive = TRUE) } 4.9 Stisnjene datoteke Stisnjeno datoteko raztegnemo s funkcijo unzip(), pot ali kraj raztegnjene datoteke pa doloimo z opcijo exdir. V spodnjem primeru je predpostavljeno, da ste zgoraj e naloili stistnjeno datoteko na disk, in sicer v delovno mapo. # unzip(&quot;d:/Users/teodo/Downloads/tpetric7-master.zip&quot;, exdir = pot) unzip(&quot;tpetric7-master.zip&quot;, exdir = pot) Mape in stisnjene datoteke ne potrebujemo ve. V nasdlednjih dveh programskih vsticah bomo oboje in vse, kar je v njih, spet odstranili. unlink(pot, recursive = TRUE) unlink(&quot;tpetric7-master.zip&quot;, recursive = TRUE) 4.10 Pregledovanje datotek Seznam datotek v mapi ali ve mapah na raunalnikem disku prikazujemo s funkcijo list.files(). seznam &lt;- list.files(&quot;data/books&quot;, pattern = &quot;\\\\.txt$&quot;, recursive = TRUE, full.names = TRUE) seznam ## [1] &quot;data/books/hesse/Hermann Hesse Der Steppenwolf.txt&quot; ## [2] &quot;data/books/kleist/Kleist_Kohlhaas_Projekt_Gutenberg.txt&quot; ## [3] &quot;data/books/kleist/Michael_Kohlhaas_english.txt&quot; ## [4] &quot;data/books/prozess.txt&quot; ## [5] &quot;data/books/tom.txt&quot; ## [6] &quot;data/books/translations/metamorph/metamorphosis.txt&quot; ## [7] &quot;data/books/translations/metamorph/verwandlung.txt&quot; ## [8] &quot;data/books/translations/prozess/prozess.txt&quot; ## [9] &quot;data/books/translations/prozess/trial.txt&quot; ## [10] &quot;data/books/translations/sawyer/tom_de.txt&quot; ## [11] &quot;data/books/translations/sawyer/tom_en.txt&quot; ## [12] &quot;data/books/verwandlung/verwandlung.txt&quot; 4.11 Prebiranje datotek Funkcija readtext() zna prebrati ve datotek v eni ali ve mapah. e te funkcije ne moremo uporabiti, imamo e druge monosti. 4.11.1 tidyverse: V zbirki tidyverse je na voljo knjinica purrr s funkcijo map(), ki nadomea klasino programsko zanko for(){}. V spodnjem primeru s funkcijo read_lines() odpremo besedilo s seznama, ki smo ga prej ustvarili s funkcijo list.files(). Funkcija map() pa ima isti namen kot for()-zanka, je pa kraja. Na ta nain shranjujemo vsa besedila z datottenega seznama v pomnilniku raunalnika. S funkcijo substr() pa si lahko ogledamo besedilo oz. po navadi le del besedila. Podobno funkcijo smo uporabili tudi zgoraj, tj. str_sub(). V spodnjem primeru si elimo ogledati vsebino prve datoteke [1] in druge datoteke [2] na seznamu. Ne elimo izpisati celotnih besedil, temve le prvih 50 oz. 70 znakov. library(tidyverse) alltxt &lt;- seznam %&gt;% map(read_lines) substr(alltxt[1], 1, 50) ## [1] &quot;c(\\&quot;Hermann Hesse \\&quot;, \\&quot;Der Steppenwolf \\&quot;, \\&quot;\\&quot;, \\&quot;Erzäh&quot; substr(alltxt[2], 1, 70) ## [1] &quot;c(\\&quot;Heinrich von Kleist\\&quot;, \\&quot;Michael Kohlhaas\\&quot;, \\&quot;Aus einer alten Chronik\\&quot;&quot; 4.11.2 Base R: V osnovnem funkcijskem naboru programskega jezika R ima funkcija lapply() podobno funkcijo kot map() ali for()-zanka. Funkcija map() ima ve naprednejih monosti. alltxt &lt;- lapply(seznam, readLines) substr(alltxt[1], 1, 50) ## [1] &quot;c(\\&quot;Hermann Hesse \\&quot;, \\&quot;Der Steppenwolf \\&quot;, \\&quot;\\&quot;, \\&quot;Erz¤&quot; substr(alltxt[2], 1, 70) ## [1] &quot;c(\\&quot;Heinrich von Kleist\\&quot;, \\&quot;Michael Kohlhaas\\&quot;, \\&quot;Aus einer alten Chronik\\&quot;&quot; 4.12 Pretvorba kodne strani Kodno stran lahko zamenjamo s funkciojo iconv(). V sledei programski vrstici pretvarjamo besedilo tom.txt (gl. zgoraj) iz kodne strani UTF-8 v kodno stran latin1. S funkcijo Encoding() izvemo kodno stran besedila (codepage), funkcijo str_sub() za ogled besedilnega odlomka pa smo spoznali e zgoraj. alltxt1_converted &lt;- iconv(besedilo, from = &quot;UTF-8&quot;, to = &quot;latin1&quot;) Encoding(alltxt1_converted) ## [1] &quot;latin1&quot; str_sub(alltxt1_converted, 4800, 4900) ## [1] &quot;u führen . Wenn ich ihn sich selbst überlasse , drückt mich mein Gewissen , und so oft ich ihn s&quot; 4.13 Priprava podatkovnega niza Pogosto moramo podatkovni niz ali tabelo preoblikovati, da se dokopljemo do odgovora na raziskovalno vpraanje. Preoblikovanje podatkov v angleini pogosto imenujejo Data Wrangling (podatkovna rokoborba ali ravsanje). V nadaljevanju se bomo seznanili z nekaj izmed pogostejih funkcij iz zbirke tidyverse za pripravo podatkovnega niza ali tabele: - select() - group_by() - filter() - mutate() - count() - summarise() - arrange() - separate() - unite() - pivot_longer() - pivot_wider() - pull() - Date(). Delovanje posameznih programskih funkcij ponazarjamo s podatkovnim nizom tweets_rollingstones.rds. tweets_rollingstones &lt;- read_rds(&quot;data/tweets_rollingstones.rds&quot;) e imenu podatkovnega niza dodamo znak $ se nam prikaejo spremenljivke (stolpci tabele). Operator %&gt;% (blinjica: Crtl+Shift+M) povezuje posamezne programske korake ali vrstice med seboj: (a) koraki se izvajajo v asovnem zaporedju in (b) sledei koraki prevzemajo predmet (object) iz prvega programskega koraka (tj. podatkovni niz). S funkcijo head() omejujemo tevilo izpisanih vrstic. tweets_rollingstones$created_at %&gt;% head(3) ## [1] &quot;2021-08-29 17:35:52 UTC&quot; &quot;2021-08-29 11:19:40 UTC&quot; ## [3] &quot;2021-08-25 16:39:18 UTC&quot; Drugi naini za izpis imena spremenljivk (stolpcev) v tabeli so npr. names() ali colnames(). Uporabljamo lahko tudi funkciji glimpse() ali skim() knjinice skim. Izpis v sledeem izpisu je s omejen na 10 imen. To omogoa funkcija head(). names(tweets_rollingstones) %&gt;% head(10) ## [1] &quot;user_id&quot; &quot;status_id&quot; &quot;created_at&quot; ## [4] &quot;screen_name&quot; &quot;text&quot; &quot;source&quot; ## [7] &quot;display_text_width&quot; &quot;reply_to_status_id&quot; &quot;reply_to_user_id&quot; ## [10] &quot;reply_to_screen_name&quot; # colnames(tweets_rollingstones) # glimpse(tweets_rollingstones) # skimr::skim(tweets_rollingstones) 4.13.1 select() Funkcija select() omogoa izbiranje stolpcev v preglednici. Nainov izbiranja je ve. Izberemo lahko samo en stolpec. tweets_rollingstones %&gt;% select(screen_name) %&gt;% head(3) ## # A tibble: 3 x 1 ## screen_name ## &lt;chr&gt; ## 1 aliceinglen ## 2 MatjazDerin ## 3 MarliMarkez Z dvopijem med imeni spremenljivk (stolpcev v tabeli) lahko izberemo ve zaporednih stolpcev. Vejico uporabljamo za spremenljivko, ki se ne pojavlja neposredno za ali pred e navedeno spremenljivko. V spodnjem primeru bomo izbrali tiri stolpce, slednji trije se pojavljajo zaporedno, zato uporabljamo dvopije med spremenljivko created_at in text. Za prvim stolpcem user_id stoji vejica, saj je med njim in stolpcem created_at e en stolpec, ki ga pa nismo izbrali. tweets_rollingstones %&gt;% select(user_id, created_at:text) %&gt;% # which columns? head(3) %&gt;% # 3 rows only rmarkdown::paged_table() # prettier table Predznak minus pred imenom stolpca pomeni, da elimo stolpec izloiti. Ve stolpcev hkrati izloimo z znakom c(), ki mu predpostavimo predznak minus. tweets_rollingstones %&gt;% select(lang, location, user_id:status_id, source, created_at:text) %&gt;% select(-lang) %&gt;% # remove one column select(-c(user_id, status_id)) %&gt;% # remove two columns select(-c(created_at, screen_name:text)) %&gt;% # multiple columns head(3) %&gt;% rmarkdown::paged_table() 4.13.2 filter() Medtem ko s funkcijo select() izberemo ali izloimo stolpce (spremenljivke), imamo funkcijo filter() za omejevanje tevila vrstic. Navesti je treba en ali ve pogojev. Pri tem je treba paziti na uporabo loginih operatorjev (kot npr. dvojini enaaj: ==). V spodnjem primeru je prikazano enostavno filtriranje podaktovnega niza. V kasnejih poglavjih bomo vekrat potrebovali bolj zapletene oblike, ki vkljuujejo tudi funkcije kot npr. str_detect() in poznavanje regularnih izrazov (regular expressions). Filtrirni pogoj je izbor ivkov v slovenini, tj. v stolpcu lang mora biti znakovni niz sl. Vrstice, ki tega pogoja ne izpolnjujejo, bodo odstranjene iz prikazane tabele. tweets_rollingstones %&gt;% select(lang, user_id, created_at:text) %&gt;% # which columns? filter(lang == &quot;sl&quot;) %&gt;% # Slovenian tweets only head(3) %&gt;% # 3 rows only rmarkdown::paged_table() # prettier table Dokler tega rezultata ne shranimo (npr. pod imenom tweets_rollingstones_slovenski), ostane podatkovni niz nespremenjen. Enako velja tudi za vse ostale funkcije za prilagajanje tabele, ki smo jih navedli. Obliko ali rezultat, ki ga elimo obdrati, moramo shraniti pod nekim imenom. Uporaba ve pogojev je mogoa. Pogoje med seboj poveemo z loginim operatorjem: namesto znaka plus (+) vstavimo &amp; (tj. ampersand), za uveljavitev alternativnega pogoja pa logini operator | (tj. ali). Logini operator &amp; pomeni, da mora biti oba pogoja izpolnjena. e bi vstavili logini operator |, bi zadostovalo, da je vsaj eden izmed navedenih pogojev izpolnjen, dopustno pa tudi bilo, e bi bila oba izpolnjena. V spodnjem primeru uporabljamo dva pogoja. ivk mora biti v slovenini (stolpec lang == sl) in stolpec location ne sme biti prazen (location != ). Prvi pogoj vsebuje logini operator == (dva enaaja!), drugi pogoj pa vsebuje logini operator != (klicaj enaaj). S klicajem pred enaajem torej zanikamo enakost. tweets_rollingstones %&gt;% select(lang, user_id, location, created_at:text) %&gt;% # which columns? filter(lang == &quot;sl&quot; &amp; location != &quot;&quot;) %&gt;% # Slovenian tweets only head(3) %&gt;% # 3 rows only rmarkdown::paged_table() # prettier table 4.13.3 group_by() 4.13.4 mutate() 4.13.5 count() 4.13.6 summarise() 4.13.7 arrange() 4.14 Pretvorba R skripta Programski skript ali zapis s pripono R lahko pretvorimo v Rmarkdown dokument (s pripono Rmd), in sicer e izvedemo: [Ctrl + Shift + K] ali knitr::spin(\"t_preskus.R\"). V obeh primerih gre za besedilni format, tako da je pretvorba v razne druge formate razmeroma preprosta. "],["stichprobentests.html", "Kapitel 5 Stichprobentests 5.1 Nominalskalierte Größen 5.2 Intervallskalierte Größen", " Kapitel 5 Stichprobentests 5.1 Nominalskalierte Größen Chi-Quadrat-Test (\\(\\chi^2\\)-Test): Der \\(\\chi^2\\)-Test ist einer der grundlegenden statistischen Tests zum Vergleich von nominalskalierten Kategorien, z.B. biologisches Geschlecht: Frauen vs. Männer; Größe: klein vs. groß; Texte: Text A vs. Text B vs. Text C  Mit dem \\(\\chi^2\\)-Test testen wir, ob eine beobachtete Verteilung der Daten der erwarteten Verteilung entspricht. Der Test funktioniert auf allen Skalenniveaus. Es gibt aber verschiedene Anwendungsspielarten: als Anpassungstest (z.B. ist ein Merkmal normalverteilt?); als Homogenitätstest (z.B. ähneln sich Frauen und Männer bezüglich eines Merkmals, etwa ob sie rauchen oder nicht?); als Unabhängigkeitstest (z.B. ist der Dieselverbrauch unabhängig von elektronischer Regulierung des Motors oder nicht?). Ein Beispiel aus einem empfehlenswerten Video aus Kurzes Tutorium Statistik, in dem der \\(@chi³2\\)-Test und seine Anwendungen erklärt werden. Im Beispiel geht es um den \\(@chi³2\\)-Anpassungstest: Eine Firma verkauft Armbanduhren in vier Farben (blau, grün, gelb, rot). Im letzten Monat wurden 1000 Stück verkauft. Ein Verkaufsleiter behauptet, dass die Nachfrage nach der Uhr in allen vier Farben gleich gut sei. Das können wir mit dem \\(\\chi^2\\)-Test überprüfen. Wenn die Behauptung des Verkaufsleiters stimmt, dann erwarten wir, dass 250 blaue Uhren, 250 grüne Uhren, 250 gelbe Uhren und 250 rote Uhren verkauft wurden - dass also Gleichverteilung der erwarteten Häufigkeiten vorliegt (250 + 250 + 250 + 250). Also ein Viertel der verkauften Uhren war blau, ein Viertel war gelb, ein Viertel war rot und ein Viertel war grün. Wären die (beobachteten) Verkaufszahlen im vergangenen Monat (unserer Stichprobe) 245 + 252 + 254 + 249, dann würde der \\(@chi^2\\)-Test bestätigen, dass Gleichverteilung der Uhrfarben vorliegt und damit die Hypothese \\(H_0\\) bestätigen. Die Unterschiede sind ja gering. Wenn aber die beobachteten Verkaufszahlen in unserer Stichprobe 60 + 320 + 100 + 520 wären, dann würde der \\(@chi^2\\)-Test die Gleichverteilung der Farben nicht bestätigen und die Nullhypothese \\(H_0\\) verwerfen. Die Statistikexpertin erhält vom Verkaufsleiter die tatsächlichen Verkaufszahlen: 300 blaue Urhen + 200 gelbe Uhren + 400 rote Uhren + 100 grüne Uhren wurden im vergangenen Monat verkauft. Kann man das noch immer als Gleichverteilung der Farben auffassen? Wir verwenden die folgende Teststatistik: - Wir subtrahieren die jeweilige erwartete Häufikgeit von der beobachteten und erhalten somit Differenzen; - dann quadrieren wir jede Differenz, so dass wir nur mit positiven Zahlenwerten zu tun haben; - dann dividieren wir jede der quadrierten Differenzen mit der erwarteten Häufigkeit (hier: 250) und erhalten somit Quotienten; - dann addieren wir die Quotienten und erhalten somit den empirischen \\(@chi^2\\)-Wert (im Beispiel beträgt dieser 200). \\[ \\frac{(300 - 250)^2}{250} + \\frac{(200 - 250)^2}{250} + \\frac{(400 - 250)^2}{250} + \\frac{(100 - 250)^2}{250} = 200 = \\chi^2_{empirisch} \\] Das Test- oder Signifikanzniveau (auch Irrtumswahrscheinlichkeit genannt) wird gewöhnlich auf 5% festgelegt (p = 0,05). Die Wahrscheinlichkeit, dass wir fälschlicherweise die Nullhypothese verwerfen, soll demnach bei diesem Testniveau höchstens 5% betragen. Da die Warscheinlichkeit ein Viertel pro Uhrfarbe beträgt (250 von 1000; siehe oben), liegt eine Binomialverteilung vor. Bei ausreichend großen Stichproben (wie der hier vorliegenden) kann man diese durch die Normalverteilung ersetzen. Mit der Normalverteilung lässt sich einfacher rechnen. Da wir in unserer Teststatistik die erwarteten Häufigkeiten von den beobachteten abziehen und danach dividieren, wird die Normalverteilung zum Nullpunkt des Koordinatensystems verschoben. Die Werte der Teststatistik werden durch diesen Rechenvorgang normalisiert. Durch Quadrieren der Differenzen erreichen wir, dass wir keine negativen Werte mehr erhalten können. Alle Werte sind damit positiv und befinden sich im ersten Quadranten des Koordinatensystems. Da wir mehrere Terme addieren (hier sind es 4) und damit potentiell mehrere Zufallsvariablen in die Summe einbeziehen, kann die Verteilungskurve verschiedene Formen annehmen. Das Ergebnis ist eine \\(\\chi^2\\)-Verteilung. Diese Verteilung sagt uns, welche Werte die Teststatistik mit welcher Wahrscheinlichkeit annehmen wird, wenn die Nullhypothese \\(H_0\\) stimmt. Danach sind die Werte in der Nähe des Koordinatenursprungs (der Null) wahrscheinlich. Die meisten Werte unserer Teststatistik sollten gemäß der Nullhypothese in diesem Bereich, dem Annahmebereich, liegen. Werte, die weit entfernt von der Null (dem Koordinatenursprung) vorkommen, sind weniger wahrscheinlich. Sie liegen im Ablehnungsbereich (Verwerfungsbereich). Eine grundlegende Bedingung für die Anwendung des \\(\\chi^2\\)-Tests ist, dass die erwarteten Häufigkeiten nicht kleiner als fünf sein dürfen: \\(Freq_{erwartet}\\geq{5}\\). In unserem Beispiel ist das der Fall (hier: 250). In unserem Beispiel haben wir vier Summenterme, die die Gesamtsumme 1000 (Uhren) ergeben müssen. Die ersten drei Summen könnten vom Zufall abhängen, die letzte ist dagegen immer die Differenz zur Gesamtsumme (hier: 1000). In unserem Beispiel gibt es demnach nur drei Größen (Summen), die frei variieren können. In unserem Beispiel liegen demnach drei Freiheitsgrade vor. Das ist notwendig zu wissen, falls man (noch) mit Tabellen arbeitet und wenn man sich sicher sein möchte, dass man den Test richtig durchgeführt hat. Bei drei Freiheitsgraden und einem Signifikanzniveau von 5% beträgt der kritische \\(\\chi^2\\)-Wert (Schwellenwert für die Annahme bzw. Ablehnung der Nullhypothese) etwa 7,815. Wenn die Nullhypothese stimmt, dann beträgt unsere Teststatistik mit 95%-iger Wahrscheinlichkeit höchstens 7,815. Unser empirischer \\(\\chi^2\\)-Wert beträgt jedoch 200 und ist damit größer als der Schwellenwert (kritische Wert). Das bedeutet, dass wir die Nullhypothese verwerfen und die alternative Hypothese \\(H_1\\) annehmen. Zusammenfassung Frage: Werden die Uhrfarben gleichhäufig verkauft? Hypothese \\(H_0\\): Die Farben werden gleichhäufig verkauft. Hypothese \\(H_1\\): Die Farben werden NICHT gleichhäufig verkauft. Testverteilung: \\(\\chi^2\\)-Verteilung. Testniveau: \\(\\alpha = 5%\\) Teststatistik: \\[ \\chi^2_{emp} = \\Sigma{\\frac{(Freq_{beobachtet} - Freq_{erwartet})^2}{Freq_{erwartet}}} \\] Ergebnis (im obigen Beispiel): Die Nachfrage nach den verschiedenfarbigen Uhren ist NICHT gleichmäßig verteilt: \\(\\chi^2_{empirisch} &gt; \\chi^2_{erwartet}\\) bei 3 Freiheitsgraden und 5%-iger Irrtumswahrscheinlichkeit. Wir lehnen die Nullhypothese damit ab und akzeptieren die alternative Hypothese. 5.1.1 Lange und kurze Kommentare Die Verwendung des \\(@chi³2\\)-Tests im sprachlichen Bereich wollen wir zunächst am Beispiel eines erfundenen Datensatzes kennen lernen. neugeschriebener_satz kurzer_kommentar_a ausf_a_lhrlicher_kommentar inkorrekt 13 29 korrekt 67 55 Im Datensatz wird zwischen langen und kurzen Kommentaren einer Lehrerin unterschieden und die jeweilige Anzahl sprachlicher Fehler von Schülern in ihren Aufsätzen. Geklärt werden soll die Frage, welche Wirkung lange und kurze Kommentare der Lehrerin auf die Anzahl der sprachlichen Fehler hatten. 5.1.1.1 Programme library(tidyverse) library(janitor) library(scales) library(rmarkdown) library(kableExtra) 5.1.1.2 Kurzversion: Wie sinnvoll sind lange bzw. kurze Kommentare einer Lehrerin zu sprachlichen Fehlern in Essays? library(tidyverse) library(janitor) # Datei laden und die Variablennamen vereinheitlichen kommentare = read.delim(&quot;data/chisq_kommentare.txt&quot;, sep = &quot;\\t&quot;) %&gt;% clean_names() head(kommentare) ## neugeschriebener_satz kurzer_kommentar_a ausf_a_lhrlicher_kommentar ## 1 inkorrekt 13 29 ## 2 korrekt 67 55 library(janitor) # Chi-Quadrat-Test chisq.test(kommentare[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: kommentare[, -1] ## X-squared = 6.2551, df = 1, p-value = 0.01238 Ergebnis: Wir verwerfen die Hypothese H0 und nehmen die Hypothese H1 an: zwischen kurzen und langen Kommentaren besteht ein nicht zufälliger Unterschied. 5.1.1.3 Längere Version 5.1.1.3.1 Datei laden Eine Lehrerin möchte wissen, ob es effektiver ist, wenn sie am Rand der Schüleressays kurze oder ausführlichere Kommentare zu den Fehlern der Schüler_innen notiert. Sie vergleicht somit zwei Schülergruppen (Schüler_innen mit kurzen vs. langen Kommentaren) und zwei Beurteilungskategorien (korrekte vs. inkorrekte Äußerungen in den Essays). library(tidyverse) # von github laden kommentare = read.delim( &quot;https://raw.githubusercontent.com/tpetric7/tpetric7.github.io/main/data/chisq_kommentare.txt&quot;, sep = &quot;\\t&quot;, fileEncoding = &quot;UTF-8&quot;) library(janitor) # Variablennamen konsequent schreiben kommentare = kommentare %&gt;% clean_names() # Von der Festplatte laden kommentare = read.delim(&quot;data/chisq_kommentare.txt&quot;, sep = &quot;\\t&quot;, fileEncoding = &quot;UTF-8&quot;) %&gt;% clean_names() head(kommentare) %&gt;% knitr::kable() neugeschriebener_satz kurzer_kommentar ausfuhrlicher_kommentar inkorrekt 13 29 korrekt 67 55 5.1.1.3.2 Chi-Quadrat-Test Stichproben: kurzer Kommentar vs. langer Kommentar H0: Zwischen den beiden Stichproben besteht kein signifikanter Unterschied (Unterschiede zufällig). H1: Zwischen den beiden Stichproben besteht ein signifikanter Unterschied (Unterschiede nicht zufällig). library(janitor) chisq.test(kommentare[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: kommentare[, -1] ## X-squared = 6.2551, df = 1, p-value = 0.01238 Wir verwerfen H0 und nehmen H1 an: zwischen kurzen und langen Kommentaren besteht ein nicht zufälliger Unterschied. 5.1.1.3.3 Graphische Darstellung library(tidyverse) library(scales) kom_lang = kommentare %&gt;% as_tibble() %&gt;% pivot_longer(kurzer_kommentar:ausfuhrlicher_kommentar, names_to = &quot;Kommentar&quot;, values_to = &quot;Fehler&quot;) %&gt;% mutate(pct = Fehler/sum(Fehler)) kom_lang %&gt;% knitr::kable() neugeschriebener_satz Kommentar Fehler pct inkorrekt kurzer_kommentar 13 0.0792683 inkorrekt ausfuhrlicher_kommentar 29 0.1768293 korrekt kurzer_kommentar 67 0.4085366 korrekt ausfuhrlicher_kommentar 55 0.3353659 kom_lang %&gt;% ggplot(aes(Kommentar, pct, fill = neugeschriebener_satz)) + geom_col(position = &quot;dodge&quot;) + scale_y_continuous(labels = percent_format()) + labs(x = &quot;Neugeschriebener Satz&quot;, y = &quot;&quot;, title = &quot;Wirksamkeit kurzer und langer Kommentare&quot;) 5.1.2 Plural von Kunstwörtern 5.1.2.1 Naloimo programe library(tidyverse) library(scales) library(kableExtra) 5.1.2.2 Preberemo podatkovni niz z diska # Branje datoteke je mono na ve nainov plural_subj1 = read.csv(&quot;data/plural_Subj_sum.csv&quot;, sep = &quot;;&quot;) plural_subj1 = read.csv2(&quot;data/plural_Subj_sum.csv&quot;) plural_subj1 = read_csv2(&quot;data/plural_Subj_sum.csv&quot;) # Pokai prvih est vrstic head(plural_subj1) %&gt;% knitr::kable() SubjID WordType Genus Sigstark En E Er S Z 1 NoRhyme Fem 4.983333 8 4 0 0 0 1 NoRhyme Masc 4.600000 6 6 0 0 0 1 NoRhyme Neut 5.366667 10 2 0 0 0 1 Rhyme Fem 3.836667 3 8 0 0 1 1 Rhyme Masc 4.153333 5 5 1 0 1 1 Rhyme Neut 3.784167 3 7 1 0 1 5.1.2.3 Povzetek in Hi-kvadrat test Podatkovni niz preoblikujemo in povzemamo (agregacija). Za preizkus ustvarimo tabelo 2 x 2 z opazovanimi pogostnostmi (frekvencami). Program izrauna priakovane pogstnosti in zatem e ocenjuje, ali je razlika med vzorcema statistino znailna. H0: Preizkusne osebe uporabljajo mnoinske pripone ne glede na besedni tip (Rhyme / Non-Rhyme). H1: Preizkusne osebe uporabljajo mnoinske pripone z ozirom na besedni tip (Rhyme / Non-Rhyme). e je p-vrednost &lt; 0,05 (tj. 5%), potem obvelja H1: razlika med opazovanimi in priakovanimi pogostnostmi je statistino znailna (tj. da ni nakljuna in dovolj velika ob upotevanju napake). e p &gt; 0,05, potem obdrimo H0: razlika med opazovanimi pogostnostmi je nakljuna. # Povzemamo (&quot;aggregate&quot;) # Ergebnisse summieren p = plural_subj1 %&gt;% group_by(WordType) %&gt;% summarise(Sigstark = mean(Sigstark), En = sum(En), E = sum(E), Er = sum(Er), S = sum(S), Z = sum(Z)) # izpis tabele knitr::kable(p) WordType Sigstark En E Er S Z NoRhyme 4.087337 1528 2169 302 307 26 Rhyme 3.916109 1425 2172 561 244 14 # Izberemo tri stolpce q = p %&gt;% select(WordType, E, S) # Razlika med delei mnoinskih pripon E in S (npr. Bal-e oder Bal-s) chisq.test(q[,-1]) # prvi stolpec naj se ne upoteva, zato [, -1] ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: q[, -1] ## X-squared = 6.2424, df = 1, p-value = 0.01247 5.1.2.4 Naslednji preizkus(i) # Izberemo tri stolpce za naslednji preizkus q = p %&gt;% select(WordType, E, Er) # Razlika med delei mnoinskih pripon E in Er (npr. Bal-e oder Bal-er) chisq.test(q[,-1]) # prvi stolpec naj se ne upoteva, zato [, -1] ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: q[, -1] ## X-squared = 64.106, df = 1, p-value = 1.179e-15 5.1.2.5 Tabela 2 x 3 Mono je tudi testiranje treh ali ve vzorcev, vendar nam test ne pove, kateri vzorec je razlien od drugega. # Izberemo tri stolpce za naslednji preizkus q = p %&gt;% select(WordType, Er, E, S) # Razlika med delei mnoinskih pripon E in Er (npr. Bal-e oder Bal-er) chisq.test(q[,-1]) # prvi stolpec naj se ne upoteva, zato [, -1] ## ## Pearson&#39;s Chi-squared test ## ## data: q[, -1] ## X-squared = 78.148, df = 2, p-value &lt; 2.2e-16 5.1.2.6 Zweite Version Ergebnisse summieren: (p = plural_subj1 %&gt;% group_by(WordType) %&gt;% summarise(En = sum(En), E = sum (E)) ) ## # A tibble: 2 x 3 ## WordType En E ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 NoRhyme 1528 2169 ## 2 Rhyme 1425 2172 Chi-Quadrat-Test Falls p &lt; 0,05: es gilt H1 (Stichproben unterscheiden sich). Falls p &gt; 0,05: es gilt H0 (kein Unterschied zwischen Stichproben). (chi = chisq.test(p[,-1]) ) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: p[, -1] ## X-squared = 2.1535, df = 1, p-value = 0.1422 Beobachtete vs. erwartete Werte: tabelle &lt;- as_tibble(cbind(chi$observed, chi$expected)) %&gt;% # Spalte wieder hinzufügen mutate(Wordtyp = unlist(p[,1])) %&gt;% # auf deutsch mutate(Wordtyp = str_replace(Wordtyp, &quot;NoRhyme&quot;, &quot;Nicht-Reimwort&quot;), Wordtyp = str_replace(Wordtyp, &quot;Rhyme&quot;, &quot;Reimwort&quot;)) %&gt;% # erwartete Werte, wenn H0 richtig ist rename(En_erwartet = V3, E_erwartet = V4) %&gt;% # Reihenfolge der Variablen verändern select(Wordtyp, En, E, En_erwartet, E_erwartet) tabelle %&gt;% rmarkdown::paged_table() 5.1.3 Modalkonstruktionen (morati vs. treba) 5.1.3.1 Packages library(tidyverse) library(scales) library(janitor) library(readxl) 5.1.3.2 Datei laden Gigafida: Gebrauchsfrequenzen (Tokenfrequenzen) der Modalkonstruktionen morati + Infinitiv und biti + treba + Infinitive. naklonska &lt;- read_xlsx(&quot;data/morati_treba.xlsx&quot;) %&gt;% clean_names() naklonska ## # A tibble: 2 x 3 ## vrsta_besedila treba morati ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 asniki 550572 1501540 ## 2 Drugo 169349 530345 Die zweite Tabelle zeigt die Distribution der beiden Modalkonstruktionen in fünf Funktionalstilen. naklonska2 &lt;- read_xlsx(&quot;data/morati_treba.xlsx&quot;, sheet = &quot;List2&quot;) %&gt;% clean_names() naklonska2 ## # A tibble: 5 x 3 ## vrsta_besedila treba morati ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 asopisi 389479 1086280 ## 2 Revije 161093 415260 ## 3 Internet 124996 376433 ## 4 Stvarna besedila 30998 98981 ## 5 Leposlovje 13355 54931 Die Modalkonstruktion morati + Infinitiv wird ca. dreimal so häufig verwendet wie biti + treba + Infinitiv. 5.1.3.3 Graphische Darstellung Die graphischen Darstellungen zeigen eher geringe Distributionsunterschiede. naklonska %&gt;% pivot_longer(treba:morati, names_to = &quot;konstruktion&quot;, values_to = &quot;freq&quot;) %&gt;% ggplot(aes(konstruktion, freq, fill = vrsta_besedila)) + geom_col(position = &quot;fill&quot;) + scale_y_continuous(labels = percent_format()) + labs(x = &quot;Modalkonstruktion&quot;, y = &quot;Gebrauchsfrequenz&quot;, fill = &quot;Vrsta besedila&quot;) Die Modalkonstruktion morati + Infinitiv scheint in den alltagssprachlich näherstehenden Funktionalstilen Belletristik (leposlovje), Internet und Sachtexten (stvarna besedila) etwas häufiger belegt zu sein als die Modalkonstruktion biti + treba + Infinitiv, dafür aber in Zeitungen (asopisi) etwas seltener. naklonska2 %&gt;% pivot_longer(treba:morati, names_to = &quot;konstruktion&quot;, values_to = &quot;freq&quot;) %&gt;% ggplot(aes(konstruktion, freq, fill = vrsta_besedila)) + geom_col(position = &quot;fill&quot;) + scale_y_continuous(labels = percent_format()) + labs(x = &quot;Modalkonstruktion&quot;, y = &quot;Gebrauchsfrequenz&quot;, fill = &quot;Vrsta besedila&quot;) 5.1.3.4 Chi-Quadrat-Test Annahme: Die Modalkonstruktion morati + Infinitiv ist weniger markiert als die Modalkonstruktion biti + treba + Infinitiv. Formael und semantische Begründungen:  H0: Die beiden Modalkonstruktionen kommen in denselben Funktionalstilen vor. H1: Die beiden Modalkonstruktionen kommen nicht in denselben Funktionalstilen vor. Der erste Chi-Quadrat-Test zeigt, dass die beiden Stichproben (morati vs. treba) unabhängig voneinander sind (p &lt; 0,001). Damit können wir die Nullhypothese (H0) verwerfen und die alternative Hypothese (H1) akzeptieren. Die beiden Modalkonstruktionen kommen demnach nicht im gleichen Maße in denselben Funktionalstilen vor. chisq.test(naklonska[ , -1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: naklonska[, -1] ## X-squared = 1862.9, df = 1, p-value &lt; 2.2e-16 Der zweite Chi-Quadrat bestätigt Hypothese H1. Die Distribution der beiden Modalkonstruktionen unterscheidet sich. Die graphische Darstellung deutet an, dass dies vor allem am vergleichsweise selteneren Gebrauch der Modalkonstruktion morati + Infinitiv in publizistischen Texten liegen könnte. Nach unser Annahme wird die Modalkonstruktion biti + treba + Infinitiv häufiger in Texten mit dem Merkmal [+Distanz] eingesetzt. chisq.test(naklonska2[ , -1]) ## ## Pearson&#39;s Chi-squared test ## ## data: naklonska2[, -1] ## X-squared = 3292, df = 4, p-value &lt; 2.2e-16 5.2 Intervallskalierte Größen Statistische Tests: t-Test, lineare Regression, lineare Regression mit gemischten Effekten. 5.2.1 Wirkung von Unterrichtsmethoden Welche Wirkung haben zwei verschiedene Unterrichtsmethoden auf die Ergebnisse von Sprachtests? Welche Gruppe von Studierenden erreichte eine höhere Punktzahl beim Test? 5.2.1.1 Data # Two teaching methods and the scores in a language test. metode &lt;- read.csv(&quot;data/ttest2a.csv&quot;, dec=&quot;,&quot;) attach(metode) head(metode) ## Testpersonen Resultat Methode ## 1 1 23 A ## 2 2 34 A ## 3 3 54 A ## 4 4 33 A ## 5 5 26 A ## 6 6 27 A 5.2.1.2 Descriptive statistics Average scores of students tapply(Resultat, list(Methode), mean) ## A B ## 32.65 31.55 Standard deviations of averages tapply(Resultat, list(Methode), sd) ## A B ## 9.906271 7.897201 Graphische Darstellung barplot(tapply(Resultat, list(Methode), mean), col=c(3:2)) plot of chunk unnamed-chunk-1 5.2.1.3 Statistical test t test # Do the means of the two samples differ significantly? # Hypothesis H0: they don&#39;t (if p &gt; 0.05. # Hypothesis H1: they do (if p &lt; 0.05. t.test(Resultat ~ Methode, data=metode, paired = F, var.equal = T) ## ## Two Sample t-test ## ## data: Resultat by Methode ## t = 0.3883, df = 38, p-value = 0.7 ## alternative hypothesis: true difference in means between group A and group B is not equal to 0 ## 95 percent confidence interval: ## -4.634791 6.834791 ## sample estimates: ## mean in group A mean in group B ## 32.65 31.55 Lineare Regression Since we deal with only one predictor (Methode), the result of the linear regression will be the same as the result of the t test above. # Check the same hypotheses with the linear regression method # Since there is only one predictor (&quot;Methode&quot;), we obtain the same result as with the t-test. # Since p &gt; 0.05, the score means of the two methods do not differ significantly. m &lt;- lm(Resultat ~ Methode, data=metode) summary(m) ## ## Call: ## lm(formula = Resultat ~ Methode, data = metode) ## ## Residuals: ## Min 1Q Median 3Q Max ## -16.65 -6.65 -0.55 5.45 21.35 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 32.650 2.003 16.300 &lt;2e-16 *** ## MethodeB -1.100 2.833 -0.388 0.7 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 8.958 on 38 degrees of freedom ## Multiple R-squared: 0.003952, Adjusted R-squared: -0.02226 ## F-statistic: 0.1508 on 1 and 38 DF, p-value: 0.7 library(effects) Predicted scores allEffects(m) ## model: Resultat ~ Methode ## ## Methode effect ## Methode ## A B ## 32.65 31.55 plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE) 5.2.2 Höflichkeit und Grundfrequenz library(tidyverse) library(scales) # detach(&quot;package:rlang&quot;, unload=TRUE) Datensatz von: Bodo Winter (Winter and Grawunder 2012; Winter 2013) Thema: Politeness and Pitch (F0) Tutorials: - Lineare Regression - Lineare Regression mit gemischten Effekten Artikel: The phonetic profile of Korean formal and informal speech registers Gliederung unserer quantitativen Analyse 1. Laden der Datei 2. Kennenlernen der Daten und Säubern 3. Hypothesen 4. Test und Ergebnisse 5. Schluss Eine einfache lineare Regression oder einen t-Test kann man auch in Excel berechnen, aber in Statistikprogrammen ist das bequemer. 5.2.2.1 Datei laden # politeness &lt;- read.csv(&quot;/cloud/project/data/politeness_data.csv&quot;) politeness &lt;- read.csv(&quot;data/politeness_data.csv&quot;) 5.2.2.2 Kennenlernen der Daten und Säubern Welche Variablen enthält die Datei? head(politeness) ## subject gender scenario attitude frequency ## 1 F1 F 1 pol 213.3 ## 2 F1 F 1 inf 204.5 ## 3 F1 F 2 pol 285.1 ## 4 F1 F 2 inf 259.7 ## 5 F1 F 3 pol 203.9 ## 6 F1 F 3 inf 286.9 Eine weitere Funktion, um die Datenstruktur zu betrachten: glimpse(politeness) ## Rows: 84 ## Columns: 5 ## $ subject &lt;chr&gt; &quot;F1&quot;, &quot;F1&quot;, &quot;F1&quot;, &quot;F1&quot;, &quot;F1&quot;, &quot;F1&quot;, &quot;F1&quot;, &quot;F1&quot;, &quot;F1&quot;, &quot;F1&quot;, ~ ## $ gender &lt;chr&gt; &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, ~ ## $ scenario &lt;int&gt; 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 1, 1, 2, 2, 3, 3, ~ ## $ attitude &lt;chr&gt; &quot;pol&quot;, &quot;inf&quot;, &quot;pol&quot;, &quot;inf&quot;, &quot;pol&quot;, &quot;inf&quot;, &quot;pol&quot;, &quot;inf&quot;, &quot;pol~ ## $ frequency &lt;dbl&gt; 213.3, 204.5, 285.1, 259.7, 203.9, 286.9, 250.8, 276.8, 231.~ Und noch eine Übersicht, die uns noch mehr zeigt, z.B. ob bestimmte Datenzellen leer sind (NA). Die Variable frequency enthält eine leere Datenzelle (s. n_missing). Das müssen wir bei der Berechnung des Durchschnitts berücksichtigen. library(skimr) skim(politeness) Table 5.1: Data summary Name politeness Number of rows 84 Number of columns 5 _______________________ Column type frequency: character 3 numeric 2 ________________________ Group variables None Variable type: character skim_variable n_missing complete_rate min max empty n_unique whitespace subject 0 1 2 2 0 6 0 gender 0 1 1 1 0 2 0 attitude 0 1 3 3 0 2 0 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist scenario 0 1.00 4.00 2.01 1.0 2.00 4.0 6.00 7.0  frequency 1 0.99 193.58 65.54 82.2 131.55 203.9 248.55 306.8  Am Experiment nahmen 6 Versuchspersonen teil (F1, , M7). Von jeder Versuchsperson (subject) haben wir 14 Messpunkte (n = 14). politeness %&gt;% count(subject) ## subject n ## 1 F1 14 ## 2 F2 14 ## 3 F3 14 ## 4 M3 14 ## 5 M4 14 ## 6 M7 14 Versuchspersonen: je 3 sind weiblich bzw. männlich. politeness %&gt;% count(subject, gender) ## subject gender n ## 1 F1 F 14 ## 2 F2 F 14 ## 3 F3 F 14 ## 4 M3 M 14 ## 5 M4 M 14 ## 6 M7 M 14 Pro Verhaltensweise stehen uns 42 Messpunkte zur Verfügung, um unsere (unten folgende) Hypothese zu überprüfen. politeness %&gt;% count(attitude) ## attitude n ## 1 inf 42 ## 2 pol 42 Berechnen wir mal die Grundfrequenz! politeness %&gt;% mean(frequency) ## [1] NA NA: Hoppla! In unserer Datenreihe fehlt eine Frequenz. Wir entfernen diese Datenzeile, um die durchschnittliche Frequenz mit mean() zu berechnen. Entfernen der leeren Datenzelle (NA) ist die einfachste Lösung. politeness %&gt;% drop_na(frequency) %&gt;% summarise(av_freq = mean(frequency)) ## av_freq ## 1 193.5819 Wir haben gerade die Durchschnittsfrequenz für alle Versuchspersonen berechnet. Berechnen wir sie nun getrennt nach weiblichen und männlichen Versuchspersonen! politeness %&gt;% drop_na(frequency) %&gt;% group_by(gender) %&gt;% summarise(av_freq = mean(frequency)) ## # A tibble: 2 x 2 ## gender av_freq ## &lt;chr&gt; &lt;dbl&gt; ## 1 F 247. ## 2 M 139. Erwartungsgemäß ist der Durchschnittswert bei Frauen höher als bei Männern: Frauen haben meist eine höhere Stimme als Männer. Ein Blick auf die Durchschnittsfrequenzen bei höflicher und informeller Sprechweise: In unserer Stichprobe mit 6 Versuchspersonen (je 14 Frequenzmessungen) zeigt sich ein Unterschied von etwa 18,2 Hz, und zwar 202,59 - 184,36. politeness %&gt;% drop_na() %&gt;% group_by(attitude) %&gt;% summarise(avg_freq = mean(frequency), sd_freq = sd(frequency)) ## # A tibble: 2 x 3 ## attitude avg_freq sd_freq ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 inf 203. 66.9 ## 2 pol 184. 63.6 # politeness %&gt;% # drop_na %&gt;% # transmute(attitude, frequency) %&gt;% # mutate(attitude = str_replace(attitude, &quot;pol&quot;, &quot;1&quot;), # attitude = str_replace(attitude, &quot;inf&quot;, &quot;0&quot;)) %&gt;% # mutate(attitude = parse_number(attitude)) 5.2.2.3 Hypothesen \\(H_0\\): Der durchschnittliche Grundfrequenzverlauf (F0) bei höflichem oder informellem Sprechverhalten (attitude) ist gleich. \\(H_1\\): Der durchschnittliche Grundfrequenzverlauf (F0) bei höflichem Sprechverhalten unterscheidet sich vom informellen. Nach unserem bisherigen Wissen erwarten wir, dass unsere Daten die Hypothese \\(H_1\\) bestätigen werden. Das überprüfen wir zunächst mit einem t-Test, anschließend mit einer linearen Regression. 5.2.2.4 t-Test Zunächst ein Blick auf die Durchschnittsfrequenzen bei höflicher und informeller Sprechweise. In unserer Stichprobe mit 6 Versuchspersonen (je 14 Frequenzmessungen) zeigt sich ein Unterschied von etwa 18,2 Hz. Gemäß Hypothese \\(H_1\\) ist der Unterschied nicht zufällig entstanden, sondern kann auf die Gesamtpopulation der Sprecher verallgemeinert werden. Nicht so gemäß Hypothese \\(H_0\\): Der Mittelwertunterschied zwischen den Stichproben kann zufällig entstanden sein, denn wenn wir eine andere Stichprobe genommen hätten, wäre der Unterschied vielleicht gleich Null gewesen. Mit statistischen Tests können wir diese beiden Hypothesen überprüfen. Einer davon ist der t-Test. politeness %&gt;% drop_na() %&gt;% group_by(attitude) %&gt;% summarise(avg_freq = mean(frequency), sd_freq = sd(frequency)) ## # A tibble: 2 x 3 ## attitude avg_freq sd_freq ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 inf 203. 66.9 ## 2 pol 184. 63.6 Die Varianzen und damit auch die Standardabweichungen (sd_freq) vom Mittelwert (avg_freq) sind in beiden Gruppen (inf und pol) ungefähr gleich groß. Beim t-Test können wir dies berücksichtigen, und zwar mit der Option var.equal = TRUE. Die Option paired = FALSE besagt, dass die beiden Gruppen unabhängig vom Messzeitpunkt sind. Der t-Test bestätigt \\(H_1\\) nicht (p &gt; 0,05): t.test(frequency ~ attitude, data = politeness, paired = FALSE, var.equal = TRUE) ## ## Two Sample t-test ## ## data: frequency by attitude ## t = 1.2718, df = 81, p-value = 0.2071 ## alternative hypothesis: true difference in means between group inf and group pol is not equal to 0 ## 95 percent confidence interval: ## -10.29058 46.75458 ## sample estimates: ## mean in group inf mean in group pol ## 202.5881 184.3561 Eine weitere Form, wie man den t-Test durchführen könnte. In den eckigen Klammern wird eine Bedingung oder Filter formuliert. # frequencies if polite pol = politeness$frequency[politeness$attitude == &quot;pol&quot;] # frequencies if informal inf = politeness$frequency[politeness$attitude == &quot;inf&quot;] t.test(pol, inf, var.equal = TRUE) ## ## Two Sample t-test ## ## data: pol and inf ## t = -1.2718, df = 81, p-value = 0.2071 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -46.75458 10.29058 ## sample estimates: ## mean of x mean of y ## 184.3561 202.5881 Oder eine dritte (längere) Variante, den t-Test durchzuführen: polite &lt;- politeness %&gt;% select(attitude, frequency) %&gt;% filter(attitude == &quot;pol&quot;) %&gt;% select(-attitude) informal &lt;- politeness %&gt;% select(attitude, frequency) %&gt;% filter(attitude == &quot;inf&quot;) %&gt;% select(-attitude) t.test(polite, informal, var.equal = TRUE) ## ## Two Sample t-test ## ## data: polite and informal ## t = -1.2718, df = 81, p-value = 0.2071 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -46.75458 10.29058 ## sample estimates: ## mean of x mean of y ## 184.3561 202.5881 Wenn man die Option var.equal = TRUE nicht angibt, wird der Welch-t-Test durchgeführt, d.h. das Programm geht davon aus, dass die Varianzen (bzw. Standardabweichungen) der beiden Gruppen sich signifikant unterscheiden. 5.2.2.5 Lineare Regression Mit dem t-Test konnten wir immer nur die Wirkung einer Variablen (z.B. attitude) auf den Frequenzverlauf prüfen. Mit einem linearen Regressionsmodell können wir dagegen die gleichzeitige Wirkung mehrerer Größen auf den Frequenzverlauf herausfinden. Eine lineare Regression hat den großen Vorteil, dass man mehr als eine unabhängige Variable (Prädiktor) verwenden kann, um eine Hypothese zu testen. Wir wählen Geschlecht (gender) und Sprechverhalten (attitude) als unabhängige Variablen, der Grundfrequenzverlauf (frequency) als abhängige Variable. Die grundlegende Formulierung des Programmcodes (für eventuelle Vergleiche mit anderen Modellversionen haben wir dem Modell auch den neuen Namen m1 gegeben): m &lt;- lm(frequency ~ gender + attitude, data = politeness) m1 &lt;- m summary(m) ## ## Call: ## lm(formula = frequency ~ gender + attitude, data = politeness) ## ## Residuals: ## Min 1Q Median 3Q Max ## -82.409 -26.561 -4.262 24.690 100.140 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 256.762 6.756 38.006 &lt;2e-16 *** ## genderM -108.349 7.833 -13.832 &lt;2e-16 *** ## attitudepol -19.553 7.833 -2.496 0.0146 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 35.68 on 80 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.7109, Adjusted R-squared: 0.7037 ## F-statistic: 98.38 on 2 and 80 DF, p-value: &lt; 2.2e-16 Wie liest man die Regressionsergebnisse?2 Beginnen wir am Ende! Die F-Statistik am Ende besagt, dass das Regressionsmodell insgesamt gesehen einen signifikanten Beitrag zur Erklärung des Frequenzverlaufs leistet, denn der sehr kleine p-Wert (p-value: &lt; 2.2e-16) liegt deutlich unter dem 5% Signifikanzniveau. Die vorletzte Zeile gibt den \\(R^2\\)-Wert (Bestimmtheitsmaß) an, also wie viel Prozent der gesamten Varianz vom Modell erklärt wird (hier: 0,71, demnach 71 % bzw. mit adjusted \\(R^2\\) mehr als 70%, wenn die Korrektur berücksichtigt wird, die bei Einbezug mehr als einer unabhängigen Variable gilt). Der Intercept ist die Stelle, an der die Frequenzkurve die y-Achse schneidet (also die Oordinate). In diesem Fall beträgt der Wert etwa 257 Hz. Der Intercept-Wert ist meistens nicht sinnvoll interpretierbar (auch hier nicht). Aber wenn wir das folgende Diagramm gender effect plot betrachten und in Gedanken die Linie von dem Punkt für die weiblichen Versuchspersonen (F) in Richtung y-Achse verlängern, dann können wir uns vorstellen, dass die Linie etwa beim Wert 257 die y-Achse schneidet. Der Intercept ist somit der (mathematisch festgelegte) Basiswert für die weiblichen Versuchspersonen (weil das Programm alphabetisch vorgeht und F im Alphabet vor M erscheint). Der Koeffizient für genderM zeigt an, dass bei männlichen Versuchspersonen 108,35 Hz vom Basiswert der weiblichen Versuchspersonen (256,762) subtrahiert werden müssen. Das ist der Intercept für die männlichen Versuchspersonen. Der p-Wert ist erwartungsgemäß hochsignifikant (p &lt; 2e-16). In der nächsten Zeile folgt der Koeffizient für attitudepol (polite). Der Koeffizient (-19,553) ist negativ und muss daher vom Basiswert, dem Intercept für die weiblichen Versuchspersonen (256,762), subtrahiert werden. Demnach ist die Tonlage beim höflichen Sprechverhalten (attitudepol) um 19,55 Hz tiefer als beim informellen Sprechverhalten. Der p-Wert ist signifikant (p = 0,0146). Grundfrequenz für Frauen bei informellem Sprechen: 256.762 + (-108.349)*0 + (-19.553)*0 = 256.762 Hz Grundfrequenz für Frauen bei höflichem Sprechen: 256.762 + (-108.349)*0 + (-19.553)*1 = 237.209 Hz Grundfrequenz für Männer bei informellem Sprechen: 256.762 + (-108.349)*1 + (-19.553)*0 = 148.413 Hz Grundfrequenz für Männer bei höflichem Sprechen: 256.762 + (-108.349)*1 + (-19.553)*1 = 128.86 Hz Durchschnittliche Grundfrequenz bei informellem Sprechen: (256.762 + 148.413)/2 = 202.5875 Hz. Durchschnittliche Grundfrequenz bei höflichem Sprechen: (237.209 + 128.86)/2 = 183.0345 Hz. Das lineare Regressionsmodell bestätigt somit die Hypothese \\(H_1\\): F(2;80 = 98,38; p &lt; 0,001). Die Versuchspersonen sprechen demnach in einer tieferen Tonlage, wenn sie höflich sprechen, und zwar um ca. 19,5 Hz tiefer als wenn sie informell sprechen (p = 0,0146). Außerdem bestätigt das Regressionsmodell (erwartungsgemäß) auch, dass die männlichen Versuchspersonen mit einer tieferen Stimme sprechen als die weiblichen, und zwar um durchschnittlich 108 Hz. Der \\(R^2\\)-Wert beträgt 0,71 (d.h. etwa 71%). Das bedeutet, dass mit dem Regressionsergebnis ca. 71% der Variabilität unserer Daten erklärt wird. Das ist ein guter Wert in den Sozialwissenschaften. Das Regressionsmodell wollen wir auch mit Hilfe Programms effects graphisch veranschaulichen. library(effects) allEffects(m) ## model: frequency ~ gender + attitude ## ## gender effect ## gender ## F M ## 247.1035 138.7549 ## ## attitude effect ## attitude ## inf pol ## 203.2408 183.6875 plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE, confint=list(style=&quot;bars&quot;), x.var = &quot;gender&quot;) Man kann Regressionsmodelle auch mit tidyverse-Funktionen formulieren (der . bedeutet, dass der Datensatz politeness aus der vorherigen Zeile übernommen werden soll). Die tidy(()-Funktion des broom-Pakets sorgt für die Umformung in eine Tabelle. library(broom) politeness %&gt;% lm(frequency ~ attitude + gender, data = .) %&gt;% summary() %&gt;% broom::tidy() ## # A tibble: 3 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 257. 6.76 38.0 5.75e-53 ## 2 attitudepol -19.6 7.83 -2.50 1.46e- 2 ## 3 genderM -108. 7.83 -13.8 6.40e-23 Die unterschiedliche Tonlage bei informellem und höflichem Sprechen veranschaulichen wir noch mit einem Boxplot. politeness %&gt;% ggplot(aes(attitude, frequency, group = attitude, fill = attitude)) + geom_boxplot() + stat_summary(fun.y=mean, geom=&quot;point&quot;, shape=&quot;*&quot;, size=7, color=&quot;red&quot;, fill=&quot;red&quot;) + geom_jitter(width = 0.2) + # geom_hline(yintercept = c(202.5), # lty = 2, col = &quot;darkred&quot;) + # Polite-Mittelwert # geom_hline(yintercept = c(184.3), # lty = 2, col = &quot;darkgreen&quot;) + # Informal-Mittelwert facet_wrap(~ gender) Der rote Stern markiert den Durchschnittswert der jeweiligen Gruppe, der schwarze Balken den Median (d.h. den Wert, der genau in der Mitte aller Daten der jeweiligen Gruppe liegt). Im Kasten eines Boxplots liegen 50% aller Werte, darunter liegen 25% und darüber ebenfalls 25%. Bei den Männern (M) ist zu sehen, dass der Median (der schwarze Balken) und das arithmetische Mittel (der rote Stern) nicht übereinstimmen. Das deutet auf extremere Unterschiede zwischen den männlichen Versuchspersonen (Schiefe oder Asymmetrie). Die Schiefe (engl. skewness) oder Asymmetrie der Frequenzverteilung (Distribution) kann man in einem Histogramm oder Dichte-Diagramm (density) veranschaulichen. Das Histogram der weiblichen Versuchspersonen ist der Normalverteilung (einer Glockenform, mit den meisten Frequenzwerten in der Mitte) ähnlich, während das der männlichen deutlich schief ist. politeness %&gt;% ggplot(aes(frequency, fill = attitude)) + geom_density(alpha = 0.7) + facet_wrap(~ gender) ## Warning: Removed 1 rows containing non-finite values (stat_density). politeness %&gt;% ggplot(aes(frequency, fill = attitude)) + geom_histogram(aes(y = ..count..), # density binwidth = 50, alpha = 0.7, color = &quot;white&quot;) + facet_wrap(~ gender) ## Warning: Removed 1 rows containing non-finite values (stat_bin). politeness %&gt;% filter(gender == &quot;F&quot;) %&gt;% ggplot(aes(frequency)) + geom_histogram(aes(y = ..density.., fill = attitude), # count binwidth = 50, alpha = 0.7, color = &quot;white&quot;) + stat_function( fun = dnorm, args = list( mean = mean( politeness$frequency[politeness$gender == &quot;F&quot;], na.rm = T), sd = sd(politeness$frequency[politeness$gender == &quot;F&quot;], na.rm = T)), col = &quot;#1b98e0&quot;, size = 2) politeness %&gt;% filter(gender == &quot;M&quot;) %&gt;% ggplot(aes(frequency)) + geom_histogram(aes(y = ..density.., fill = attitude), # count binwidth = 50, alpha = 0.7, color = &quot;white&quot;) + stat_function( fun = dnorm, args = list( mean = mean( politeness$frequency[politeness$gender == &quot;M&quot;], na.rm = T), sd = sd(politeness$frequency[politeness$gender == &quot;M&quot;], na.rm = T)), col = &quot;#1b98e0&quot;, size = 2) ## Warning: Removed 1 rows containing non-finite values (stat_bin). Wird das Sprechverhalten (attitude) durch das Geschlecht (gender) modifiziert (z.B. verändern Frauen ihre Tonlage beim höflichem Sprechen, Männer dagegen nicht oder kaum)? Das kann man durch Hinzufügung eines Interaktionsterms prüfen. Eine Interaktion kennzeichnet man in der Regressionsgleichung mit einem Stern zwischen den beteiligten Variablen (also wie beim Multiplizieren). Hier prüfen wir die Interaktion zwischen den beiden unabhängigen Variablen Geschlecht (gender) und Verhalten (attitude). Die Indikatorterme attitude (informal vs. polite) und gender (female vs. male), beide also mit zwei Stufen oder levels, sind vergleichbar mit An-/Aus-Schaltern. Sie zeigen an, um welchen Wert die Frequenzkurve nach unten (bei negativem Koeffizient) oder oben (bei positivem Koeffizient) verschoben wird. Der Interaktionsterm der beiden Indikatorterme zeigt an, um welchen zusätzlichen Wert der Frequenzverlauf verändert wird. Wäre eine kontinuierliche Variable (z.B. Zeit) in der Interaktion einbezogen, dann würde der Koeffizient der Interaktion die zusätzliche Steigung (slope) der abhängigen Variable anzeigen. m &lt;- lm(frequency ~ attitude*gender, data = politeness) m2 &lt;- m summary(m) ## ## Call: ## lm(formula = frequency ~ attitude * gender, data = politeness) ## ## Residuals: ## Min 1Q Median 3Q Max ## -78.486 -27.383 -0.986 20.570 96.020 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 260.686 7.784 33.491 &lt;2e-16 *** ## attitudepol -27.400 11.008 -2.489 0.0149 * ## genderM -116.195 11.008 -10.556 &lt;2e-16 *** ## attitudepol:genderM 15.890 15.664 1.014 0.3135 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 35.67 on 79 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.7147, Adjusted R-squared: 0.7038 ## F-statistic: 65.95 on 3 and 79 DF, p-value: &lt; 2.2e-16 Allerdings ist der p-Wert für die Interaktion in unserem Fall nicht signifikant (p = 0,3135 liegt oberhalb des 5% Signifikanzniveaus, p = 0,05). Das bedeutet, dass die Interaktion zur Erklärung des Frequenzverlaufs keinen Beitrag leistet. Daher ist es sinnvoll, den Interaktionsterm aus der Regressionsgleichung zu entfernen und nur die (signifkanten) Haupteffekte beizubehalten. Wir bevorzugen demnach immer das einfachere Modell, wenn das komplexere keinen signifikanten Erklärungsbeitrag leistet. Mit der anova()-Funktion kann man Regressionsmodelle (hier: m1 und m2) miteinander vergleichen und prüfen, welches geeigneter ist, den Frequenzverlauf zu erklären. Modell m1 ist das Modell ohne Interaktion, Modell m2 das Modell mit Interaktionsterm. anova(m1, m2) ## Analysis of Variance Table ## ## Model 1: frequency ~ gender + attitude ## Model 2: frequency ~ attitude * gender ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 80 101820 ## 2 79 100511 1 1309.1 1.029 0.3135 Der p-Wert (p = 0,3135) ist nicht signifikant. In diesem Fall bevorzugen wir das einfachere Regressionsmodell, d.h. das Modell ohne Interaktion (m1). Mit Hilfe des Programms effects stellen wir das Regressionsmodell mit hinzugefügter Interaktion zwischen den beiden unabhängigen Variablen Geschlecht (gender) und Verhalten (attitude) auch graphisch dar. library(effects) allEffects(m) ## model: frequency ~ attitude * gender ## ## attitude*gender effect ## gender ## attitude F M ## inf 260.6857 144.4905 ## pol 233.2857 132.9800 plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE, confint=list(style=&quot;bars&quot;), x.var = &quot;gender&quot;) Die sich überschneidenden Konfidenzintervalle im Diagramm zeigen, dass die Durchschnittswerte keinen signifikanten Unterschied aufweisen. Außerdem gilt sowohl für die weiblichen als auch die männlichen Versuchspersonen, dass Frequenzwerte beim höflichen Sprechverhalten geringer sind. Die Interaktion liefert somit keinen signifikanten Erklärungsbeitrag. Es ist sinnvoll, nur die beiden Haupteffekte beizubehalten und die Interaktion aus dem Regressionsmodell herauszunehmen. plot of chunk unnamed-chunk-1 Das nächste Diagramm bestätigt, dass die Variablen Geschlecht (gender) und Verhalten (attitude) mit statistischer Signifikanz die Höhe des Grundfrequnezverlaufs (frequency) beeinflussen, nicht jedoch die Interaktion beider Variablen (deren Konfidenzintervall überschreitet im Diagramm die Null-Linie). library(parameters) library(see) p1 = plot(parameters(m)) + ggplot2::labs(title = &quot;A Dot-and-Whisker Plot&quot;) p1 Das nächste Diagramm bestätigt, dass die Residuen (d.h. die jeweiligen Abweichungen der einzelnen Werte vom Durchschnitt) normalverteilt sind (p = 0.396, also größer als der Grenzwert 0.05). Damit ist eine der erforderlichen Bedingungen für die Durchführung einer linearen Regression erfüllt. library(performance) check &lt;- check_normality(m) ## OK: residuals appear as normally distributed (p = 0.396). ## Warning: Non-normality of residuals detected (p = 0.016). p2 = plot(check, type = &quot;qq&quot;) p2 library(performance) check &lt;- check_normality(m, effects = &quot;fixed&quot;) ## OK: residuals appear as normally distributed (p = 0.396). ## Warning: Non-normality of residuals detected (p = 0.016). p2a = plot(check, type = &quot;pp&quot;) p2a \\(Omega^2\\) ist eine alternative Größe zu \\(R^2\\), womit ebenfalls die erklärte Varianz eines linearen Regressionsmodells angegeben wird. Im Diagramm ist zu sehen, dass die Variable Geschlecht (gender) den größten Beitrag leistet (fast 70%), die Variable Verhalten (attitude) ca. 5%, während die Interaktion beider Variablen keinen signifikanten Beitrag zu Erklärung der Varianz leistet (Wert liegt bei 0%). library(effectsize) library(see) m &lt;- aov(frequency ~ attitude*gender, data = politeness) p3 = plot(omega_squared(m)) p3 Das nächste Diagramm zeigt die Verteilung der Daten. p4 = ggplot(politeness, aes(x = attitude, y = frequency, color = gender)) + geom_point2() + theme_modern() p4 Weitere Darstellungen der Datendistribution: p4 = ggplot(politeness, aes(x = attitude, y = frequency, fill = gender)) + geom_violin() + theme_modern(axis.text.angle = 45) + scale_fill_material_d(palette = &quot;ice&quot;) p4 p5 = ggplot(politeness, aes(x = attitude, y = frequency, fill = gender)) + geom_violindot(fill_dots = &quot;black&quot;) + geom_jitter(width = 0.05) + theme_modern() + scale_fill_material_d() p5 Bedingungen für die Durchführung einer linearen Regression mit einem Befehl. Hier wählen wir das Modell ohne Interaktion (da diese nicht signifikant war). library(performance) m &lt;- lm(frequency ~ attitude + gender, data = politeness) summary(m) ## ## Call: ## lm(formula = frequency ~ attitude + gender, data = politeness) ## ## Residuals: ## Min 1Q Median 3Q Max ## -82.409 -26.561 -4.262 24.690 100.140 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 256.762 6.756 38.006 &lt;2e-16 *** ## attitudepol -19.553 7.833 -2.496 0.0146 * ## genderM -108.349 7.833 -13.832 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 35.68 on 80 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.7109, Adjusted R-squared: 0.7037 ## F-statistic: 98.38 on 2 and 80 DF, p-value: &lt; 2.2e-16 check &lt;- check_model(m) p6 = plot(check) p6 Collage mehrerer der oben einzeln gezeigten Diagramme: plots(p1,p2,p3,p4, n_columns = 2, tags = paste0(&quot;B&quot;, 1:4)) library(bayestestR) library(rstanarm) library(see) set.seed(123) m &lt;- stan_glm(frequency ~ attitude + gender, data = politeness, refresh = 0) result &lt;- hdi(m, ci = c(0.5, 0.75, 0.89, 0.95)) plot(result) 5.2.2.6 Schluss Die Regressionsanalyse hat \\(H_1\\) bestätigt, d.h. die Grundfrequenz beim höflichen Sprechverhalten unterscheidet sich vom informellen Sprechen. Beim höflichen Sprechen sprachen die Versuchspersonen mit einer durchschnittlich 19,5 Hz tieferen Stimme: bei den weiblichen Versuchspersonen mehr als 27 Hz (261 - 233 Hz), bei den männlichen mehr als 11 Hz (144 - 133 Hz)). politeness %&gt;% drop_na() %&gt;% group_by(gender, attitude) %&gt;% summarise(M = mean(frequency)) ## `summarise()` has grouped output by &#39;gender&#39;. You can override using the `.groups` argument. ## # A tibble: 4 x 3 ## # Groups: gender [2] ## gender attitude M ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 F inf 261. ## 2 F pol 233. ## 3 M inf 144. ## 4 M pol 133. 5.2.2.7 Lineare Regression Politeness data (B. Winter tutorial) Programme laden library(tidyverse) Datei laden # LOAD rm(list=ls(all=TRUE)) # clear memory polite &lt;- read.csv(&quot;data/politeness_data.csv&quot;, dec=&quot;.&quot;) Ansicht der Datenlage head(polite) ## subject gender scenario attitude frequency ## 1 F1 F 1 pol 213.3 ## 2 F1 F 1 inf 204.5 ## 3 F1 F 2 pol 285.1 ## 4 F1 F 2 inf 259.7 ## 5 F1 F 3 pol 203.9 ## 6 F1 F 3 inf 286.9 Variablen festlegen polite$frequency = as.numeric(polite$frequency) polite$scenario = as.factor(polite$scenario) polite$subject = as.factor(polite$subject) polite$gender = as.factor(polite$gender) polite$attitude = as.factor(polite$attitude) Kontraste für den statistischen Test setzen # In this session we use contr. sum contrasts options(contrasts=c(&#39;contr.sum&#39;, &#39;contr.poly&#39;)) options(&quot;contrasts&quot;) ## $contrasts ## [1] &quot;contr.sum&quot; &quot;contr.poly&quot; Kontraste zurücksetzen # To reset default settings run: options(contrasts=c(&#39;contr.treatment&#39;, &#39;contr.poly&#39;)) # (all afex functions should be unaffected by this) # # Setting contrasts of chosen variables only # contrasts(polite$attitude) &lt;- contr.treatment(2, base = 1) plot of chunk unnamed-chunk-1 boxplot(frequency ~ attitude*gender, col=c(&quot;red&quot;,&quot;green&quot;), data = polite) Bild speichern # 1. Open jpeg file jpeg(&quot;pictures/politeness_boxplot.jpg&quot;, width = 840, height = 535) # 2. Create the plot boxplot(frequency ~ attitude*gender, col=c(&quot;red&quot;,&quot;green&quot;), data = polite) # 3. Close the file dev.off() ## svg ## 2 # Open a pdf file pdf(&quot;pictures/politeness_boxplot.pdf&quot;) # 2. Create a plot boxplot(frequency ~ attitude*gender, col=c(&quot;red&quot;,&quot;green&quot;), data = polite) # Close the pdf file dev.off() ## svg ## 2 # Inspect relationships between pairs of variables # library(MASS) Inspect relationships between pairs of variables library(psych) pairs.panels(polite[c(2,4,5)]) Ordinary Least Squares Regression (OLS) # model 1 m &lt;- lm(frequency ~ gender + attitude + subject + scenario, data = polite) summary(m) ## ## Call: ## lm(formula = frequency ~ gender + attitude + subject + scenario, ## data = polite) ## ## Residuals: ## Min 1Q Median 3Q Max ## -53.673 -16.686 1.039 12.027 86.630 ## ## Coefficients: (1 not defined because of singularities) ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 225.150 10.020 22.470 &lt; 2e-16 *** ## genderM -129.857 9.606 -13.518 &lt; 2e-16 *** ## attitudepol -19.794 5.585 -3.544 0.000707 *** ## subjectF2 26.150 9.606 2.722 0.008179 ** ## subjectF3 18.700 9.606 1.947 0.055592 . ## subjectM3 66.800 9.606 6.954 1.52e-09 *** ## subjectM4 41.854 9.807 4.268 6.09e-05 *** ## subjectM7 NA NA NA NA ## scenario2 25.017 10.376 2.411 0.018537 * ## scenario3 31.025 10.376 2.990 0.003847 ** ## scenario4 42.508 10.376 4.097 0.000111 *** ## scenario5 14.408 10.376 1.389 0.169351 ## scenario6 1.405 10.629 0.132 0.895227 ## scenario7 3.117 10.376 0.300 0.764783 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 25.42 on 70 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.8716, Adjusted R-squared: 0.8496 ## F-statistic: 39.61 on 12 and 70 DF, p-value: &lt; 2.2e-16 # model 2 m &lt;- lm(frequency ~ gender + attitude, data=polite) summary(m) ## ## Call: ## lm(formula = frequency ~ gender + attitude, data = polite) ## ## Residuals: ## Min 1Q Median 3Q Max ## -82.409 -26.561 -4.262 24.690 100.140 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 256.762 6.756 38.006 &lt;2e-16 *** ## genderM -108.349 7.833 -13.832 &lt;2e-16 *** ## attitudepol -19.553 7.833 -2.496 0.0146 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 35.68 on 80 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.7109, Adjusted R-squared: 0.7037 ## F-statistic: 98.38 on 2 and 80 DF, p-value: &lt; 2.2e-16 library(effects) allEffects(m) ## model: frequency ~ gender + attitude ## ## gender effect ## gender ## F M ## 247.1035 138.7549 ## ## attitude effect ## attitude ## inf pol ## 203.2408 183.6875 plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE) plot of chunk unnamed-chunk-1 # Save plot of the effects to disk # 1. Open jpeg file jpeg(&quot;pictures/politeness_lineplot.jpg&quot;, width = 840, height = 535) # 2. Create the plot plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE) # 3. Close the file dev.off() ## svg ## 2 # model 3 (with interaction) m &lt;- lm(frequency ~ gender*attitude, data=polite) summary(m) ## ## Call: ## lm(formula = frequency ~ gender * attitude, data = polite) ## ## Residuals: ## Min 1Q Median 3Q Max ## -78.486 -27.383 -0.986 20.570 96.020 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 260.686 7.784 33.491 &lt;2e-16 *** ## genderM -116.195 11.008 -10.556 &lt;2e-16 *** ## attitudepol -27.400 11.008 -2.489 0.0149 * ## genderM:attitudepol 15.890 15.664 1.014 0.3135 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 35.67 on 79 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.7147, Adjusted R-squared: 0.7038 ## F-statistic: 65.95 on 3 and 79 DF, p-value: &lt; 2.2e-16 library(effects) allEffects(m) ## model: frequency ~ gender * attitude ## ## gender*attitude effect ## attitude ## gender inf pol ## F 260.6857 233.2857 ## M 144.4905 132.9800 plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE) plot of chunk unnamed-chunk-1 # Save plot of the effects to disk # 1. Open jpeg file jpeg(&quot;pictures/politeness_effects.jpg&quot;, width = 840, height = 535) # 2. Create the plot plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE) # 3. Close the file dev.off() ## svg ## 2 # Open a pdf file pdf(&quot;pictures/politeness_effects.pdf&quot;) # 2. Create a plot plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE) # Close the pdf file dev.off() ## svg ## 2 # plot diagnostic diagrams par(mfrow = c(3,2)) plot(m, which = 1) # variance of residuals vs. fitted values? plot(m, which = 2) # normal distributed residuals? plot(m, which = 3) # variance of residuals standardized plot(m, which = 4) # Cook&#39;s distance (outliers / influencing data points?) plot(m, which = 5) # Leverage vs. standardized variance of residuals plot(m, which = 6) # Cook&#39;s distance vs. Leverage par(mfrow = c(1,1)) plot of chunk unnamed-chunk-1 # Change of estimates if one datapoint is removed from the model d &lt;- dfbetas(m) head(d) %&gt;% as.data.frame %&gt;% rmarkdown::paged_table() # plot the dfbetas (are there any outliers or data points with high influence?) par(mfrow = c(1,3)) plot(d[,1], col = &quot;orange&quot;) plot(d[,2], col = &quot;blue&quot;) plot(d[,3], col = &quot;purple&quot;) par(mfrow = c(1,1)) plot of chunk unnamed-chunk-1 5.2.2.8 Regression mit gemischten Effekten (Mixed effects Regression) # The variables &#39;subject&#39; and &#39;scenario&#39; have been chosen as random effects library(afex) # random intercepts model m &lt;- lmer(frequency ~ gender + (1|subject) + (1|scenario), REML=F, data=polite) m0 &lt;- m summary(m) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: frequency ~ gender + (1 | subject) + (1 | scenario) ## Data: polite ## ## AIC BIC logLik deviance df.resid ## 816.7 828.8 -403.4 806.7 78 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.49969 -0.57100 -0.06373 0.60229 2.86559 ## ## Random effects: ## Groups Name Variance Std.Dev. ## scenario (Intercept) 191.2 13.83 ## subject (Intercept) 409.6 20.24 ## Residual 751.9 27.42 ## Number of obs: 83, groups: scenario, 7; subject, 6 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 246.986 13.481 7.676 18.321 1.3e-07 *** ## genderM -108.236 17.588 5.939 -6.154 0.000877 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## genderM -0.651 m &lt;- lmer(frequency ~ gender + attitude + (1|subject) + (1|scenario), REML=F, data=polite) m1 &lt;- m summary(m) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: frequency ~ gender + attitude + (1 | subject) + (1 | scenario) ## Data: polite ## ## AIC BIC logLik deviance df.resid ## 807.1 821.6 -397.6 795.1 77 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.2958 -0.6456 -0.0776 0.5448 3.5121 ## ## Random effects: ## Groups Name Variance Std.Dev. ## scenario (Intercept) 205.2 14.33 ## subject (Intercept) 417.0 20.42 ## Residual 637.4 25.25 ## Number of obs: 83, groups: scenario, 7; subject, 6 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 256.847 13.827 8.500 18.576 3.53e-08 *** ## genderM -108.517 17.571 5.929 -6.176 0.000866 *** ## attitudepol -19.722 5.547 70.920 -3.555 0.000677 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) gendrM ## genderM -0.635 ## attitudepol -0.201 0.004 m &lt;- lmer(frequency ~ gender*attitude + (1|subject) + (1|scenario), REML=F, data=polite) m2 &lt;- m summary(m) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: frequency ~ gender * attitude + (1 | subject) + (1 | scenario) ## Data: polite ## ## AIC BIC logLik deviance df.resid ## 807.1 824.0 -396.6 793.1 76 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.1678 -0.5559 -0.0628 0.5103 3.3903 ## ## Random effects: ## Groups Name Variance Std.Dev. ## scenario (Intercept) 205.0 14.32 ## subject (Intercept) 418.8 20.47 ## Residual 620.0 24.90 ## Number of obs: 83, groups: scenario, 7; subject, 6 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 260.686 14.086 9.140 18.506 1.48e-08 *** ## genderM -116.195 18.392 7.094 -6.318 0.000376 *** ## attitudepol -27.400 7.684 70.881 -3.566 0.000655 *** ## genderM:attitudepol 15.568 10.943 70.925 1.423 0.159229 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) gendrM atttdp ## genderM -0.653 ## attitudepol -0.273 0.209 ## gndrM:tttdp 0.192 -0.293 -0.702 Vergleich der Modelle: anova(m0,m1,m2) ## Data: polite ## Models: ## m0: frequency ~ gender + (1 | subject) + (1 | scenario) ## m1: frequency ~ gender + attitude + (1 | subject) + (1 | scenario) ## m2: frequency ~ gender * attitude + (1 | subject) + (1 | scenario) ## npar AIC BIC logLik deviance Chisq Df Pr(&gt;Chisq) ## m0 5 816.72 828.81 -403.36 806.72 ## m1 6 807.10 821.61 -397.55 795.10 11.6178 1 0.0006532 *** ## m2 7 807.11 824.04 -396.55 793.11 1.9963 1 0.1576796 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # politeness affected pitch (2(1)=11.62, p=0.00065), # lowering it by about 19.7 Hz ± 5.6 (standard errors) # random slopes model m &lt;- lmer(frequency ~ gender + (attitude + 1|subject) + (attitude + 1|scenario), REML=F, data=polite) m00 &lt;- m summary(m) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: frequency ~ gender + (attitude + 1 | subject) + (attitude + 1 | ## scenario) ## Data: polite ## ## AIC BIC logLik deviance df.resid ## 819.6 841.4 -400.8 801.6 74 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.09487 -0.64641 -0.08678 0.60655 3.00531 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## scenario (Intercept) 231.844 15.226 ## attitudepol 410.086 20.251 -0.40 ## subject (Intercept) 378.484 19.455 ## attitudepol 5.443 2.333 1.00 ## Residual 628.656 25.073 ## Number of obs: 83, groups: scenario, 7; subject, 6 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 253.370 13.437 7.714 18.856 9.9e-08 *** ## genderM -112.488 17.470 5.932 -6.439 0.000694 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## genderM -0.650 ## optimizer (nloptwrap) convergence code: 0 (OK) ## boundary (singular) fit: see ?isSingular m &lt;- lmer(frequency ~ gender + attitude + (attitude + 1|subject) + (attitude + 1|scenario), REML=F, data=polite) m01 &lt;- m summary(m) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: ## frequency ~ gender + attitude + (attitude + 1 | subject) + (attitude + ## 1 | scenario) ## Data: polite ## ## AIC BIC logLik deviance df.resid ## 814.9 839.1 -397.4 794.9 73 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.1946 -0.6690 -0.0789 0.5256 3.4251 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## scenario (Intercept) 182.083 13.494 ## attitudepol 31.244 5.590 0.22 ## subject (Intercept) 392.344 19.808 ## attitudepol 1.714 1.309 1.00 ## Residual 627.890 25.058 ## Number of obs: 83, groups: scenario, 7; subject, 6 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 257.991 13.528 7.600 19.071 1.08e-07 *** ## genderM -110.806 17.510 5.936 -6.328 0.000759 *** ## attitudepol -19.747 5.922 7.062 -3.335 0.012354 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) gendrM ## genderM -0.647 ## attitudepol -0.105 0.003 ## optimizer (nloptwrap) convergence code: 0 (OK) ## boundary (singular) fit: see ?isSingular m &lt;- lmer(frequency ~ gender + attitude + (attitude + 1|subject), REML=F, data=polite) library(effects) allEffects(m) ## model: frequency ~ gender + attitude ## ## gender effect ## gender ## F M ## 247.9156 138.0861 ## ## attitude effect ## attitude ## inf pol ## 203.2497 183.8414 plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE) plot of chunk unnamed-chunk-1 m &lt;- lmer(frequency ~ gender + attitude + (attitude + 1|scenario), REML=F, data=polite) library(effects) allEffects(m) ## model: frequency ~ gender + attitude ## ## gender effect ## gender ## F M ## 247.1051 138.4961 ## ## attitude effect ## attitude ## inf pol ## 203.2424 183.4286 plot(allEffects(m), multiline=TRUE, grid=TRUE, rug=FALSE, as.table=TRUE) plot of chunk unnamed-chunk-1 m &lt;- lmer(frequency ~ gender*attitude + (attitude + 1|subject) + (attitude + 1|scenario), REML=F, data=polite) m02 &lt;- m summary(m) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: ## frequency ~ gender * attitude + (attitude + 1 | subject) + (attitude + ## 1 | scenario) ## Data: polite ## ## AIC BIC logLik deviance df.resid ## 814.9 841.5 -396.4 792.9 72 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.0680 -0.5620 -0.0360 0.4953 3.3021 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## scenario (Intercept) 185.5388 13.6213 ## attitudepol 36.4691 6.0390 0.14 ## subject (Intercept) 400.9123 20.0228 ## attitudepol 0.8331 0.9127 1.00 ## Residual 609.1686 24.6813 ## Number of obs: 83, groups: scenario, 7; subject, 6 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 260.686 13.753 7.594 18.955 1.14e-07 *** ## genderM -116.195 18.036 6.060 -6.442 0.000636 *** ## attitudepol -27.400 7.969 21.583 -3.438 0.002394 ** ## genderM:attitudepol 15.516 10.874 58.553 1.427 0.158919 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) gendrM atttdp ## genderM -0.656 ## attitudepol -0.194 0.159 ## gndrM:tttdp 0.153 -0.234 -0.673 ## optimizer (nloptwrap) convergence code: 0 (OK) ## boundary (singular) fit: see ?isSingular Vergleich der Modelle: anova(m00,m01,m02) ## Data: polite ## Models: ## m00: frequency ~ gender + (attitude + 1 | subject) + (attitude + 1 | scenario) ## m01: frequency ~ gender + attitude + (attitude + 1 | subject) + (attitude + 1 | scenario) ## m02: frequency ~ gender * attitude + (attitude + 1 | subject) + (attitude + 1 | scenario) ## npar AIC BIC logLik deviance Chisq Df Pr(&gt;Chisq) ## m00 9 819.61 841.37 -400.80 801.61 ## m01 10 814.90 839.09 -397.45 794.90 6.7082 1 0.009597 ** ## m02 11 814.89 841.50 -396.45 792.89 2.0023 1 0.157060 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 library(lmerTest) s &lt;- step(m) s ## Backward reduced random-effect table: ## ## Eliminated npar logLik AIC LRT Df ## &lt;none&gt; 11 -396.45 814.89 ## attitude in (attitude + 1 | subject) 1 9 -396.46 810.92 0.0279 2 ## attitude in (attitude + 1 | scenario) 2 7 -396.55 807.11 0.1827 2 ## (1 | subject) 0 6 -410.45 832.90 27.7921 1 ## (1 | scenario) 0 6 -402.35 816.71 11.6007 1 ## Pr(&gt;Chisq) ## &lt;none&gt; ## attitude in (attitude + 1 | subject) 0.9861435 ## attitude in (attitude + 1 | scenario) 0.9126813 ## (1 | subject) 1.351e-07 *** ## (1 | scenario) 0.0006593 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Backward reduced fixed-effect table: ## Degrees of freedom method: Satterthwaite ## ## Eliminated Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) ## gender:attitude 1 1254.8 1254.8 1 70.925 2.0239 0.1592288 ## gender 0 24310.7 24310.7 1 5.929 38.1404 0.0008664 *** ## attitude 0 8057.2 8057.2 1 70.920 12.6408 0.0006768 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Model found: ## frequency ~ gender + attitude + (1 | subject) + (1 | scenario) library(LMERConvenienceFunctions) m &lt;- lmer(frequency ~ gender + attitude + (attitude + 1|subject) + (attitude + 1|scenario), REML=F, data=polite) m01 &lt;- m summary(m) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: ## frequency ~ gender + attitude + (attitude + 1 | subject) + (attitude + ## 1 | scenario) ## Data: polite ## ## AIC BIC logLik deviance df.resid ## 814.9 839.1 -397.4 794.9 73 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.1946 -0.6690 -0.0789 0.5256 3.4251 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## scenario (Intercept) 182.083 13.494 ## attitudepol 31.244 5.590 0.22 ## subject (Intercept) 392.344 19.808 ## attitudepol 1.714 1.309 1.00 ## Residual 627.890 25.058 ## Number of obs: 83, groups: scenario, 7; subject, 6 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 257.991 13.528 7.600 19.071 1.08e-07 *** ## genderM -110.806 17.510 5.936 -6.328 0.000759 *** ## attitudepol -19.747 5.922 7.062 -3.335 0.012354 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) gendrM ## genderM -0.647 ## attitudepol -0.105 0.003 ## optimizer (nloptwrap) convergence code: 0 (OK) ## boundary (singular) fit: see ?isSingular # Check model asumptions mcp.fnc(m) plot of chunk unnamed-chunk-1 fligner.test(frequency ~ attitude, polite) ## ## Fligner-Killeen test of homogeneity of variances ## ## data: frequency by attitude ## Fligner-Killeen:med chi-squared = 0.21737, df = 1, p-value = 0.6411 fligner.test(frequency ~ gender, polite) ## ## Fligner-Killeen test of homogeneity of variances ## ## data: frequency by gender ## Fligner-Killeen:med chi-squared = 0.7388, df = 1, p-value = 0.39 shapiro.test(polite$frequency) ## ## Shapiro-Wilk normality test ## ## data: polite$frequency ## W = 0.94456, p-value = 0.001347 which(is.na(polite$frequency)) ## [1] 39 # delete NA from data frame in row 39 polite1 &lt;- polite[-39,] # Remove outliers freqout &lt;- romr.fnc(m, polite1, trim=2.5) ## n.removed = 1 ## percent.removed = 1.204819 freqout$n.removed ## [1] 1 freqout$percent.removed ## [1] 1.204819 freqout &lt;- freqout$data attach(freqout) # update model m &lt;- lmer(frequency ~ gender + attitude + (attitude + 1|subject) + (attitude + 1|scenario), REML=F, data=freqout) m01 &lt;- m summary(m) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: ## frequency ~ gender + attitude + (attitude + 1 | subject) + (attitude + ## 1 | scenario) ## Data: freqout ## ## AIC BIC logLik deviance df.resid ## 790.9 815.0 -385.5 770.9 72 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.49611 -0.56183 -0.04681 0.55860 2.73929 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## scenario (Intercept) 205.28012 14.3276 ## attitudepol 0.01369 0.1170 1.00 ## subject (Intercept) 410.89205 20.2705 ## attitudepol 0.11135 0.3337 1.00 ## Residual 518.42987 22.7691 ## Number of obs: 82, groups: scenario, 7; subject, 6 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 258.411 13.640 7.931 18.946 6.91e-08 *** ## genderM -111.647 17.423 5.936 -6.408 0.000711 *** ## attitudepol -22.391 5.045 68.398 -4.438 3.39e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) gendrM ## genderM -0.639 ## attitudepol -0.164 0.008 ## optimizer (nloptwrap) convergence code: 0 (OK) ## boundary (singular) fit: see ?isSingular # Re-Check model asumptions mcp.fnc(m) plot of chunk unnamed-chunk-1 fligner.test(frequency ~ attitude, freqout) ## ## Fligner-Killeen test of homogeneity of variances ## ## data: frequency by attitude ## Fligner-Killeen:med chi-squared = 0.34994, df = 1, p-value = 0.5541 fligner.test(frequency ~ gender, freqout) ## ## Fligner-Killeen test of homogeneity of variances ## ## data: frequency by gender ## Fligner-Killeen:med chi-squared = 0.25815, df = 1, p-value = 0.6114 shapiro.test(freqout$frequency) ## ## Shapiro-Wilk normality test ## ## data: freqout$frequency ## W = 0.9441, p-value = 0.001373 References "],["excel-vs.-r.html", "Kapitel 6 Excel vs. R 6.1 Programi 6.2 Podatki 6.3 tevilo podatkov v nizu 6.4 Lookup (Excel) 6.5 Vlookup, &amp;, Concat 6.6 Transpose 6.7 Dvojniki, razdruitev 6.8 Xlookup 6.9 Index, Match 6.10 Filtriranje", " Kapitel 6 Excel vs. R 6.1 Programi library(tidyverse) library(scales) library(tidytext) library(readxl) library(rmarkdown) 6.2 Podatki Podatki in posamezne naloge za delo z Excelom so iz seminarja dr. Simone Sternad Zabukovek in mag. Zdenka Deelaka (Univerza v Mariboru, 21.5.2021). Primerjamo z Excelom. R: Oba delovna lista iz datoteke Narocila.xlsx) shranjujemo kot samostojni tabeli z imenoma orders in zaposleni. orders = read_xlsx(&quot;data/Narocilo.xlsx&quot;, sheet = &quot;Orders&quot;) zaposleni = read_xlsx(&quot;data/Narocilo.xlsx&quot;, sheet = &quot;Zaposleni&quot;) Poglejmo prve podatke: head(orders) %&gt;% paged_table() head(zaposleni) %&gt;% paged_table() 6.3 tevilo podatkov v nizu R: Nainov je ve. nrow(orders) # vrstice ## [1] 830 ncol(orders) # stolpci ## [1] 4 dim(orders) # vrstice x stolpci (dimenzije) ## [1] 830 4 6.4 Lookup (Excel) Excel (lookup): Na delovnem listu Zaposleni dodajte: V celico P1 napiite besedilo »Vpiite tevilko ID«, v celici P2 vpiite besedilo »Telefonska tevilka«, v celico P3 pa »Datum zaposlitve«. Nastavite, da se bo na podlagi vpisane ID tevilke v celici Q1, v celico Q2 izpisala telefonska tevilka (namig: Lookup). Nastavite, da se bo na podlagi vpisane ID tevilke v celici Q1, v celico Q3 izpisal datum zaposlitve (namig: Lookup). R: zaposleni %&gt;% dplyr::select(EmployeeID, HomePhone, HireDate) %&gt;% filter(EmployeeID == 1) ## # A tibble: 1 x 3 ## EmployeeID HomePhone HireDate ## &lt;dbl&gt; &lt;chr&gt; &lt;dttm&gt; ## 1 1 (206) 555-9857 1992-05-01 00:00:00 6.5 Vlookup, &amp;, Concat Excel: Na delovnem listu Orders dodajte: Stolpec Priimek, v katerem naj bo izpisan Priimek zaposlenega glede na ID zaposlenega (namig: Vlookup). Stolpec Ime, katerem naj bo izpisan Ime zaposlenega glede na ID zaposlenega o Stolpec Ime in priimek (zdruite predhodna dva). Preverite razline monosti: Bliskovita zapolnitev. Formula (=Stolpec1&amp; &amp;Stolpec2).  Funkcija (CONCAT). R: Podatkovna niza orders in zaposleni imata skupen stolpec EmployeeID. Ta bo osnova za zdruevanje obeh podatkovnih nizov. Nadaljnje iskanje ali filtriranje bo tako enostavno. zdruzena = orders %&gt;% left_join(zaposleni, by = &quot;EmployeeID&quot;, keep = FALSE) zdruzena %&gt;% paged_table() Novo obliko tabele (gl. spodaj) bi lahko shranil pod novim imenom (npr. zdruzena_nova). Prvotna tabela zdruzena ostane, kot jo vidite zgoraj. zdruzena %&gt;% unite(EmployeeName, LastName:FirstName, sep = &quot; &quot;) ## # A tibble: 830 x 15 ## OrderID CustomerID EmployeeID OrderDate EmployeeName Title ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dttm&gt; &lt;chr&gt; &lt;chr&gt; ## 1 10248 VINET 5 1994-08-04 00:00:00 Buchanan Steven Sales Man~ ## 2 10249 TOMSP 6 1994-08-05 00:00:00 Suyama Michael Sales Rep~ ## 3 10250 HANAR 4 1994-08-08 00:00:00 Peacock Margaret Sales Rep~ ## 4 10251 VICTE 3 1994-08-08 00:00:00 Leverling Janet Sales Rep~ ## 5 10252 SUPRD 4 1994-08-09 00:00:00 Peacock Margaret Sales Rep~ ## 6 10253 HANAR 3 1994-08-10 00:00:00 Leverling Janet Sales Rep~ ## 7 10254 CHOPS 5 1994-08-11 00:00:00 Buchanan Steven Sales Man~ ## 8 10255 RICSU 9 1994-08-12 00:00:00 Dodsworth Anne Sales Rep~ ## 9 10256 WELLI 3 1994-08-15 00:00:00 Leverling Janet Sales Rep~ ## 10 10257 HILAA 4 1994-08-16 00:00:00 Peacock Margaret Sales Rep~ ## # ... with 820 more rows, and 9 more variables: TitleOfCourtesy &lt;chr&gt;, ## # BirthDate &lt;dttm&gt;, HireDate &lt;dttm&gt;, Address &lt;chr&gt;, City &lt;chr&gt;, Region &lt;chr&gt;, ## # PostalCode &lt;chr&gt;, Country &lt;chr&gt;, HomePhone &lt;chr&gt; zdruzena_nova = zdruzena %&gt;% unite(EmployeeName, c(FirstName, LastName), sep = &quot; &quot;) zdruzena_nova %&gt;% paged_table() 6.6 Transpose Excel: Na nov delovni list kopirajte obmoje A1:M10 iz delovnega lista Zaposleni tako, da zamenjate vrstice s stolpci. Izbriite prvo vrstico. Preimenujte delovni list v Vir. R: Transponiranje tabele ni potrebno, ker smo prej e ustvarili zdruen podatkovni niz. Funkcija t() (tj. transpose) sicer deluje podobno kot v Excelu. vir = as.data.frame(t(zaposleni)) vir = vir[-1,] %&gt;% # izbriemo prvo vrstico rownames_to_column(var = &quot;Lastnosti&quot;) # nov stolpec vir %&gt;% paged_table() 6.7 Dvojniki, razdruitev Excel: Z delovnega lista Orders kopirajte na nov delovni list stolpec Ime in Priimek (kot vrednosti). Preimenujte delovni list v Kontakt. Odstranite dvojnike iz celotnega stolpca. Razdruite ime in priimek v loena stolpca. V naslednji stolpec v prvo celico napiite Rojstni datum in v stolpcu s pomojo funkcije vstavite rojstne datume zaposlenih s tabele delovnega lista Vir (namig: Hlookup). Nastavite kratko obliko datuma. V naslednji stolpec v prvo celico napiite Telefon in v stolpcu s pomojo funkcije vstavite e telefonske tevilke zaposlenih. R: kontakt = zdruzena_nova %&gt;% distinct(EmployeeName, .keep_all = T) %&gt;% separate(EmployeeName, into = c(&quot;Ime&quot;, &quot;Priimek&quot;)) %&gt;% dplyr::select(Ime, Priimek, Title, BirthDate, HomePhone) kontakt %&gt;% paged_table() 6.8 Xlookup Excel: Postavite se na delovni list Zaposleni. V celico S1 napiite besedilo »Vpiite ime«, v celici S2 vpiite besedilo »Telefonska tevilka«, v celico S3 pa »Naslov«. Nastavite, da se bo na podlagi vpisanega imena v celici T1, v celico T2 izpisala telefonska tevilka (namig: Xlookup). Nastavite, da se bo na podlagi vpisanega imena v celici T1, v celico T3 izpisal celotni naslov  Adress, City, Region, PostalCode, Country) (namig: Xlookup). R: zdruzena_nova %&gt;% filter(EmployeeName == &quot;Steven Buchanan&quot;) %&gt;% dplyr::select(EmployeeName, HomePhone, Address:Country) %&gt;% distinct() %&gt;% unite(Naslov, Address:Country, sep = &quot;, &quot;) %&gt;% rename(Telefon = HomePhone, Zaposleni = EmployeeName) %&gt;% paged_table() 6.9 Index, Match Excel: Postavite se na delovni list Zaposleni v celico P6 in izpiite, kaj se vam nahaja v vrstici 5 in stolpcu 8 (namig: index). V celico P7 izpiite tevilko vrstice, v kateri se nahaja priimek Fuller (namig: match). Postavite se na delovni list Orders, v naslednji stolpec v prvo celico napiite t. vrstice, ter na podlagi priimka poiite v kateri vrstici se priimek nahaja v stolpcu Priimek v tabeli Zaposleni (namig: match). Postavite se na delovni list Orders, v naslednji stolpec v prvo celico napiite Title, ter na podlagi stolpca t. vrstice poiite naziv zaposlenega iz tabele Zaposleni (stolpec Title; namig: index). Postavite se na delovni list Orders, v naslednji stolpec v prvo celico napiite Title, ter na podlagi priimka s pomojo funkcij Index in Match vstavite naziv zaposlenega s tabele delovnega lista Zaposleni. V naslednji stolpec v prvo celico napiite Naslavljanje, ter na podlagi priimka s pomojo funkcij Index in Match vstavite obliko naslavljanja zaposlenega s tabele delovnega lista Zaposleni. R: zaposleni[5,8] # vrstica 5, stolpec 8 ## # A tibble: 1 x 1 ## Address ## &lt;chr&gt; ## 1 14 Garrett Hill zaposleni %&gt;% # add_rownames() %&gt;% # opcionalen korak filter(str_detect(LastName, &quot;Fuller&quot;)) %&gt;% dplyr::select(EmployeeID) ## # A tibble: 1 x 1 ## EmployeeID ## &lt;dbl&gt; ## 1 2 zdruzena_nova %&gt;% filter(str_detect(EmployeeName, &quot;Fuller&quot;)) %&gt;% paged_table() kontakt %&gt;% filter(str_detect(Priimek, &quot;Fuller&quot;)) %&gt;% paged_table() 6.10 Filtriranje Excel: Funkcionalnost Napredno filtriranje. Dodajte nov list z imenom Napredno filtriranje. V celico A1 napiite besedilo ID zaposlenega in v celico B1 zapii tevilko ID zaposlenega (poljubna tevilka od 1 - 9). V celico A2 napiite besedilo tevilo naroil in v celico B2 izpiite tevilo naroil za ID zaposlenega iz celice B1 (namig: Countif). Na delovnem listu Orders s filtriranjem preverite naroila zaposlenega, ki ste jih preteli (osnovno filtriranje). Izpisati elimo seznam naroil na podlagi ID zaposlenega (namig: napredno filtriranje). Seznam naj se izpie v celico A10 na delovnem listu Napredno filtriranje. Namesto naprednega filtriranja uporabite funkcionalnost tabele in razlenjevalnike. R: seznam = zdruzena_nova %&gt;% count(EmployeeID, OrderID) %&gt;% filter(EmployeeID == 9) seznam %&gt;% paged_table() (napredno_filtriranje = seznam %&gt;% summarise(Narocila = sum(n)) ) ## # A tibble: 1 x 1 ## Narocila ## &lt;int&gt; ## 1 43 zdruzena_nova %&gt;% count(EmployeeName) %&gt;% mutate(Procent = n / sum(n)) %&gt;% ungroup() %&gt;% mutate(EmployeeName = fct_reorder(EmployeeName, Procent)) %&gt;% ggplot(aes(Procent, EmployeeName, fill = EmployeeName)) + geom_col(color = &quot;black&quot;) + scale_x_continuous(labels = percent_format()) + theme(legend.position = &quot;none&quot;) + labs(x=&quot;&quot;, y=&quot;&quot;, title = &quot;Percentage of orders by employee&quot;) "],["vokalformanten-im-deutschen-als-fremdsprache.html", "Kapitel 7 Vokalformanten im Deutschen als Fremdsprache 7.1 Programme starten 7.2 Daten laden &amp; anpassen 7.3 IPA syms 7.4 Vergleich der Vokalformanten 7.5 Aggregierter Datensatz 7.6 Abbildungen mit phonR", " Kapitel 7 Vokalformanten im Deutschen als Fremdsprache Vowel formants in German as a foreign language Akustische Messungen der ersten beiden Vokalformanten und Vokaldauer mit Praat, durchgeführt von Studierenden während einer Unterrichtsstunde in einem Einführungsseminar zur computerunterstützten Auswertung von deutschen Sprachkorpora und -datensätzen. 7.1 Programme starten library(tidyverse) library(scales) library(readxl) library(writexl) library(phonR) library(extrafont) 7.2 Daten laden &amp; anpassen 7.2.1 Datensatz 1 vokale &lt;- read_xlsx(&quot;data/S03_Vokalformanten_Diagramme.xlsx&quot;, sheet =&quot;A1-4_alle&quot;) %&gt;% janitor::clean_names() %&gt;% dplyr::select(-studierende) %&gt;% mutate(geschlecht = &quot;f&quot;) %&gt;% dplyr::select(sprecherin, geschlecht, vokal, vowel, f1, f2, dauer, lange, wort, phrase) %&gt;% mutate(l1_l2 = ifelse(sprecherin == &quot;Deutsche&quot;, &quot;L1&quot;, &quot;L2&quot;)) %&gt;% mutate(vokal = str_replace(vokal, &quot;F:&quot;, &quot;E:&quot;)) # %&gt;% # mutate(vowel = vokal) vokale %&gt;% rmarkdown::paged_table() 7.2.2 Datensatz 2 vergleich &lt;- read_xlsx(&quot;data/S03_Vokalformanten_Diagramme.xlsx&quot;, sheet =&quot;A10_Vgl_L1_L2_tab&quot;) %&gt;% janitor::clean_names() %&gt;% mutate(phonem = str_replace(phonem, &quot;EE&quot;, &quot;E:&quot;)) %&gt;% rename(f1_l1 = f1_in_hz, f2_l1 = f2_in_hz, dauer_l1 = dauer_in_ms, vokal = phonem) %&gt;% dplyr::select(-phonem_ipa_1, -phonem_ipa_2) vergleich %&gt;% rmarkdown::paged_table() 7.2.3 Datensatz 3 Dieser Datensatz wird aus einzelnen Datensätzen, die Messungen von Studierenden enthalten, zusammengesetzt. df0 &lt;- read.csv(&quot;data/Deutsche_formants.Table.csv&quot;, stringsAsFactors = FALSE, fileEncoding = &quot;UTF-8&quot;) df1a &lt;- read.csv(&quot;data/Monika_I_formants.Table.csv&quot;, stringsAsFactors = FALSE, fileEncoding = &quot;UTF-8&quot;) df1b &lt;- read.csv(&quot;data/Monika_II_formants.Table.csv&quot;, stringsAsFactors = FALSE, fileEncoding = &quot;UTF-8&quot;) df2 &lt;- read.csv(&quot;data/Donna_formants.Table.csv&quot;, stringsAsFactors = FALSE, fileEncoding = &quot;UTF-8&quot;) df3 &lt;- read.csv(&quot;data/Metka_formants.Table.csv&quot;, stringsAsFactors = FALSE, fileEncoding = &quot;UTF-8&quot;) df4 &lt;- read.csv(&quot;data/Jasmina_formants.Table.csv&quot;, stringsAsFactors = FALSE, fileEncoding = &quot;UTF-8&quot;) df5 &lt;- read.csv(&quot;data/Teodor_II_formants.Table.csv&quot;, stringsAsFactors = FALSE, fileEncoding = &quot;UTF-8&quot;) df0 &lt;- df0 %&gt;% mutate(speaker = &quot;Deutsche&quot;) df1a &lt;- df1a %&gt;% mutate(speaker = &quot;Monika1&quot;) df1b &lt;- df1b %&gt;% mutate(speaker = &quot;Monika2&quot;) df2 &lt;- df2 %&gt;% mutate(speaker = &quot;Donna&quot;) df3 &lt;- df3 %&gt;% mutate(speaker = &quot;Metka&quot;) df4 &lt;- df4 %&gt;% mutate(speaker = &quot;Jasmina&quot;) df5 &lt;- df5 %&gt;% mutate(speaker = &quot;Teodor&quot;) df &lt;- rbind(df0,df1a,df1b,df2,df3,df4,df5) df %&gt;% rmarkdown::paged_table() 7.3 IPA syms Die Listen wurden mit Hilfe der Angaben im Wikipedia-Artikel Phonetic symbols in Unicode, Abschnitt 2.2 Vowels erstellt. list1 &lt;- levels(factor(vergleich$vowel)) %&gt;% paste(collapse = &quot;,&quot;) list2 &lt;- levels(factor(vokale$vowel)) %&gt;% paste(collapse = &quot;,&quot;) list3 &lt;- levels(factor(df$vowel)) %&gt;% paste(collapse = &quot;,&quot;) ipa_list1 &lt;- c( a = &quot;\\u0061&quot;, AA = &quot;\\u0251\\u02D0&quot;, E = &quot;\\u025B&quot;, ee = &quot;\\u0065\\u02D0&quot;, EE = &quot;\\u025B\\u02D0&quot;, I = &quot;\\u026A&quot;, ii = &quot;\\u0069\\u02D0&quot;, O = &quot;\\u0254&quot;, oe = &quot;\\u00F8\\u02D0&quot;, OE = &quot;\\u0153&quot;, oo = &quot;\\u006F\\u02D0&quot;, schwa = &quot;\\u0259&quot;, U = &quot;\\u028A&quot;, uu = &quot;\\u0075\\u02D0&quot;, Y = &quot;\\u028F&quot;, yy = &quot;\\u0079\\u02D0&quot; ) # %&gt;% paste(collapse = &quot;,&quot;) ipa_list2 &lt;- c( a = &quot;\\u0061&quot;, AA = &quot;\\u0251\\u02D0&quot;, E = &quot;\\u025B&quot;, ee = &quot;\\u0065\\u02D0&quot;, EE = &quot;\\u025B\\u02D0&quot;, I = &quot;\\u026A&quot;, ii = &quot;\\u0069\\u02D0&quot;, O = &quot;\\u0254&quot;, oe = &quot;\\u00F8\\u02D0&quot;, OE = &quot;\\u0153&quot;, oo = &quot;\\u006F\\u02D0&quot;, U = &quot;\\u028A&quot;, uu = &quot;\\u0075\\u02D0&quot;, Y = &quot;\\u028F&quot;, yy = &quot;\\u0079\\u02D0&quot; ) # %&gt;% paste(collapse = &quot;,&quot;) ipa_list3 &lt;- c( a = &quot;\\u0061&quot;, AA = &quot;\\u0251\\u02D0&quot;, E = &quot;\\u025B&quot;, Ea = &quot;\\u025B\\u0061&quot;, ee = &quot;\\u0065\\u02D0&quot;, EE = &quot;\\u025B\\u02D0&quot;, I = &quot;\\u026A&quot;, ii = &quot;\\u0069\\u02D0&quot;, O = &quot;\\u0254&quot;, oe = &quot;\\u00F8\\u02D0&quot;, OE = &quot;\\u0153&quot;, oo = &quot;\\u006F\\u02D0&quot;, OO = &quot;\\u0254\\u02D0&quot;, OOE = &quot;\\u0153\\u02D0&quot;, schwa = &quot;\\u0259&quot;, U = &quot;\\u028A&quot;, uu = &quot;\\u0075\\u02D0&quot;, UU = &quot;\\u028A\\u02D0&quot;, Y = &quot;\\u028F&quot;, yy = &quot;\\u0079\\u02D0&quot;, YY = &quot;\\u028F\\u02D0&quot; ) # %&gt;% paste(collapse = &quot;,&quot;) Umwandlung der IPA-Zeichen mit dem Ziel, die phonetischen Symbole auch im html- oder pdf-Format richtig anzuzeigen. vergleich$vowel_ipa &lt;- ipa_list1[as.numeric(factor(vergleich$vowel))] vokale$vowel_ipa &lt;- ipa_list2[as.numeric(factor(vokale$vowel))] df$vowel_ipa &lt;- ipa_list3[as.numeric(factor(df$vowel))] vergleich %&gt;% pull(as.numeric(factor(vowel_ipa))) ## [1] &quot;a&quot; &quot;a:&quot; &quot;e:&quot; &quot;E&quot; &quot;E:&quot; &quot;I&quot; &quot;i:&quot; &quot;O&quot; &quot;o:&quot; &quot;U&quot; &quot;u:&quot; &quot;Ü&quot; &quot;ü:&quot; &quot;Ö&quot; &quot;ö:&quot; ## [16] &quot;@&quot; vergleich %&gt;% pull(vowel_ipa) ## a AA ee E EE I ii O oo U uu Y yy ## &quot;a&quot; &quot;&lt;U+0251&gt;&lt;U+02D0&gt;&quot; &quot;e&lt;U+02D0&gt;&quot; &quot;&lt;U+025B&gt;&quot; &quot;&lt;U+025B&gt;&lt;U+02D0&gt;&quot; &quot;&lt;U+026A&gt;&quot; &quot;i&lt;U+02D0&gt;&quot; &quot;&lt;U+0254&gt;&quot; &quot;o&lt;U+02D0&gt;&quot; &quot;&lt;U+028A&gt;&quot; &quot;u&lt;U+02D0&gt;&quot; &quot;&lt;U+028F&gt;&quot; &quot;y&lt;U+02D0&gt;&quot; ## OE oe schwa ## &quot;&quot; &quot;ø&lt;U+02D0&gt;&quot; &quot;&lt;U+0259&gt;&quot; Ursprüngliche IPA-Symbolisierungen sind ausgeblendet. Matthew Winn, cf. Listen Lab oder Working with Vowels part 1 und Working with Vowels part 2, wandelt die IPA-Symbole für die graphische Darstellung um, und zwar mit as.numeric(vowel). Translation of code: - Index [] the list of vowel IPA symbols - using the vector of values in the Vowel column - as if the Vowels were treated as their corresponding numeric indices in the automatic ordering. data.melt$Vowel.IPA &lt;- IPA_vowels[as.numeric(data.melt$Vowel)] 7.4 Vergleich der Vokalformanten Verglichen werden Vokale deutscher Muttersprachler_innen mit Vokalen von Studierenden des Deutschen als Fremdsprache. Verglichen werden die ersten beiden Vokalformanten (F1 und F2). In den Diagrammen werden IPA-Symbole verwendet. 7.4.1 Datensatz 2 7.4.1.1 Diagramm 1 (statisch) vgl_pivot &lt;- vergleich %&gt;% group_by(vokal) %&gt;% pivot_longer(f1_l1:dauer_l2, names_to = &quot;category&quot;, values_to = &quot;value&quot;) %&gt;% separate(category, into = c(&quot;category&quot;, &quot;l1_l2&quot;)) %&gt;% drop_na() %&gt;% pivot_wider(names_from = category, values_from = value) vgl_pivot %&gt;% rmarkdown::paged_table() # par(family=&#39;Charis SIL&#39;) (graph1 &lt;- vgl_pivot %&gt;% drop_na() %&gt;% group_by(vowel_ipa, l1_l2, lange) %&gt;% ggplot(aes(f2,f1, label = vowel_ipa)) + geom_hex(alpha = 0.2, show.legend = F) + theme(text=element_text(size=16)) + # family = &quot;Charis SIL&quot; geom_text(aes(label = vowel_ipa, color = vowel_ipa), # family = &quot;Charis SIL&quot; vjust = 1, hjust = 1, check_overlap = T, show.legend = F, size = 6) + # geom_label(aes(x = mean(f2), y = mean(f1)), color = &quot;black&quot;) + # stat_ellipse() + scale_y_reverse() + scale_x_reverse(breaks = c(1000, 1250, 1500, 1750, 2000, 2250, 2500)) + facet_wrap(~ lange + l1_l2) + theme_light() + labs(y = &quot;Formant F1: tief &gt;&gt; hoch&quot;, x = &quot;Formant F2: &lt;&lt; vorne - hinten &gt;&gt;&quot;) + theme(#panel.grid.major=element_blank(), #panel.grid.minor=element_blank(), # text = element_text(family=&#39;Charis SIL&#39;), plot.title = element_text(hjust = 0.5), legend.position = &quot;none&quot;) ) ggsave(&quot;pictures/vergleich_vokalformanten_lang_kurz_ipa.jpg&quot;) 7.4.1.2 Diagramm 1 (interaktiv) Interaktives Diagramm mit dem plotly-Programm: library(plotly) ggplotly(graph1) %&gt;% layout(showlegend = FALSE) 7.4.1.3 Diagramm 1 (interaktiv2) Interaktives Diagramm mit zusätzlichen Einstellungen im plotly-Programm. font = list( # family = &#39;Charis SIL&#39;, family = &#39;Arial&#39;, size = 15, color = &quot;black&quot; ) label = list( bgcolor = &quot;white&quot;, bordercolor = &quot;transparent&quot;, font = font ) library(plotly) (graph1_interactive &lt;- ggplotly(graph1, tooltip=c(&quot;x&quot;, &quot;y&quot;, &quot;text&quot;)) %&gt;% style(hoverlabel = label) %&gt;% layout(showlegend = FALSE, font = font, yaxis = list(fixedrange = TRUE), xaxis = list(fixedrange = TRUE)) %&gt;% config(displayModeBar = FALSE, showTips = T) ) library(htmlwidgets) saveWidget(graph1_interactive, &quot;pictures/vokalformanten_interaktiv_l1_l2_lang_kurz.html&quot;, selfcontained = T) # Sys.setenv(&quot;plotly_username&quot;=&quot;dataslice&quot;) # Sys.setenv(&quot;plotly_api_key&quot;=&quot;x&quot;) # # api_create(space_times, &quot;Space Times&quot;) # save it in html library(&quot;htmlwidgets&quot;) saveWidget(graph1_interactive,&quot;tmp.html&quot;, selfcontained = F) # and in pdf library(webshot) webshot(&quot;tmp.html&quot;,&quot;pictures/vokalformanten_interaktiv_l1_l2_lang_kurz.png&quot;, delay =5, vwidth = 1000, vheight=800) webshot(&quot;tmp.html&quot;,&quot;pictures/vokalformanten_interaktiv_l1_l2_lang_kurz.pdf&quot;, delay =5, vwidth = 800, vheight=600) 7.4.1.4 Diagramm 2 (statisch) vgl_pivot &lt;- vergleich %&gt;% group_by(vokal) %&gt;% pivot_longer(f1_l1:dauer_l2, names_to = &quot;category&quot;, values_to = &quot;value&quot;) %&gt;% separate(category, into = c(&quot;category&quot;, &quot;l1_l2&quot;)) %&gt;% drop_na() %&gt;% pivot_wider(names_from = category, values_from = value) vgl_pivot %&gt;% rmarkdown::paged_table() (graph2 &lt;- vgl_pivot %&gt;% drop_na() %&gt;% group_by(vowel_ipa, l1_l2, lange) %&gt;% ggplot(aes(f2,f1)) + geom_hex(alpha = 0.2, show.legend = F) + geom_text(aes(label = vowel_ipa, color = vowel_ipa), vjust = 1, hjust = 1, check_overlap = T, show.legend = F, size = 6) + scale_y_reverse() + scale_x_reverse(breaks = c(1000, 1250, 1500, 1750, 2000, 2250, 2500)) + facet_wrap(~ l1_l2) + theme_light() + labs(y = &quot;Formant F1: tief &gt;&gt; hoch&quot;, x = &quot;Formant F2: &lt;&lt; vorne - hinten &gt;&gt;&quot;) ) ggsave(&quot;pictures/vergleich_vokalformanten_lang_kurz_ipa.jpg&quot;) 7.4.1.5 Diagramm 2 (interaktiv) library(plotly) ggplotly(graph2) %&gt;% layout(showlegend = FALSE) 7.4.1.6 Diagramm 5 (statisch) vgl_pivot &lt;- vergleich %&gt;% group_by(vowel_ipa) %&gt;% pivot_longer(f1_l1:dauer_l2, names_to = &quot;category&quot;, values_to = &quot;value&quot;) %&gt;% separate(category, into = c(&quot;category&quot;, &quot;l1_l2&quot;)) %&gt;% drop_na() %&gt;% pivot_wider(names_from = category, values_from = value) vgl_pivot %&gt;% rmarkdown::paged_table() (graph5 &lt;- vgl_pivot %&gt;% drop_na() %&gt;% group_by(vowel_ipa, l1_l2) %&gt;% ggplot(aes(f2,f1)) + geom_hex(alpha = 0.2, show.legend = F) + geom_text(aes(label = vowel_ipa, color = vowel_ipa), size = 6, vjust = 1, hjust = 1, check_overlap = T, show.legend = F) + scale_y_reverse() + scale_x_reverse(breaks = c(1000, 1250, 1500, 1750, 2000, 2250, 2500)) + facet_wrap(~ l1_l2) + theme_light() + labs(y = &quot;Formant F1: tief &gt;&gt; hoch&quot;, x = &quot;Formant F2: &lt;&lt; vorne - hinten &gt;&gt;&quot;) ) ggsave(&quot;pictures/vergleich_vokalformanten.jpg&quot;) 7.4.1.7 Diagramm 5 (interaktiv) library(plotly) ggplotly(graph5) %&gt;% layout(showlegend = FALSE) 7.4.1.8 Diagramm 6 (statisch) vgl_pivot &lt;- vergleich %&gt;% group_by(vowel_ipa) %&gt;% pivot_longer(f1_l1:dauer_l2, names_to = &quot;category&quot;, values_to = &quot;value&quot;) %&gt;% separate(category, into = c(&quot;category&quot;, &quot;l1_l2&quot;)) %&gt;% drop_na() %&gt;% pivot_wider(names_from = category, values_from = value) vgl_pivot %&gt;% rmarkdown::paged_table() (graph6 &lt;- vgl_pivot %&gt;% drop_na() %&gt;% group_by(vowel_ipa, l1_l2, lange) %&gt;% ggplot(aes(f2,f1)) + geom_hex(alpha = 0.2, show.legend = F) + geom_text(aes(label = vowel_ipa, color = vowel_ipa), size = 6, vjust = 1, hjust = 1, check_overlap = T, show.legend = F) + scale_y_reverse() + scale_x_reverse(breaks = c(1000, 1250, 1500, 1750, 2000, 2250, 2500)) + facet_wrap(~ lange + l1_l2) + theme_light() + labs(y = &quot;Formant F1: tief &gt;&gt; hoch&quot;, x = &quot;Formant F2: &lt;&lt; vorne - hinten &gt;&gt;&quot;) ) ggsave(&quot;pictures/vergleich_vokalformanten_lang_kurz.jpg&quot;) 7.4.1.9 Diagramm 6 (interaktiv) library(plotly) ggplotly(graph6) %&gt;% layout(showlegend = FALSE) 7.4.2 Datensatz 3 7.4.2.1 Diagramm 3a alle Vokale (statisch) Messungen von TP mit Praat-Script ( Matt Winn: https://github.com/mwinn83) library(ggrepel) (graph3a &lt;- df %&gt;% filter(speaker != &quot;Monika1&quot;) %&gt;% group_by(vowel, speaker, vowel_ipa) %&gt;% summarise(f1 = mean(F1), f2 = mean(F2)) %&gt;% ggplot(aes(f2,f1)) + geom_hex(alpha = 0.2, show.legend = F) + geom_text(aes(label = vowel_ipa, color = vowel_ipa), vjust = 1, hjust = 1, check_overlap = T, show.legend = F, size = 5) + # geom_label_repel(aes(label = IPA, color = IPA), # vjust = 1, hjust = 1, check_overlap = T, show.legend = F, size = 5) + scale_y_reverse() + scale_x_reverse(breaks = c(1000, 1250, 1500, 1750, 2000, 2250, 2500)) + facet_wrap(~ speaker) + # theme_light() + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(y = &quot;Formant F1: tief &gt;&gt; hoch&quot;, x = &quot;Formant F2: &lt;&lt; vorne - hinten &gt;&gt;&quot;) ) ggsave(&quot;pictures/messungen_tp_vokalformanten_ipa.jpg&quot;, dpi = 100, width = 10, height = 10) 7.4.2.2 Diagramm 3a alle Vokale (interaktiv) library(plotly) ggplotly(graph3a) %&gt;% layout(showlegend = FALSE) 7.4.2.3 Diagramm 3b kurze Vokale (statisch) library(ggrepel) (graph3b &lt;- df %&gt;% mutate(lange = ifelse( vowel %in% c(&quot;I&quot;,&quot;E&quot;,&quot;Y&quot;,&quot;OE&quot;,&quot;a&quot;,&quot;O&quot;,&quot;U&quot;), &quot;kurz&quot;,&quot;lang&quot;)) %&gt;% filter(speaker != &quot;Monika1&quot;) %&gt;% filter(lange == &quot;kurz&quot;) %&gt;% group_by(vowel, speaker, vowel_ipa) %&gt;% summarise(f1 = mean(F1), f2 = mean(F2)) %&gt;% ggplot(aes(f2,f1)) + geom_hex(alpha = 0.2, show.legend = F) + geom_text(aes(label = vowel_ipa, color = vowel_ipa), vjust = 1, hjust = 1, check_overlap = T, show.legend = F, size = 5) + # geom_label_repel(aes(label = IPA, color = IPA), # vjust = 1, hjust = 1, check_overlap = T, show.legend = F, size = 5) + scale_y_reverse() + scale_x_reverse(breaks = c(1000, 1250, 1500, 1750, 2000, 2250, 2500)) + facet_wrap(~ speaker) + # theme_light() + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(y = &quot;Formant F1: tief &gt;&gt; hoch&quot;, x = &quot;Formant F2: &lt;&lt; vorne - hinten &gt;&gt;&quot;) ) ggsave(&quot;pictures/messungen_tp_vokalformanten_ipa_kurz.jpg&quot;, dpi = 100, width = 10, height = 10) 7.4.2.4 Diagramm 3b kurze Vokale (interaktiv) library(plotly) ggplotly(graph3b) %&gt;% layout(showlegend = FALSE) 7.4.2.5 Diagramm 3c lange Vokale (statisch) library(ggrepel) (graph3c &lt;- df %&gt;% mutate(lange = ifelse( vowel %in% c(&quot;I&quot;,&quot;E&quot;,&quot;Y&quot;,&quot;OE&quot;,&quot;a&quot;,&quot;O&quot;,&quot;U&quot;), &quot;kurz&quot;,&quot;lang&quot;)) %&gt;% filter(speaker != &quot;Monika1&quot;) %&gt;% filter(lange == &quot;lang&quot;) %&gt;% group_by(vowel, speaker, vowel_ipa) %&gt;% summarise(f1 = mean(F1), f2 = mean(F2)) %&gt;% ggplot(aes(f2,f1)) + geom_hex(alpha = 0.2, show.legend = F) + geom_text(aes(label = vowel_ipa, color = vowel_ipa), vjust = 1, hjust = 1, check_overlap = T, show.legend = F, size = 5) + # geom_label_repel(aes(label = IPA, color = IPA), # vjust = 1, hjust = 1, check_overlap = T, show.legend = F, size = 5) + scale_y_reverse() + scale_x_reverse(breaks = c(1000, 1250, 1500, 1750, 2000, 2250, 2500)) + facet_wrap(~ speaker) + # theme_light() + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(y = &quot;Formant F1: tief &gt;&gt; hoch&quot;, x = &quot;Formant F2: &lt;&lt; vorne - hinten &gt;&gt;&quot;) ) ggsave(&quot;pictures/messungen_tp_vokalformanten_ipa_lang.jpg&quot;, dpi = 100, width = 10, height = 10) 7.4.2.6 Diagramm 3c lange Vokale (interaktiv) library(plotly) ggplotly(graph3c) %&gt;% layout(showlegend = FALSE) 7.5 Aggregierter Datensatz Grundlage ist Datensatz 1 7.5.1 IPA syms ipa_vow2 &lt;- c( a = &quot;\\u0061&quot;, AA = &quot;\\u0251\\u02D0&quot;, E = &quot;\\u025B&quot;, ee = &quot;\\u0065\\u02D0&quot;, EE = &quot;\\u025B\\u02D0&quot;, I = &quot;\\u026A&quot;, ii = &quot;\\u0069\\u02D0&quot;, O = &quot;\\u0254&quot;, OE = &quot;\\u0153&quot;, oo = &quot;\\u006F\\u02D0&quot;, oe = &quot;\\u00F8\\u02D0&quot;, U = &quot;\\u028A&quot;, Y = &quot;\\u028F&quot;, uu = &quot;\\u0075\\u02D0&quot;, yy = &quot;\\u0079\\u02D0&quot; ) ipavow2 = ipa_vow2 %&gt;% as_tibble() %&gt;% rename(vowel = value) 7.5.2 Tabelle Mittelwerte aus Datensatz 1 vokale_agg &lt;- vokale %&gt;% group_by(vokal, lange, l1_l2) %&gt;% summarise(f1_avg = mean(f1), f2_avg = mean(f2), dauer_avg = mean(dauer)) vokale_agg1 &lt;- vokale_agg %&gt;% filter(l1_l2 == &quot;L1&quot;) %&gt;% cbind(ipavow2) vokale_agg2 &lt;- vokale_agg %&gt;% filter(l1_l2 == &quot;L2&quot;) %&gt;% cbind(ipavow2) vokale_agg &lt;- rbind(vokale_agg1, vokale_agg2) %&gt;% as_tibble() vokale_agg %&gt;% rmarkdown::paged_table() 7.5.3 Datensatz 1 mit aggregierten Daten 7.5.3.1 Diagramm 4 (statisch) library(tidytext) library(ggrepel) (graph4 &lt;- vokale %&gt;% group_by(vokal, l1_l2, color = vowel_ipa, label = vowel_ipa, fill = vowel_ipa, shape = vowel_ipa) %&gt;% ggplot(aes(f2,f1)) + geom_hex(alpha = 0.2, show.legend = F) + geom_label(data = vokale_agg, label = vokale_agg$vowel, aes(x = f2_avg, y = f1_avg), color = &quot;black&quot;) + stat_ellipse(level = 0.67, geom = &quot;polygon&quot;, alpha = 0.2) + scale_color_discrete(breaks = c(&quot;a&quot;,&quot;a:&quot;,&quot;e:&quot;,&quot;E&quot;,&quot;E:&quot;,&quot;I&quot;,&quot;i:&quot;,&quot;O&quot;,&quot;o:&quot;,&quot;U&quot;,&quot;u:&quot;,&quot;Y&quot;,&quot;y:&quot;,&quot;Ö&quot;,&quot;ö&quot;)) + # geom_text(aes(label = vokal, color = vokal), vjust = 1, hjust = 1, check_overlap = T, show.legend = F) + scale_y_reverse() + scale_x_reverse() + facet_wrap(~ l1_l2) + theme_light() + guides(color = FALSE) + labs(y = &quot;Formant F1: tief &gt;&gt; hoch&quot;, x = &quot;Formant F2: &lt;&lt; vorne - hinten &gt;&gt;&quot;) ) 7.5.3.2 Diagramm 7 (statisch) (graph7 &lt;- vokale_agg %&gt;% group_by(vokal, l1_l2, label = vowel) %&gt;% ggplot(aes(f2_avg,f1_avg)) + geom_hex(alpha = 0.2, show.legend = F) + geom_text(aes(label = vowel, color = vowel), size = 6, vjust = 1, hjust = 1, check_overlap = T, show.legend = F) + scale_y_reverse() + scale_x_reverse() + facet_wrap(~ l1_l2) + theme_light() + labs(y = &quot;Formant F1: tief &gt;&gt; hoch&quot;, x = &quot;Formant F2: &lt;&lt; vorne - hinten &gt;&gt;&quot;) ) ggsave(&quot;pictures/vokalformanten.jpg&quot;) 7.5.3.3 Diagramm 5 (interaktiv) Interaktives Diagramm mit dem plotly-Programm: library(plotly) ggplotly(graph7) %&gt;% layout(showlegend = FALSE) 7.6 Abbildungen mit phonR Abbildungen mit dem phonR-Paket, spezialisiert auf die graphische Darstellung von akustischen, insbesondere phonetischen Daten. 7.6.0.1 Diagramm 8 Aggregierter Datensatz library(phonR) par(mfrow = c(1, 1)) with(vokale_agg, plotVowels(f1_avg, f2_avg, vowel, group = lange, pch.tokens = vowel, cex.tokens = 1.2, alpha.tokens = 0.3, plot.means = TRUE, pch.means = vowel, cex.means = 2, var.col.by = vowel, var.sty.by = lange, hull.fill = TRUE, hull.line = TRUE, fill.opacity = 0.1, pretty = TRUE)) # Bild auf Festplatte speichern in drei Schritten: # 1. Open jpeg file jpeg(&quot;pictures/phonR_vowel_space.jpg&quot;, width = 840, height = 535) # 2. Create the plot par(mfrow = c(1, 1)) with(vokale_agg, plotVowels(f1_avg, f2_avg, vowel, group = lange, pch.tokens = vowel, cex.tokens = 1.2, alpha.tokens = 0.3, plot.means = TRUE, pch.means = vowel, cex.means = 2, var.col.by = vowel, var.sty.by = lange, hull.fill = TRUE, hull.line = TRUE, fill.opacity = 0.1, pretty = TRUE)) # 3. Close the file dev.off() ## cairo_pdf ## 2 7.6.0.2 Diagramm 9 Einzelne Messungen library(phonR) par(mfrow = c(1, 1)) with(vokale, plotVowels(f1, f2, vowel_ipa, group = lange, pch.tokens = vowel_ipa, cex.tokens = 1.2, alpha.tokens = 0.3, plot.means = TRUE, pch.means = vowel_ipa, cex.means = 2, var.col.by = lange, var.sty.by = lange, hull.fill = TRUE, hull.line = TRUE, fill.opacity = 0.1, pretty = TRUE)) # Bild auf Festplatte speichern in drei Schritten: # 1. Open jpeg file jpeg(&quot;pictures/phonR_vowel_space2.jpg&quot;, width = 840, height = 535) # 2. Create the plot par(mfrow = c(1, 1)) with(vokale, plotVowels(f1, f2, vowel_ipa, group = lange, pch.tokens = vowel_ipa, cex.tokens = 1.2, alpha.tokens = 0.3, plot.means = TRUE, pch.means = vowel_ipa, cex.means = 2, var.col.by = lange, var.sty.by = lange, hull.fill = TRUE, hull.line = TRUE, fill.opacity = 0.1, pretty = TRUE)) # 3. Close the file dev.off() ## cairo_pdf ## 2 "],["textzerlegung.html", "Kapitel 8 Textzerlegung 8.1 Packages 8.2 Text öffnen 8.3 Zerlegung des Textes 8.4 Tabelle speichern 8.5 Tabelle öffnen 8.6 Zählen", " Kapitel 8 Textzerlegung 8.1 Packages library(tidyverse) library(tidytext) 8.2 Text öffnen In der R-Umgebung haben wir mehrere Möglichkeiten, Textdateien zu öffnen. Hier verwenden wir read_lines(), ein Programm, das mit dem Programmbündel tidyverse geladen wird. Bei langen Texten vermeiden wir es, den ganzen Text in den Arbeitsspeicher (RAM) zu laden, weil das lange dauern kann. Stattdessen verwenden wir Befehle wie substr() oder die tidyverse-Funktion str_sub(), um uns einen Teil des Textes anzuschauen. novels_r = read_lines(&quot;data/books/tom.txt&quot;) # Ansicht der ersten 300 Zeichen substr(novels_r, start = 1, stop = 300) ## [1] &quot;Tom Sawyer by Mark Twain Aligned by : András Farkas ( autoalignment ) Source : Project Gutenberg Die Abenteuer Tom Sawyers Mark Twain Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst er&quot; # oder str_sub(novels_r, start = 1, end = 300) ## [1] &quot;Tom Sawyer by Mark Twain Aligned by : András Farkas ( autoalignment ) Source : Project Gutenberg Die Abenteuer Tom Sawyers Mark Twain Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst er&quot; 8.3 Zerlegung des Textes 8.3.1 Tabelle Um Texteinheiten wie z.B. Wörter, Buchstaben oder Sätze / Äußerungen zählen zu können, müssen wir den Text zuerst in kleinere Teile zerlegen, in der Fachsprache als Tokenisierung bekannt (tokens extrahieren). Für die Tokenisierung von Zeichenfolgen (Texten) gibt es in der R-Sprache viele Programme (z.B. quanteda, tidytext) und verschiedene Möglichkeiten (mit ihren Vor- und Nachteilen). Hier verwenden wir das zuletzt genannte Programm und seine Funktion unnest_tokens(). Im ersten Schritt wandeln wir die Textdatei in einen Datensatz um, so dass wir mit den gut verständlichen tidyverse-Funktionen arbeiten können. Das machen wir mit der Funktion as_tibble(), die in diesem Fall eine Tabelle mit einer einzigen Spalte erzeugt. Der Default-Name der Spalte value wird mit rename() umbenannt. Der neue (bessere) Spaltenname ist text, was wir mit colnames() überprüfen können. Wir geben dieser Tabelle einen neuen Namen (novels_df). novels_df = as_tibble(novels_r) %&gt;% rename(text = value) colnames(novels_df) ## [1] &quot;text&quot; 8.3.2 Äußerungen Im zweiten Schritt verwenden wir die Tabelle novels_df als Ausgangspunkt für die Tokenisierung. Wir zerlegen die Zeichenfolge in der Spalte text in Sätze (genau genommen: Äußerungen), und zwar mit Hilfe der Funktion unnest_tokens() des Programms tidytext. Wir geben dieser Tabelle einen neuen Namen, und zwar novels_sents. Die Funktion unnest_tokens verlangt die folgende Reihenfolge: zuerst muss der Datensatz angegeben werden (hier: novels_df), dann der Name der Tabellenspalte, die in kleinere Einheiten zerlegt werden soll (hier: text), gefolgt von der Angabe, in welche Einheit wir die Zeichenfolge umformen wollen (hier: sentences). Die neue Tabelle enthält nur eine Spalte (nur die Äußerungen), da wir die Option drop = TRUE beibehalten (denn sonst würde die neue Tabelle eine weitere Spalte mit dem ganzen Text enthalten, und zwar in jeder Tabellenzeile - sehr belastend für den Arbeitsspeicher!). Außerdem verhindern wir mit to_lower = FALSE, dass alle Wörter in der Spalte klein geschrieben werden. Die im Deutschen übliche Groß- und Kleinschreibung von Wörtern soll in dieser Spalte beibehalten werden. Zuletzt entfernen wir noch die erste Zeile in der Tabelle, da sie nicht zum Text gehört. Das machen wir mit novels_sents[-1,]: dem Namen der Tabelle folgen eckige Klammern; die Zahl -1 vor dem Komma bezieht sich auf die erste Tabellenzeile; das Minuszeichen vor der Zahl besagt, dass diese Zeile entfernt werden soll; nach dem Komma steht nichts, d.h. alle Spalten in der Tabelle bleiben unverändert. Zur Identifizierung der Reihenfolge der Äußerungen fügen wir der Tabelle noch eine Spalte hinzu: mit mutate() erzeugen wir die Spalte sentence_id, und zwar indem wir die einzelnen Zeilenzahlen row_number() mit Hilfe der Anzahl der Tabellenzeilen length() festlegen. novels_sents = novels_df %&gt;% unnest_tokens(sentence, text, token = &quot;sentences&quot;, drop = TRUE, to_lower = FALSE) novels_sents = novels_sents[-1,] novels_sents = novels_sents %&gt;% mutate(sentence_id = row_number(1:length(novels_sents$sentence))) head(novels_sents) ## # A tibble: 6 x 2 ## sentence sentence_id ## &lt;chr&gt; &lt;int&gt; ## 1 Die meisten der hier erzählten Abenteuer haben sich tatsächlich z~ 1 ## 2 Das eine oder das andere habe ich selbst erlebt , die anderen mei~ 2 ## 3 Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawye~ 3 ## 4 Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor drei~ 4 ## 5 Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt gesc~ 5 ## 6 Erstes Kapitel . , ,Tom ! 6 tail(novels_sents) ## # A tibble: 6 x 2 ## sentence sentence_id ## &lt;chr&gt; &lt;int&gt; ## 1 &quot;\\&quot; Schluß .&quot; 4679 ## 2 &quot;So endet diese Geschichte .&quot; 4680 ## 3 &quot;Da es nur die Geschichte eines Jungen sein soll , muß sie hier e~ 4681 ## 4 &quot;Wenn jemand eine Erzählung über erwachsene Leute schreibt , weiß~ 4682 ## 5 &quot;Die meisten der in diesem Buch vorkommenden Personen leben noch ~ 4683 ## 6 &quot;Vielleicht erscheint es eines Tages als angebracht , die Geschic~ 4684 8.3.3 Wörter Unser nächstes Ziel ist die Zerlegung der Äußerungen in kleinere Einheiten: Wörter. Das können wir auf ähnliche Weise bewerkstelligen wie im vorherigen Schritt. Ausgangspunkt ist nun die Tabelle novels_sents. Im unnest_tokens()-Befehl geben wir den Namen der hier gewünschten Einheit an (word), dann den Namen der Tabellenspalte mit den Äußerungen (sentence) und die gewünschte Einheit, in die wir die Äußerungen umformen möchten (words). Außerdem wollen wir die Tabellenspalte sentence beibehalten, weshalb wir drop = FALSE auswählen. In der neuen Tabellenspalte word sollen alle Wörter klein geschrieben werden, was wir mit to_lower = TRUE erreichen. Wir fügen der Tabelle (ähnlich wie im Fall der sentence_id) auch eine weitere Spalte hinzu, der wir die ursprüngliche Reihenfolge der Wörter entnehmen können: word_id. novels_words = novels_sents %&gt;% unnest_tokens(word, sentence, token = &quot;words&quot;, drop = FALSE, to_lower = TRUE) novels_words = novels_words %&gt;% mutate(word_id = row_number(1:length(novels_words$word))) Bei der Durchsicht des Textes oder auch der Tabelle fallen ungewohnte Wortformen mit einem Unterstrich - auf. Wir entfernen den Unterstrich am Anfang und Ende der Wortformen. novels_words = novels_words %&gt;% mutate(word = str_replace_all(word, &quot;_&quot;, &quot;&quot;)) head(novels_words) ## # A tibble: 6 x 4 ## sentence sentence_id word word_id ## &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; ## 1 Die meisten der hier erzählten Abenteuer haben si~ 1 die 1 ## 2 Die meisten der hier erzählten Abenteuer haben si~ 1 meisten 2 ## 3 Die meisten der hier erzählten Abenteuer haben si~ 1 der 3 ## 4 Die meisten der hier erzählten Abenteuer haben si~ 1 hier 4 ## 5 Die meisten der hier erzählten Abenteuer haben si~ 1 erzähl~ 5 ## 6 Die meisten der hier erzählten Abenteuer haben si~ 1 abente~ 6 8.3.4 Buchstaben Wenn wir auch Buchstaben zählen wollen, können wir die Wörter auf ähnliche Weise zerlegen und eine char_id (ursprüngliche Reihenfolge der Buchstaben) hinzufügen. novels_ch = novels_words %&gt;% unnest_tokens(char, word, token = &quot;characters&quot;, drop = FALSE, to_lower = TRUE) novels_ch = novels_ch %&gt;% mutate(char_id = row_number(1:length(novels_ch$char))) head(novels_ch) ## # A tibble: 6 x 6 ## sentence sentence_id word word_id char char_id ## &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; ## 1 Die meisten der hier erzählten Abente~ 1 die 1 d 1 ## 2 Die meisten der hier erzählten Abente~ 1 die 1 i 2 ## 3 Die meisten der hier erzählten Abente~ 1 die 1 e 3 ## 4 Die meisten der hier erzählten Abente~ 1 meis~ 2 m 4 ## 5 Die meisten der hier erzählten Abente~ 1 meis~ 2 e 5 ## 6 Die meisten der hier erzählten Abente~ 1 meis~ 2 i 6 8.3.5 Ziffern umwandeln Unter den tokens (Vorkommnisse von Wortformen) sind auch Ziffern. Da sie im Text nicht wie Wörter geschrieben werden, zählen wir sie gewöhnlich nicht mit. Wir könnten die Ziffern aus der Tabelle entfernen oder als unbestimmte Ziffernfolge (z.B. 0000) zusammenfassen. Entfernen ist die einfachere Möglichkeit und oft auch die sinnvollere, wenn man davon ausgeht, dass die Zahlen keine wichtige Information zum Gesamtext beitragen. Wir erhalten 29 leere Zeilen. novels_ch %&gt;% mutate(word = str_remove_all(word, &quot;[^a-zA-Z]&quot;)) %&gt;% count(word) ## # A tibble: 9,603 x 2 ## word n ## &lt;chr&gt; &lt;int&gt; ## 1 &quot;&quot; 29 ## 2 &quot;a&quot; 15 ## 3 &quot;ab&quot; 60 ## 4 &quot;abbekommen&quot; 10 ## 5 &quot;abbildung&quot; 18 ## 6 &quot;abbrach&quot; 7 ## 7 &quot;abend&quot; 60 ## 8 &quot;abendessen&quot; 20 ## 9 &quot;abendessens&quot; 11 ## 10 &quot;abendgebet&quot; 10 ## # ... with 9,593 more rows Ersetzen ist die andere Möglichkeit. Dazu verwenden wir einen regulären Ausdruck, nämlich [\\\\d], in dem das d sich auf digit (Ziffer) bezieht. Die beiden Backslash-Zeichen vor dem d sagen dem Programm, dass nicht nach dem Buchstaben d gesucht wird, sondern nach Ziffern (digits). Als Ergebnis erhalten wir ein-, zwei- und vierstellige Zahlen in der Wortspalte. Die vierstelligen Zahlen stellen wahrscheinlich Jahreszahlen dar. novels_ch %&gt;% mutate(word = str_replace_all(word, &quot;[\\\\d]&quot;, &quot;0&quot;)) %&gt;% count(word) ## # A tibble: 9,641 x 2 ## word n ## &lt;chr&gt; &lt;int&gt; ## 1 0 2 ## 2 00 12 ## 3 0000 4 ## 4 a 11 ## 5 ä 11 ## 6 ab 60 ## 7 abbekommen 10 ## 8 abbildung 18 ## 9 abbrach 7 ## 10 abend 60 ## # ... with 9,631 more rows Wir wählen die letzte Variante und speichern die Tabelle: eine oder mehrere Ziffern [\\\\d]+ werden mit vier Nullen 0000 ersetzt. Diese 0000 kann als Wortform mitgezhlt werden (oder nicht). novels_ch = novels_ch %&gt;% mutate(word = str_replace(word, &quot;[\\\\d]+&quot;, &quot;0000&quot;)) 8.4 Tabelle speichern Diese Tabelle speichern wir als Datei, falls wir ein anderes Mal mit ihr arbeiten möchten. Wir speichern die Tabelle als Excel-Datei (Programm: writexl) und als Tabelle im Textformat (Endung: csv, comma-separated-variables). Excel hat einen Nachteil: falls die Zeilen sehr lang sind, werden sie nicht vollständig gespeichert, sondern abgekürzt. Das Dateiformat csv und andere Textformate sind daher besser. Außerdem kann man csv-Dateien, da sie nur unformatierten Text enthalten, mit jedem Programm öffnen und lesen, Excel-Dateien dagegen nicht. write_csv(novels_ch, &quot;data/tom_sawyer_tabelle.csv&quot;) # install.packages(&quot;writexl&quot;) library(writexl) write_xlsx(novels_ch, &quot;data/tom_sawyer_tabelle.xlsx&quot;) 8.5 Tabelle öffnen Falls wir die Arbeit an einem anderen Tag fortsetzen, können wir die gespeicherte Tabelle folgendermaßen öffnen und brauchen nicht noch einmal alle oben durchgeführten Schritte durchzuführen: # install.packages(&quot;readxl&quot;) library(readxl) novels_ch = read_xlsx(&quot;data/tom_sawyer_tabelle.xlsx&quot;) # oder: novels_ch = read_csv(&quot;data/tom_sawyer_tabelle.csv&quot;) 8.6 Zählen Als Ausgangspunkt für die Auszählung von Äußerungen, Wörtern und Buchstaben verwenden wir die zuletzt erstellte Tabelle novels_ch. Zum Zählen einer Kategorie eignet sich die tidyverse-Funktion count(). Wie viele Äußerungen hat das Programm identifiziert? Hier müssen wir berücksichtigen, dass jede Äußerung in mehreren Zeilen wiederholt wird, da wir die Äußerungen auch in Wörter und Buchstaben zerlegt haben. Die Funktion distinct() berücksichtigt das. novels_ch %&gt;% distinct(sentence) %&gt;% count(sentence) ## # A tibble: 4,647 x 2 ## sentence n ## &lt;chr&gt; &lt;int&gt; ## 1 &#39; Da hab &#39; ich ihm einen Stein ins Fenster geschmissen -- aber s~ 1 ## 2 &#39; Das heilt _jede_ Warze . 1 ## 3 &#39; Und du sagst , so ganz beiläufig , als wenn&#39;s nichts wär &#39; , d~ 1 ## 4 &#39; Du sagtest das immer wieder . 1 ## 5 &#39; Sagen -- was ? 1 ## 6 &#39; Und dann du raus mit den Pfeifen und wir ordentlich drauf los ,~ 1 ## 7 &#39; und dann trittst du langsam zurück , elf Schritt , mit geschlos~ 1 ## 8 &#39; Und ich sag &#39; : , O , &#39;s ist schon recht , wenn er uns stark genug~ 1 ## 9 &#39;n ganzes Jahr werd &#39; ich jede Nacht wachen ! 1 ## 10 &#39;ne Schande ! 1 ## # ... with 4,637 more rows Als Antwort auf diese Abfrage erhalten wir 4647 Zeilen, d.h. dass 4647 Äußerungen (number_sents) unterschieden wurden. Außerdem entsteht beim Zählen eine neue Spalte, und zwar mit dem Namen n. Die Zahl ist in allen Tabellenzeilen dieselbe, nämlich 1. Dies zeigt uns, dass jede Äußerung nur einmal gezählt wurde (also distinkt / unterschiedlich ist), so wie wir es ja verlangt haben. novels_ch %&gt;% distinct(sentence) %&gt;% count(sentence) %&gt;% summarise(number_sents = sum(n)) ## # A tibble: 1 x 1 ## number_sents ## &lt;int&gt; ## 1 4647 Wenn wir distinct() weglassen, erhalten wir das folgende Ergebnis: Die Tabellenspalte n enthält nun unterschiedliche Zahlen, die sich auf die Anzahl der Buchstaben in der Spalte sentence bezieht, denn wir haben die Äußerungen vorher nicht nur in Wörter (Spalte word) sondern auch in Buchstaben (Spalte char) zerlegt. novels_ch %&gt;% count(sentence) ## # A tibble: 4,647 x 2 ## sentence n ## &lt;chr&gt; &lt;int&gt; ## 1 &#39; Da hab &#39; ich ihm einen Stein ins Fenster geschmissen -- aber s~ 61 ## 2 &#39; Das heilt _jede_ Warze . 17 ## 3 &#39; Und du sagst , so ganz beiläufig , als wenn&#39;s nichts wär &#39; , d~ 115 ## 4 &#39; Du sagtest das immer wieder . 23 ## 5 &#39; Sagen -- was ? 8 ## 6 &#39; Und dann du raus mit den Pfeifen und wir ordentlich drauf los ,~ 83 ## 7 &#39; und dann trittst du langsam zurück , elf Schritt , mit geschlos~ 131 ## 8 &#39; Und ich sag &#39; : , O , &#39;s ist schon recht , wenn er uns stark genug~ 46 ## 9 &#39;n ganzes Jahr werd &#39; ich jede Nacht wachen ! 33 ## 10 &#39;ne Schande ! 9 ## # ... with 4,637 more rows Auf diese Weise könnten wir die Anzahl der Buchstaben insgesamt und die Anzahl der Buchstaben pro Äußerung berechnen. 8.6.1 Buchstaben Wie lang ist der Text, gemessen in characters? Fast 333 Tausend alphanumerische Zeichen. Wie viele alphanumerische Zeichen (Buchstaben und Ziffern) kommen durchschnittlich pro Äußerung vor? Beinahe 72 Zeichen. Die Standardabweichung von diesem Mittelwert ist ziemlich groß: 71,5 +/- 61,9 Zeichen. In diesem Text kommen sehr kurze Äußerungen vor, aber auch deutlich längere. (char_summary = novels_ch %&gt;% count(sentence) %&gt;% summarise(char_sum = sum(n), char_avg = mean(n, na.rm = TRUE), char_sd = sd(n, na.rm = TRUE)) ) ## # A tibble: 1 x 3 ## char_sum char_avg char_sd ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 332677 71.6 61.9 Kurze Äußerungen (hier: mit wenigen Buchstaben) kommen sehr häufig vor, sehr lange (hier: mit vielen Buchstaben) dagegen selten. novels_ch %&gt;% count(sentence) %&gt;% ggplot(aes(n)) + geom_density(fill = &quot;magenta&quot;, alpha = 0.7) + labs(x = &quot;Anzahl der Buchstaben&quot;, y = &quot;Dichte&quot;) Folgt die Äußerungslänge (in Buchstaben gemessen) einer Zipf-Verteilung? alpha = 1 novels_ch %&gt;% count(sentence, sort = TRUE) %&gt;% # Sortieren nicht vergessen! mutate(rank = row_number(), zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha)) %&gt;% ggplot(aes(rank, n)) + geom_point() + labs(y = &quot;Anzahl der Buchstaben&quot;, x = &quot;Rangfolge&quot;) Im Vergleich dazu unten: so sähe die entsprechende Zipf-Verteilung (Power-Law-Distribution) aus, die für ausreichend lange Texte gültig ist. In einer Zipfverteilung käme die zweithäufigste Äußerungslänge etwa nur noch halb so häufig vor wie die häufigste Äußerungslänge, die dritthäufigste nur noch ein Drittel der ersthäufigsten, die vierthäufigste nur noch ein Viertel der ersthäufigsten usw. alpha = 1 novels_ch %&gt;% count(sentence, sort = TRUE) %&gt;% # Sortieren nicht vergessen! # mutate(rank = row_number(), mutate(rank = rank(row_number(), ties.method = &quot;average&quot;), zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha)) %&gt;% ggplot(aes(rank, zipfs_freq)) + geom_point() + labs(y = &quot;Anzahl der Buchstaben&quot;, x = &quot;Rangfolge&quot;) Wenn man die beiden Variablen (Rang und Häufigkeit) in einer Zipfverteilung logarithmiert, ist das Ergebnis eine Gerade. Die Äußerungslänge (hier: Buchstabenanzahl) im Roman Tom Sawyer scheint davon abzuweichen. Die mittellangen Äußerungen kommen häufiger vor, als nach der Zipfverteilung erwartet wird. library(scales) alpha = 1 novels_ch %&gt;% count(sentence, sort = TRUE) %&gt;% # sortieren ! mutate(rank = rank(row_number(), ties.method = &quot;first&quot;), zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha)) %&gt;% ggplot(aes((n), (rank), color = &quot;Roman&quot;)) + geom_point() + geom_point(aes(((zipfs_freq)), ((rank)), color = &quot;theoretisch&quot;)) + labs(x = &quot;Anzahl der Buchstaben&quot;, y = &quot;Rangfolge&quot;, color = &quot;Verteilung&quot;) + scale_x_log10() + scale_y_log10() Welche Buchstaben kommen im Text häufiger / seltener vor? Unter den auf Vokale bezogenen Buchstaben ist das e am häufigsten, unter den auf Konsonanten bezogenen das n. alpha = 1 novels_ch %&gt;% filter(str_detect(char, &quot;[:alpha:]&quot;)) %&gt;% count(char, sort = T) ## # A tibble: 31 x 2 ## char n ## &lt;chr&gt; &lt;int&gt; ## 1 e 53778 ## 2 n 33906 ## 3 i 24336 ## 4 r 22040 ## 5 s 20912 ## 6 t 20295 ## 7 a 18994 ## 8 h 18505 ## 9 d 16432 ## 10 u 13668 ## # ... with 21 more rows novels_ch %&gt;% filter(str_detect(char, &quot;[:alpha:]&quot;)) %&gt;% count(char, sort = T) %&gt;% mutate(char = fct_reorder(char, n)) %&gt;% ggplot(aes(n, char, fill = char)) + geom_col() + theme(legend.position = &quot;none&quot;) novels_ch %&gt;% filter(str_detect(char, &quot;[:alpha:]&quot;)) %&gt;% count(char, sort = T) %&gt;% # sortieren ! mutate(rank = rank(row_number(), ties.method = &quot;first&quot;), zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha)) %&gt;% ggplot(aes((n), (rank), color = &quot;Roman&quot;)) + geom_point() + geom_point(aes(((zipfs_freq)), ((rank)), color = &quot;theoretisch&quot;)) + labs(x = &quot;Anzahl der Buchstaben&quot;, y = &quot;Rangfolge&quot;, color = &quot;Verteilung&quot;) + scale_x_log10() + scale_y_log10() 8.6.2 Worthäufigkeiten Da wir es gewohnt sind, mit Wörtern umzugehen, machen wir lieber mit Wörtern weiter. Wie viele Wortformen wurden vom Programm unterschieden? Die folgende Wortauszählung zeigt, dass das Programm 9639 types (Wortformen) unterschieden hat, denn die Tabelle hat so viele Zeilen (0000 sind die oben umgewandelten Ziffern). Funktionswörter (z.B. und, die, nicht, sie, der, sich, er, ich, aber, ) kommen wie in allen Texten am häufigsten vor. Für die Inhaltsanalyse spielen sie kaum oder gar keine Rolle. Daher werden sie oft entfernt. Zu den Top-Ten gehört verständlicherweise auch der Name Tom, da die Hauptperson im Roman fortwährend angesprochen oder erwähnt wird (die Gebrauchsfrequenz oder Anzahl der tokens n = 738). novels_ch %&gt;% distinct(word_id, .keep_all = TRUE) %&gt;% count(word, sort = TRUE) ## # A tibble: 9,639 x 2 ## word n ## &lt;chr&gt; &lt;int&gt; ## 1 und 2641 ## 2 die 1417 ## 3 er 1218 ## 4 sie 1189 ## 5 der 1178 ## 6 zu 992 ## 7 sich 824 ## 8 nicht 802 ## 9 ich 739 ## 10 tom 738 ## # ... with 9,629 more rows Folgen die Worthäufigkeiten einer Zipfverteilung (Power-Law-Distribution)? In der folgenden Tabelle sind folgende Größen zu sehen: die Gebrauchshäufigkeit oder Tokenfrequenz eines Wortes im Text (n) die Rangfolge des Wortes (rank), die berechnete Konstante (k = frequenz \\* rang), die berechnete theoretische Tokenfrequenz eines Wortes (zips_freq). novels_ch %&gt;% distinct(word_id, .keep_all = TRUE) %&gt;% count(word, sort = TRUE) %&gt;% # sortieren !!! mutate(rank = rank(row_number(), ties.method = &quot;average&quot;), k = n * rank, zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha), zipfs_freq_k = ifelse(rank == 1, k, dplyr::first(k) / rank^alpha)) ## # A tibble: 9,639 x 6 ## word n rank k zipfs_freq zipfs_freq_k ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 und 2641 1 2641 2641 2641 ## 2 die 1417 2 2834 1320. 1320. ## 3 er 1218 3 3654 880. 880. ## 4 sie 1189 4 4756 660. 660. ## 5 der 1178 5 5890 528. 528. ## 6 zu 992 6 5952 440. 440. ## 7 sich 824 7 5768 377. 377. ## 8 nicht 802 8 6416 330. 330. ## 9 ich 739 9 6651 293. 293. ## 10 tom 738 10 7380 264. 264. ## # ... with 9,629 more rows Die häufigeren Wörter scheinen in Tom Sawyer häufiger vorzukommen als nach der Zipfverteilung erwartet wird. Das spricht für einen simpleren Wortschatz, einen eher umgangssprachlich formulierten Text. novels_ch %&gt;% distinct(word_id, .keep_all = TRUE) %&gt;% count(word, sort = TRUE) %&gt;% # sortieren !!! mutate(rank = rank(row_number(), ties.method = &quot;average&quot;), zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha)) %&gt;% ggplot(aes((n), (rank), color = &quot;Roman&quot;)) + geom_point() + geom_point(aes(((zipfs_freq)), ((rank)), color = &quot;theoretisch&quot;)) + labs(x = &quot;Worthäufigkeit&quot;, y = &quot;Rangfolge&quot;, color = &quot;Verteilung&quot;) + scale_x_log10() + scale_y_log10() 8.6.3 Wortschatzdichte Die lexikalische Diversität oder Wortschatzdichte, gemessen anhand des type-token-Verhältnisses (type-token-ratio, ttr) beträgt 0,14 Types pro Token. Ohne mit einem anderen Text vergleichen zu können, sagt uns dieser Wert nicht viel. Dieser Wert ist ansonsnten auch von der Länge eines Textes abhängig: je länger der Text, desto kleiner wird dieser Wert. novels_ch %&gt;% distinct(word_id, .keep_all = TRUE) %&gt;% count(word, sort = TRUE) %&gt;% summarise(types = length(word), tokens = sum(n), ttr = length(word)/sum(n)) ## # A tibble: 1 x 3 ## types tokens ttr ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 9639 67115 0.144 Auch die lexikalische Diversität (Wortschatzdichte) ist relativ gering, da die Anzahl der verschiedenen Wortformen (types) im Vergleich zu ihrer Gebrauchsfrequenz (tokens) verhältnismäßig klein ist. Dies spricht wiederum für die These, dass der Roman einen recht einfachen Wortschatz aufweist, was einem eher umgangssprachlichen Stil entspricht. 8.6.4 Äußerungslänge Wie viele Wörter kommen durchschnittlich in einer Äußerung vor? Da wir bei der Auszählung auch einige der als 0000 kodierten Ziffern berücksichtigen, beträgt die durchschnittliche Länge der Äußerungen im Text 14,44 Wortformen (tokens), die Standardabweichung vom Mittelwert ist fast so groß wie der Mittelwert: 14,44 +/- 11,95 Wortformen. novels_ch %&gt;% distinct(word_id, .keep_all = T) %&gt;% count(sentence) %&gt;% summarise(leng_sents = mean(n), sd_sents = sd(n)) ## # A tibble: 1 x 2 ## leng_sents sd_sents ## &lt;dbl&gt; &lt;dbl&gt; ## 1 14.4 12.0 Die Häufigkeitsverteilung der Äußerungslänge im Roman: novels_ch %&gt;% distinct(word_id, .keep_all = TRUE) %&gt;% count(sentence, sort = TRUE) %&gt;% # sortieren !!! mutate(rank = as.integer(length(sentence) - rank(n, ties.method = &quot;average&quot;) + 1), rank2 = rank(row_number(), ties.method = &quot;average&quot;), zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha)) %&gt;% ggplot(aes(n)) + geom_histogram(fill = &quot;darkgreen&quot;, alpha = 0.7, binwidth = 2) + labs(x = &quot;Anzahl der Wörter&quot;, y = &quot;Anzahl der Äußerungen&quot;) Logarithmiert: novels_ch %&gt;% distinct(word_id, .keep_all = TRUE) %&gt;% count(sentence, sort = TRUE) %&gt;% # sortieren !!! mutate(rank = as.integer(length(sentence) - rank(n, ties.method = &quot;average&quot;) + 1), rank2 = rank(row_number(), ties.method = &quot;average&quot;), zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha)) %&gt;% ggplot(aes(n)) + geom_histogram(fill = &quot;darkgreen&quot;, alpha = 0.7, binwidth = 0.05) + scale_x_log10() + labs(x = &quot;Anzahl der Wörter&quot;, y = &quot;Anzahl der Äußerungen&quot;) Tabelle mit Anzahl der Wörter pro Äußerung (n), Rangfolge (rank) und die theoretische Frequenz gemäß Zipfverteilung (zipfs_freq). novels_ch %&gt;% distinct(word_id, .keep_all = TRUE) %&gt;% count(sentence, sort = TRUE) %&gt;% # sortieren !!! mutate(rank = as.integer(length(sentence) - rank(n, ties.method = &quot;average&quot;) + 1), rank2 = rank(row_number(), ties.method = &quot;average&quot;), zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha)) %&gt;% arrange(rank) %&gt;% rmarkdown::paged_table() Die Verteilung der Äußerungslängen unterscheidet sich von der Zipfverteilung. alpha = 1 novels_ch %&gt;% distinct(word_id, .keep_all = TRUE) %&gt;% count(sentence, sort = F) %&gt;% # sortieren !!! mutate(rank = as.integer(length(sentence) - rank(n, ties.method = &quot;average&quot;) + 1), zipfs_freq = ifelse(rank == 1, n, dplyr::first(n) / rank^alpha)) %&gt;% ggplot(aes((n), (rank), color = &quot;Roman&quot;)) + geom_point() + geom_point(aes(((zipfs_freq)), ((rank)), color = &quot;theoretisch&quot;)) + geom_jitter() + labs(x = &quot;WAnzahl der Wörter&quot;, y = &quot;Rangfolge&quot;, color = &quot;Verteilung&quot;) + scale_x_log10() + scale_y_log10() 8.6.5 Vergleich mit quanteda library(quanteda) library(quanteda.textstats) Die Zahlenwerte, die wir mit dem Program quanteda (ohne genauere Bearbeitung) erhalten, sind höher. Das liegt daran, dass Interpunktionszeichen, Symbole und Ziffern noch nicht herausgefiltert sind. # ohne Filterung corp = corpus(novels_r) textstat_summary(corp) %&gt;% rmarkdown::paged_table() Gefiltert sind die Werte mit den Werten vergleichbar, die wir mit den tidyverse-Funktionen berechnet haben. # gefiltert tok = tokens(corp, remove_punct = T, remove_symbols = T, remove_numbers = T, remove_url = T, remove_separators = T) textstat_summary(tok) %&gt;% rmarkdown::paged_table() Zahlenwerte für die einzelnen Äußerungen: # ungefiltert corps = corpus_reshape(corp, to = &quot;sentences&quot;) textstat_summary(corps) %&gt;% rmarkdown::paged_table() # gefiltert toks = tokens(corps, remove_punct = T, remove_symbols = T, remove_numbers = T, remove_url = T, remove_separators = T) textstat_summary(toks) %&gt;% rmarkdown::paged_table() Die von quanteda berechnete durchschnittliche Äußerungslänge und ihre Standardabweichung weisen ähnliche Werte auf (Mittelwert = 14,41, Standardabweichung = 11,998) wie die zuvor berechneten mit den tidyverse-Funktionen. textstat_summary(toks) %&gt;% summarise(len_sents_q = mean(tokens), len_sents_q_sd = sd(tokens)) ## len_sents_q len_sents_q_sd ## 1 14.41251 11.99817 Lexikalische Diversität (Wortschatzdichte) des gesamten Texts liegt bei 0,1467 (ähnlich wie mit den tidyverse-Funktionen). textstat_lexdiv(tok) ## document TTR ## 1 text1 0.146718 Wortschatzdichte in einzelnen Äußerungen: textstat_lexdiv(toks) %&gt;% rmarkdown::paged_table() corp_dfm &lt;- dfm(tok, verbose = FALSE) term_count &lt;- tidy(corp_dfm) %&gt;% group_by(document) %&gt;% arrange(desc(count)) # sortieren !!! term_count ## # A tibble: 9,837 x 3 ## # Groups: document [1] ## document term count ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 text1 und 2641 ## 2 text1 die 1414 ## 3 text1 er 1210 ## 4 text1 sie 1180 ## 5 text1 der 1174 ## 6 text1 zu 986 ## 7 text1 sich 824 ## 8 text1 nicht 786 ## 9 text1 tom 739 ## 10 text1 ich 730 ## # ... with 9,827 more rows term_count_rank &lt;- tidy(corp_dfm) %&gt;% group_by(document) %&gt;% arrange(desc(count)) %&gt;% mutate(rank = row_number(), total = sum(count), `term frequency` = count / total) term_count_rank %&gt;% rmarkdown::paged_table() term_count_rank %&gt;% ggplot(aes(rank, `term frequency`, color = document)) + geom_line(alpha = 0.8, show.legend = FALSE) + scale_x_log10() + scale_y_log10() alpha = 1 term_count_rank %&gt;% mutate(rank = as.integer(rank(length(term) - `term frequency` + 1, ties.method = &quot;average&quot;)), zipfs_freq = ifelse(rank == 1, `term frequency`, dplyr::first(`term frequency`) / rank^alpha)) %&gt;% ggplot(aes(rank, `term frequency`, color = document)) + geom_line(alpha = 0.8, show.legend = FALSE) + geom_point(aes((rank), (zipfs_freq), color = &quot;theoretisch&quot;)) + geom_jitter() + labs(y = &quot;Termfrequenz&quot;, x = &quot;Rangfolge&quot;, color = &quot;Verteilung&quot;) + scale_x_log10() + scale_y_log10() 8.6.6 Vergleich mit Voyant Tools Voyant Tools sind ein empfehlenwertes Werkzeug, schnell und einfach, um einen Überblick und verständliche graphische Darstellungen zu erhalten - solange man es nur mit einem Text oder wenigen zu tun hat. Die deutsche Übersetzung des Tools ist stellenweise ungenau: z.B. wird in der deutschen Übersetzung nicht zwischen types (einzigartigen Wortformen / unique word forms) und tokens (total words) unterschieden. Falsch: Dieser Korpus hat 1 Dokument mit 67,137 einzigartige Wortformen. Richtig ist: Dieses Korpus hat 67,137 tokens (Vorkommnisse von Wortformen) und 9828 types (unique word forms). Wortschatzdichte: 0.146 Durchschnittliche Wörter pro Satz: 15.5 (höher als mit tidyverse und quanteda berechnet) Die häufigsten Begriffe im Korpustom (739); s (296); huck (237); na (175); joe (150) This corpus has 1 document with 67,137 total words and 9,828 unique word forms. Vocabulary Density: 0.146 Average Words Per Sentence: 15.5 Most frequent words in the corpus: tom (739); s (296); huck (237); na (175); joe (150) "],["kurzgeschichten-im-vergleich.html", "Kapitel 9 Kurzgeschichten im Vergleich 9.1 Programme laden 9.2 Texte laden 9.3 Textzerlegung und Annotation 9.4 Datensätze vereinen 9.5 Wortklassen zählen 9.6 Nicht-parametrischer Test 9.7 Konnektoren 9.8 Äußerungslänge vergleichen", " Kapitel 9 Kurzgeschichten im Vergleich In diesem Abschnitt vergleichen wir zwei Kurzgeschichten miteinander, und zwar: - Die Küchenuhr von Wolfgang Borchert und - Das Duell von Irmtraud Morgner. Verglichen werden soll der Anteil der Pronomen und Substantive in beiden Texten. Nach der Lektüre beider Texte haben wir den Eindruck, dass der Schreibstil unterschiedlich ist. Ein hervorstechendes Merkmal in Borcherts Kurzgeschichte ist der Gebrauch von Pronomen statt Substantiven bzw. Nominalphrasen mit substantivischem Kopf. Null-Hypothese (\\(H_0\\)): Der Anteil der Pronomen ist in beiden Kurzgeschichten ähnlich groß. alternative Hypothese (\\(H_1\\)): Der Anteil der Pronomen in Borcherts Kurzgeschichte ist größer als in Morgners Kurzgeschichte. 9.1 Programme laden library(tidyverse) library(scales) library(quanteda) library(quanteda.textstats) library(quanteda.textplots) library(readtext) 9.2 Texte laden borchert &lt;- read_lines(&quot;data/borchert/borchert_kuechenuhr.txt&quot;) morgner &lt;- read_lines(&quot;data/morgner/morgner_duell.txt&quot;) 9.3 Textzerlegung und Annotation Die grammatische Analyse führen wir mit udpipe durch. Zuerst laden wir ein entsprechendes Sprachmodell. library(udpipe) destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ sprachmodell &lt;- udpipe_download_model(language = &quot;german&quot;) udmodel_de &lt;- udpipe_load_model(sprachmodell$file_model) } else { file_model = destfile udmodel_de &lt;- udpipe_load_model(file_model) } Das Programm udpipe annotiert den Text mit Hilfe des Sprachmodells. x &lt;- udpipe_annotate(udmodel_de, x = borchert, trace = FALSE) b &lt;- as.data.frame(x) %&gt;% mutate(doc_id = &quot;borchert_kuechenuhr&quot;) x &lt;- udpipe_annotate(udmodel_de, x = morgner, trace = FALSE) m &lt;- as.data.frame(x) %&gt;% mutate(doc_id = &quot;morgner_duell&quot;) 9.4 Datensätze vereinen Wir vereinen beide Datensätze in einem neuen Datensatz (kurz), und zwar mit Hilfe der Funktion bind_rows(). kurz &lt;- bind_rows(b, m) 9.5 Wortklassen zählen Nun sind wir bereits in der Lage, Wortklassen zu zählen, die udpipe identifiziert hat. Dazu verwenden wir die Funktion count(). Gezählt werden die Kategorien in der Spalte xpos. kurz %&gt;% group_by(doc_id) %&gt;% count(xpos, sort = TRUE) ## # A tibble: 75 x 3 ## # Groups: doc_id [2] ## doc_id xpos n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 morgner_duell NN 318 ## 2 morgner_duell ART 185 ## 3 morgner_duell VVFIN 182 ## 4 morgner_duell PPER 121 ## 5 borchert_kuechenuhr $. 120 ## 6 borchert_kuechenuhr ADV 120 ## 7 morgner_duell $, 119 ## 8 borchert_kuechenuhr VVFIN 118 ## 9 borchert_kuechenuhr NN 117 ## 10 morgner_duell $. 112 ## # ... with 65 more rows Angesichts unserer oben angeführten Hypothese interessieren uns in der Spalte xpos nur die Kategorien NN (Nomen bzw. Substantive) und PPER (Personalpronomen). Deshalb filtern wir alle anderen Kategorien heraus. tabelle_1 &lt;- kurz %&gt;% group_by(doc_id) %&gt;% filter(xpos == &quot;NN&quot; | xpos == &quot;PPER&quot;) %&gt;% count(xpos, sort = TRUE) tabelle_1 ## # A tibble: 4 x 3 ## # Groups: doc_id [2] ## doc_id xpos n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 morgner_duell NN 318 ## 2 morgner_duell PPER 121 ## 3 borchert_kuechenuhr NN 117 ## 4 borchert_kuechenuhr PPER 87 Da Morgners Erzählung länger ist als Borcherts, fügen wir noch Prozentzahlen zur Tabelle hinzu. Dann fällt der Vergleich leichter. tabelle_1 %&gt;% mutate(pct = n/sum(n)) ## # A tibble: 4 x 4 ## # Groups: doc_id [2] ## doc_id xpos n pct ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 morgner_duell NN 318 0.724 ## 2 morgner_duell PPER 121 0.276 ## 3 borchert_kuechenuhr NN 117 0.574 ## 4 borchert_kuechenuhr PPER 87 0.426 Die Tabelle können wir umgestalten, so dass sie leichter zu lesen ist. Zu diesem Zweck setzen wir die Funktion pivot_wider() ein. tabelle_2 &lt;- tabelle_1 %&gt;% mutate(Anteil = round(100*n/sum(n), 2)) %&gt;% rename(wortklasse = xpos) %&gt;% dplyr::select(-n) %&gt;% pivot_wider(names_from = doc_id, values_from = Anteil) tabelle_2 ## # A tibble: 2 x 3 ## wortklasse morgner_duell borchert_kuechenuhr ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 NN 72.4 57.4 ## 2 PPER 27.6 42.6 Das Ergebnis können wir auch graphisch darstellen. tabelle_1 %&gt;% mutate(pct = n/sum(n)) %&gt;% ggplot(aes(doc_id, pct, fill = xpos)) + geom_col() Eine etwas schönere Graphik - zu Demonstrationszwecken (in diesem Fall ein Mordsaufwand, der an Overkill grenzt): library(ggtext) tabelle_1 %&gt;% mutate(pct = n/sum(n)) %&gt;% ggplot(aes(doc_id, pct, fill = xpos)) + geom_col(alpha = 0.7, color = &quot;black&quot;, width = 0.9, position = &quot;dodge&quot;) + # geom_label(aes(label = xpos), size = 5, hjust = 1) + scale_x_discrete(labels = c(&quot;Borchert: Die Küchenuhr&quot;, &quot;Morgner: Das Duell&quot;)) + scale_y_continuous( labels = percent_format(accuracy = 1), breaks = seq(0, 1, 0.1), sec.axis = dup_axis(name = NULL)) + scale_fill_discrete(type = c(&quot;#810080&quot;, &quot;#00aeff&quot;), labels = c(&quot;Nomen&quot;, &quot;Personalpronomen&quot;)) + coord_cartesian(expand = FALSE, clip = &quot;off&quot;) + theme(legend.position = &quot;top&quot;, legend.background = element_rect(color = &quot;black&quot;, fill = &quot;moccasin&quot;, size = 0.5, linetype = &quot;dotted&quot;), legend.key.height = unit(.5, &quot;lines&quot;), legend.key.width = unit(4, &quot;lines&quot;), panel.background = element_rect(color = &quot;black&quot;, fill = &quot;moccasin&quot;, size = 0.5, linetype = &quot;dotted&quot;), plot.margin = margin(10, 10, 5, 0), plot.title = element_markdown(color = &quot;#810080&quot;, size = 14, hjust = 0.5), plot.title.position = &quot;plot&quot;, # default: panel plot.subtitle = element_markdown(color = &quot;#00aeaf&quot;, hjust = 0.5), plot.caption = element_markdown(), plot.caption.position = &quot;plot&quot;, # default: panel plot.background = element_rect(color = &quot;black&quot;, fill = &quot;moccasin&quot;, size = 2, linetype = &quot;dotted&quot;)) + labs(x = &quot;&quot;, y = &quot;&quot;, title = &quot;Anteil der **Nomen** und **Personalpronomen** in Kurzgeschichten&quot;, subtitle = &quot;**Wolfgang Borcherts _Küchenuhr_ im Vergleich zu Irmtraud Morgners _Duell_**&quot;, fill = &quot;Wortklassen: &quot;, caption = &quot;Annotation mit *udpipe* in *R&quot;) 9.6 Nicht-parametrischer Test Zum Abschluss machen wir noch den Chi-Quadrat-Test, um unsere Hypothese zu überprüfen. Die Formel für die Berechnung des \\(\\chi^2\\)-Wertes: \\[ \\tilde{\\chi}^2=\\sum_{k=1}^{n}\\frac{(Observed_k - Expected_k)^2}{Expected_k} \\] Für den \\(\\chi^2\\)-Quadrat-Test benötigen wir eine 2 x 2 - Kreuztabelle mit den beobachteten Werten in beiden Stichproben. Die erwarteten (theoretischen) Werte werden von der chisq.test()-Funktion berechnet. tabelle_3 &lt;- tabelle_1 %&gt;% rename(wortklasse = xpos) %&gt;% pivot_wider(names_from = doc_id, values_from = n) tabelle_3 ## # A tibble: 2 x 3 ## wortklasse morgner_duell borchert_kuechenuhr ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 NN 318 117 ## 2 PPER 121 87 Das Ergebnis (p = 0,0002) besagt, dass wir die Nullhypothese verwerfen und die alternative Hypothese akzeptieren können, denn p &lt; 0,05. Der Anteil der Pronomen in Borcherts Kurzgeschichte ist mit statistischer Signifikanz größer als in Morgners Kurzgeschichte. chires &lt;- chisq.test(tabelle_3[,-1]) chires ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: tabelle_3[, -1] ## X-squared = 13.8, df = 1, p-value = 0.0002033 Bei Bedarf kann man aus der oben gespeicherten Variable chires außer den beobachteten Häufigkeiten (hier: obs) auch die erwarteten Häufigkeiten (hier: ex(p)) ausgeben lassen. Letztere zeigen, welche Werte man bei Gültikgeit der Nullhypothese (also 50% Nomen- vs. 50% Pronomen-Anteil) erwarten könnte. obs &lt;- as_tibble(chires$observed) %&gt;% # shorter column names rename(morgner_obs = morgner_duell, borchert_obs = borchert_kuechenuhr) ex &lt;- as_tibble(round(chires$expected, 0)) %&gt;% # shorter column names rename(morgner_exp = morgner_duell, borchert_exp = borchert_kuechenuhr) # choose first column of tabelle_3 and bind it with the other columns freqenzen &lt;- bind_cols(tabelle_3[, 1], obs, ex) %&gt;% # rename the word classes mutate(wortklasse = ifelse(wortklasse == &quot;NN&quot;, &quot;Nomen&quot;, &quot;Pers.Pronomen&quot;)) freqenzen ## # A tibble: 2 x 5 ## wortklasse morgner_obs borchert_obs morgner_exp borchert_exp ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Nomen 318 117 297 138 ## 2 Pers.Pronomen 121 87 142 66 Wie beeinflusst die Verwendung von Personalpronomen das Textverständnis? Oder anders gefragt: Versteht der Textrezipient einen Text leichter, wenn der Textproduzent Personalpronomen statt Nomen verwendet werden? 9.7 Konnektoren Die Anzahl der Konnektoren (nebenordnende und unterordnende Konjunktionen) in den Kurzegeschichten ist in der folgenden Tabelle zu sehen. Die Junktoren (CCONJ) überwiegen zahlenmäßig wie in den meisten Texten. kurz %&gt;% group_by(doc_id) %&gt;% filter(upos == &quot;CCONJ&quot; | upos == &quot;SCONJ&quot;) %&gt;% count(upos, sort = TRUE) ## # A tibble: 4 x 3 ## # Groups: doc_id [2] ## doc_id upos n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 borchert_kuechenuhr CCONJ 48 ## 2 morgner_duell CCONJ 41 ## 3 morgner_duell SCONJ 19 ## 4 borchert_kuechenuhr SCONJ 18 Welche Konnektoren kamen in den beiden Texten vor? kurz_pivot_wid &lt;- kurz %&gt;% group_by(doc_id, lemma) %&gt;% mutate(lemma = ifelse(lemma == &quot;daß&quot;, &quot;dass&quot;, lemma)) %&gt;% filter(upos == &quot;CCONJ&quot; | upos == &quot;SCONJ&quot;) %&gt;% count(upos, sort = TRUE) %&gt;% pivot_wider(lemma:upos, names_from = doc_id, values_from = n) kurz_pivot_wid %&gt;% rmarkdown::paged_table() In beiden (ähnlich langen) Geschichten hat der Junktor und den Löwenanteil (über 30 Vorkommnisse). In Borcherts Geschichte kommt der adversative Junktor aber häufiger vor als in Morgners Kurzgeschichte. Andere Unterschiede sind marginal bzw. aufgrund der geringen Anzahl kaum statistisch bewertbar. Ein \\(\\chi^2\\)-Quadrat-Test soll bestätigen, dass der Junktor aber signifikant häufiger vorkommt als in Morgners Text. \\(H_0\\): kein signifikanter Unterschied zwischen den beiden Geschichten bezüglich der Häufigkeit von aber. \\(H_1\\): signifikanter Unterschied zwischen den beiden Geschichten bezüglich der Häufigkeit von aber. Vorbereitung: b_aber &lt;- kurz_pivot_wid$borchert_kuechenuhr[2] b_konn &lt;- sum(kurz_pivot_wid$borchert_kuechenuhr[-2], na.rm = TRUE) m_aber &lt;- kurz_pivot_wid$morgner_duell[2] m_konn &lt;- sum(kurz_pivot_wid$morgner_duell[-2], na.rm = TRUE) b_freq &lt;- rbind(b_aber, b_konn) %&gt;% as_tibble() %&gt;% rename(b = V1) m_freq &lt;- rbind(m_aber, m_konn) %&gt;% as_tibble() %&gt;% rename(m = V1) bormor &lt;- bind_cols(b_freq, m_freq) bormor ## # A tibble: 2 x 2 ## b m ## &lt;int&gt; &lt;int&gt; ## 1 12 2 ## 2 54 58 Test: chi_res &lt;- chisq.test(bormor) chi_res ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: bormor ## X-squared = 5.593, df = 1, p-value = 0.01803 Der \\(\\chi^2\\)-Test bestätigt einen signifikanten Unterschied im Gebrauch des Junktors aber. Adversativität wird in Borcherts Kurzgeschichte signifikant häufiger mit dem Junktor aber ausgedrückt als in Morgners Geschichte. 9.8 Äußerungslänge vergleichen In welcher Kurzgeschichte sind die Äußerungen im Durchschnitt länger? Das wollen wir mit dem t-Test prüfen. Zu diesem Zweck kann man alternativ quanteda- oder tidytext-Funktionen nutzen. Zuerst bereiten wir einen Datensatz mit beiden Texten vor. # Condense text, remove spaces and create dataframes bfl &lt;- borchert[-c(1, 41)] %&gt;% str_flatten(collapse = &quot; &quot;) %&gt;% str_squish() %&gt;% as_tibble() %&gt;% rename(text = value) %&gt;% mutate(doc_id = &quot;borchert&quot;) mfl &lt;- morgner[-1] %&gt;% str_flatten(collapse = &quot; &quot;) %&gt;% str_squish() %&gt;% as_tibble() %&gt;% rename(text = value) %&gt;% mutate(doc_id = &quot;morgner&quot;) # Join dataframes kurzgeschichten &lt;- bind_rows(bfl, mfl) Mit quanteda können wir unser Vorhaben folgendermaßen durchführen (in diesem Fall ohne das Programm readtext() zu verwenden): library(quanteda) library(quanteda.textstats) library(quanteda.textplots) # Create corpus from dataframe kurzcorp &lt;- corpus(kurzgeschichten) # Reshape corpus kurzkorp &lt;- corpus_reshape(kurzcorp, to = &quot;sentences&quot;) Mit der Funktion summary() erhalten wir auch die Anzahl der Wortformen (Tokens) und Äußerungen (Sentences). kurzstats &lt;- summary(kurzkorp, n = 209) %&gt;% as_tibble() kurzstats %&gt;% slice_sample(n = 10) ## # A tibble: 10 x 4 ## Text Types Tokens Sentences ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 morgner.9 18 24 1 ## 2 morgner.6 9 9 1 ## 3 borchert.35 7 7 1 ## 4 borchert.79 9 9 1 ## 5 morgner.8 11 11 1 ## 6 borchert.75 21 22 1 ## 7 borchert.63 7 7 1 ## 8 morgner.97 9 9 1 ## 9 morgner.51 2 2 1 ## 10 morgner.39 19 20 1 Daraus kann man die durchschnittliche Äußerungslänge der beiden Texte berechnen. Eine ähnliche quanteda-Funktion ist textstat_summary(). textstat_summary(kurzkorp) %&gt;% slice_sample(n = 6) ## document chars sents tokens types puncts numbers symbols urls tags emojis ## 1 borchert.89 39 1 9 9 2 0 0 0 0 0 ## 2 borchert.67 20 1 6 6 2 0 0 0 0 0 ## 3 morgner.12 64 1 17 16 5 0 0 0 0 0 ## 4 morgner.16 43 1 12 11 4 0 0 0 0 0 ## 5 morgner.46 43 1 5 5 1 0 0 0 0 0 ## 6 borchert.70 29 1 7 7 1 0 0 0 0 0 Um einen t-Test durchzuführen, berechnen wir auch die Standardabweichung (also eine Größe, die Auskunft darüber gibt, wie stark die einzelnen Äußerungslängen vom Durchschnitt abweichen). Die statistische Funktion t.test() erledigt das für uns. Vor dem t-Test spalten wir die Text-Spalte mit der Funktion separate() in zwei neue, so dass die erste Spalte doc_id nur die Namen der beiden Autoren (borchert, morgner) enthält. Das ist notwendig, weil man mit dem t-Test höchstens zwei Gruppen miteinander vergleichen kann. kurzstats &lt;- kurzstats %&gt;% separate(Text, into = c(&quot;doc_id&quot;, &quot;number&quot;), sep = &quot;\\\\.&quot;, extra = &quot;merge&quot;) kurzstats %&gt;% slice_sample(n = 6) ## # A tibble: 6 x 5 ## doc_id number Types Tokens Sentences ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 borchert 34 20 20 1 ## 2 morgner 99 27 34 1 ## 3 borchert 48 6 6 1 ## 4 morgner 12 16 17 1 ## 5 morgner 28 4 4 1 ## 6 morgner 97 9 9 1 Wir führen einen t-Test mit zwei unabhängigen Stichproben (d.h. unseren beiden Kurzgeschichten) durch. Null-Hypothese \\(H_0\\): kein Unterschied hinsichtlich der mittleren Äußerungslängen. Alternative Hypothese \\(H_1\\): die beiden Kurzgeschichten unterscheiden sich hinsichtlich ihrer durchschnittlichen Äußerungslänge. tres &lt;- t.test(Tokens ~ doc_id, data = kurzstats, var.equal = FALSE) tres ## ## Welch Two Sample t-test ## ## data: Tokens by doc_id ## t = -3.1339, df = 121.11, p-value = 0.002164 ## alternative hypothesis: true difference in means between group borchert and group morgner is not equal to 0 ## 95 percent confidence interval: ## -8.539975 -1.927510 ## sample estimates: ## mean in group borchert mean in group morgner ## 10.35849 15.59223 Das Ergebnis des t-Tests (p = 0,002164) liegt unter dem 5 % Signifikanzniveau (p = 0,05). Demnach können wir die Nullhypothese verwerfen und die alternative Hypothese annehmen. Die mittlere Äußerungslänge in Borcherts Kurzgeschichte beträgt etwa 10,36 Tokens (Wörter + Interpunktion), die in Morgners Kurzgeschichte dagegen 15,59 Tokens (Wörter + Interpunktion). Da wir das Ergebnis in der Variable tres gespeichert haben, können wir später auch andere Werte abrufen. Die Standardabweichung (sd) müssen wir allerdings auf andere Weise berechnen. tapply(kurzstats$Tokens, list(kurzstats$doc_id), sd) ## borchert morgner ## 5.048694 16.201814 Die Standardabweichung von Morgners Kurzgeschichte ist etwa 3-mal größer als die von Borcherts Kurzgeschichte. Mit anderen Worten: in Morgners Geschichte gibt es kurze, aber auch sehr lange Äußerungen. In Borcherts Geschichte sind die Schwankungen nicht so groß. Deshalb ist die Standardabweichung viel kleiner. Deshalb war es richtig, dass wir oben beim t.test() die Option var.equal = FALSE angegeben haben. Das Programm hat den statistischen Test demgemäß angepasst. Wir wandeln nun diese Werte in eine Tabelle um, weil wir eine Gesamttabelle zusammenstellen wollen. kurz_sd &lt;- tapply(kurzstats$Tokens, list(kurzstats$doc_id), sd) %&gt;% as_tibble() %&gt;% rename(sd = value) Die beiden Durchschnittswerte und die Freiheitsgrade (df) erhalten wir aus dem t-Test bzw. der oben gespeicherten Variable tres. Wir können diese Werte wiederum in eine Tabelle umwandeln. kurz_mean &lt;- tres$estimate %&gt;% as_tibble() %&gt;% rename(mean = value) Die Freiheitsgrade (auch in eine Tabelle umgewandelt): kurz_df &lt;- tres$parameter %&gt;% as_tibble() %&gt;% rename(df = value) Fügen wir noch den t-Wert und den p-Wert hinzu (wieder in Tabellen umgewandelt). kurz_t &lt;- tres$statistic %&gt;% as_tibble() %&gt;% rename(t = value) kurz_p &lt;- tres$p.value %&gt;% as_tibble() %&gt;% rename(p = value) Die einzelnen Tabellen und die erste Spalte aus der Tabelle kurzstats vereinen wir in einer Gesamttabelle. kurz_tres &lt;- bind_cols(kurzstats %&gt;% dplyr::select(doc_id) %&gt;% distinct(), kurz_mean, kurz_sd, kurz_t, kurz_p, kurz_df) kurz_tres ## # A tibble: 2 x 6 ## doc_id mean sd t p df ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 borchert 10.4 5.05 -3.13 0.00216 121. ## 2 morgner 15.6 16.2 -3.13 0.00216 121. Bei Bedarf kann man noch eine kleine Schönheitskorrektur durchführen: borchert_morgner_t_test &lt;- kurz_tres %&gt;% mutate(t = ifelse(doc_id == &quot;morgner&quot;, NA, t), p = ifelse(doc_id == &quot;morgner&quot;, NA, p), df = ifelse(doc_id == &quot;morgner&quot;, NA, df)) borchert_morgner_t_test %&gt;% rmarkdown::paged_table() Mit dem Programm report erhält man Beschreibungen eines Datensatzes oder statistischer Tests (z.B. des t.test()). library(report) kurzstats %&gt;% group_by(doc_id) %&gt;% report() %&gt;% summary() ## The data contains 209 observations, grouped by doc_id, of the following 5 variables: ## ## - borchert (n = 106): ## - number: 106 entries, such as 1 (0.94%); 10 (0.94%); 100 (0.94%) and 103 others ## - Types: Mean = 9.99, SD = 4.65, range: [2, 22] ## - Tokens: Mean = 10.36, SD = 5.05, range: [2, 25] ## - Sentences: Mean = 1.00, SD = 0.00, range: [1, 1] ## ## - morgner (n = 103): ## - number: 103 entries, such as 1 (0.97%); 10 (0.97%); 100 (0.97%) and 100 others ## - Types: Mean = 13.95, SD = 11.95, range: [2, 70] ## - Tokens: Mean = 15.59, SD = 16.20, range: [2, 103] ## - Sentences: Mean = 1.00, SD = 0.00, range: [1, 1] Bericht über den durchgeführten t.test(). report(t.test(Tokens ~ doc_id, data = kurzstats)) ## Effect sizes were labelled following Cohen&#39;s (1988) recommendations. ## ## The Welch Two Sample t-test testing the difference of Tokens by doc_id (mean in group borchert = 10.36, mean in group morgner = 15.59) suggests that the effect is negative, statistically significant, and medium (difference = -5.23, 95% CI [-8.54, -1.93], t(121.11) = -3.13, p = 0.002; Cohen&#39;s d = -0.57, 95% CI [-0.93, -0.21]) library(ggstatsplot) # for reproducibility set.seed(2021) # plot kurzstats %&gt;% dplyr::select(doc_id, Tokens) %&gt;% ggbetweenstats( x = doc_id, xlab = &quot;&quot;, y = Tokens, ylab = &quot;&quot;, type = &quot;parametric&quot;, plot.type = &quot;boxviolin&quot;, pairwise.display = &quot;significant&quot;, bf.message = FALSE, conf.level = 0.95, outlier.tagging = TRUE, title = &quot;Distribution of sentence length in two short stories&quot;, caption = &quot;programmed by Teodor Petri&quot; ) "],["spracherwerbsdaten.html", "Kapitel 10 Spracherwerbsdaten 10.1 Programme 10.2 Daten lesen 10.3 Verknüpfung der einzelnen Dateien 10.4 1. Häufigkeit insgesamt 10.5 2. Welche d-Form am häufigsten? 10.6 3. Welche Form als erste? 10.7 4. Wann alle d-Formen vertreten? 10.8 5. Bevorzugtes d-Wort von MOT 10.9 6. Welche Formen hört Rahel nie / kaum?", " Kapitel 10 Spracherwerbsdaten 10.1 Programme library(tidyverse) library(scales) library(janitor) library(readxl) 10.2 Daten lesen Verwendet werden die Transkriptionsdateien der normalhörenden deutschsprachigen Kinder im Korpus von Szagun. Zuerst wird das Arbeitsverzeichnis festgelegt. Dann werden alle (relevanten) Excel-Dateien gelesen und in der Variable data (einer Liste) gespeichert, die die Erwerbsdaten von 6 Kindern und deren Müttern enthält. Die Dateien konzentrieren sich auf sechs d-Wörter, die als Demonstrativpronomen und bestimmter Artikel dienen können. Code (Version 1): Wir erhalten 12 Datensätze (6 Kinder und 6 erwachsene Bezugspersonen, meistens die Mutter). library(fs) wd &lt;- getwd() wdd &lt;- paste0(wd,&quot;/data/szagun/&quot;) file_paths &lt;- fs::dir_ls(wdd) file_paths ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Anna.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Anna_M.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Emely.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Emely_M.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Falko.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Falko_M.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Lisa.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Lisa_M.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Rahel.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Rahel_M.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Soeren.xlsx ## D:/Users/teodo/Documents/R/raj2022-book/data/szagun/Soeren_M.xlsx data &lt;- file_paths %&gt;% map(function (path) { readxl::read_xlsx(path, skip = 3) }) # data Code (Version 2): Wir erhalten 12 Datensätze (6 Kinder und 6 erwachsene Bezugspersonen, meistens die Mutter). # rahel &lt;- read_excel(&quot;data/Rahel_Mot.xlsx&quot;) wd &lt;- getwd() wdd &lt;- paste0(wd,&quot;/data/szagun/&quot;) setwd(wdd) data.files = list.files(pattern = &quot;*.xlsx&quot;, recursive = FALSE) # TRUE if subdirectories included data &lt;- lapply(data.files, readxl::read_excel, skip = 3) # data # dataframes: which columns are in common? # common_cols &lt;- intersect(colnames(f), colnames(g)) 10.3 Verknüpfung der einzelnen Dateien Mit Clan wurden 12 Excel-Dateien zusammengestellt. Die Excel-Dateien werden nun zu einer einzelnen zusammengefasst. Zu diesem Zweck werden mit Hilfe einer Programm-Schleife mehrere Veränderungen vorgenommen: - die data-Liste wird in einen Datensatz umgewandelt (as.data.frame, as_tibble), - nicht relevante Variablen eliminiert (select), - Variablen umbenannt (rename), - neue Variablen aus bereits bestehenden geschaffen (separate), - fehlende Spalten (z.B. für das) hinzugefügt (if  add_column), - Variablen konvertiert (as.numeric). szagun &lt;- NULL szagun &lt;- data.frame() for(i in 1:length(data)){ f &lt;- data[i] %&gt;% as.data.frame() %&gt;% as_tibble() %&gt;% clean_names() %&gt;% select(-c(language, corpus, sex, group, race, ses, role, education, custom_field)) %&gt;% rename(utterances = starts_with(&quot;x_&quot;)) %&gt;% # mutate(des = ifelse(&quot;des&quot; %in% names(.), des, NA)) %&gt;% # add missing column &quot;des&quot; (but this doesn&#39;t work) separate(file, into = c(&quot;id&quot;, &quot;location&quot;), sep = &quot;,&quot;) %&gt;% select(-location) %&gt;% rename(ageof = age) %&gt;% separate(id, into = c(&quot;id&quot;, &quot;age&quot;), sep = &quot;_&quot;) if(!&#39;des&#39; %in% names(f)) { # if column &quot;des&quot; is missing, add it to dataframe, fill 0 f &lt;- f %&gt;% add_column(des = 0)} # append file to previous file szagun &lt;- rbind(szagun, f) } szagun &lt;- szagun %&gt;% mutate(ttr = as.numeric(ttr)) Die gemeinsamen Spalten in Datensätzen (hier: f) kann man übrigens mit der Funktion intersect() herausfinden. common_cols &lt;- intersect(colnames(f), colnames(f)) Hier ist nun die gesamte Tabelle (mit 6 Kindern und 6 Erwachsenen) für den von Szagun ausgewählten Beobachtungszeitraum. library(DT) szagun %&gt;% # DT::datatable(slcas_stat, fillContainer = TRUE, filter = &quot;top&quot;, # options = list(pageLength = 4)) DT::datatable( filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c( &#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;))) %&gt;% formatStyle(&quot;id&quot;, target = &#39;row&#39;, backgroundColor = styleEqual( c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) In der Gesamttabelle haben wir einen Fehler, den wir noch berichtigen müssen. Für die Mütter stehen uns nicht für jeden Monat Zahlen zur Verfügung. Dieser Zuordnungsfehler (MOT-Daten bei CHI zugeordnet) ist in der Graphik mit plotly (s.u.) bemerkbar. Außerdem gibt es auch kleinere monatliche Unterschiede bei den Kindern. Die Altersangaben müssen wir demnach vereinfachen (nur Jahr und Monat, eventuell auch bestimmte Monate zusammenfassen). Das lassen wir im Augenblick noch außer Acht. 10.4 1. Häufigkeit insgesamt (gesamt &lt;- szagun %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(age, code, d_wort) %&gt;% summarise(avg_freq = mean(freq/utterances)) %&gt;% ggplot(aes(age, avg_freq, group = code, fill = d_wort)) + geom_col() + geom_smooth(se = F) + scale_y_continuous(labels = label_percent(accuracy = 1)) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + facet_wrap(~ code, dir = &quot;v&quot;) ) ggsave(plot = gesamt, filename =&quot;pictures/szagun_gesamtfrequenz.jpg&quot;, dpi = 300) library(plotly) ggplotly(gesamt) 10.5 2. Welche d-Form am häufigsten? (topn &lt;- szagun %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(code, d_wort) %&gt;% add_count(d_wort) %&gt;% summarise(pct = sum(freq) / n) %&gt;% mutate(d_wort = fct_reorder(d_wort, pct)) %&gt;% ggplot(aes(pct, code, fill = d_wort)) + geom_col(position = &quot;fill&quot;) + scale_x_continuous(labels = label_percent()) ) ggsave(plot = topn, filename =&quot;pictures/szagun_frequenzverteilung.jpg&quot;, dpi = 300) d &lt;- szagun %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(code, d_wort) %&gt;% summarise(pct = sum(freq)) %&gt;% pivot_wider(names_from = code, values_from = pct) d %&gt;% arrange(-CHI) %&gt;% rmarkdown::paged_table() Sowohl bei den Kindern (CHI) als auch bei den Müttern (MOT) ergibt sich fast dieselbe Reihenfolge der Häufigkeiten. Der auffälligste Unterschied ist der zwischen den Häufigkeiten von des und dem. Mit dem \\(\\chi^2\\)-Quadrat-Test kann man prüfen, ob die beiden Stichproben statistisch signifikant unterschiedlich sind. chires &lt;- chisq.test(d[,-1], B = 2000) # B: mit Monte Carlo test chires ## ## Pearson&#39;s Chi-squared test ## ## data: d[, -1] ## X-squared = 387.09, df = 5, p-value &lt; 2.2e-16 observed &lt;- chires$observed %&gt;% as_tibble() %&gt;% round(0) %&gt;% rename(CHI_obs = CHI, MOT_obs = MOT) expected &lt;- chires$expected %&gt;% as_tibble() %&gt;% round(0) %&gt;% rename(CHI_exp = CHI, MOT_exp = MOT) frequenztabelle &lt;- bind_cols(d[,1], observed, expected) frequenztabelle %&gt;% arrange(-CHI_obs) %&gt;% rmarkdown::paged_table() Hier folgt ein \\(\\chi^2\\)-Quadrat-Test mit einem Kind, und zwar mit Rahel und ihrer MOT: szagun %&gt;% filter(id == &quot;Rahel&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(code, d_wort) %&gt;% summarise(freqs = sum(freq)) %&gt;% pivot_wider(names_from = code, values_from = freqs) %&gt;% select(-d_wort) %&gt;% chisq.test(.) ## ## Pearson&#39;s Chi-squared test ## ## data: . ## X-squared = 192.25, df = 5, p-value &lt; 2.2e-16 Eine Frequenztabelle mit den d-Wörtern von Soren und seiner MOT (aber ohne \\(\\chi^2\\)-Quadrat-Test): szagun %&gt;% filter(id == &quot;Soeren&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(code, d_wort) %&gt;% summarise(freqs = sum(freq)) %&gt;% pivot_wider(names_from = code, values_from = freqs) ## # A tibble: 6 x 3 ## d_wort CHI MOT ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 das 2552 1136 ## 2 dem 9 24 ## 3 den 432 198 ## 4 der 1101 300 ## 5 des 24 1 ## 6 die 1556 519 10.6 3. Welche Form als erste? Zur Beantwortung dieser Frage filtern wir zuerst die Spalten id und code. Dann sortieren wir die jeweilige Tabellen für das ausgewählte Kind nach Alter age. Mit der Funktion pivot_longer() bilden wir eine lange Tabellenform. szagun %&gt;% filter(id == &quot;Rahel&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(freq &gt; 0) ## # A tibble: 92 x 10 ## # Groups: age [22] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Rahel 10400 CHI 1;4.02 428 1 4 0.25 die 4 ## 2 Rahel 10507 CHI 1;5.16 630 3 4 0.75 das 1 ## 3 Rahel 10507 CHI 1;5.16 630 3 4 0.75 der 1 ## 4 Rahel 10507 CHI 1;5.16 630 3 4 0.75 des 2 ## 5 Rahel 10614 CHI 1;6.23 632 2 16 0.125 das 1 ## 6 Rahel 10614 CHI 1;6.23 632 2 16 0.125 die 15 ## 7 Rahel 10800 CHI 1;8.08 909 3 11 0.273 das 8 ## 8 Rahel 10800 CHI 1;8.08 909 3 11 0.273 des 1 ## 9 Rahel 10800 CHI 1;8.08 909 3 11 0.273 die 2 ## 10 Rahel 10907 CHI 1;9.07 424 3 6 0.5 das 4 ## # ... with 82 more rows szagun %&gt;% filter(id == &quot;Anna&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(freq &gt; 0) ## # A tibble: 116 x 10 ## # Groups: age [22] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Anna 10400 CHI 1;4.05 230 2 12 0.167 das 1 ## 2 Anna 10400 CHI 1;4.05 230 2 12 0.167 die 11 ## 3 Anna 10507 CHI 1;5.15 633 4 23 0.174 das 7 ## 4 Anna 10507 CHI 1;5.15 633 4 23 0.174 den 1 ## 5 Anna 10507 CHI 1;5.15 633 4 23 0.174 des 5 ## 6 Anna 10507 CHI 1;5.15 633 4 23 0.174 die 10 ## 7 Anna 10614 CHI 1;6.26 845 4 76 0.053 das 68 ## 8 Anna 10614 CHI 1;6.26 845 4 76 0.053 der 1 ## 9 Anna 10614 CHI 1;6.26 845 4 76 0.053 des 1 ## 10 Anna 10614 CHI 1;6.26 845 4 76 0.053 die 6 ## # ... with 106 more rows szagun %&gt;% filter(id == &quot;Emely&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(freq &gt; 0) ## # A tibble: 78 x 10 ## # Groups: age [21] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Emely 10407 CHI 1;4.07 374 1 1 1 des 1 ## 2 Emely 10507 CHI 1;5.11 235 2 2 1 das 1 ## 3 Emely 10507 CHI 1;5.11 235 2 2 1 des 1 ## 4 Emely 10813 CHI 1;8.13 321 2 2 1 das 1 ## 5 Emely 10813 CHI 1;8.13 321 2 2 1 des 1 ## 6 Emely 10907 CHI 1;9.22 720 3 40 0.075 der 3 ## 7 Emely 10907 CHI 1;9.22 720 3 40 0.075 des 1 ## 8 Emely 10907 CHI 1;9.22 720 3 40 0.075 die 36 ## 9 Emely 11014 CHI 1;10.27 875 4 76 0.053 das 1 ## 10 Emely 11014 CHI 1;10.27 875 4 76 0.053 der 1 ## # ... with 68 more rows szagun %&gt;% filter(id == &quot;Falko&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(freq &gt; 0) ## # A tibble: 93 x 10 ## # Groups: age [19] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Falko 10800 CHI 1;08.00 311 1 2 0.5 die 2 ## 2 Falko 10907 CHI 1;9.07 238 2 3 0.667 das 1 ## 3 Falko 10907 CHI 1;9.07 238 2 3 0.667 den 2 ## 4 Falko 11014 CHI 1;10.20 378 2 28 0.071 das 27 ## 5 Falko 11014 CHI 1;10.20 378 2 28 0.071 der 1 ## 6 Falko 20000 CHI 2;0.06 817 6 55 0.109 das 37 ## 7 Falko 20000 CHI 2;0.06 817 6 55 0.109 dem 1 ## 8 Falko 20000 CHI 2;0.06 817 6 55 0.109 den 7 ## 9 Falko 20000 CHI 2;0.06 817 6 55 0.109 der 4 ## 10 Falko 20000 CHI 2;0.06 817 6 55 0.109 des 1 ## # ... with 83 more rows szagun %&gt;% filter(id == &quot;Lisa&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(freq &gt; 0) ## # A tibble: 94 x 10 ## # Groups: age [21] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Lisa 10507 CHI 1;5.08 694 2 3 0.667 das 1 ## 2 Lisa 10507 CHI 1;5.08 694 2 3 0.667 die 2 ## 3 Lisa 10614 CHI 1;6.13 555 2 24 0.083 den 1 ## 4 Lisa 10614 CHI 1;6.13 555 2 24 0.083 die 23 ## 5 Lisa 10800 CHI 1;8.02 410 3 11 0.273 den 3 ## 6 Lisa 10800 CHI 1;8.02 410 3 11 0.273 der 3 ## 7 Lisa 10800 CHI 1;8.02 410 3 11 0.273 die 5 ## 8 Lisa 10907 CHI 1;9.07 580 4 20 0.2 das 2 ## 9 Lisa 10907 CHI 1;9.07 580 4 20 0.2 den 3 ## 10 Lisa 10907 CHI 1;9.07 580 4 20 0.2 der 5 ## # ... with 84 more rows szagun %&gt;% filter(id == &quot;Soeren&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(freq &gt; 0) ## # A tibble: 95 x 10 ## # Groups: age [22] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Soeren 10400 CHI 1;4. 487 1 1 1 das 1 ## 2 Soeren 10507 CHI 1;5.09 663 2 21 0.095 das 19 ## 3 Soeren 10507 CHI 1;5.09 663 2 21 0.095 der 2 ## 4 Soeren 10614 CHI 1;6.23 765 4 68 0.059 das 23 ## 5 Soeren 10614 CHI 1;6.23 765 4 68 0.059 den 39 ## 6 Soeren 10614 CHI 1;6.23 765 4 68 0.059 der 1 ## 7 Soeren 10614 CHI 1;6.23 765 4 68 0.059 die 5 ## 8 Soeren 10800 CHI 1;8. 753 5 84 0.06 das 42 ## 9 Soeren 10800 CHI 1;8. 753 5 84 0.06 dem 1 ## 10 Soeren 10800 CHI 1;8. 753 5 84 0.06 den 35 ## # ... with 85 more rows 10.7 4. Wann alle d-Formen vertreten? Die Vorgangsweise ist fast dieselbe wie bei der vorherigen Frage, aber wir filtern dieses Mal zusätzlich die Anzahl der types. szagun %&gt;% filter(id == &quot;Rahel&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types &gt;= 5) ## # A tibble: 66 x 10 ## # Groups: age [11] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Rahel 20107 CHI 2;1.15 556 5 25 0.2 das 18 ## 2 Rahel 20107 CHI 2;1.15 556 5 25 0.2 dem 0 ## 3 Rahel 20107 CHI 2;1.15 556 5 25 0.2 den 1 ## 4 Rahel 20107 CHI 2;1.15 556 5 25 0.2 der 1 ## 5 Rahel 20107 CHI 2;1.15 556 5 25 0.2 des 3 ## 6 Rahel 20107 CHI 2;1.15 556 5 25 0.2 die 2 ## 7 Rahel 20400 CHI 2;4. 1115 5 122 0.041 das 100 ## 8 Rahel 20400 CHI 2;4. 1115 5 122 0.041 dem 0 ## 9 Rahel 20400 CHI 2;4. 1115 5 122 0.041 den 2 ## 10 Rahel 20400 CHI 2;4. 1115 5 122 0.041 der 5 ## # ... with 56 more rows szagun %&gt;% filter(id == &quot;Rahel&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types == 6) ## # A tibble: 12 x 10 ## # Groups: age [2] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Rahel 21014 CHI 2;10.27 741 6 362 0.017 das 159 ## 2 Rahel 21014 CHI 2;10.27 741 6 362 0.017 dem 3 ## 3 Rahel 21014 CHI 2;10.27 741 6 362 0.017 den 5 ## 4 Rahel 21014 CHI 2;10.27 741 6 362 0.017 der 57 ## 5 Rahel 21014 CHI 2;10.27 741 6 362 0.017 des 1 ## 6 Rahel 21014 CHI 2;10.27 741 6 362 0.017 die 137 ## 7 Rahel 30107 CHI 3;1.10 1035 6 420 0.014 das 233 ## 8 Rahel 30107 CHI 3;1.10 1035 6 420 0.014 dem 4 ## 9 Rahel 30107 CHI 3;1.10 1035 6 420 0.014 den 16 ## 10 Rahel 30107 CHI 3;1.10 1035 6 420 0.014 der 57 ## 11 Rahel 30107 CHI 3;1.10 1035 6 420 0.014 des 1 ## 12 Rahel 30107 CHI 3;1.10 1035 6 420 0.014 die 109 szagun %&gt;% filter(id == &quot;Anna&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types &gt;= 5) ## # A tibble: 114 x 10 ## # Groups: age [19] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Anna 10800 CHI 1;8.04 1247 5 87 0.057 das 66 ## 2 Anna 10800 CHI 1;8.04 1247 5 87 0.057 dem 0 ## 3 Anna 10800 CHI 1;8.04 1247 5 87 0.057 den 5 ## 4 Anna 10800 CHI 1;8.04 1247 5 87 0.057 der 1 ## 5 Anna 10800 CHI 1;8.04 1247 5 87 0.057 des 2 ## 6 Anna 10800 CHI 1;8.04 1247 5 87 0.057 die 13 ## 7 Anna 10907 CHI 1;9.20 1076 5 149 0.034 das 127 ## 8 Anna 10907 CHI 1;9.20 1076 5 149 0.034 dem 0 ## 9 Anna 10907 CHI 1;9.20 1076 5 149 0.034 den 5 ## 10 Anna 10907 CHI 1;9.20 1076 5 149 0.034 der 7 ## # ... with 104 more rows szagun %&gt;% filter(id == &quot;Anna&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types == 6) ## # A tibble: 66 x 10 ## # Groups: age [11] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Anna 20000 CHI 2;0.06 957 6 226 0.027 das 93 ## 2 Anna 20000 CHI 2;0.06 957 6 226 0.027 dem 1 ## 3 Anna 20000 CHI 2;0.06 957 6 226 0.027 den 4 ## 4 Anna 20000 CHI 2;0.06 957 6 226 0.027 der 32 ## 5 Anna 20000 CHI 2;0.06 957 6 226 0.027 des 9 ## 6 Anna 20000 CHI 2;0.06 957 6 226 0.027 die 87 ## 7 Anna 20214 CHI 2;2.26 929 6 251 0.024 das 55 ## 8 Anna 20214 CHI 2;2.26 929 6 251 0.024 dem 3 ## 9 Anna 20214 CHI 2;2.26 929 6 251 0.024 den 14 ## 10 Anna 20214 CHI 2;2.26 929 6 251 0.024 der 57 ## # ... with 56 more rows szagun %&gt;% filter(id == &quot;Emely&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types &gt;= 5) ## # A tibble: 54 x 10 ## # Groups: age [9] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Emely 20907 CHI 2;9.15 1103 5 161 0.031 das 107 ## 2 Emely 20907 CHI 2;9.15 1103 5 161 0.031 dem 0 ## 3 Emely 20907 CHI 2;9.15 1103 5 161 0.031 den 4 ## 4 Emely 20907 CHI 2;9.15 1103 5 161 0.031 der 28 ## 5 Emely 20907 CHI 2;9.15 1103 5 161 0.031 des 3 ## 6 Emely 20907 CHI 2;9.15 1103 5 161 0.031 die 19 ## 7 Emely 21014 CHI 2;10.16 1004 5 217 0.023 das 141 ## 8 Emely 21014 CHI 2;10.16 1004 5 217 0.023 dem 0 ## 9 Emely 21014 CHI 2;10.16 1004 5 217 0.023 den 7 ## 10 Emely 21014 CHI 2;10.16 1004 5 217 0.023 der 28 ## # ... with 44 more rows szagun %&gt;% filter(id == &quot;Emely&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types == 6) ## # A tibble: 0 x 10 ## # Groups: age [0] ## # ... with 10 variables: id &lt;chr&gt;, age &lt;chr&gt;, code &lt;chr&gt;, ageof &lt;chr&gt;, ## # utterances &lt;dbl&gt;, types &lt;dbl&gt;, token &lt;dbl&gt;, ttr &lt;dbl&gt;, d_wort &lt;chr&gt;, ## # freq &lt;dbl&gt; szagun %&gt;% filter(id == &quot;Falko&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types &gt;= 5) ## # A tibble: 90 x 10 ## # Groups: age [15] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Falko 20000 CHI 2;0.06 817 6 55 0.109 das 37 ## 2 Falko 20000 CHI 2;0.06 817 6 55 0.109 dem 1 ## 3 Falko 20000 CHI 2;0.06 817 6 55 0.109 den 7 ## 4 Falko 20000 CHI 2;0.06 817 6 55 0.109 der 4 ## 5 Falko 20000 CHI 2;0.06 817 6 55 0.109 des 1 ## 6 Falko 20000 CHI 2;0.06 817 6 55 0.109 die 5 ## 7 Falko 20107 CHI 2;1.14 734 5 251 0.02 das 195 ## 8 Falko 20107 CHI 2;1.14 734 5 251 0.02 dem 0 ## 9 Falko 20107 CHI 2;1.14 734 5 251 0.02 den 5 ## 10 Falko 20107 CHI 2;1.14 734 5 251 0.02 der 6 ## # ... with 80 more rows szagun %&gt;% filter(id == &quot;Falko&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types == 6) ## # A tibble: 54 x 10 ## # Groups: age [9] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Falko 20000 CHI 2;0.06 817 6 55 0.109 das 37 ## 2 Falko 20000 CHI 2;0.06 817 6 55 0.109 dem 1 ## 3 Falko 20000 CHI 2;0.06 817 6 55 0.109 den 7 ## 4 Falko 20000 CHI 2;0.06 817 6 55 0.109 der 4 ## 5 Falko 20000 CHI 2;0.06 817 6 55 0.109 des 1 ## 6 Falko 20000 CHI 2;0.06 817 6 55 0.109 die 5 ## 7 Falko 20614 CHI 2;6.25 806 6 290 0.021 das 149 ## 8 Falko 20614 CHI 2;6.25 806 6 290 0.021 dem 1 ## 9 Falko 20614 CHI 2;6.25 806 6 290 0.021 den 17 ## 10 Falko 20614 CHI 2;6.25 806 6 290 0.021 der 42 ## # ... with 44 more rows szagun %&gt;% filter(id == &quot;Lisa&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types &gt;= 5) ## # A tibble: 66 x 10 ## # Groups: age [11] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Lisa 20400 CHI 2;4.06 693 5 140 0.036 das 94 ## 2 Lisa 20400 CHI 2;4.06 693 5 140 0.036 dem 0 ## 3 Lisa 20400 CHI 2;4.06 693 5 140 0.036 den 20 ## 4 Lisa 20400 CHI 2;4.06 693 5 140 0.036 der 4 ## 5 Lisa 20400 CHI 2;4.06 693 5 140 0.036 des 6 ## 6 Lisa 20400 CHI 2;4.06 693 5 140 0.036 die 16 ## 7 Lisa 20507 CHI 2;5.16 735 6 126 0.048 das 46 ## 8 Lisa 20507 CHI 2;5.16 735 6 126 0.048 dem 1 ## 9 Lisa 20507 CHI 2;5.16 735 6 126 0.048 den 35 ## 10 Lisa 20507 CHI 2;5.16 735 6 126 0.048 der 9 ## # ... with 56 more rows szagun %&gt;% filter(id == &quot;Lisa&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types == 6) ## # A tibble: 30 x 10 ## # Groups: age [5] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Lisa 20507 CHI 2;5.16 735 6 126 0.048 das 46 ## 2 Lisa 20507 CHI 2;5.16 735 6 126 0.048 dem 1 ## 3 Lisa 20507 CHI 2;5.16 735 6 126 0.048 den 35 ## 4 Lisa 20507 CHI 2;5.16 735 6 126 0.048 der 9 ## 5 Lisa 20507 CHI 2;5.16 735 6 126 0.048 des 2 ## 6 Lisa 20507 CHI 2;5.16 735 6 126 0.048 die 33 ## 7 Lisa 30000 CHI 2;11.30 602 6 197 0.03 das 94 ## 8 Lisa 30000 CHI 2;11.30 602 6 197 0.03 dem 2 ## 9 Lisa 30000 CHI 2;11.30 602 6 197 0.03 den 12 ## 10 Lisa 30000 CHI 2;11.30 602 6 197 0.03 der 13 ## # ... with 20 more rows szagun %&gt;% filter(id == &quot;Soeren&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types &gt;= 5) ## # A tibble: 72 x 10 ## # Groups: age [12] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Soeren 10800 CHI 1;8. 753 5 84 0.06 das 42 ## 2 Soeren 10800 CHI 1;8. 753 5 84 0.06 dem 1 ## 3 Soeren 10800 CHI 1;8. 753 5 84 0.06 den 35 ## 4 Soeren 10800 CHI 1;8. 753 5 84 0.06 der 3 ## 5 Soeren 10800 CHI 1;8. 753 5 84 0.06 des 0 ## 6 Soeren 10800 CHI 1;8. 753 5 84 0.06 die 3 ## 7 Soeren 20000 CHI 2;0.02 679 5 101 0.05 das 60 ## 8 Soeren 20000 CHI 2;0.02 679 5 101 0.05 dem 1 ## 9 Soeren 20000 CHI 2;0.02 679 5 101 0.05 den 14 ## 10 Soeren 20000 CHI 2;0.02 679 5 101 0.05 der 13 ## # ... with 62 more rows szagun %&gt;% filter(id == &quot;Soeren&quot;, code == &quot;CHI&quot;) %&gt;% group_by(age) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% filter(types == 6) ## # A tibble: 6 x 10 ## # Groups: age [1] ## id age code ageof utterances types token ttr d_wort freq ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Soeren 30214 CHI 3;2.21 1119 6 361 0.017 das 169 ## 2 Soeren 30214 CHI 3;2.21 1119 6 361 0.017 dem 2 ## 3 Soeren 30214 CHI 3;2.21 1119 6 361 0.017 den 25 ## 4 Soeren 30214 CHI 3;2.21 1119 6 361 0.017 der 67 ## 5 Soeren 30214 CHI 3;2.21 1119 6 361 0.017 des 2 ## 6 Soeren 30214 CHI 3;2.21 1119 6 361 0.017 die 96 10.8 5. Bevorzugtes d-Wort von MOT szagun %&gt;% filter(id == &quot;Rahel&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(-sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 das 1051 ## 2 die 602 ## 3 der 382 ## 4 den 217 ## 5 dem 73 ## 6 des 1 szagun %&gt;% filter(id == &quot;Anna&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(-sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 das 1315 ## 2 die 1052 ## 3 der 557 ## 4 den 252 ## 5 dem 132 ## 6 des 129 szagun %&gt;% filter(id == &quot;Emely&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(-sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 das 831 ## 2 die 376 ## 3 der 287 ## 4 den 106 ## 5 des 66 ## 6 dem 24 szagun %&gt;% filter(id == &quot;Falko&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(-sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 das 951 ## 2 die 594 ## 3 der 468 ## 4 den 175 ## 5 dem 44 ## 6 des 0 szagun %&gt;% filter(id == &quot;Lisa&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(-sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 das 1235 ## 2 die 635 ## 3 der 275 ## 4 den 186 ## 5 dem 81 ## 6 des 1 szagun %&gt;% filter(id == &quot;Soeren&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(-sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 das 1136 ## 2 die 519 ## 3 der 300 ## 4 den 198 ## 5 dem 24 ## 6 des 1 10.9 6. Welche Formen hört Rahel nie / kaum? szagun %&gt;% filter(id == &quot;Rahel&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 des 1 ## 2 dem 73 ## 3 den 217 ## 4 der 382 ## 5 die 602 ## 6 das 1051 szagun %&gt;% filter(id == &quot;Anna&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 des 129 ## 2 dem 132 ## 3 den 252 ## 4 der 557 ## 5 die 1052 ## 6 das 1315 szagun %&gt;% filter(id == &quot;Emely&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 dem 24 ## 2 des 66 ## 3 den 106 ## 4 der 287 ## 5 die 376 ## 6 das 831 szagun %&gt;% filter(id == &quot;Falko&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 des 0 ## 2 dem 44 ## 3 den 175 ## 4 der 468 ## 5 die 594 ## 6 das 951 szagun %&gt;% filter(id == &quot;Lisa&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 des 1 ## 2 dem 81 ## 3 den 186 ## 4 der 275 ## 5 die 635 ## 6 das 1235 szagun %&gt;% filter(id == &quot;Soeren&quot;, code == &quot;MOT&quot;) %&gt;% pivot_longer(das:die, names_to = &quot;d_wort&quot;, values_to = &quot;freq&quot;) %&gt;% group_by(d_wort) %&gt;% summarise(sum = sum(freq)) %&gt;% arrange(sum) ## # A tibble: 6 x 2 ## d_wort sum ## &lt;chr&gt; &lt;dbl&gt; ## 1 des 1 ## 2 dem 24 ## 3 den 198 ## 4 der 300 ## 5 die 519 ## 6 das 1136 "],["textvergleich.html", "Kapitel 11 Textvergleich 11.1 Programi 11.2 Preberemo besedila 11.3 Ustvarimo korpus 11.4 Tokenizacija 11.5 ienje 11.6 Kwic 11.7 Pogostnost 11.8 Kolokacije 11.9 Lematizacija 11.10 Besedni oblaek 11.11 Poloaj v besedilu (xray) 11.12 Slovarska raznolikost 11.13 Podobnost besedil 11.14 Kljune besede 11.15 Razumljivost besedil 11.16 Omreje sopojavitev (FCM) 11.17 Slovnina analiza 11.18 Sentiment", " Kapitel 11 Textvergleich 11.1 Programi Nameanje programov (Packages) Namestitev: e ste program(e) e namestili, lahko preskoite ta korak. Znak # v programskem bloku (chunk) pomeni, da se ta vrstica ne izvaja. Odstrani # e elite program namestiti. # # Programe, ki jih e nimate, lahko namestite tudi na ta nain (odstranite #): # install.packages(&quot;readtext&quot;) # ... ## First specify the packages of interest packages = c(&quot;tidyverse&quot;, &quot;quanteda&quot;, &quot;quanteda.textplots&quot;, &quot;quanteda.textstats&quot;, &quot;wordcloud2&quot;, &quot;tidytext&quot;, &quot;udpipe&quot;, &quot;janitor&quot;, &quot;scales&quot;, &quot;widyr&quot;, &quot;syuzhet&quot;, &quot;corpustools&quot;, &quot;readtext&quot;) # Install packages not yet installed installed_packages &lt;- packages %in% rownames(installed.packages()) if (any(installed_packages == FALSE)) { install.packages(packages[!installed_packages]) } # Packages loading invisible(lapply(packages, library, character.only = TRUE)) Najprej moramo zagnati programe, ki jih potrebujemo za nartovano delo. library(readtext) library(quanteda) library(quanteda.textstats) library(quanteda.textplots) library(tidyverse) library(tidytext) library(wordcloud2) library(udpipe) library(janitor) library(scales) library(widyr) library(syuzhet) library(corpustools) 11.2 Preberemo besedila txt = readtext(&quot;data/books/*.txt&quot;, encoding = &quot;UTF-8&quot;) txt ## readtext object consisting of 2 documents and 0 docvars. ## # Description: df [2 x 2] ## doc_id text ## &lt;chr&gt; &lt;chr&gt; ## 1 prozess.txt &quot;\\&quot;Der Prozes\\&quot;...&quot; ## 2 tom.txt &quot;\\&quot;Tom Sawyer\\&quot;...&quot; Alternativno lahko besedila preberemo tudi z medmreja: txt1 = readtext(&quot;https://raw.githubusercontent.com/tpetric7/tpetric7.github.io/main/data/books/prozess.txt&quot;, encoding = &quot;UTF-8&quot;) txt2 = readtext(&quot;https://raw.githubusercontent.com/tpetric7/tpetric7.github.io/main/data/books/tom.txt&quot;, encoding = &quot;UTF-8&quot;) # Datoteki zdruimo txt = rbind(txt1,txt2) 11.3 Ustvarimo korpus Ustvarimo korpus ali jezikovno gradivo. Ukaz v programu quanteda je corpus(). romane = corpus(txt) Povzetek: Program quanteda ima dve funkciji za povzemanje: - summary() - textstat_summary() (romanstatistik = textstat_summary(romane) ) ## document chars sents tokens types puncts numbers symbols urls tags emojis ## 1 prozess.txt 482722 3845 88010 7907 16380 10 0 0 0 0 ## 2 tom.txt 460249 4652 85841 9860 18785 9 0 0 0 0 povzetek = summary(romane) povzetek ## Corpus consisting of 2 documents, showing 2 documents: ## ## Text Types Tokens Sentences ## prozess.txt 8507 88010 3845 ## tom.txt 10551 85841 4652 Podatke iz povzetka bi lahko uporabili npr. za izraun povprene doline povedi v besedilih: povzetek %&gt;% group_by(Text) %&gt;% mutate(dolzina_povedi = Tokens/Sentences) ## # A tibble: 2 x 5 ## # Groups: Text [2] ## Text Types Tokens Sentences dolzina_povedi ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 prozess.txt 8507 88010 3845 22.9 ## 2 tom.txt 10551 85841 4652 18.5 Lahko bi tudi izraunali kazalnik slovarske raznolikosti v besedilih, tj. razmerje med razlinimi (types) in pojavnicami (tokens), kar se angleini imenuje type token ratio (ttr). Razlikujemo med slovarskimi enotami (lemma), razlinicami (types) in pojavnicami (tokens): npr. nemki glagol gehen je slovarska enota, ki ima ve razlinic ali oblik (npr. gehe, gehst, geht, gehen, geht, ging, gingst,  gegangen). Pojavnice: nekatere oblike glagola so pogosteje kot druge, nekatere pa se v izbranem besedilu ne pojavljajo. povzetek %&gt;% group_by(Text) %&gt;% mutate(ttr = Types/Tokens) ## # A tibble: 2 x 5 ## # Groups: Text [2] ## Text Types Tokens Sentences ttr ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 prozess.txt 8507 88010 3845 0.0967 ## 2 tom.txt 10551 85841 4652 0.123 Program quanteda ima za ugotavljanje slovarske raznolikosti (lexical diversity) ve monosti, kar zahteva razcepitev besedil na manje enote, tj. tokens (besede, loila idr.). Za nekatere funkcije moramo ustvariti besedilno matriko (document frequency matrix, dfm). 11.4 Tokenizacija e elimo ve izvedeti o besedilih, npr. katere besede se pojavljajo v besedilih, moramo najprej ustvariti seznam besedilnih enot (tj. besed, loil idr.). Iz gradiva izvleemo besedne oblike (npr. s pomojo presledkov). Za tokenizacijo ima quanteda ukaz tokens(). besede = tokens(romane) head(besede) ## Tokens consisting of 2 documents. ## prozess.txt : ## [1] &quot;Der&quot; &quot;Prozess&quot; &quot;by&quot; ## [4] &quot;Franz&quot; &quot;Kafka&quot; &quot;Aligned&quot; ## [7] &quot;by&quot; &quot;:&quot; &quot;bilingual-texts.com&quot; ## [10] &quot;(&quot; &quot;fully&quot; &quot;reviewed&quot; ## [ ... and 87,998 more ] ## ## tom.txt : ## [1] &quot;Tom&quot; &quot;Sawyer&quot; &quot;by&quot; &quot;Mark&quot; ## [5] &quot;Twain&quot; &quot;Aligned&quot; &quot;by&quot; &quot;:&quot; ## [9] &quot;András&quot; &quot;Farkas&quot; &quot;(&quot; &quot;autoalignment&quot; ## [ ... and 85,829 more ] 11.5 ienje S seznama lahko izloimo nebesede: besede = tokens(romane, remove_punct = T, remove_symbols = T, remove_numbers = T, remove_url = T) head(besede) ## Tokens consisting of 2 documents. ## prozess.txt : ## [1] &quot;Der&quot; &quot;Prozess&quot; &quot;by&quot; ## [4] &quot;Franz&quot; &quot;Kafka&quot; &quot;Aligned&quot; ## [7] &quot;by&quot; &quot;bilingual-texts.com&quot; &quot;fully&quot; ## [10] &quot;reviewed&quot; &quot;Der&quot; &quot;Prozess&quot; ## [ ... and 71,608 more ] ## ## tom.txt : ## [1] &quot;Tom&quot; &quot;Sawyer&quot; &quot;by&quot; &quot;Mark&quot; ## [5] &quot;Twain&quot; &quot;Aligned&quot; &quot;by&quot; &quot;András&quot; ## [9] &quot;Farkas&quot; &quot;autoalignment&quot; &quot;Source&quot; &quot;Project&quot; ## [ ... and 67,035 more ] Izloimo lahko tudi besede, ki za vsebinsko analizo niso zaelene (stopwords). V izbranih besedilih motijo tudi angleke besede, ki niso sestavni del nemkih besedil. concatenate = zdrui: c() stoplist_de = c(stopwords(&quot;de&quot;), &quot;dass&quot;, &quot;Aligned&quot;, &quot;by&quot;, &quot;autoalignment&quot;, &quot;Source&quot;, &quot;Project&quot;, &quot;bilingual-texts.com&quot;, &quot;fully&quot;, &quot;reviewed&quot;) besede = tokens_select(besede, pattern = stoplist_de, selection = &quot;remove&quot;) Naslednji seznam bomo uporabljali za ustvarjanje konkordance, tj. seznama sobesedil, v katerem se nahaja iskalni niz (npr. neka beseda). stoplist_en = c(&quot;Aligned&quot;, &quot;by&quot;, &quot;autoalignment&quot;, &quot;Source&quot;, &quot;Project&quot;, &quot;bilingual-texts.com&quot;, &quot;fully&quot;, &quot;reviewed&quot;) # Obdrali bomo loila woerter = tokens(romane, remove_symbols = T, remove_numbers = T, remove_url = T) # Odstranili bomo angleke besede na zaetku besedil woerter = tokens_select(woerter, pattern = stoplist_en, selection = &quot;remove&quot;, padding = TRUE) 11.6 Kwic Za sestavo konkordanc ima program quanteda funkcijo kwic() (keyword in context). Mono je iskati posamezne besede, besedne zveze, uporabljamo pa lahko tudi nadomestne znake (npr. *). kwic(woerter, pattern = c(&quot;Frau&quot;, &quot;Herr&quot;)) %&gt;% head(3) ## Keyword-in-context with 3 matches. ## [prozess.txt, 22] Kafka Verhaftung, Gespräch mit | Frau | ## [prozess.txt, 54] verhaftet. Die Köchin der | Frau | ## [prozess.txt, 96] seinem Kopfkissen aus die alte | Frau | ## ## Grubach, dann Fräulein Brüstner ## Grubach, seiner Zimmervermieterin, ## , die ihm gegenüber wohnte Konkordanco bomo pretvorili v podatkovno zbirko, tj. data.frame ali tibble(). Prednost je npr., da tako pridobimo imena stolpcev (tj. spremenljivk). kwic() ima ve monosti, npr. case_insensitive = FALSE razlikuje med velikimi in malimi rkami. Privzeta vrednost je TRUE, tj. da tega ne razlikuje (tako kot Excel). konkordanca = kwic(woerter, pattern = c(&quot;Frau&quot;, &quot;Herr&quot;), case_insensitive = FALSE) %&gt;% as_tibble() konkordanca %&gt;% rmarkdown::paged_table() Z ukazom count() lahko pretejemo, koliko pojavnic je KWIC nael. konkordanca %&gt;% count(keyword) ## # A tibble: 2 x 2 ## keyword n ## &lt;chr&gt; &lt;int&gt; ## 1 Frau 132 ## 2 Herr 94 Poiskati elimo besede s pripono -in za samostalnike, ki oznaujejo enska osebna imena (npr. Ärztin, Köchin, ). (konkordanca2 = kwic(woerter, pattern = c(&quot;*in&quot;), case_insensitive = FALSE) %&gt;% as_tibble() ) ## # A tibble: 4,100 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 26 26 mit Frau Grubach , dann Fräulein Brüst~ *in ## 2 prozess.txt 52 52 eines Morgens verhaftet . Die Köchin der F~ *in ## 3 prozess.txt 58 58 der Frau Grubach , seiner Zimmerv~ , die~ *in ## 4 prozess.txt 86 86 . K . wartete noch ein Weilc~ *in ## 5 prozess.txt 129 129 . Sofort klopfte es und ein Mann ~ *in ## 6 prozess.txt 134 134 ein Mann , den er in diese~ *in ## 7 prozess.txt 143 143 niemals gesehen hatte , trat ein . Er ~ *in ## 8 prozess.txt 155 155 fest gebaut , er trug ein anlie~ *in ## 9 prozess.txt 292 292 zur Tür , die er ein wenig~ *in ## 10 prozess.txt 322 322 das Frühstück bringt . « Ein klein~ *in ## # ... with 4,090 more rows al vsebuje gornji seznam sobesedil veliko besednih oblik, ki niso enska osebna imena (npr. ein, in, ). e elimo natanneji seznam, moramo iskati na ustrezneji nain, npr. z naborom nadomestnih znakov, tako imeovanih regularnih izrazov (regular expressions, regex). Na portalu https://regex101.com/ lahko preizkuate in se uite regularnih izrazov. Poizvedovanje s pomojo regularnih izrazov: *in. konkordanca2 = kwic(woerter, pattern = &quot;\\\\A[A-Z][a-z]+[^Eae]in\\\\b&quot;, valuetype = &quot;regex&quot;, case_insensitive = FALSE) %&gt;% as_tibble() %&gt;% filter(keyword != &quot;Immerhin&quot;, keyword != &quot;Darin&quot;, keyword != &quot;Termin&quot;, keyword != &quot;Worin&quot;, keyword != &quot;Robin&quot;, keyword != &quot;Medizin&quot;, keyword != &quot;Austin&quot;, keyword != &quot;Musselin&quot;, keyword != &quot;Benjamin&quot;, keyword != &quot;Franklin&quot;) konkordanca2 %&gt;% rmarkdown::paged_table() e drug primer uporabe regularnih izrazov Poizvedovanje s pomojo regex: Manjalnice / Diminutive (-chen, -lein). Katera manjalna pripona prevladuje: -lein ali -chen ? (konkordanca3a = kwic(woerter, &quot;*lein&quot;, valuetype = &quot;glob&quot;, case_insensitive = FALSE) %&gt;% as_tibble() %&gt;% count(keyword, sort = TRUE) ) ## # A tibble: 6 x 2 ## keyword n ## &lt;chr&gt; &lt;int&gt; ## 1 Fräulein 112 ## 2 allein 49 ## 3 klein 10 ## 4 Allein 2 ## 5 Äuglein 1 ## 6 Schreibmaschinenfräulein 1 (konkordanca3b &lt;- kwic(woerter, &quot;*chen&quot;, valuetype = &quot;glob&quot;, case_insensitive = FALSE) %&gt;% as_tibble() %&gt;% count(keyword, sort = T) ) ## # A tibble: 415 x 2 ## keyword n ## &lt;chr&gt; &lt;int&gt; ## 1 machen 125 ## 2 Mädchen 100 ## 3 sprechen 57 ## 4 bißchen 44 ## 5 zwischen 43 ## 6 solchen 38 ## 7 Weilchen 33 ## 8 Zeichen 31 ## 9 Menschen 30 ## 10 Burschen 28 ## # ... with 405 more rows (konkordanca3 &lt;- kwic(woerter, pattern = c(&quot;\\\\A[A-Z][a-z]*[^aäeiouürs]chen\\\\b&quot;, &quot;[A-Z]*[^kl]lein\\\\b&quot;), valuetype = &quot;regex&quot;, case_insensitive = FALSE) %&gt;% as_tibble() %&gt;% filter(keyword != &quot;Welchen&quot;, keyword != &quot;Manchen&quot;, keyword != &quot;Solchen&quot;, keyword != &quot;Fräulein&quot;) ) ## # A tibble: 74 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 87 87 K . wartete noch ein Weilchen , sah ~ &quot;\\\\A[A-~ ## 2 prozess.txt 750 750 warf das Buch auf ein Tischch~ und st~ &quot;\\\\A[A-~ ## 3 prozess.txt 1740 1740 aufgeschreckt , die bei dem Tischch~ am off~ &quot;\\\\A[A-~ ## 4 prozess.txt 2617 2617 , stand K . ein Weilchen lang s~ &quot;\\\\A[A-~ ## 5 prozess.txt 3323 3323 Stuhl und hielt ihn ein Weilchen mit be~ &quot;\\\\A[A-~ ## 6 prozess.txt 3624 3624 hatte . Jetzt war das Nachtti~ von ih~ &quot;\\\\A[A-~ ## 7 prozess.txt 3799 3799 Gegenstände , die auf dem Nachtti~ lagen ~ &quot;\\\\A[A-~ ## 8 prozess.txt 5805 5805 sagte K . nach einem Weilchen und re~ &quot;\\\\A[A-~ ## 9 prozess.txt 6952 6952 , das früh auf dem Tischch~ beim F~ &quot;\\\\A[A-~ ## 10 prozess.txt 10539 10539 . » Darf ich das Nachtti~ von Ih~ &quot;\\\\A[A-~ ## # ... with 64 more rows Poizvedovanje s pomojo regex: Frau + Priimek / Ime Obvezno nastavimo case_insensitive = FALSE, saj naj program razlikuje med velikimi in malimi zaetnicami. (konkordanca4 &lt;- kwic(woerter, pattern = phrase(&quot;\\\\bFrau\\\\b ^[A-Z][^[:punct:]]&quot;), valuetype = &quot;regex&quot;, case_insensitive = FALSE) %&gt;% as_tibble() ) ## # A tibble: 61 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 22 23 Kafka Verhaft~ Frau Gru~ , dann Fräule~ &quot;\\\\bFrau\\\\b ~ ## 2 prozess.txt 54 55 verhaftet . D~ Frau Gru~ , seiner Zimm~ &quot;\\\\bFrau\\\\b ~ ## 3 prozess.txt 416 417 im Nebenzimme~ Frau Gru~ diese Störung~ &quot;\\\\bFrau\\\\b ~ ## 4 prozess.txt 551 552 Es war das Wo~ Frau Gru~ , vielleicht ~ &quot;\\\\bFrau\\\\b ~ ## 5 prozess.txt 700 701 . » Ich will ~ Frau Gru~ - « , sagte K &quot;\\\\bFrau\\\\b ~ ## 6 prozess.txt 1647 1648 gerade die ge~ Frau Gru~ wollte dort e~ &quot;\\\\bFrau\\\\b ~ ## 7 prozess.txt 2868 2869 war , so konn~ Frau Gru~ als Zeugin fü~ &quot;\\\\bFrau\\\\b ~ ## 8 prozess.txt 5960 5961 . Im Vorzimme~ Frau Gru~ , die gar nic~ &quot;\\\\bFrau\\\\b ~ ## 9 prozess.txt 6557 6558 in der ganzen~ Frau Gru~ verursacht wo~ &quot;\\\\bFrau\\\\b ~ ## 10 prozess.txt 6852 6853 , aber da er ~ Frau Gru~ sprechen woll~ &quot;\\\\bFrau\\\\b ~ ## # ... with 51 more rows 11.7 Pogostnost Besedilno-besedna matrika (dfm) je izhodie za izraun in grafini prikaz ve statistinih koliin, npr. tudi pogostnosti besednih oblik v posameznih besedilih: matrika = dfm(besede, tolower = FALSE) # za zdaj obdrimo velike zaetnice # Odstranimo besede, ki jih v vsebinski analizi ne potrebujemo (stopwords) matrika = dfm_select(matrika, selection = &quot;remove&quot;, pattern = stoplist_de) matrika ## Document-feature matrix of: 2 documents, 15,185 features (39.73% sparse) and 0 docvars. ## features ## docs Prozess Franz Kafka Verhaftung Gespräch Frau Grubach Fräulein ## prozess.txt 2 24 2 18 16 114 50 112 ## tom.txt 0 0 0 0 4 18 0 0 ## features ## docs Brüstner Jemand ## prozess.txt 1 2 ## tom.txt 0 1 ## [ reached max_nfeat ... 15,175 more features ] Program quanteda ima posebno funkcijo, ki sestavi seznam besednih oblik in njihove pogostnosti, tj. textstat_frequency(). library(quanteda.textstats) library(quanteda.textplots) pogostnost = textstat_frequency(matrika, groups = c(&quot;prozess.txt&quot;, &quot;tom.txt&quot;)) pogostnost %&gt;% rmarkdown::paged_table() Diagram najpogostnejih izrazov: pogostnost %&gt;% slice_max(order_by = frequency, n = 20) %&gt;% mutate(feature = reorder_within(feature, frequency, frequency, sep = &quot;: &quot;)) %&gt;% # ggplot(aes(frequency, reorder(feature, frequency))) + ggplot(aes(frequency, feature)) + geom_col(fill=&quot;steelblue&quot;) + labs(x = &quot;Frequency&quot;, y = &quot;&quot;) + facet_wrap(~ group, scales = &quot;free&quot;) Po potrebi lahko seznam besednih pogostnosti oblik razdelimo na dva posebna seznama, in sicer s funkcijo filter(). pogost_tom = textstat_frequency(matrika, groups = c(&quot;prozess.txt&quot;, &quot;tom.txt&quot;)) %&gt;% filter(group == &quot;tom.txt&quot;) pogost_tom %&gt;% rmarkdown::paged_table() pogost_prozess = textstat_frequency(matrika, groups = c(&quot;prozess.txt&quot;, &quot;tom.txt&quot;)) %&gt;% filter(group == &quot;prozess.txt&quot;) pogost_prozess %&gt;% rmarkdown::paged_table() Glagoli rekanja in miljenja: kateri so v izbranih besedilih pogostneji? sagen = pogostnost %&gt;% filter(str_detect(feature, &quot;^(ge)?sag*&quot;)) sagen %&gt;% rmarkdown::paged_table() reden = pogostnost %&gt;% filter(str_detect(feature, &quot;^(ge)?rede*&quot;)) reden %&gt;% rmarkdown::paged_table() fragen = pogostnost %&gt;% filter(str_detect(feature, &quot;^(ge)?frag*&quot;)) fragen %&gt;% rmarkdown::paged_table() antworten = pogostnost %&gt;% filter(str_detect(feature, &quot;^(ge)?antwort*&quot;)) antworten %&gt;% rmarkdown::paged_table() rufen = pogostnost %&gt;% filter(str_detect(feature, pattern = &quot;^(ge)?ruf*&quot;, negate = FALSE)) %&gt;% filter(!str_detect(feature, &quot;ruh|run|rum|rui|ruch&quot;)) rufen %&gt;% rmarkdown::paged_table() verb1 = sagen %&gt;% group_by(group) %&gt;% summarise(freq = sum(frequency)) %&gt;% mutate(verb = &quot;sagen&quot;) verb2 = reden %&gt;% group_by(group) %&gt;% summarise(freq = sum(frequency)) %&gt;% mutate(verb = &quot;reden&quot;) verb3 = fragen %&gt;% group_by(group) %&gt;% summarise(freq = sum(frequency)) %&gt;% mutate(verb = &quot;fragen&quot;) verb4 = antworten %&gt;% group_by(group) %&gt;% summarise(freq = sum(frequency)) %&gt;% mutate(verb = &quot;antworten&quot;) verb5 = rufen %&gt;% group_by(group) %&gt;% summarise(freq = sum(frequency)) %&gt;% mutate(verb = &quot;rufen&quot;) Pet majhnih tabel lahko zdruimo v vejo tabelo, tj. s funkcijo rbind(). glagoli = rbind(verb1, verb2, verb3, verb4, verb5) glagoli %&gt;% rmarkdown::paged_table() e diagram: glagoli %&gt;% ggplot(aes(freq, verb, fill = verb)) + geom_col() + facet_wrap(~ group) + theme(legend.position = &quot;none&quot;) Tabelo lahko tudi prerazporedimo, npr. zaradi laje primerjave besedil takole: glagoli %&gt;% pivot_wider(id_cols = verb, names_from = group, values_from = freq) %&gt;% rmarkdown::paged_table() 11.8 Kolokacije Koleksemi = slovarske enote, ki se sopojavljajo. Kolokacije = jezikovne prvine, ki se sopojavljajo. Statistina opredelitev: e se dva izraza (npr. dober dan) pojavljata bistveno pogosteje kot neposredna soseda, kakor bi nakljuno priakovali, potem ju lahko obravnavamo kot kolokacijo. Jezikoslovna opredelitev: Kolokacija je pomensko povezano zaporedje besed. Funkcija textstat_collocations() v programu quanteda. woerter je seznam besednih oblik (padding = TRUE !), ki smo ga ustvarili zgoraj. coll_2 = textstat_collocations(woerter, size = 2, tolower = TRUE) # naredi male rke ! coll_2 %&gt;% rmarkdown::paged_table() Kolokacije s tremi leni. coll_3 = textstat_collocations(woerter, size = 3, tolower = FALSE) coll_3 %&gt;% rmarkdown::paged_table() coll_4 = textstat_collocations(woerter, size = 4, tolower = FALSE) coll_4 %&gt;% rmarkdown::paged_table() Sopomenski vpraalnici warum in wieso: s katerimi besednimi oblikami se sopojavljata? warum &lt;- coll_2 %&gt;% filter(str_detect(collocation, &quot;^warum&quot;)) warum %&gt;% rmarkdown::paged_table() wieso &lt;- coll_2 %&gt;% filter(str_detect(collocation, &quot;^wieso&quot;)) wieso %&gt;% rmarkdown::paged_table() Kolokacija samostalnikih izrazov. V nemini imajo veliko zaetnico. Najprej bomo sestavili seznam besednih oblik z veliko zaetnico (woerter_caps). Potem lahko pridobimo seznam kolokacij (coll_caps2). woerter_caps = tokens_select(woerter, pattern = &quot;^[A-Z]&quot;, valuetype = &quot;regex&quot;, case_insensitive = FALSE, padding = TRUE) coll_caps2 = textstat_collocations(woerter_caps, size = 2, tolower = FALSE, min_count = 5) coll_caps2 %&gt;% rmarkdown::paged_table() Ni smiselno upotevati Der + samostalnik kot kolokacijo, saj se v nemini velika veina samostalnikov pojavlja s lenom. Zato bomo lene Der, Die, Das in e nekaj besednih oblik na zaetku stavka spremenili v der, die , das, . woerter_small = tokens_replace(woerter, pattern = c(&quot;Der&quot;,&quot;Die&quot;,&quot;Das&quot;,&quot;Des&quot;,&quot;Wollen&quot;,&quot;Im&quot;,&quot;Zum&quot;, &quot;Kein&quot;,&quot;Jeden&quot;,&quot;Wenn&quot;,&quot;Als&quot;,&quot;Da&quot;,&quot;Aber&quot;,&quot;Und&quot;,&quot;Sehen&quot;), replacement = c(&quot;der&quot;,&quot;die&quot;,&quot;das&quot;,&quot;des&quot;,&quot;wollen&quot;,&quot;im&quot;,&quot;zum&quot;, &quot;kein&quot;,&quot;jeden&quot;,&quot;wenn&quot;,&quot;als&quot;,&quot;da&quot;,&quot;aber&quot;,&quot;und&quot;,&quot;sehen&quot;)) woerter_caps = tokens_select(woerter_small, pattern = &quot;^[A-Z]&quot;, valuetype = &quot;regex&quot;, case_insensitive = FALSE, padding = TRUE) coll_caps2 = textstat_collocations(woerter_caps, size = 2, tolower = FALSE, min_count = 5) coll_caps2 %&gt;% rmarkdown::paged_table() 11.9 Lematizacija Seznam slovarskih enot (lem) lahko naloimo z medmreja na na disk. # Preberi seznam slovarskih enot in pojavnic z diska lemdict = read.delim2(&quot;data/lemmatization_de.txt&quot;, sep = &quot;\\t&quot;, encoding = &quot;UTF-8&quot;, col.names = c(&quot;lemma&quot;, &quot;word&quot;), stringsAsFactors = F) # Pretvori podatkovna niza v znakovna niza lemma = as.character(lemdict$lemma) word = as.character(lemdict$word) # Lematiziraj pojavnice v naih besedilih lemmas &lt;- tokens_replace(besede, pattern = word, replacement = lemma, case_insensitive = TRUE, valuetype = &quot;fixed&quot;) Ustvarimo matriko s slovarskimi enotami (namesto pojavnic). matrika_lem = dfm(lemmas, tolower = FALSE) # za zdaj obdrimo velike zaetnice # Odstranimo besede, ki jih v vsebinski analizi ne potrebujemo (stopwords) matrika_lem = dfm_select(matrika_lem, selection = &quot;remove&quot;, pattern = stoplist_de) matrika_lem ## Document-feature matrix of: 2 documents, 10,072 features (38.04% sparse) and 0 docvars. ## features ## docs Prozess franzen Kafka Verhaftung Gespräch Frau Grubach Fräulein ## prozess.txt 2 24 2 19 18 121 50 112 ## tom.txt 0 0 0 0 5 27 0 0 ## features ## docs Brüstner Jemand ## prozess.txt 1 2 ## tom.txt 0 1 ## [ reached max_nfeat ... 10,062 more features ] 11.10 Besedni oblaek textplot_wordcloud(matrika_lem, comparison = TRUE, adjust = 0.3, color = c(&quot;darkblue&quot;,&quot;darkgreen&quot;), max_size = 4, min_size = 0.75, rotation = 0.5, min_count = 30, max_words = 250) Lepi oblaek (za obe besedili skupaj). # install.packages(&quot;wordcloud2) matrika_lem_prozess = matrika_lem[1,] set.seed(1320) library(wordcloud2) topfeat &lt;- as.data.frame(topfeatures(matrika_lem_prozess, 100)) topfeat &lt;- rownames_to_column(topfeat, var = &quot;word&quot;) wordcloud2(topfeat) matrika_lem_tom = matrika_lem[2,] set.seed(1321) library(wordcloud2) topfeat2 &lt;- as.data.frame(topfeatures(matrika_lem_tom, 100)) topfeat2 &lt;- rownames_to_column(topfeat2, var = &quot;word&quot;) wordcloud2(topfeat2) 11.11 Poloaj v besedilu (xray) Diagram prikazuje, kje v besedilih se pojavlja besedna oblika frau. Podobno: Voyant Tools (MicroSearch). kwic_frau = kwic(lemmas, pattern = &quot;frau&quot;) textplot_xray(kwic_frau) 11.12 Slovarska raznolikost textstat_lexdiv(matrika, measure = &quot;all&quot;) ## document TTR C R CTTR U S K ## 1 prozess.txt 0.2457355 0.8651285 44.68334 31.59590 33.50861 0.9039511 22.33655 ## 2 tom.txt 0.2939104 0.8828536 54.69657 38.67631 38.75057 0.9176397 11.48121 ## I D Vm Maas lgV0 lgeV0 ## 1 26.76129 0.002233722 0.04626902 0.1727515 7.795478 17.94975 ## 2 73.92612 0.001148154 0.03284439 0.1606427 8.533417 19.64892 11.13 Podobnost besedil Ta postopek je bolj zanimiv, e elimo primerjati ve besedil. Zato bomo dodali e Kafkino novelo. # odpremo datoteko verwandl = readtext(&quot;data/books/verwandlung/verwandlung.txt&quot;, encoding = &quot;UTF-8&quot;) # ustvarimo nov korpus verw_corp = corpus(verwandl) # zdruimo novi korpus s prrejnjim romane3 = romane + verw_corp # tokenizacija romane3_toks = tokens(romane3) # ustvarimo matriko (dfm) romane3_dfm = dfm(romane3_toks) Rezultat: Kafkina novela Die Verwandlung je Kafkinemu romanu Der Prozess nekoliko podobneja kot Twainov roman Tom Sawyer. textstat_simil(romane3_dfm, method = &quot;cosine&quot;, margin = &quot;documents&quot;) ## textstat_simil object; method = &quot;cosine&quot; ## prozess.txt tom.txt verwandlung.txt ## prozess.txt 1.000 0.930 0.948 ## tom.txt 0.930 1.000 0.933 ## verwandlung.txt 0.948 0.933 1.000 Podobnost oblik (features). # compute some term similarities simil1 = textstat_simil(matrika, matrika[, c(&quot;Josef&quot;, &quot;Tom&quot;, &quot;Sawyer&quot;, &quot;Huck&quot;, &quot;Finn&quot;)], method = &quot;cosine&quot;, margin = &quot;features&quot;) head(as.matrix(simil1), 10) ## Josef Tom Sawyer Huck Finn ## Prozess 0.9991331 0.0000000 0.0000000 0.0000000 0.0000000 ## Franz 0.9991331 0.0000000 0.0000000 0.0000000 0.0000000 ## Kafka 0.9991331 0.0000000 0.0000000 0.0000000 0.0000000 ## Verhaftung 0.9991331 0.0000000 0.0000000 0.0000000 0.0000000 ## Gespräch 0.9793983 0.2425356 0.2425356 0.2425356 0.2425356 ## Frau 0.9933995 0.1559626 0.1559626 0.1559626 0.1559626 ## Grubach 0.9991331 0.0000000 0.0000000 0.0000000 0.0000000 ## Fräulein 0.9991331 0.0000000 0.0000000 0.0000000 0.0000000 ## Brüstner 0.9991331 0.0000000 0.0000000 0.0000000 0.0000000 ## Jemand 0.9122695 0.4472136 0.4472136 0.4472136 0.4472136 Razlinost besedil (Kaj je ta metoda upotevala? Razliko v dolini?): # plot a dendrogram after converting the object into distances dist1 = textstat_dist(romane3_dfm, method = &quot;euclidean&quot;, margin = &quot;documents&quot;) plot(hclust(as.dist(dist1))) 11.14 Kljune besede Katere besedne oblike lahko uvrstimo med kljune besede, tj. take izraze, ki so najbolj znailni za neko besedilo? Program quanteda ima funkcijo textstat_keyness(): ciljno besedilo (target) primerjamo z referennim besedilom (reference). key_tom &lt;- textstat_keyness(matrika, target = &quot;tom.txt&quot;) key_tom %&gt;% rmarkdown::paged_table() key_prozess &lt;- textstat_keyness(matrika, target = &quot;prozess.txt&quot;) key_prozess %&gt;% rmarkdown::paged_table() textplot_keyness(key_tom, key_tom$n_target == 1) textplot_keyness(key_tom, key_prozess$n_target == 1) textplot_keyness(key_tom) textplot_keyness(key_prozess) 11.15 Razumljivost besedil Indeksi razumljivosti (readability index) so prirejeni za angleino, za druge jezike veljajo v manji meri. Flesch-Indeks: Prozess ima nekoliko nijo vrednost (52) kot Tom Sawyer (61), kar pomeni, da Prozess (zaradi daljih povedi in besed) teje beremo (razumemo), Tom Sawyer pa z vejo lahkoto. textstat_readability(romane, measure = c(&quot;Flesch&quot;, &quot;Flesch.Kincaid&quot;, &quot;FOG&quot;, &quot;FOG.PSK&quot;, &quot;FOG.NRI&quot;)) ## document Flesch Flesch.Kincaid FOG FOG.PSK FOG.NRI ## 1 prozess.txt 51.94715 10.644645 13.04497 6.390374 8545.508 ## 2 tom.txt 60.58142 8.395483 10.61185 5.074038 6016.218 11.16 Omreje sopojavitev (FCM) Matriko sopojavljanja besednih oblik (FCM) pridobimo v dveh korakih: - najprej izberemo seznam izrazov (pattern) iz matrike (dfm), - potem doloimo matriko sopojavljanja besednih oblik (fcm). dfm_tags &lt;- dfm_select(matrika[2,], pattern = (c(&quot;tom&quot;, &quot;huck&quot;, &quot;*joe&quot;, &quot;becky&quot;, &quot;tante&quot;, &quot;witwe&quot;, &quot;polly&quot;, &quot;sid&quot;, &quot;mary&quot;, &quot;thatcher&quot;, &quot;höhle&quot;, &quot;herz&quot;, &quot;*schule&quot;, &quot;katze&quot;, &quot;geld&quot;, &quot;zaun&quot;, &quot;piraten&quot;, &quot;schatz&quot;))) toptag &lt;- names(topfeatures(dfm_tags, 50)) head(toptag) ## [1] &quot;Tom&quot; &quot;Huck&quot; &quot;Joe&quot; &quot;Becky&quot; &quot;Tante&quot; &quot;Sid&quot; # Construct feature-cooccurrence matrix (fcm) of tags fcm_tom &lt;- fcm(matrika[2,]) # besedilo 2 je tom.txt head(fcm_tom) ## Feature co-occurrence matrix of: 6 by 15,185 features. ## features ## features Prozess Franz Kafka Verhaftung Gespräch Frau Grubach Fräulein ## Prozess 0 0 0 0 0 0 0 0 ## Franz 0 0 0 0 0 0 0 0 ## Kafka 0 0 0 0 0 0 0 0 ## Verhaftung 0 0 0 0 0 0 0 0 ## Gespräch 0 0 0 0 6 72 0 0 ## Frau 0 0 0 0 0 153 0 0 ## features ## features Brüstner Jemand ## Prozess 0 0 ## Franz 0 0 ## Kafka 0 0 ## Verhaftung 0 0 ## Gespräch 0 4 ## Frau 0 18 ## [ reached max_nfeat ... 15,175 more features ] top_fcm &lt;- fcm_select(fcm_tom, pattern = toptag) textplot_network(top_fcm, min_freq = 0.6, edge_alpha = 0.8, edge_size = 5) 11.17 Slovnina analiza Za slovnino analizo in lematizacijo besednih oblik lahko uporabljamo posebne programe (npr. spacyr ali udpipe). Program udpipe je na voljo za tevilne jezike, tudi za nemino in slovenino. 11.17.1 Priprava Pred prvo uporabo moramo naloiti model za nemki jezik z interneta. V naslednjem koraku naloimo jezikovni model v pomnilnik: udpipe_load_model() library(udpipe) destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ sprachmodell &lt;- udpipe_download_model(language = &quot;german&quot;) udmodel_de &lt;- udpipe_load_model(sprachmodell$file_model) } else { file_model = destfile udmodel_de &lt;- udpipe_load_model(file_model) } e je jezikovni model e v nai delovni mapi, download ni potreben, saj ga lahko takoj naloimo z diska v pomnilnik: Naslednji korak je udpipe_annotate(): program udpipe oznauje besedne oblike po ve merilih. Udpipe prebere in oznauje besedilo takole: # Na zaetku je readtext prebral besedila, shranili smo jih v spremenljivki &quot;txt&quot;. x &lt;- udpipe_annotate(udmodel_de, x = txt$text, trace = TRUE) ## 2021-11-28 20:08:28 Annotating text fragment 1/2 ## 2021-11-28 20:10:29 Annotating text fragment 2/2 # # samo prvo besedilo: # x &lt;- udpipe_annotate(udmodel_de, x = txt$text[1], trace = TRUE) x &lt;- as.data.frame(x) Zgradba podatkovnega niza (structure of data frame): str(x) ## &#39;data.frame&#39;: 174925 obs. of 14 variables: ## $ doc_id : chr &quot;doc1&quot; &quot;doc1&quot; &quot;doc1&quot; &quot;doc1&quot; ... ## $ paragraph_id : int 1 1 1 1 1 1 1 1 1 1 ... ## $ sentence_id : int 1 1 1 1 1 1 1 1 1 1 ... ## $ sentence : chr &quot;Der Prozess by Franz Kafka Aligned by : bilingual-texts.com ( fully reviewed ) Der Prozess Franz Kafka 1 Verhaf&quot;| __truncated__ &quot;Der Prozess by Franz Kafka Aligned by : bilingual-texts.com ( fully reviewed ) Der Prozess Franz Kafka 1 Verhaf&quot;| __truncated__ &quot;Der Prozess by Franz Kafka Aligned by : bilingual-texts.com ( fully reviewed ) Der Prozess Franz Kafka 1 Verhaf&quot;| __truncated__ &quot;Der Prozess by Franz Kafka Aligned by : bilingual-texts.com ( fully reviewed ) Der Prozess Franz Kafka 1 Verhaf&quot;| __truncated__ ... ## $ token_id : chr &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; ... ## $ token : chr &quot;Der&quot; &quot;Prozess&quot; &quot;by&quot; &quot;Franz&quot; ... ## $ lemma : chr &quot;der&quot; &quot;Prozeß&quot; &quot;by&quot; &quot;Franz&quot; ... ## $ upos : chr &quot;DET&quot; &quot;NOUN&quot; &quot;PROPN&quot; &quot;PROPN&quot; ... ## $ xpos : chr &quot;ART&quot; &quot;NN&quot; &quot;NE&quot; &quot;NE&quot; ... ## $ feats : chr &quot;Case=Nom|Definite=Def|Gender=Masc|Number=Sing|PronType=Art&quot; &quot;Case=Nom|Gender=Masc|Number=Sing&quot; &quot;Case=Nom|Gender=Masc|Number=Sing&quot; &quot;Case=Nom|Gender=Masc|Number=Sing&quot; ... ## $ head_token_id: chr &quot;2&quot; &quot;72&quot; &quot;2&quot; &quot;3&quot; ... ## $ dep_rel : chr &quot;det&quot; &quot;nsubj&quot; &quot;appos&quot; &quot;flat&quot; ... ## $ deps : chr NA NA NA NA ... ## $ misc : chr NA NA NA NA ... Podatkovni niz ima tako obliko: head(x, 10) %&gt;% rmarkdown::paged_table() 11.17.2 Primerjava Noun : Pron Zdaj lahko zanemo poizvedovati po besednih oblikah, slovarskih enotah in slovninih kategorijah. (tabela = x %&gt;% group_by(doc_id) %&gt;% count(upos) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;) ) ## # A tibble: 28 x 3 ## # Groups: doc_id [2] ## doc_id upos n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 doc1 ADJ 5284 ## 2 doc1 ADP 6350 ## 3 doc1 ADV 8387 ## 4 doc1 AUX 4390 ## 5 doc1 CCONJ 2425 ## 6 doc1 DET 8050 ## 7 doc1 NOUN 10705 ## 8 doc1 NUM 155 ## 9 doc1 PART 1984 ## 10 doc1 PRON 11280 ## # ... with 18 more rows tabela %&gt;% mutate(upos = reorder_within(upos, n, n, sep = &quot;: &quot;)) %&gt;% ggplot(aes(n, upos, fill = upos)) + geom_col() + facet_wrap(~ doc_id, scales = &quot;free&quot;) + theme(legend.position = &quot;none&quot;) + labs(x = &quot;tevilo pojavnic&quot;, y = &quot;&quot;) Izraun deleev v odstotkih: (delezi = tabela %&gt;% mutate(prozent = n/sum(n)) %&gt;% pivot_wider(id_cols = upos, names_from = doc_id, values_from = n:prozent) ) ## # A tibble: 14 x 5 ## upos n_doc1 n_doc2 prozent_doc1 prozent_doc2 ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ADJ 5284 5539 0.0729 0.0818 ## 2 ADP 6350 5524 0.0877 0.0816 ## 3 ADV 8387 6706 0.116 0.0990 ## 4 AUX 4390 3386 0.0606 0.0500 ## 5 CCONJ 2425 3270 0.0335 0.0483 ## 6 DET 8050 6888 0.111 0.102 ## 7 NOUN 10705 10871 0.148 0.160 ## 8 NUM 155 306 0.00214 0.00452 ## 9 PART 1984 1658 0.0274 0.0245 ## 10 PRON 11280 9027 0.156 0.133 ## 11 PROPN 2317 3919 0.0320 0.0579 ## 12 SCONJ 1687 1296 0.0233 0.0191 ## 13 VERB 9401 8669 0.130 0.128 ## 14 X 20 678 0.000276 0.0100 delezi %&gt;% filter(upos %in% c(&quot;NOUN&quot;, &quot;PRON&quot;)) ## # A tibble: 2 x 5 ## upos n_doc1 n_doc2 prozent_doc1 prozent_doc2 ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 NOUN 10705 10871 0.148 0.160 ## 2 PRON 11280 9027 0.156 0.133 Ali se besedili razlikujeta glede na razmerje med samostalniki in zaimki? # za hi kvadrat test potrebujemo le drugi in tretji stolpec nominal = delezi %&gt;% filter(upos %in% c(&quot;NOUN&quot;, &quot;PRON&quot;)) %&gt;% dplyr::select(n_doc1, n_doc2) chisq.test(nominal) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: nominal ## X-squared = 147.38, df = 1, p-value &lt; 2.2e-16 Besedili se razlikujeta glede razmerja med samostalniki in zaimki: X^2 (1) = 147,38; p &lt; 0,001. Iz gornje tabele pogostnosti je razvidno, da je dele zaimkov v romanu Prozess sorazmerno veji kot v romanu Tom Sawyer. Da bi ugotovili, kaj to pomeni, bi si morali podrobneje ogledati, kateri zaimki in kateri samostalniki bistveno vplivajo na to tevilno razmerje. Na splono velja, da so zaimki manj zanesljiva jezikovna sredstva kot samostalniki, samostalniki pa so bolj zapleteni. e elimo primerjati eno besedno vrsto z vsemi drugimi v podatkovnem nizu, je pretvorba bolj zapletena, saj moramo podobno kot v Excelu - najprej izraunati vsoto za vse besedne vrste, - potem odteti tevilo zaimkov oz. samostalnikov od vsote, - razliko pa upotevati za tabelo 2x2 za hi kvadrat test. (zaimki = x %&gt;% group_by(doc_id) %&gt;% count(upos) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;) %&gt;% mutate(vsota = sum(n), no_noun = vsota - n[upos == &quot;NOUN&quot;], no_pron = vsota - n[upos == &quot;PRON&quot;]) %&gt;% filter(upos == &quot;PRON&quot;) %&gt;% dplyr::select(doc_id, n, no_pron) %&gt;% pivot_longer(-doc_id, &#39;kategorija&#39;, &#39;vrednost&#39;) %&gt;% pivot_wider(kategorija, doc_id) ) ## # A tibble: 2 x 3 ## kategorija doc1 doc2 ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 n 11280 9027 ## 2 no_pron 61155 58710 (samostalniki = x %&gt;% group_by(doc_id) %&gt;% count(upos) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;) %&gt;% mutate(vsota = sum(n), no_noun = vsota - n[upos == &quot;NOUN&quot;], no_pron = vsota - n[upos == &quot;PRON&quot;]) %&gt;% filter(upos == &quot;NOUN&quot;) %&gt;% dplyr::select(doc_id, n, no_noun) %&gt;% pivot_longer(-doc_id, &#39;kategorija&#39;, &#39;vrednost&#39;) %&gt;% pivot_wider(kategorija, doc_id) ) ## # A tibble: 2 x 3 ## kategorija doc1 doc2 ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 n 10705 10871 ## 2 no_noun 61730 56866 Hi kvadrat testa: - primerjava tevila zaimkov nasproti ostalim besednim vrstam, - primerjava tevila samostalnikov nasproti ostalim besednim vrstam. # izloimo prvi stolpec [, -1], za hi kvadrat test potrebujemo le drugi in tretji stolpec chisq.test(zaimki[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: zaimki[, -1] ## X-squared = 142.36, df = 1, p-value &lt; 2.2e-16 chisq.test(samostalniki[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: samostalniki[, -1] ## X-squared = 43.259, df = 1, p-value = 4.796e-11 Besedili se razlikujeta glede delea zaimkov in samostalnikov. 11.17.3 Primerjava veznikov Primerjati elimo tevilo stavkov s prirednim in podrednim veznikom. Osnovna domneva je, da priredno zloene povedi (vsebujejo stavek, uveden s prirednim veznikom) laje razumemo kot podredno zloene povedi (vsebujejo stavek, uveden s podrednim veznikom). (vezniki = tabela %&gt;% filter(upos %in% c(&quot;CCONJ&quot;, &quot;SCONJ&quot;)) %&gt;% mutate(prozent = n/sum(n)) %&gt;% pivot_wider(id_cols = upos, names_from = doc_id, values_from = n:prozent) ) ## # A tibble: 2 x 5 ## upos n_doc1 n_doc2 prozent_doc1 prozent_doc2 ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 CCONJ 2425 3270 0.590 0.716 ## 2 SCONJ 1687 1296 0.410 0.284 Odstotki nakazujejo, da je v romanu Prozess dele prirednih veznikov manji kot v romanu Tom Sawyer. Hi kvadrat test (upotevane so le povedi, ki vsebujejo veznik) za preverjanje, ali je razlika dovolj velika, da bi bila nenakljuna. chisq.test(vezniki[,c(2:3)]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: vezniki[, c(2:3)] ## X-squared = 152.74, df = 1, p-value &lt; 2.2e-16 Razlika med romanoma je statistino znailna. e upotevamo tudi vsote drugih besednih vrst (kot zgoraj): (koord = tabela %&gt;% mutate(vsota = sum(n), no_cconj = vsota - n[upos == &quot;CCONJ&quot;], no_sconj = vsota - n[upos == &quot;SCONJ&quot;]) %&gt;% filter(upos == &quot;CCONJ&quot;) %&gt;% dplyr::select(doc_id, n, no_cconj) %&gt;% pivot_longer(-doc_id, &#39;kategorija&#39;, &#39;vrednost&#39;) %&gt;% pivot_wider(kategorija, doc_id) ) ## # A tibble: 2 x 3 ## kategorija doc1 doc2 ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 n 2425 3270 ## 2 no_cconj 70010 64467 (subord = tabela %&gt;% mutate(vsota = sum(n), no_cconj = vsota - n[upos == &quot;CCONJ&quot;], no_sconj = vsota - n[upos == &quot;SCONJ&quot;]) %&gt;% filter(upos == &quot;SCONJ&quot;) %&gt;% dplyr::select(doc_id, n, no_sconj) %&gt;% pivot_longer(-doc_id, &#39;kategorija&#39;, &#39;vrednost&#39;) %&gt;% pivot_wider(kategorija, doc_id) ) ## # A tibble: 2 x 3 ## kategorija doc1 doc2 ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 n 1687 1296 ## 2 no_sconj 70748 66441 Hi kvadrat preizkus izkazuje razliko med romanoma chisq.test(koord[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: koord[, -1] ## X-squared = 196.24, df = 1, p-value &lt; 2.2e-16 chisq.test(subord[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: subord[, -1] ## X-squared = 28.843, df = 1, p-value = 7.849e-08 Besedili se razlikujeta glede tevila veznikov. 11.17.4 Slovarske enote Program udpipe je vsako besedno obliko dodelil slovarski enoti (lemma). Koliko koliko slovarskih enot je v besedilih? Katerim besednim vrstam najpogosteje pripadajo? (tabela2 = x %&gt;% group_by(doc_id, upos) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;, upos != &quot;X&quot;) %&gt;% distinct(lemma) %&gt;% count(lemma) %&gt;% summarise(lemmas = sum(n)) %&gt;% mutate(prozent = round(lemmas/sum(lemmas), 4)) %&gt;% arrange(-prozent) ) ## # A tibble: 26 x 4 ## # Groups: doc_id [2] ## doc_id upos lemmas prozent ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 doc2 NOUN 3401 0.361 ## 2 doc1 NOUN 2519 0.352 ## 3 doc1 VERB 1696 0.237 ## 4 doc1 ADJ 1528 0.213 ## 5 doc2 VERB 1934 0.206 ## 6 doc2 ADJ 1875 0.199 ## 7 doc2 PROPN 973 0.103 ## 8 doc1 ADV 605 0.0845 ## 9 doc2 ADV 671 0.0713 ## 10 doc1 PROPN 387 0.054 ## # ... with 16 more rows tabela2 %&gt;% # slice_max(order_by = prozent, n=6) %&gt;% mutate(upos = reorder_within(upos, lemmas, paste(&quot;(&quot;,100*prozent,&quot;%)&quot;), sep = &quot; &quot;)) %&gt;% ggplot(aes(prozent, upos, fill = upos)) + geom_col() + facet_wrap(~ doc_id, scales = &quot;free&quot;) + theme(legend.position = &quot;none&quot;) + scale_x_continuous(labels = percent_format()) + labs(x = &quot;Anteil&quot;, y = &quot;Wortklasse&quot;) 11.17.5 Korelacija besed Katere besedne pogostnosti se vzporedno poveujejo ali zmanjujejo (pairwise correlation) ? Podobno analizno orodje: Voyant Tools. library(widyr) # pairwise correlation (correlations = x %&gt;% filter(dep_rel != &quot;punct&quot;, dep_rel != &quot;nummod&quot;) %&gt;% mutate(lemma = tolower(lemma), token = tolower(token), lemma = str_trim(lemma), token = str_trim(token)) %&gt;% janitor::clean_names() %&gt;% group_by(doc_id, lemma, token, sentence_id) %&gt;% # add_count(token) %&gt;% summarize(Freq = n()) %&gt;% arrange(-Freq) %&gt;% filter(Freq &gt; 2) %&gt;% pairwise_cor(lemma, sentence_id, sort = TRUE) %&gt;% filter(correlation &lt; 1 &amp; correlation &gt; 0.3) ) ## # A tibble: 2,592 x 3 ## item1 item2 correlation ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 verteidigung natürlich 0.865 ## 2 natürlich verteidigung 0.865 ## 3 stellvertreter direktor 0.812 ## 4 direktor stellvertreter 0.812 ## 5 bürstner fräulein 0.741 ## 6 fräulein bürstner 0.741 ## 7 master jim 0.706 ## 8 depot jim 0.706 ## 9 eimer jim 0.706 ## 10 glaskugel jim 0.706 ## # ... with 2,582 more rows Tom Sawyer: Zaun. correlations %&gt;% filter(item1 == &quot;zaun&quot;) %&gt;% mutate(item2 = fct_reorder(item2, correlation)) %&gt;% ggplot(aes(item2, correlation, fill = item2)) + geom_col(show.legend = F) + coord_flip() + labs(title = &quot;What tends to appear with &#39;Zaun&#39;?&quot;, subtitle = &quot;Among elements that appeared in at least 2 sentences&quot;) Prozess: Gericht. correlations %&gt;% filter(item1 == &quot;gericht&quot;) %&gt;% mutate(item2 = fct_reorder(item2, correlation)) %&gt;% ggplot(aes(item2, correlation, fill = item2)) + geom_col(show.legend = F) + coord_flip() + labs(title = &quot;What tends to appear with &#39;Gericht&#39;?&quot;, subtitle = &quot;Among elements that appeared in at least 2 sentences&quot;) 11.18 Sentiment Stopnjo ustvenosti ali emocionalnosti besedila je mogoe doloiti s sentimentnim slovarjem. 11.18.1 Razliica 1 Uporaba nrc leksikona za nemino (priloen programu syuzhet). Najprej besedilo s funkcijo get_sentences() razcepimo na povedi. library(syuzhet) tom_v = get_sentences(txt$text[2]) # izberemo drugo besedilo: tom.txt tom_v = (tom_v[-1]) # tako lahko izloimo prvo vrstico (uredniko pripombo) head(tom_v[-1]) ## [1] &quot;Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden .&quot; ## [2] &quot;Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten .&quot; ## [3] &quot;Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten .&quot; ## [4] &quot;Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren .&quot; ## [5] &quot;Erstes Kapitel .&quot; ## [6] &quot;, ,Tom !&quot; Funkcija get_sentiment() dodeli besedam v povedih pozitivno (+1), negativno (-1) ali nevtralno (0) ustveno vrednost. Program te vrednosti seteje. tom_values &lt;- get_sentiment(tom_v, method = &quot;nrc&quot;, language = &quot;german&quot;) length(tom_values) ## [1] 5047 tom_values[100:110] ## [1] 0 -2 0 1 0 1 0 0 0 0 0 Povedi, ustvene vrednosti in dolino povedi poveemo v podatkovni niz. To nam olajuje oceno, kako uspena je bila uporaba sentimentnega slovarja v naem besedilu. Preimenovali bomo tudi nekaj stolpcev. sentiment1 = cbind(tom_v, tom_values, ntoken(tom_v)) %&gt;% as.data.frame() %&gt;% rename(words = V3, text = tom_v, values = tom_values) %&gt;% mutate(doc_id = &quot;tom.txt&quot;) %&gt;% rowid_to_column(var = &quot;sentence&quot;) # View(sentiment1) sentiment1 %&gt;% rmarkdown::paged_table() Gornje postopke ponovimo za besedilo, ki ga elimo primerjati s prvim. prozess_v = get_sentences(txt$text[1]) # izberemo prvo besedilo: prozess.txt prozess_v = (prozess_v[-1]) # tako lahko izloimo prvo vrstico (uredniko pripombo) prozess_values &lt;- get_sentiment(prozess_v, method = &quot;nrc&quot;, language = &quot;german&quot;) sentiment2 = cbind(prozess_v, prozess_values, ntoken(prozess_v)) %&gt;% as.data.frame() %&gt;% rename(words = V3, text = prozess_v, values = prozess_values) %&gt;% mutate(doc_id = &quot;prozess.txt&quot;) %&gt;% rowid_to_column(var = &quot;sentence&quot;) # View(sentiment2) sentiment2 %&gt;% rmarkdown::paged_table() S setevanjem ustvenih vrednosti je mogoe oceniti, katero besedilo ima ve pozitivno ocenjenih besed. V ta namen bomo zdruili podatkovna niza in uredili obliko stolpcev words in values. sentiment = rbind(sentiment1, sentiment2) %&gt;% as_tibble() %&gt;% mutate(values = parse_number(values), words = parse_number(words)) %&gt;% dplyr::select(doc_id, sentence, words, values, text) sentiment %&gt;% rmarkdown::paged_table() Rezultat: po gornji metodi je povpreje ustvenih vrednosti v romanu Prozess nekoliko veje kot v romanu Tom Sawyer. To je v nasprotju z naim priakovanjem, saj Tom Sawyer vsebuje kar nekaj vedrih zgodb, je pa res, da so njegove pustolovine pogosto tudi nevarne ali straljive. sentiment %&gt;% group_by(doc_id) %&gt;% summarise(polarnost = mean(values)) ## # A tibble: 2 x 2 ## doc_id polarnost ## &lt;chr&gt; &lt;dbl&gt; ## 1 prozess.txt 0.0550 ## 2 tom.txt -0.0109 Poskusimo drugae: pozitivne, nevtralne in negativne vrednosti obravnajmo loeno in upotevajmo tudi dolino povedi. sentiment1 = sentiment %&gt;% group_by(doc_id) %&gt;% mutate(positive = ifelse(values &gt; 0, abs(values), 0), neutral = ifelse(values == 0, 1, 0), negative = ifelse(values &lt; 0, abs(values), 0)) sentiment1 %&gt;% summarise(pos = mean(100*positive/words), neut = mean(100*neutral/words), neg = mean(100*negative/words)) ## # A tibble: 2 x 4 ## doc_id pos neut neg ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 prozess.txt 2.30 4.34 2.13 ## 2 tom.txt 2.63 6.77 2.81 Ta rezultat je skladneji z naim priakovanjem. Poglejmo e nekaj povedi, ki so bile ocenjene negativno: sentiment1 %&gt;% filter(negative &gt; 0) %&gt;% rmarkdown::paged_table() 11.18.2 Razliica 2 tom_v = get_sentences(txt$text[2]) tom_nrc_values = get_nrc_sentiment(tom_v) tom_joy_items = which(tom_nrc_values$joy &gt; 0) head(tom_v[tom_joy_items], 4) ## [1] &quot;Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren .&quot; ## [2] &quot;, Spare die Rute , und du verdirbst dein Kind &#39; , heißt es .&quot; ## [3] &quot;Er ist meiner toten Schwester Kind , ein armes Kind , und ich habe nicht das Herz , ihn irgendwie am Gängelband zu führen .&quot; ## [4] &quot;Es ist wohl hart für ihn , am Samstag stillzusitzen , wenn alle anderen Knaben Feiertag haben , aber er haßt Arbeit mehr als irgend sonst was , und ich will meine Pflicht an ihm tun , oder ich würde das Kind zu Grunde richten .&quot; nrc_sentiment = as.data.frame(cbind(tom_v, tom_nrc_values)) nrc_sentiment %&gt;% rmarkdown::paged_table() 11.18.3 Razliica 3 Drugi sentimentni slovarji z medmreja: npr. BAWLR lahko uporabljamo kot sentimentni slovar. # This lexicons contains values of Emotional valence and arousal ranging from 1 to 5. # But this extended version contains also binary Emo_Val values (1, -1). bawlr &lt;- read.delim2(&quot;data/BAWLR_utf8.txt&quot;, sep = &quot;\\t&quot;, dec = &quot;,&quot;, fileEncoding = &quot;UTF-8&quot;, header = T, stringsAsFactors = T) # # bawlr$EmoVal &lt;- as.character(bawlr$EmoVal) # # str(EmoVal) # bawlr$EmoVal &lt;- gsub(&#39;NEG&#39;, &#39;-1&#39;, bawlr$EmoVal) # bawlr$EmoVal &lt;- gsub(&#39;POS&#39;, &#39;1&#39;, bawlr$EmoVal) # bawlr$EmoVal &lt;- as.numeric(bawlr$EmoVal) bawlr %&gt;% rmarkdown::paged_table() Sestavimo dva seznama: positive.words = bawlr %&gt;% mutate(WORD_LOWER = as.character(WORD_LOWER)) %&gt;% dplyr::select(EmoVal, WORD_LOWER) %&gt;% filter(EmoVal == &quot;POS&quot;) %&gt;% dplyr::select(WORD_LOWER) %&gt;% filter(str_detect(WORD_LOWER, &quot;[a-zA-Z]&quot;)) negative.words = bawlr %&gt;% mutate(WORD_LOWER = as.character(WORD_LOWER)) %&gt;% dplyr::select(EmoVal, WORD_LOWER) %&gt;% filter(EmoVal == &quot;NEG&quot;) %&gt;% dplyr::select(WORD_LOWER) %&gt;% filter(str_detect(WORD_LOWER, &quot;[a-zA-Z]&quot;)) Ustvarimo quanteda slovar dictionary(): bawlr_dict = dictionary(list(positive = list(positive.words), negative = list(negative.words))) Uporabljamo matriko (dfm) s slovarskimi enotami (lemma), saj slovar bawlr_dict vsebujejo le osnovno obliko slovarskih enot. matrika_lemmas = dfm(matrika_lem, tolower = TRUE) result = matrika_lemmas %&gt;% dfm_lookup(bawlr_dict) %&gt;% convert(to = &quot;data.frame&quot;) %&gt;% as_tibble result ## # A tibble: 2 x 3 ## doc_id positive negative ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 prozess.txt 10540540 5856000 ## 2 tom.txt 9183068 5425584 Dodamo lahko skupno dolino besed, e elimo normalizirati rezultat z ozirom na dolino besedil. result = result %&gt;% mutate(length=ntoken(matrika_lemmas)) result ## # A tibble: 2 x 4 ## doc_id positive negative length ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 prozess.txt 10540540 5856000 32058 ## 2 tom.txt 9183068 5425584 33520 Po navadi elimo izraunati skupni sentimentno vrednost. Monosti je ve: npr. - odteti negativne vrednosti od pozitivnih in nato razliko deliti z vsoto obeh vrednosti, - odteti negativne vrednosti od pozitivnih in nato razliko deliti z dolino besedil, Izraunamo lahko tudi stopnjo subjektivnosti, tj. koliko ustvenih vrednosti je skupno izraenih: result = result %&gt;% mutate(sentiment1=(positive - negative) / (positive + negative)) result = result %&gt;% mutate(sentiment2=(positive - negative) / length) result = result %&gt;% mutate(subjektivnost=(positive + negative) / length) result %&gt;% rmarkdown::paged_table() 11.18.3.1 Barvno oznaevanje Program corpustools barvno oznauje besede v besedilih z ozirom na ustvene vrednosti besed v sentimentnem slovarju. Prvi korak je ustvarjanje tcorpusa. library(corpustools) t = create_tcorpus(txt, doc_column=&quot;doc_id&quot;) V drugem koraku sledi iskanje po slovarju (tcorpus): t$code_dictionary(bawlr_dict, column = &#39;bawlr&#39;) t$set(&#39;sentiment&#39;, 1, subset = bawlr %in% c(&#39;positive&#39;,&#39;neg_negative&#39;)) t$set(&#39;sentiment&#39;, -1, subset = bawlr %in% c(&#39;negative&#39;,&#39;neg_positive&#39;)) Prikaz barvno oznaenih besedil v oknu Viewer: browse_texts(t, scale=&#39;sentiment&#39;) Prikaz barvno oznaenih besedil v spletnem brskalniku in shranjevanje v obliki html datoteke: browse_texts(t, scale=&#39;sentiment&#39;, filename = &quot;sentiment_prozess_tom.html&quot;, header = &quot;Sentiment in Kafkas Prozess und Twains Tom Sawyer&quot;) "],["original-und-übersetzung.html", "Kapitel 12 Original und Übersetzung 12.1 Programi 12.2 Preberemo besedila 12.3 Ustvarimo korpus 12.4 Tokenizacija 12.5 ienje 12.6 Kwic 12.7 Pogostnost 12.8 Kolokacije 12.9 Lematizacija 12.10 Besedni oblaek 12.11 Poloaj v besedilu (xray) 12.12 Slovarska raznolikost 12.13 Podobnost besedil 12.14 Kljune besede 12.15 Razumljivost besedil 12.16 Omreje sopojavitev (FCM) 12.17 Slovnina analiza 12.18 Sentiment", " Kapitel 12 Original und Übersetzung (Izvirnik in prevod) 12.1 Programi Namestitev: e ste program(e) e namestili, lahko preskoite ta korak. Znak # v programskem bloku (chunk) pomeni, da se ta vrstica ne izvaja. Odstrani # e elite program namestiti. # # Programe, ki jih e nimate, lahko namestite tudi na ta nain (odstranite #): # install.packages(&quot;readtext&quot;) # ... ## First specify the packages of interest packages = c(&quot;tidyverse&quot;, &quot;quanteda&quot;, &quot;quanteda.textplots&quot;, &quot;quanteda.textstats&quot;, &quot;wordcloud2&quot;, &quot;tidytext&quot;, &quot;udpipe&quot;, &quot;janitor&quot;, &quot;scales&quot;, &quot;widyr&quot;, &quot;syuzhet&quot;, &quot;corpustools&quot;, &quot;readtext&quot;) ## Now load or install&amp;load all package.check &lt;- lapply( packages, FUN = function(x) { if (!require(x, character.only = TRUE)) { install.packages(x, dependencies = TRUE) library(x, character.only = TRUE) } } ) Najprej moramo zagnati programe, ki jih potrebujemo za nartovano delo. library(readtext) library(quanteda) library(quanteda.textstats) library(quanteda.textplots) library(tidyverse) library(tidytext) library(wordcloud2) library(udpipe) library(janitor) library(scales) library(widyr) library(syuzhet) library(corpustools) 12.2 Preberemo besedila Besedilni datoteki odpremo s programom readtext z istoimensko funkcijo readtext(). txt = readtext(&quot;data/books/translations/sawyer/*.txt&quot;, encoding = &quot;UTF-8&quot;) Odstranili bomo zaetek obeh besedilnih nizov (v stolpcu text), ker niso sestavni del besedil. Uporabljamo ve funkcij / ukazov: - filter() za izbiranje vrstice v podatkovnem nizu, - separate() za delitev stolpca text v dva nova stolpca, - rbind() za zdruitev obeh podatkovnih nizov (txt1, txt2) v enega (txt) - mutate() in str_squish() za odstranjevanje nepotrebnih presledkov med besedami v stolpcu text. # Nemki prevod txt1 = txt %&gt;% filter(doc_id == &quot;tom_de.txt&quot;) %&gt;% separate(text, into = c(&quot;kolofon&quot;, &quot;text&quot;), sep = &quot;Source : Project Gutenberg Die Abenteuer Tom Sawyers Mark Twain &quot;) %&gt;% dplyr::select(-kolofon) # izloimo stolpec # Angleki izvirnik txt2 = txt %&gt;% filter(doc_id == &quot;tom_en.txt&quot;) %&gt;% separate(text, into = c(&quot;kolofon&quot;, &quot;text&quot;), sep = &quot;High up in Society Contentment &quot;) %&gt;% separate(text, into = c(&quot;text&quot;, &quot;project&quot;), sep = &quot;\\\\*\\\\*\\\\* END OF THE PROJECT GUTENBERG EBOOK THE ADVENTURES OF TOM SAWYER \\\\*\\\\*\\\\*&quot;) %&gt;% dplyr::select(-kolofon, -project) # izloimo stolpca # Obe datoteki zdruimo txt = rbind(txt1,txt2) # txt = txt %&gt;% mutate(text = str_squish(text)) 12.3 Ustvarimo korpus Ustvarimo korpus ali jezikovno gradivo. Ukaz v programu quanteda je corpus(). romane = corpus(txt) Povzetek korpusa: Program quanteda ima dve funkciji za povzemanje osnovnih vrednosti besedil: - summary() - textstat_summary() romanstatistik = textstat_summary(romane) romanstatistik %&gt;% rmarkdown::paged_table() # za lepi izpis v formatu html Iz evidence razberemo, da je nekaj razlik med nemkim prevodom in anglekim izvirnikom glede tevila znakov (chars), povedi (sents), pojavnic (tokens), razlinic ali besednih oblik (types), loil (puncts) in tevk (numbers). Podatke iz povzetka bi lahko uporabili npr. za izraun povprene doline povedi v besedilih: library(rmarkdown) romanstatistik %&gt;% dplyr::select(-tags, -emojis) %&gt;% # izloimo dva prazna stolpca group_by(document) %&gt;% mutate(dolzina_povedi = tokens/sents) %&gt;% paged_table() Izraun pokae, da je dolina povedi (tj. tevilo besed na poved) veja kot npr. v sproenem (zasebnem) ustnem dvogovoru o vsakdanji, manj zahtevni temi. Lahko bi tudi izraunali kazalnik slovarske raznolikosti v besedilih, tj. razmerje med razlinimi (types) in pojavnicami (tokens), kar se angleini imenuje type token ratio (ttr). Razlikujemo med slovarskimi enotami (lemma), razlinicami (types) in pojavnicami (tokens): npr. nemki glagol gehen je slovarska enota, ki ima ve razlinic ali oblik (npr. gehe, gehst, geht, gehen, geht, ging, gingst,  gegangen). Pojavnice: nekatere oblike glagola so pogosteje kot druge, nekatere pa se v izbranem besedilu ne pojavljajo. romanstatistik %&gt;% dplyr::select(-tags, -emojis, -urls) %&gt;% # izloimo stolpce iz prikaza group_by(document) %&gt;% mutate(dolzina_povedi = round(tokens/sents, 2)) %&gt;% # zaokroevanje &quot;round()&quot; mutate(ttr = round(types/tokens, 4)) %&gt;% paged_table() Vrednost slovarske raznolikosti (ttr) je (glede na zmerno dolino besedila) razmeroma nizka, mogoe znamenje, da je besedilo napisano v vsakdanjem pogovornem slogu. Program quanteda ima za ugotavljanje slovarske raznolikosti (lexical diversity) ve monosti, kar zahteva razcepitev besedil na manje enote, tj. tokens (besede, loila idr.). Za nekatere funkcije moramo ustvariti besedilno matriko (document frequency matrix, dfm). 12.4 Tokenizacija e elimo ve izvedeti o besedilih, npr. katere besede se pojavljajo v besedilih, moramo najprej ustvariti seznam besedilnih enot (tj. besed, loil idr.). Iz gradiva izvleemo besedne oblike (npr. s pomojo presledkov). Za tokenizacijo ima quanteda ukaz tokens(). besede = tokens(romane) head(besede) ## Tokens consisting of 2 documents. ## tom_de.txt : ## [1] &quot;Vorwort&quot; &quot;des&quot; &quot;Autors&quot; &quot;.&quot; &quot;Die&quot; &quot;meisten&quot; ## [7] &quot;der&quot; &quot;hier&quot; &quot;erzählten&quot; &quot;Abenteuer&quot; &quot;haben&quot; &quot;sich&quot; ## [ ... and 85,806 more ] ## ## tom_en.txt : ## [1] &quot;PREFACE&quot; &quot;Most&quot; &quot;of&quot; &quot;the&quot; &quot;adventures&quot; ## [6] &quot;recorded&quot; &quot;in&quot; &quot;this&quot; &quot;book&quot; &quot;really&quot; ## [11] &quot;occurred&quot; &quot;;&quot; ## [ ... and 85,775 more ] 12.5 ienje S seznama lahko izloimo nebesede: besede = tokens(romane, remove_punct = T, remove_symbols = T, remove_numbers = T, remove_url = T) head(besede) ## Tokens consisting of 2 documents. ## tom_de.txt : ## [1] &quot;Vorwort&quot; &quot;des&quot; &quot;Autors&quot; &quot;Die&quot; &quot;meisten&quot; ## [6] &quot;der&quot; &quot;hier&quot; &quot;erzählten&quot; &quot;Abenteuer&quot; &quot;haben&quot; ## [11] &quot;sich&quot; &quot;tatsächlich&quot; ## [ ... and 67,016 more ] ## ## tom_en.txt : ## [1] &quot;PREFACE&quot; &quot;Most&quot; &quot;of&quot; &quot;the&quot; &quot;adventures&quot; ## [6] &quot;recorded&quot; &quot;in&quot; &quot;this&quot; &quot;book&quot; &quot;really&quot; ## [11] &quot;occurred&quot; &quot;one&quot; ## [ ... and 70,732 more ] Izloimo lahko tudi besede, ki za vsebinsko analizo niso zaelene (stopwords). concatenate = zdrui: c() Seznamoma smo dodali e nekaj besed (funkcijske besede ali zelo pogoste glagolske oblike). stoplist_de = c(stopwords(&quot;de&quot;), &quot;dass&quot;, &quot;s&quot;, &quot;Na&quot;, &quot;wurde&quot;, &quot;ganz&quot;, &quot;immer&quot;, &quot;sagte&quot;, &quot;mehr&quot;, &quot;schon&quot;, &quot;ja&quot;, &quot;mal&quot;, &quot;ne&quot;, &quot;n&quot;, &quot;wohl&quot;, &quot;sagen&quot;, &quot;gar&quot;) stoplist_en = c(stopwords(&quot;en&quot;), &quot;now&quot;, &quot;one&quot;, &quot;got&quot;, &quot;upon&quot;, &quot;just&quot;, &quot;said&quot;, &quot;Well&quot;, &quot;Oh&quot;, &quot;ever&quot;, &quot;around&quot;, &quot;made&quot;, &quot;say&quot;, &quot;Project&quot;) stoplist = c(stoplist_de, stoplist_en) besede = tokens_select(besede, pattern = stoplist, selection = &quot;remove&quot;, padding = FALSE) Naslednji seznam bomo uporabljali za ustvarjanje konkordance, tj. seznama sobesedil, v katerem se nahaja iskalni niz (npr. neka beseda). Pri odstranjevanju nezaelenih izrazov je nastavljena opcija padding = TRUE. Na mestu nezaelenega izraza bo ostal znak doline ni (). To je pomembno pri iskanju vebesednih zvez (kolokacij). # Obdrali bomo loila woerter = tokens(romane, remove_symbols = T, remove_numbers = T, remove_url = T) woerter = tokens_select(woerter, pattern = stoplist, selection = &quot;remove&quot;, padding = TRUE) 12.6 Kwic Za sestavo konkordanc ima program quanteda funkcijo kwic() (keyword in context). Mono je iskati posamezne besede, besedne zveze, uporabljamo pa lahko tudi nadomestne znake (npr. *). kwic() ima ve monosti, npr. case_insensitive = FALSE razlikuje med velikimi in malimi rkami. Privzeta vrednost je TRUE (tako kot Excel). Konkordanco bomo pretvorili v podatkovno zbirko, tj. data.frame ali tibble(). Prednost je npr., da tako pridobimo imena stolpcev (tj. spremenljivk). konkordanca = kwic(woerter, pattern = c(&quot;Tom&quot;, &quot;Sawyer&quot;, &quot;Huck&quot;, &quot;Huckleberry&quot;, &quot;Finn&quot;), case_insensitive = FALSE, window = 10) %&gt;% as_tibble() head(konkordanca) %&gt;% paged_table() Z ukazom count() lahko pretejemo, koliko pojavnic je kwic() nael. konkordanca %&gt;% count(keyword, sort = TRUE) ## # A tibble: 5 x 2 ## keyword n ## &lt;chr&gt; &lt;int&gt; ## 1 Tom 1415 ## 2 Huck 460 ## 3 Sawyer 58 ## 4 Huckleberry 51 ## 5 Finn 32 Skladno z naim priakovanjem sta Tom in Huck, glavna junaka romana, pogosta izraza. Natanneje si lahko ogledamo tudi sobesedilo, v katerem se pojavljajo iskani znakovni nizi (keywords). 12.7 Pogostnost Besedilno-besedna matrika (dfm) je izhodie za izraun in grafini prikaz ve statistinih koliin, npr. tudi pogostnosti besednih oblik v posameznih besedilih: matrika = dfm(besede, tolower = FALSE) # za zdaj obdrimo velike zaetnice # Odstranimo besede, ki jih v vsebinski analizi ne potrebujemo (stopwords) matrika = dfm_select(matrika, selection = &quot;remove&quot;, pattern = stoplist) matrika ## Document-feature matrix of: 2 documents, 17,869 features (49.52% sparse) and 0 docvars. ## features ## docs Vorwort Autors meisten erzählten Abenteuer tatsächlich zugetragen ## tom_de.txt 1 1 14 1 13 2 3 ## tom_en.txt 0 0 0 0 0 0 0 ## features ## docs erlebt Schulkameraden Huck ## tom_de.txt 2 3 237 ## tom_en.txt 0 0 223 ## [ reached max_nfeat ... 17,859 more features ] Program quanteda ima posebno funkcijo, ki sestavi seznam besednih oblik in njihove pogostnosti, tj. textstat_frequency(). library(quanteda.textstats) library(quanteda.textplots) pogostnost = textstat_frequency(matrika, groups = c(&quot;tom_de.txt&quot;, &quot;tom_en.txt&quot;)) head(pogostnost) ## feature frequency rank docfreq group ## 1 Tom 737 1 1 tom_de.txt ## 2 Huck 237 2 1 tom_de.txt ## 3 Joe 124 3 1 tom_de.txt ## 4 Becky 101 4 1 tom_de.txt ## 5 Tante 94 5 1 tom_de.txt ## 6 Jungen 92 6 1 tom_de.txt tail(pogostnost) ## feature frequency rank docfreq group ## 18037 _man_ 1 3690 1 tom_en.txt ## 18038 novel 1 3690 1 tom_en.txt ## 18039 marriage 1 3690 1 tom_en.txt ## 18040 perform 1 3690 1 tom_en.txt ## 18041 prosperous 1 3690 1 tom_en.txt ## 18042 reveal 1 3690 1 tom_en.txt Na diagramu najpogostnejih izrazov v izvirniku in prevodu lahko zasledimo podobne tendence in razlike, nazorno pa nam pokae tudi, ali smo izloili vse tiste izraze, ki jih za vsebinsko analizo ne elimo imeti na seznamu in ali bi bilo smiselno, dopolniti seznam stoplist (gl. zgoraj). as_tibble(pogostnost) %&gt;% slice_max(order_by = frequency, n = 60) %&gt;% mutate(feature = reorder_within(feature, frequency, frequency, sep = &quot;: &quot;)) %&gt;% # ggplot(aes(frequency, reorder(feature, frequency))) + ggplot(aes(frequency, feature)) + geom_col(fill=&quot;steelblue&quot;) + labs(x = &quot;Frequency&quot;, y = &quot;&quot;) + facet_wrap(~ group, scales = &quot;free_y&quot;) 12.8 Kolokacije Koleksemi = slovarske enote, ki se sopojavljajo. Kolokacije = jezikovne prvine, ki se sopojavljajo. Statistina opredelitev: e se dva izraza (npr. dober dan) pojavljata bistveno pogosteje kot neposredna soseda, kakor bi nakljuno priakovali, potem ju lahko obravnavamo kot kolokacijo. Jezikoslovna opredelitev: Kolokacija je pomensko povezano zaporedje besed. Pomembno: za ugotavljanje kolokacij potrebujemo besedni seznam z opcijo padding = TRUE ! V besednem seznamu woerter smo sicer izloili nezaelene besedne oblike, ampak opcija padding = TRUE namesto izloenih besed vstavi vrzel oz. prazen niz . Tako program preprei odkrivanje lanih kolokacij. Funkcija textstat_collocations() programa quanteda nam bo poiskala (statistino opredeljene) kolokacije. Z opcijo size nastavimo, koliko lenov naj vsebuje (npr. 2 za dve besedni obliki, 2:3 za dve ali tri besede). Opcija tolower = TRUE odpravi razlikovanje med malimi in velikimi rkami. Opcija minimal_count doloa, kolikna naj bo najmanja pogostnost. V naslednjih preglednicah so prikazane kolokacije obeh romanov, izvirnika in prevoda. coll_2 = textstat_collocations(woerter, # seznma besednih oblik size = 2, # obseg kolokacije tolower = TRUE, # naredi male rke ! min_count = 2) # prag pogostnosti head(coll_2) ## collocation count count_nested length lambda z ## 1 tante polly 45 0 2 8.240516 29.64628 ## 2 aunt polly 42 0 2 8.440653 28.14163 ## 3 injun joe 45 0 2 7.594641 27.05485 ## 4 joe harper 27 0 2 7.027402 22.82116 ## 5 muff potter 36 0 2 9.966474 22.28821 ## 6 becky thatcher 21 0 2 6.317666 22.20220 Trolenskih kolokacij je precej manj kot dvolenskih. coll_3 = textstat_collocations(woerter, size = 3, tolower = TRUE, min_count = 2) head(coll_3) ## collocation count count_nested length lambda z ## 1 tom fuhr zusammen 2 0 3 2.9999040 1.3188542 ## 2 tom went home 2 0 3 1.7420384 1.2562280 ## 3 hand tied behind 2 0 3 0.9722967 0.3775822 ## 4 nen ganzen haufen 2 0 3 0.7370573 0.2875748 ## 5 tom sawyer&#39;s gang 2 0 3 0.8010998 0.2757649 ## 6 every sound ceased 2 0 3 0.6641610 0.2587257 Program ni nael trilenskih kolokacij, ki bi se pojavljale vsaj dvakrat. coll_4 = textstat_collocations(woerter, size = 4, tolower = TRUE, min_count = 2) head(coll_4) ## [1] collocation count count_nested length lambda ## [6] z ## &lt;0 rows&gt; (or 0-length row.names) Seznam vseh kolokacij velikost 2, 3 in 4. V stolpcu count_nested program teje kolokacije, vsebovane v drugi kolokaciji (vijega reda). coll_2_4 = textstat_collocations(woerter, size = 2:4, tolower = TRUE, minimal_count = 2) head(coll_2_4) ## collocation count count_nested length lambda z ## 1 tante polly 45 26 2 8.240516 29.64628 ## 2 aunt polly 42 16 2 8.440653 28.14163 ## 3 injun joe 45 23 2 7.594641 27.05485 ## 4 joe harper 27 11 2 7.027402 22.82116 ## 5 muff potter 36 13 2 9.966474 22.28821 ## 6 becky thatcher 21 2 2 6.317666 22.20220 Kolokacija samostalnikih izrazov. V nemini imajo samostalniki veliko zaetnico. Najprej bomo sestavili seznam besednih oblik z veliko zaetnico (woerter_caps). Pri tem nam pomagata regularni izraz 3 in opcija case_insensitive = FALSE. Potem lahko pridobimo seznam kolokacij (coll_caps2). Spremenljivki lambda in z nam povesta, kako znailna je kolokacija v besedilu. Najprej kolokacije v nemkem prevodu, ki so sestavljene iz besednih oblik z veliko zaetnico (poleg lastnih imen tudi splona imena): # seznam besed z veliko zaetnico woerter_caps_de = tokens_select(woerter[&quot;tom_de.txt&quot;], pattern = &quot;^[A-Z]&quot;, valuetype = &quot;regex&quot;, case_insensitive = FALSE, padding = TRUE) # kolokacije besed z veliko zaetnico coll_caps2_de = textstat_collocations(woerter_caps_de, size = 2, tolower = FALSE, min_count = 5) head(coll_caps2_de, 10) ## collocation count count_nested length lambda z ## 1 Joe Harper 13 0 2 6.276456 17.12449 ## 2 Muff Potter 21 0 2 10.204248 16.47734 ## 3 Becky Thatcher 10 0 2 5.916284 15.59540 ## 4 Huckleberry Finn 7 0 2 8.260899 15.19022 ## 5 Frau Thatcher 7 0 2 7.547491 14.96977 ## 6 Richter Thatcher 6 0 2 6.951130 14.07828 ## 7 Herr Gott 6 0 2 6.810621 13.99320 ## 8 Thomas Sawyer 6 0 2 8.506141 13.71857 ## 9 Jeff Thatcher 7 0 2 8.485842 13.59754 ## 10 Tom Sawyer 20 0 2 5.924027 13.11498 e kolokacije v anglekem izvirniku, ki so sestavljene le iz lastnih imen: woerter_caps_en = tokens_select(woerter[&quot;tom_en.txt&quot;], pattern = &quot;^[A-Z]&quot;, valuetype = &quot;regex&quot;, case_insensitive = FALSE, padding = TRUE) coll_caps2_en = textstat_collocations(woerter_caps_en, size = 2, tolower = FALSE, min_count = 5) head(coll_caps2_en, 10) ## collocation count count_nested length lambda z ## 1 Injun Joe 45 0 2 7.624360 26.98981 ## 2 Injun Joe&#39;s 18 0 2 7.952462 19.77999 ## 3 Joe Harper 14 0 2 6.278145 17.50510 ## 4 Muff Potter 15 0 2 9.196406 17.16147 ## 5 Becky Thatcher 11 0 2 6.098456 16.49557 ## 6 Huckleberry Finn 8 0 2 8.388678 15.66984 ## 7 Judge Thatcher 7 0 2 7.093846 15.01281 ## 8 Tom Sawyer 25 0 2 6.092915 14.60283 ## 9 Thomas Sawyer 7 0 2 8.430545 14.16191 ## 10 Aunt Polly 41 0 2 12.236764 13.87560 12.9 Lematizacija Slovarska enota (lema) je osnovna oblika neke besede (geslo v slovarju): imenovalnik ednine, e gre za samostalniko obliko oz. nedolonik, e gre za glagolsko obliko itd. Seznam slovarskih enot lahko sestavimo sami, bistveno hitreje (eprav ne brez napak!) pa to opravimo programsko, npr. z udpipe ali spacyr. 12.9.1 Lasten seznam Seznam slovarskih enot (lem) lahko naloimo z medmreja na na disk. Tu je prikazan postopek za nemki prevod. Na quanteda korpus vsebuje tudi angleko besedilo, ki ga moramo izloiti, preden zanem lematizacijo nemkih besednih oblik. besede_de = besede[&quot;tom_de.txt&quot;] e imamo primeren seznam na disku, je postopek za uporabo s korpusom quanteda npr. taken: - odpremo datoteko, ki vsebuje seznam lem (npr. z ukazom read.delim2() - odvisno od datotene oblike); - za uporabo s korpusom pretvorimo stolpca podatkovnega niza v besedna seznama (tj. as.character()); - nazadnje zamenjamo besedne oblike z lemami(s funkcijo token_replace()). e ustrezne leme ne najde, obdri besedno obliko, ki jo je program nael v besedilu. # Preberi seznam slovarskih enot in pojavnic z diska lemdict = read.delim2(&quot;data/lemmatization_de.txt&quot;, sep = &quot;\\t&quot;, # stolpci so loeni tabulatorsko encoding = &quot;UTF-8&quot;, # univerzalno kodiranje rk col.names = c(&quot;lemma&quot;, &quot;word&quot;), # dodamo imena stolpcev stringsAsFactors = F) # preberi kot rkovne nize # Pretvori podatkovna niza v znakovna niza lemma = as.character(lemdict$lemma) # v tem stolpcu je osnovna oblika besede word = as.character(lemdict$word) # v tem stolpcu je ena izmed besednih oblik # Lematiziraj pojavnice v naih besedilih lemmas_de &lt;- tokens_replace(besede_de, # seznam nemkih besednih oblik (tokens) pattern = word, # obliko, ki jo elimo zamenjati replacement = lemma, # zamenjava case_insensitive = TRUE, # ne glede na zaetnico valuetype = &quot;fixed&quot;) # natanno ujemanje oblik lemmas_de # zdaj imamo leme (e je program nael zamenjavo za besedno obliko) ## Tokens consisting of 1 document. ## tom_de.txt : ## [1] &quot;Vorwort&quot; &quot;Autor&quot; &quot;meist&quot; &quot;erzählen&quot; ## [5] &quot;Abenteuer&quot; &quot;tatsächlich&quot; &quot;zutragen&quot; &quot;erleben&quot; ## [9] &quot;Schulkameraden&quot; &quot;Huck&quot; &quot;Finn&quot; &quot;Leben&quot; ## [ ... and 32,480 more ] Zdaj ko imamo seznam slovarskih enot, lahko ustvarimo tudi matriko s slovarskimi enotami (namesto s pojavnicami), in sicer z funkcijo dfm() tako kot zgoraj. matrika_lem_de = dfm(lemmas_de, tolower = FALSE) # za zdaj obdrimo velike zaetnice # Odstranimo besede, ki jih v vsebinski analizi ne potrebujemo (stopwords) matrika_lem_de = dfm_select(matrika_lem_de, selection = &quot;remove&quot;, pattern = stoplist_de) matrika_lem_de ## Document-feature matrix of: 1 document, 7,108 features (0.00% sparse) and 0 docvars. ## features ## docs Vorwort Autor meist erzählen Abenteuer tatsächlich zutragen ## tom_de.txt 1 1 14 25 18 2 7 ## features ## docs erleben Schulkameraden Huck ## tom_de.txt 4 3 237 ## [ reached max_nfeat ... 7,098 more features ] 12.9.2 Udpipe 12.9.2.1 Angleki izvirnik Lematizacijo anglekega izvirnika bomo opravili s programom udpipe, ki je na voljo za tevilne jezike (tudi slovenino). Pred prvo uporabo moramo naloiti model za nemki jezik z interneta. V naslednjem koraku naloimo jezikovni model v pomnilnik. e je jezikovni model e v nai delovni mapi, download ni potreben, saj ga lahko takoj naloimo z diska v pomnilnik. library(udpipe) destfile = &quot;english-ewt-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ language_model &lt;- udpipe_download_model(language = &quot;english&quot;) ud_en &lt;- udpipe_load_model(language_model$file_model) } else { file_model = destfile ud_en &lt;- udpipe_load_model(file_model) } Naslednji korak je udpipe_annotate(): program udpipe oznauje besedne oblike po ve merilih. Lematizacijo je le ena izmed nalog, ki jih program opravi. Udpipe prebere in oznauje besedilo takole: Na zaetku je readtext() prebral besedila, shranili smo jih pod imenom txt. Angleki izvirnik smo shranili pod imenom txt2, besedilo pa je v stolpcu text. x &lt;- udpipe_annotate(ud_en, # jezikovni model x = txt2$text, # izbran je le angleki izvirnik trace = TRUE) # sledimo napredku anotacije ## 2021-11-28 20:22:28 Annotating text fragment 1/1 Pretvorba seznama v podatkovni niz s funkcijo as.data.frame(): # # Alternativno branje anglekega izvirnika # # samo drugo besedilo: # x &lt;- udpipe_annotate(ud_en, x = txt$text[2], trace = TRUE) en_df &lt;- as.data.frame(x) head(en_df) ## doc_id paragraph_id sentence_id ## 1 doc1 1 1 ## 2 doc1 2 2 ## 3 doc1 2 2 ## 4 doc1 2 2 ## 5 doc1 2 2 ## 6 doc1 2 2 ## sentence ## 1 PREFACE ## 2 Most of the adventures recorded in this book really occurred; one or two were experiences of my own, the rest those of boys who were schoolmates of mine. ## 3 Most of the adventures recorded in this book really occurred; one or two were experiences of my own, the rest those of boys who were schoolmates of mine. ## 4 Most of the adventures recorded in this book really occurred; one or two were experiences of my own, the rest those of boys who were schoolmates of mine. ## 5 Most of the adventures recorded in this book really occurred; one or two were experiences of my own, the rest those of boys who were schoolmates of mine. ## 6 Most of the adventures recorded in this book really occurred; one or two were experiences of my own, the rest those of boys who were schoolmates of mine. ## token_id token lemma upos xpos feats ## 1 1 PREFACE Preface NOUN NN Number=Sing ## 2 1 Most most ADJ JJS Degree=Sup ## 3 2 of of ADP IN &lt;NA&gt; ## 4 3 the the DET DT Definite=Def|PronType=Art ## 5 4 adventures adventure NOUN NNS Number=Plur ## 6 5 recorded record VERB VBN Tense=Past|VerbForm=Part ## head_token_id dep_rel deps misc ## 1 0 root &lt;NA&gt; SpacesAfter=\\\\n\\\\n\\\\n ## 2 10 nsubj &lt;NA&gt; &lt;NA&gt; ## 3 4 case &lt;NA&gt; &lt;NA&gt; ## 4 4 det &lt;NA&gt; &lt;NA&gt; ## 5 1 obl &lt;NA&gt; &lt;NA&gt; ## 6 4 acl &lt;NA&gt; &lt;NA&gt; 12.9.2.2 Nemki prevod Lematizacijo nemkega prevod bomo tokrat opravili s programom udpipe. Pred prvo uporabo moramo naloiti model za nemki jezik z interneta. V naslednjem koraku naloimo jezikovni model v pomnilnik. e je jezikovni model e v nai delovni mapi, download ni potreben, saj ga lahko takoj naloimo z diska v pomnilnik. library(udpipe) destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ language_model &lt;- udpipe_download_model(language = &quot;german&quot;) ud_de &lt;- udpipe_load_model(language_model$file_model) } else { file_model = destfile ud_de &lt;- udpipe_load_model(file_model) } Naslednji korak je udpipe_annotate(): program udpipe oznauje besedne oblike po ve merilih. Lematizacijo je le ena izmed nalog, ki jih program opravi. Udpipe prebere in oznauje besedilo takole: Na zaetku je readtext() prebral besedila, shranili smo jih pod imenom txt. Nemki prevod smo shranili pod imenom txt1, besedilo pa je v stolpcu text. x &lt;- udpipe_annotate(ud_de, # jezikovni model x = txt1$text, # izbran je le nemki prevod romana trace = TRUE) # sledimo napredku anotacije ## 2021-11-28 20:23:43 Annotating text fragment 1/1 Pretvorba seznama v podatkovni niz s funkcijo as.data.frame(): # # Alternativno branje anglekega izvirnika # # samo drugo besedilo: # x &lt;- udpipe_annotate(ud_en, x = txt$text[2], trace = TRUE) de_df &lt;- as.data.frame(x) head(de_df) ## doc_id paragraph_id sentence_id ## 1 doc1 1 1 ## 2 doc1 1 1 ## 3 doc1 1 1 ## 4 doc1 1 1 ## 5 doc1 1 1 ## 6 doc1 1 1 ## sentence ## 1 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 2 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 3 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 4 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 5 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 6 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## token_id token lemma upos xpos ## 1 1 Vorwort Vorwort ADP NN ## 2 2 des der DET ART ## 3 3 Autors Autor NOUN NN ## 4 4 . . PUNCT $. ## 5 5 Die der PRON ART ## 6 6 meisten meist PRON NN ## feats head_token_id ## 1 Case=Nom|Gender=Neut|Number=Sing 3 ## 2 Case=Gen|Definite=Def|Gender=Masc|Number=Sing|PronType=Art 3 ## 3 Case=Gen|Gender=Masc|Number=Sing 14 ## 4 &lt;NA&gt; 14 ## 5 Case=Nom|Number=Plur|PronType=Art 6 ## 6 Case=Dat|Gender=Masc|Number=Sing 14 ## dep_rel deps misc ## 1 case &lt;NA&gt; &lt;NA&gt; ## 2 det &lt;NA&gt; &lt;NA&gt; ## 3 obl &lt;NA&gt; &lt;NA&gt; ## 4 punct &lt;NA&gt; SpacesAfter=\\\\s\\\\s\\\\s ## 5 det &lt;NA&gt; &lt;NA&gt; ## 6 nsubj &lt;NA&gt; &lt;NA&gt; 12.10 Besedni oblaek Besedni oblaki so smiseln in razmeroma preprost prikaz najpogostejih besed v besedilu. Najvekrat jih uporabljajo za prikaz vsebinsko relevantnih besed. Zato je treba najprej odstraniti funkcijske in druge neprimerne izraze. e bolji pregled nad vsebino besedila nam besedni oblaki dajejo, e uporabljamo slovarske enote (leme) namesto besednih oblik. To e posebej velja v oblikoslovno bogatih jezikih kot sta slovenino in nemina. Podatkovni niz en_df, ki ga je ustvaril udpipe, moramo pripraviti za program wordcloud2: - izloiti nezaelene izraze, - ugotoviti pogostnost besed in - omejiti tevilo besed za prikaz v besednem oblaku. en_df_ud &lt;- en_df %&gt;% filter(upos != &quot;PUNCT&quot;) %&gt;% # izloimo loila filter(str_detect(lemma, &quot;^[:alpha:]&quot;)) %&gt;% # samo rke, ne simobolov itd. mutate(word = str_to_lower(lemma)) # vse pretvorimo v male rke # iz besednega seznama naredimo podatkovni niz stoplist_eng = as_tibble(stoplist_en) %&gt;% rename(word = value) # sprememba imena # odstranimo nezaelene besede en_df_cleaned = en_df_ud %&gt;% anti_join(stoplist_eng, by = &quot;word&quot;) # pretejemo besede in izberemo najpogosteje topfeat_en = en_df_cleaned %&gt;% count(word, sort = TRUE) %&gt;% head(300) %&gt;% as_tibble() # Oblaek Izris in shranjevanje oblaka: #install webshot library(webshot) # webshot::install_phantomjs() # Make the graph # my_graph=wordcloud2(demoFreq, size=1.5) # my_graph = wordcloud2(topfeat_en, shape = &quot;circle&quot;, # color=&#39;random-light&#39;, backgroundColor=&quot;black&quot;) #color = &quot;random-dark&quot;) set.seed(1320) library(wordcloud2) my_graph = wordcloud2(topfeat_en) # my_graph = wordcloud2(topfeat, shape = &quot;circle&quot;, # color=&#39;random-light&#39;, backgroundColor=&quot;black&quot;) # save it in html library(htmlwidgets) saveWidget(my_graph,&quot;tmp.html&quot;,selfcontained = F) # png and pdf webshot(&quot;tmp.html&quot;,&quot;pictures/wcloud_tom_en.png&quot;, delay =5, vwidth = 1000, vheight=800) webshot(&quot;tmp.html&quot;,&quot;pictures/wcloud_tom_en.pdf&quot;, delay =5, vwidth = 800, vheight=600) Oblaek nemkih slovarskih enot: de_df_ud &lt;- de_df %&gt;% filter(upos != &quot;PUNCT&quot;) %&gt;% # brez loil filter(str_detect(lemma, &quot;^[:alpha:]&quot;)) %&gt;% # samo rke, ne simobolov itd. mutate(word = str_to_lower(lemma)) # vse pretvorimo v male rke # iz besednega seznama naredimo podatkovni niz stoplist_deu = as_tibble(stoplist_de) %&gt;% rename(word = value) # odstranimo nezaelene besede de_df_cleaned = de_df_ud %&gt;% anti_join(stoplist_deu, by = &quot;word&quot;) # pretejemo besede, zadnji popravki in izberemo najpogosteje topfeat_de = de_df_cleaned %&gt;% count(word, sort = TRUE) %&gt;% filter(!str_detect( word, &quot;er\\\\|es\\\\|sie&quot;)) %&gt;% # izloimo z regularnim izrazom filter(!str_detect(word, &quot;sie\\\\|sie&quot;)) %&gt;% # izloimo z regex mutate(word = str_replace( word, &quot;hucken&quot;, &quot;huck&quot;)) %&gt;% # popravek !!! head(300) %&gt;% as_tibble() # Oblaek set.seed(1321) library(wordcloud2) my_graph2 = wordcloud2(topfeat_de) # save it in html library(webshot) library(htmlwidgets) saveWidget(my_graph2,&quot;tmp2.html&quot;,selfcontained = F) # save as png and pdf webshot(&quot;tmp2.html&quot;,&quot;pictures/wcloud_tom_de.png&quot;, delay =5, vwidth = 1000, vheight=800) webshot(&quot;tmp2.html&quot;,&quot;pictures/wcloud_tom_de.pdf&quot;, delay =5, vwidth = 800, vheight=600) Oblaek anglekih slovarskih enot, ki smo jih pridobili s programom udpipe, lahko tudi pripravimo za prikaz s funkcijo textplot_wordcloud() programa quanteda. tok_en = en_df_cleaned %&gt;% dplyr::select(word) %&gt;% mutate(word = paste(word, collapse = &quot; &quot;)) %&gt;% head(1) toks_en = tokens(tok_en$word) matrika_lem_en = dfm(toks_en) matrika_lem_en = dfm_select(matrika_lem_en, pattern = stoplist_en, selection = &quot;remove&quot;) # spremenimo ime (doc_id) docnames(matrika_lem_en) &lt;- &quot;tom_en&quot; textplot_wordcloud(matrika_lem_en, # le nemki prevod comparison = FALSE, # brez primerjave z drugim besedilom adjust = 0.025, color = c(&quot;darkblue&quot;,&quot;orange&quot;,&quot;darkgreen&quot;), max_size = 5, min_size = 0.75, rotation = 0.5, min_count = 10, # spodnji prag pogostnosti max_words = 250) # koliko besed sme biti v oblaku Priprava seznama nemkih slovarskih enot, ki smo jih pridobili z udpipe, in prikaz s funkcijo textplot_wordcloud(). tok_de = de_df_cleaned %&gt;% dplyr::select(word) %&gt;% mutate(word = paste(word, collapse = &quot; &quot;)) %&gt;% head(1) toks_de = tokens(tok_de$word) matrika_lem_de = dfm(toks_de) matrika_lem_de = dfm_select(matrika_lem_de, pattern = c(stoplist_de, &quot;|&quot;), selection = &quot;remove&quot;) # spremenimo ime (doc_id) docnames(matrika_lem_de) &lt;- &quot;tom_de&quot; textplot_wordcloud(matrika_lem_de, # le nemki prevod comparison = FALSE, # brez primerjave z drugim besedilom adjust = 0.025, color = c(&quot;darkblue&quot;,&quot;orange&quot;,&quot;darkgreen&quot;), max_size = 5, min_size = 0.75, rotation = 0.5, min_count = 10, # spodnji prag pogostnosti max_words = 250) # koliko besed sme biti v oblaku Zdruimo matriki s funkcijo rbind(). matrika_lem_de_en = rbind(matrika_lem_de, matrika_lem_en) matrika_lem_de_en ## Document-feature matrix of: 2 documents, 13,091 features (48.91% sparse) and 0 docvars. ## features ## docs vorwort autor meist erzählt abenteuer tatsächlich zugetragen erleben ## tom_de 1 1 14 2 16 2 3 3 ## tom_en 0 0 0 0 0 0 0 0 ## features ## docs schulkameraden hucken ## tom_de 3 226 ## tom_en 0 0 ## [ reached max_nfeat ... 13,081 more features ] e elimo, lahko matriko pretvorimo v podatkovni niz: convert(matrika_lem_de_en, to = &quot;data.frame&quot;) %&gt;% write_csv(&quot;data/tom_tom_matrika.csv&quot;) Primerjalni oblaek nemkih in anglekih slovarskih enot: textplot_wordcloud(matrika_lem_de_en, comparison = TRUE, # primerjava z drugim besedilom adjust = 0.025, color = c(&quot;darkblue&quot;,&quot;darkgreen&quot;), max_size = 4, min_size = 0.5, rotation = 0.5, min_count = 10, # spodnji prag pogostnosti max_words = 120) # koliko besed sme biti v oblaku 12.11 Poloaj v besedilu (xray) Diagram prikazuje, kje v besedilih se pojavlja doloena besedna oblika. Podobno: Voyant Tools (MicroSearch). Za primerjavo so bili izbrani izrazi, ki dandanes niso ve nevtralni, temve bolj ali manj rasistino obarvani ali celo pejorativni. kwic_tom = kwic(besede, pattern = c(&quot;indian*&quot;, &quot;injun&quot;, # indinaer? &quot;neg*&quot;, &quot;nigg*&quot;)) # neger? textplot_xray(kwic_tom) 12.12 Slovarska raznolikost Za oceno slovarske raznolikosti besedil je ve meril. Najosnovneja in najbr najbolj znano je razmerje med tevilom razlinic in pojavnic (TTR). Slaba lastnost tega merila je odvisnost od velikosti besedila. Program quanteda nam s funkcijo textstat_lexdiv() priara celo paleto meril za slovarsko raznolikost (ve o njih v pomoi programa). V spodnji razpredelnici vidimo tevilke po odstranitvi funkcijskih besed in nekaterih drugih nezaelenih izrazov (stopwords). TTR nemkega prevoda je veji kot tisti za angleki izvirnik, kar bi lahko pomenilo, da vsebuje ve oblik. textstat_lexdiv(matrika, measure = &quot;all&quot;) ## document TTR C R CTTR U S K ## 1 tom_de.txt 0.3120153 0.8878880 56.24243 39.76940 40.24348 0.9210789 10.14136 ## 2 tom_en.txt 0.2452145 0.8645934 44.02472 31.13018 33.29454 0.9033840 12.91314 ## I D Vm Maas lgV0 lgeV0 ## 1 94.03320 0.001014167 0.03076157 0.1576348 8.707463 20.04968 ## 2 45.73572 0.001291354 0.03458063 0.1733060 7.757339 17.86193 V naslednji tabeli vidimo izraun slovarske raznolikosti na osnovi slovarskih enot (namesto razlinic). textstat_lexdiv(matrika_lem_de_en, measure = &quot;all&quot;) ## document TTR C R CTTR U S K ## 1 tom_de 0.2384871 0.8616471 42.39104 29.97499 32.52277 0.9009906 15.18006 ## 2 tom_en 0.1810230 0.8353586 32.50308 22.98315 27.38304 0.8805434 20.53000 ## I D Vm Maas lgV0 lgeV0 ## 1 36.88205 0.001518054 0.03764229 0.1753502 7.639455 17.59049 ## 2 15.76658 0.002053064 0.04373406 0.1910993 6.851152 15.77536 12.13 Podobnost besedil Ta postopek je bolj zanimiv, e elimo primerjati ve besedil. Zato bomo dodali e Kafkino novelo. # odpremo datoteko verwandl = readtext(&quot;data/books/verwandlung/verwandlung.txt&quot;, encoding = &quot;UTF-8&quot;) # ustvarimo nov korpus verw_corp = corpus(verwandl) # zdruimo novi korpus s prrejnjim romane3 = romane + verw_corp # tokenizacija romane3_toks = tokens(romane3) # ustvarimo matriko (dfm) romane3_dfm = dfm(romane3_toks) Rezultat (ki je bil priakovan): Kafkina novela Die Verwandlung je nemkemu prevoda podobneji kot angleki izvirnik Twainovega romana Tom Sawyer. Program oitno ne primerja vsebine besedil, temve besedne oblike. textstat_simil(romane3_dfm, method = &quot;cosine&quot;, margin = &quot;documents&quot;) ## textstat_simil object; method = &quot;cosine&quot; ## tom_de.txt tom_en.txt verwandlung.txt ## tom_de.txt 1.000 0.615 0.933 ## tom_en.txt 0.615 1.000 0.496 ## verwandlung.txt 0.933 0.496 1.000 Podobnost oblik (features). # compute some term similarities simil1 = textstat_simil(matrika, matrika[, c(&quot;Tom&quot;, &quot;Sawyer&quot;, &quot;Huck&quot;, &quot;Finn&quot;)], method = &quot;cosine&quot;, margin = &quot;features&quot;) head(as.matrix(simil1), 10) ## Tom Sawyer Huck Finn ## Vorwort 0.7359509 0.6305926 0.7282902 0.7071068 ## Autors 0.7359509 0.6305926 0.7282902 0.7071068 ## meisten 0.7359509 0.6305926 0.7282902 0.7071068 ## erzählten 0.7359509 0.6305926 0.7282902 0.7071068 ## Abenteuer 0.7359509 0.6305926 0.7282902 0.7071068 ## tatsächlich 0.7359509 0.6305926 0.7282902 0.7071068 ## zugetragen 0.7359509 0.6305926 0.7282902 0.7071068 ## erlebt 0.7359509 0.6305926 0.7282902 0.7071068 ## Schulkameraden 0.7359509 0.6305926 0.7282902 0.7071068 ## Huck 0.9999368 0.9911012 1.0000000 0.9995372 tail(as.matrix(simil1), 10) ## Tom Sawyer Huck Finn ## chronicle 0.6770349 0.776114 0.6852688 0.7071068 ## strictly 0.6770349 0.776114 0.6852688 0.7071068 ## _boy_ 0.6770349 0.776114 0.6852688 0.7071068 ## _man_ 0.6770349 0.776114 0.6852688 0.7071068 ## writes 0.6770349 0.776114 0.6852688 0.7071068 ## novel 0.6770349 0.776114 0.6852688 0.7071068 ## marriage 0.6770349 0.776114 0.6852688 0.7071068 ## perform 0.6770349 0.776114 0.6852688 0.7071068 ## prosperous 0.6770349 0.776114 0.6852688 0.7071068 ## reveal 0.6770349 0.776114 0.6852688 0.7071068 Razlinost besedil (Kaj je ta metoda upotevala? Razliko v dolini?): # plot a dendrogram after converting the object into distances dist1 = textstat_dist(romane3_dfm, method = &quot;euclidean&quot;, margin = &quot;documents&quot;) plot(hclust(as.dist(dist1))) 12.14 Kljune besede Katere besedne oblike lahko uvrstimo med kljune besede, tj. take izraze, ki so najbolj znailni za neko besedilo? Program quanteda ima funkcijo textstat_keyness(): ciljno besedilo (target) primerjamo z referennim besedilom (reference). key_tom_de &lt;- textstat_keyness(matrika, target = &quot;tom_de.txt&quot;) key_tom_de %&gt;% rmarkdown::paged_table() key_tom_en &lt;- textstat_keyness(matrika, target = &quot;tom_en.txt&quot;) key_tom_en %&gt;% rmarkdown::paged_table() textplot_keyness(key_tom_de, key_tom_de$n_target == 1) textplot_keyness(key_tom_de, key_tom_en$n_target == 1) textplot_keyness(key_tom_de) textplot_keyness(key_tom_en) 12.15 Razumljivost besedil Indeksi razumljivosti (readability index) so prirejeni za angleino, za druge jezike veljajo v manji meri. Flesch-Index velja angleka besedila: nija vrednost nakazuje, da neko besedilo teje beremo (razumemo). Indeks nemkega prevoda ima nijo vrednost (61) kot Tom Sawyer (81), kar je lahko povezano (a) z daljimi povedmi in/ali (b) daljimi besedami (zloenke v nemini piemo kot eno besedo, v angleini pogosto ne). textstat_readability(romane, measure = c(&quot;Flesch&quot;, &quot;Flesch.Kincaid&quot;, &quot;FOG&quot;, &quot;FOG.PSK&quot;, &quot;FOG.NRI&quot;)) ## document Flesch Flesch.Kincaid FOG FOG.PSK FOG.NRI ## 1 tom_de.txt 60.58738 8.393636 10.609800 5.072836 6012.711 ## 2 tom_en.txt 80.59447 5.657490 8.183574 4.513384 5826.937 12.16 Omreje sopojavitev (FCM) Matriko sopojavljanja besednih oblik (FCM) pridobimo v dveh korakih: - najprej izberemo seznam izrazov (pattern) iz matrike (dfm()), - potem doloimo matriko sopojavljanja besednih oblik (fcm()). Primer omreja iz nemkega prevoda: dfm_tags_de &lt;- dfm_select(matrika[1,], # tom_de.txt pattern = (c(&quot;tom&quot;, &quot;huck&quot;, &quot;*joe&quot;, &quot;becky&quot;, &quot;tante&quot;, &quot;witwe&quot;,&quot;polly&quot;, &quot;sid&quot;, &quot;mary&quot;, &quot;thatcher&quot;, &quot;höhle&quot;, &quot;herz&quot;,&quot;*schule&quot;, &quot;katze&quot;, &quot;geld&quot;, &quot;zaun&quot;, &quot;piraten&quot;,&quot;schatz&quot;))) toptag_de &lt;- names(topfeatures(dfm_tags_de, 50)) head(toptag_de) ## [1] &quot;Tom&quot; &quot;Huck&quot; &quot;Joe&quot; &quot;Becky&quot; &quot;Tante&quot; &quot;Sid&quot; # Construct feature-cooccurrence matrix (fcm) of tags fcm_tom_de &lt;- fcm(matrika[1,]) # besedilo 1 je tom_de.txt head(fcm_tom_de) ## Feature co-occurrence matrix of: 6 by 17,869 features. ## features ## features Vorwort Autors meisten erzählten Abenteuer tatsächlich zugetragen ## Vorwort 0 1 14 1 13 2 3 ## Autors 0 0 14 1 13 2 3 ## meisten 0 0 91 14 182 28 42 ## erzählten 0 0 0 0 13 2 3 ## Abenteuer 0 0 0 0 78 26 39 ## tatsächlich 0 0 0 0 0 1 6 ## features ## features erlebt Schulkameraden Huck ## Vorwort 2 3 237 ## Autors 2 3 237 ## meisten 28 42 3318 ## erzählten 2 3 237 ## Abenteuer 26 39 3081 ## tatsächlich 4 6 474 ## [ reached max_nfeat ... 17,859 more features ] top_fcm_de &lt;- fcm_select(fcm_tom_de, pattern = toptag_de) textplot_network(top_fcm_de, min_freq = 0.6, edge_alpha = 0.8, edge_size = 5) 12.17 Slovnina analiza Za slovnino analizo in lematizacijo besednih oblik lahko uporabljamo posebne programe (npr. spacyr ali udpipe). Program udpipe je na voljo za tevilne jezike (angleino, nemino, slovenino idr.). Tu bomo ponovno uporabljali e pridobljena jezikovna modela in podatkovna niza (gl. lematizacijo), ampak tokrat za prikaz enostavnih primerov slovnine analize. 12.17.1 Podatkovna niza Za laje prepoznavo besedil bomo najprej spremenili imeni v stolpcu doc_id. Potem bomo podatkovna niza zdruili. en_df = en_df %&gt;% mutate(doc_id = str_replace(doc_id, &quot;doc1&quot;, &quot;tom_en&quot;)) de_df = de_df %&gt;% mutate(doc_id = str_replace(doc_id, &quot;doc1&quot;, &quot;tom_de&quot;)) tom_df = rbind(en_df, de_df) %&gt;% mutate(token_id = as.integer(factor(token_id))) %&gt;% arrange(doc_id, paragraph_id, sentence_id, token_id) head(tom_df) ## doc_id paragraph_id sentence_id ## 1 tom_de 1 1 ## 2 tom_de 1 1 ## 3 tom_de 1 1 ## 4 tom_de 1 1 ## 5 tom_de 1 1 ## 6 tom_de 1 1 ## sentence ## 1 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 2 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 3 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 4 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 5 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## 6 Vorwort des Autors . Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . Erstes Kapitel . , ,Tom ! &quot; Keine Antwort . , ,Tom ! &quot; Alles still . , ,Soll mich doch wundern , wo der Bengel wieder steckt ! Tom ! &quot; Die alte Dame schob ihre Brille hinunter und schaute darüber hinweg ; dann schob sie sie auf die Stirn und schaute darunter weg. ## token_id token lemma upos xpos ## 1 1 Vorwort Vorwort ADP NN ## 2 3 Abenteuer Abenteuer NOUN NN ## 3 5 seltsamsten seltsam ADJ NN ## 4 7 , , PUNCT $, ## 5 9 unwahrscheinlichsten unwahrscheinlich ADJ NN ## 6 10 Vorurteile Vorurteil NOUN NN ## feats head_token_id dep_rel deps misc ## 1 Case=Nom|Gender=Neut|Number=Sing 3 case &lt;NA&gt; &lt;NA&gt; ## 2 Case=Acc|Gender=Neut|Number=Plur 6 nmod &lt;NA&gt; &lt;NA&gt; ## 3 Case=Acc|Gender=Masc|Number=Plur 103 amod &lt;NA&gt; &lt;NA&gt; ## 4 &lt;NA&gt; 100 punct &lt;NA&gt; &lt;NA&gt; ## 5 Case=Acc|Gender=Masc|Number=Plur 103 amod &lt;NA&gt; &lt;NA&gt; ## 6 Case=Acc|Gender=Neut|Number=Plur 106 obj &lt;NA&gt; &lt;NA&gt; tail(tom_df) ## doc_id paragraph_id sentence_id ## 174376 tom_en 1898 5231 ## 174377 tom_en 1898 5231 ## 174378 tom_en 1898 5231 ## 174379 tom_en 1898 5231 ## 174380 tom_en 1898 5231 ## 174381 tom_en 1898 5231 ## sentence ## 174376 Some day it may seem worth while to take up the story of the younger ones again and see what sort of men and women they turned out to be; therefore it will be wisest not to reveal any of that part of their lives at present. ## 174377 Some day it may seem worth while to take up the story of the younger ones again and see what sort of men and women they turned out to be; therefore it will be wisest not to reveal any of that part of their lives at present. ## 174378 Some day it may seem worth while to take up the story of the younger ones again and see what sort of men and women they turned out to be; therefore it will be wisest not to reveal any of that part of their lives at present. ## 174379 Some day it may seem worth while to take up the story of the younger ones again and see what sort of men and women they turned out to be; therefore it will be wisest not to reveal any of that part of their lives at present. ## 174380 Some day it may seem worth while to take up the story of the younger ones again and see what sort of men and women they turned out to be; therefore it will be wisest not to reveal any of that part of their lives at present. ## 174381 Some day it may seem worth while to take up the story of the younger ones again and see what sort of men and women they turned out to be; therefore it will be wisest not to reveal any of that part of their lives at present. ## token_id token lemma upos xpos feats head_token_id dep_rel deps ## 174376 619 . . PUNCT . &lt;NA&gt; 5 punct &lt;NA&gt; ## 174377 621 seem seem VERB VB VerbForm=Inf 0 root &lt;NA&gt; ## 174378 642 worth worth ADJ JJ Degree=Pos 5 xcomp &lt;NA&gt; ## 174379 663 while while SCONJ IN &lt;NA&gt; 9 mark &lt;NA&gt; ## 174380 684 to to PART TO &lt;NA&gt; 9 mark &lt;NA&gt; ## 174381 703 take take VERB VB VerbForm=Inf 6 advcl &lt;NA&gt; ## misc ## 174376 SpacesAfter=\\\\n\\\\n\\\\n\\\\n\\\\n ## 174377 &lt;NA&gt; ## 174378 &lt;NA&gt; ## 174379 &lt;NA&gt; ## 174380 &lt;NA&gt; ## 174381 &lt;NA&gt; Shranjujemo in nadaljujemo naslednji. # write_rds(tom_df, &quot;data/tom_df.rds&quot;) # tom_df = read_rds(&quot;data/tom_df.rds&quot;) 12.17.2 Primerjava Noun : Pron Zdaj lahko zanemo poizvedovati po besednih oblikah, slovarskih enotah in slovninih kategorijah. tabela = tom_df %&gt;% group_by(doc_id) %&gt;% count(upos) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;) head(tabela) ## # A tibble: 6 x 3 ## # Groups: doc_id [1] ## doc_id upos n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 tom_de ADJ 5537 ## 2 tom_de ADP 5525 ## 3 tom_de ADV 6708 ## 4 tom_de AUX 3387 ## 5 tom_de CCONJ 3268 ## 6 tom_de DET 6887 tabela %&gt;% mutate(upos = reorder_within(upos, n, n, sep = &quot;: &quot;)) %&gt;% ggplot(aes(n, upos, fill = upos)) + geom_col() + facet_wrap(~ doc_id, scales = &quot;free&quot;) + theme(legend.position = &quot;none&quot;) + labs(x = &quot;tevilo pojavnic&quot;, y = &quot;&quot;) Izraun deleev: delezi = tabela %&gt;% mutate(prozent = n/sum(n)) %&gt;% pivot_wider(id_cols = upos, names_from = doc_id, values_from = n:prozent) head(delezi) ## # A tibble: 6 x 5 ## upos n_tom_de n_tom_en prozent_tom_de prozent_tom_en ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ADJ 5537 4324 0.0818 0.0588 ## 2 ADP 5525 7048 0.0816 0.0959 ## 3 ADV 6708 5743 0.0991 0.0782 ## 4 AUX 3387 4592 0.0500 0.0625 ## 5 CCONJ 3268 3761 0.0483 0.0512 ## 6 DET 6887 7081 0.102 0.0964 delezi %&gt;% filter(upos %in% c(&quot;NOUN&quot;, &quot;PRON&quot;)) ## # A tibble: 2 x 5 ## upos n_tom_de n_tom_en prozent_tom_de prozent_tom_en ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 NOUN 10871 12410 0.161 0.169 ## 2 PRON 9027 9831 0.133 0.134 Ali se besedili razlikujeta glede razmerja med samostalniki in zaimki? Glede na to, da gre za vsebinsko in najbr tudi slogovno zelo podobni besedili (izvirnik in prevod), in glede na to, da gre za sorodna jezika (angleinao in nemino), bi bila verjetna nielna domneva (H0: med izvirnikom in prevodom ni statistino znailne razlike). Manj verjetna se zdi alternativna hipoteza (H1: med izvirnikom in prevodom je statistino znailna razlika). # za hi kvadrat test potrebujemo le drugi in tretji stolpec nominal = delezi %&gt;% filter(upos %in% c(&quot;NOUN&quot;, &quot;PRON&quot;)) %&gt;% dplyr::select(n_tom_de, n_tom_en) # statisticni preskus chisq.test(nominal) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: nominal ## X-squared = 5.7103, df = 1, p-value = 0.01687 Hi kvadrat test potrjuje alternativno domnevo (H1). Angleki izvirnik in nemki prevod se razlikujeta glede razmerja med samostalniki in zaimki: X^2 (1) = 5,71; p &lt; 0,001. Iz gornje tabele pogostnosti je razvidno, da je dele samostalnikov v anglekem izvirniku nekoliko veji kot v nemkem prevodu. Razlika je sicer zaradi velikih vzorcev statistino znailna, ni pa velika, saj so delei zelo podobni. Da bi ugotovili, ali je ugotovljena statistina znailna razlika pomembna, bi si morali podrobneje ogledati, kateri zaimki in kateri samostalniki bistveno vplivajo na to tevilno razmerje. Na splono velja, da so zaimki manj zanesljiva jezikovna sredstva kot samostalniki, samostalniki pa so bolj zapleteni. e elimo primerjati eno besedno vrsto z vsemi drugimi v podatkovnem nizu, je pretvorba bolj zapletena, saj moramo - podobno kot v Excelu: - najprej izraunati vsoto za vse besedne vrste, - potem odteti tevilo zaimkov oz. samostalnikov od vsote, - razliko pa upotevati za tabelo 2x2 za hi kvadrat test. (zaimki = tom_df %&gt;% group_by(doc_id) %&gt;% count(upos) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;) %&gt;% mutate(vsota = sum(n), no_noun = vsota - n[upos == &quot;NOUN&quot;], no_pron = vsota - n[upos == &quot;PRON&quot;]) %&gt;% filter(upos == &quot;PRON&quot;) %&gt;% dplyr::select(doc_id, n, no_pron) %&gt;% pivot_longer(-doc_id, &#39;kategorija&#39;, &#39;vrednost&#39;) %&gt;% pivot_wider(kategorija, doc_id) ) ## # A tibble: 2 x 3 ## kategorija tom_de tom_en ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 n 9027 9831 ## 2 no_pron 58691 63649 (samostalniki = tom_df %&gt;% group_by(doc_id) %&gt;% count(upos) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;) %&gt;% mutate(vsota = sum(n), no_noun = vsota - n[upos == &quot;NOUN&quot;], no_pron = vsota - n[upos == &quot;PRON&quot;]) %&gt;% filter(upos == &quot;NOUN&quot;) %&gt;% dplyr::select(doc_id, n, no_noun) %&gt;% pivot_longer(-doc_id, &#39;kategorija&#39;, &#39;vrednost&#39;) %&gt;% pivot_wider(kategorija, doc_id) ) ## # A tibble: 2 x 3 ## kategorija tom_de tom_en ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 n 10871 12410 ## 2 no_noun 56847 61070 Hi kvadrat testa: - primerjava tevila zaimkov nasproti ostalim besednim vrstam, - primerjava tevila samostalnikov nasproti ostalim besednim vrstam. V obeh primerih spet velja: H0 (med vzorcema ni statistino znailne razlike). H1 (vzorca se znailno razlikujeta). # izloimo prvi stolpec [, -1], # saj za hi kvadrat test potrebujemo le tevilke v drugem in tretjem stolpcu chisq.test(zaimki[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: zaimki[, -1] ## X-squared = 0.068568, df = 1, p-value = 0.7934 chisq.test(samostalniki[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: samostalniki[, -1] ## X-squared = 17.81, df = 1, p-value = 2.441e-05 Statistini izid: Delea zaimkov se v besedilih ne razlikujeta (prvi test potrjuje H0), vendar pa se besedili razlikujeta glede delea samostalnikov (drugi test potrjuje H1). 12.17.3 Primerjava veznikov Primerjati elimo tevilo stavkov s prirednim in podrednim veznikom. Osnovna domneva je, da priredno zloene povedi (vsebujejo stavek, uveden s prirednim veznikom) laje razumemo kot podredno zloene povedi (vsebujejo stavek, uveden s podrednim veznikom). (vezniki = tabela %&gt;% filter(upos %in% c(&quot;CCONJ&quot;, &quot;SCONJ&quot;)) %&gt;% mutate(prozent = n/sum(n)) %&gt;% pivot_wider(id_cols = upos, names_from = doc_id, values_from = n:prozent) ) ## # A tibble: 2 x 5 ## upos n_tom_de n_tom_en prozent_tom_de prozent_tom_en ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 CCONJ 3268 3761 0.716 0.732 ## 2 SCONJ 1295 1378 0.284 0.268 Odstotki nakazujejo, da je dele prirednih veznikov v anglekem izvirniku rahlo veji kot v nemkem prevodu. Spet uporabljamo hi kvadrat test (upotevane so le povedi, ki vsebujejo veznik) za preverjanje, ali je razlika dovolj velika, da bi bila nenakljuna. chisq.test(vezniki[,c(2:3)]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: vezniki[, c(2:3)] ## X-squared = 2.8912, df = 1, p-value = 0.08907 Z ozirom na hi kvadrat test razlika med besediloma ni statistino znailna (potrjen je H0). e upotevamo tudi vsote drugih besednih vrst (kot zgoraj): (koord = tabela %&gt;% mutate(vsota = sum(n), no_cconj = vsota - n[upos == &quot;CCONJ&quot;], no_sconj = vsota - n[upos == &quot;SCONJ&quot;]) %&gt;% filter(upos == &quot;CCONJ&quot;) %&gt;% dplyr::select(doc_id, n, no_cconj) %&gt;% pivot_longer(-doc_id, &#39;kategorija&#39;, &#39;vrednost&#39;) %&gt;% pivot_wider(kategorija, doc_id) ) ## # A tibble: 2 x 3 ## kategorija tom_de tom_en ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 n 3268 3761 ## 2 no_cconj 64450 69719 (subord = tabela %&gt;% mutate(vsota = sum(n), no_cconj = vsota - n[upos == &quot;CCONJ&quot;], no_sconj = vsota - n[upos == &quot;SCONJ&quot;]) %&gt;% filter(upos == &quot;SCONJ&quot;) %&gt;% dplyr::select(doc_id, n, no_sconj) %&gt;% pivot_longer(-doc_id, &#39;kategorija&#39;, &#39;vrednost&#39;) %&gt;% pivot_wider(kategorija, doc_id) ) ## # A tibble: 2 x 3 ## kategorija tom_de tom_en ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 n 1295 1378 ## 2 no_sconj 66423 72102 Hi kvadrat preizkus izkazuje razliko med besediloma v primeru prirednih veznikov (potrjen je H1), v primeru podrednih veznikov pa ne (potrjen je H0). chisq.test(koord[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: koord[, -1] ## X-squared = 6.3124, df = 1, p-value = 0.01199 chisq.test(subord[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: subord[, -1] ## X-squared = 0.24025, df = 1, p-value = 0.624 Besedili se razlikujeta glede delea prirednih veznikov (e jih primerjamo z vsemi drugimi besednimi vrstami). 12.17.4 Slovarske enote Program udpipe je vsako besedno obliko dodelil slovarski enoti (lemma). Koliko koliko slovarskih enot je v besedilih? Katerim besednim vrstam najpogosteje pripadajo? (tabela2 = tom_df %&gt;% group_by(doc_id, upos) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;, upos != &quot;X&quot;) %&gt;% distinct(lemma) %&gt;% count(lemma) %&gt;% summarise(lemmas = sum(n)) %&gt;% mutate(prozent = round(lemmas/sum(lemmas), 4)) %&gt;% arrange(-prozent) ) ## # A tibble: 28 x 4 ## # Groups: doc_id [2] ## doc_id upos lemmas prozent ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 tom_en NOUN 3245 0.403 ## 2 tom_de NOUN 3400 0.361 ## 3 tom_en VERB 1912 0.238 ## 4 tom_de VERB 1935 0.206 ## 5 tom_de ADJ 1875 0.199 ## 6 tom_en ADJ 1294 0.161 ## 7 tom_de PROPN 967 0.103 ## 8 tom_en ADV 627 0.0779 ## 9 tom_de ADV 672 0.0714 ## 10 tom_en PROPN 389 0.0483 ## # ... with 18 more rows tabela2 %&gt;% # slice_max(order_by = prozent, n=6) %&gt;% mutate(upos = reorder_within(upos, lemmas, paste(&quot;(&quot;,100*prozent,&quot;%)&quot;), sep = &quot; &quot;)) %&gt;% ggplot(aes(prozent, upos, fill = upos)) + geom_col() + facet_wrap(~ doc_id, scales = &quot;free&quot;) + theme(legend.position = &quot;none&quot;) + scale_x_continuous(labels = percent_format()) + labs(x = &quot;Anteil&quot;, y = &quot;Wortklasse&quot;) 12.17.5 Korelacija besed Katere besedne pogostnosti se vzporedno poveujejo ali zmanjujejo (pairwise correlation) ? Podobno analizno orodje ima tudi Voyant Tools. library(widyr) # pairwise correlation correlations = tom_df %&gt;% filter(dep_rel != &quot;punct&quot;, dep_rel != &quot;nummod&quot;) %&gt;% mutate(lemma = tolower(lemma), token = tolower(token), lemma = str_trim(lemma), token = str_trim(token)) %&gt;% janitor::clean_names() %&gt;% group_by(doc_id, lemma, token, sentence_id) %&gt;% # add_count(token) %&gt;% summarize(Freq = n()) %&gt;% arrange(-Freq) %&gt;% filter(Freq &gt; 2) %&gt;% pairwise_cor(lemma, sentence_id, sort = TRUE) %&gt;% filter(correlation &lt; 1 &amp; correlation &gt; 0.3) head(correlations) ## # A tibble: 6 x 3 ## item1 item2 correlation ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 der und 0.934 ## 2 und der 0.934 ## 3 zu und 0.829 ## 4 und zu 0.829 ## 5 sein und 0.812 ## 6 und sein 0.812 Tom Sawyer: Becky (dekle, ki je Tomu ve). correlations %&gt;% filter(item1 == &quot;tom&quot;) %&gt;% mutate(item2 = fct_reorder(item2, correlation)) %&gt;% ggplot(aes(item2, correlation, fill = item2)) + geom_col(show.legend = F) + coord_flip() + labs(title = &quot;What tends to appear with &#39;Becky&#39;?&quot;, subtitle = &quot;Among elements that appeared in at least 2 sentences&quot;) 12.18 Sentiment Stopnjo ustvenosti ali emocionalnosti besedila je mogoe doloiti s sentimentnim slovarjem. 12.18.1 Razliica 1 Uporaba nrc leksikona za nemino (priloen programu syuzhet). Najprej besedilo s funkcijo get_sentences() razcepimo na povedi. library(syuzhet) tom_v = get_sentences(txt$text[1]) # izberemo prvo besedilo: tom_de.txt tom_v = (tom_v[-1]) # tako lahko izloimo prvo vrstico (uredniko pripombo) head(tom_v[-1]) ## [1] &quot;Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden .&quot; ## [2] &quot;Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten .&quot; ## [3] &quot;Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten .&quot; ## [4] &quot;Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren .&quot; ## [5] &quot;Erstes Kapitel .&quot; ## [6] &quot;, ,Tom !&quot; Funkcija get_sentiment() dodeli besedam v povedih pozitivno (+1), negativno (-1) ali nevtralno (0) ustveno vrednost. Program te vrednosti seteje. tom_values &lt;- get_sentiment(tom_v, method = &quot;nrc&quot;, language = &quot;german&quot;) length(tom_values) ## [1] 5047 tom_values[100:110] ## [1] 0 -2 0 1 0 1 0 0 0 0 0 Povedi, ustvene vrednosti in dolino povedi poveemo v podatkovni niz. To nam olajuje oceno, kako uspena je bila uporaba sentimentnega slovarja v naem besedilu. Preimenovali bomo tudi nekaj stolpcev. sentiment1 = cbind(tom_v, tom_values, ntoken(tom_v)) %&gt;% as.data.frame() %&gt;% rename(words = V3, text = tom_v, values = tom_values) %&gt;% mutate(doc_id = &quot;tom_de.txt&quot;) %&gt;% rowid_to_column(var = &quot;sentence&quot;) head(sentiment1) ## sentence ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 5 5 ## 6 6 ## text ## 1 Die meisten der hier erzählten Abenteuer haben sich tatsächlich zugetragen . ## 2 Das eine oder das andere habe ich selbst erlebt , die anderen meine Schulkameraden . ## 3 Huck Finn ist nach dem Leben gezeichnet , nicht weniger Tom Sawyer , doch entspricht dieser nicht einer bestimmten Persönlichkeit , sondern wurde mit charakteristischen Zügen mehrerer meiner Altersgenossen ausgestattet und darf daher jenem gegenüber als einigermaßen kompliziertes psychologisches Problem gelten . ## 4 Ich muß hier bemerken , daß zur Zeit meiner Erzählung -- vor dreißig bis vierzig Jahren -- unter den Unmündigen und Unwissenden des Westens noch die seltsamsten , unwahrscheinlichsten Vorurteile und Aberglauben herrschten . ## 5 Obwohl dies Buch vor allem zur Unterhaltung der kleinen Welt geschrieben wurde , so darf ich doch wohl hoffen , daß es auch von Erwachsenen nicht ganz unbeachtet gelassen werde , habe ich doch darin versucht , ihnen auf angenehme Weise zu zeigen , was sie einst selbst waren , wie sie fühlten , dachten , sprachen , und welcher Art ihr Ehrgeiz und ihre Unternehmungen waren . ## 6 Erstes Kapitel . ## values words doc_id ## 1 1 11 tom_de.txt ## 2 0 15 tom_de.txt ## 3 -2 42 tom_de.txt ## 4 0 34 tom_de.txt ## 5 6 68 tom_de.txt ## 6 0 3 tom_de.txt View(sentiment1) Gornje postopke ponovimo za besedilo, ki ga elimo primerjati s prvim. prozess_v = get_sentences(txt$text[2]) # izberemo drugo besedilo: tom_en.txt prozess_v = (prozess_v[-1]) # tako lahko izloimo prvo vrstico (uredniko pripombo) prozess_values &lt;- get_sentiment(prozess_v, method = &quot;nrc&quot;, language = &quot;english&quot;) sentiment2 = cbind(prozess_v, prozess_values, ntoken(prozess_v)) %&gt;% as.data.frame() %&gt;% rename(words = V3, text = prozess_v, values = prozess_values) %&gt;% mutate(doc_id = &quot;tom_en.txt&quot;) %&gt;% rowid_to_column(var = &quot;sentence&quot;) head(sentiment2) ## sentence ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 5 5 ## 6 6 ## text ## 1 Huck Finn is drawn from life; Tom Sawyer also, but not from an\\nindividualhe is a combination of the characteristics of three boys whom\\nI knew, and therefore belongs to the composite order of architecture. ## 2 The odd superstitions touched upon were all prevalent among children and\\nslaves in the West at the period of this storythat is to say, thirty or\\nforty years ago. ## 3 Although my book is intended mainly for the entertainment of boys and\\ngirls, I hope it will not be shunned by men and women on that account,\\nfor part of my plan has been to try to pleasantly remind adults of what\\nthey once were themselves, and of how they felt and thought and talked,\\nand what queer enterprises they sometimes engaged in. ## 4 THE AUTHOR. ## 5 HARTFORD, 1876. ## 6 CHAPTER I\\n\\n\\n&quot;TOM!&quot; ## values words doc_id ## 1 0 41 tom_en.txt ## 2 -1 33 tom_en.txt ## 3 4 68 tom_en.txt ## 4 1 3 tom_en.txt ## 5 0 4 tom_en.txt ## 6 0 6 tom_en.txt View(sentiment2) S setevanjem ustvenih vrednosti je mogoe oceniti, katero besedilo ima ve pozitivno ocenjenih besed. V ta namen bomo zdruili podatkovna niza in uredili obliko stolpcev words in values. sentiment = rbind(sentiment1, sentiment2) %&gt;% as_tibble() %&gt;% mutate(values = parse_number(values), words = parse_number(words)) %&gt;% dplyr::select(doc_id, sentence, words, values, text) head(sentiment) ## # A tibble: 6 x 5 ## doc_id sentence words values text ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 tom_de.txt 1 11 1 Die meisten der hier erzählten Abenteuer hab~ ## 2 tom_de.txt 2 15 0 Das eine oder das andere habe ich selbst erl~ ## 3 tom_de.txt 3 42 -2 Huck Finn ist nach dem Leben gezeichnet , ni~ ## 4 tom_de.txt 4 34 0 Ich muß hier bemerken , daß zur Zeit meiner ~ ## 5 tom_de.txt 5 68 6 Obwohl dies Buch vor allem zur Unterhaltung ~ ## 6 tom_de.txt 6 3 0 Erstes Kapitel . tail(sentiment) ## # A tibble: 6 x 5 ## doc_id sentence words values text ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 tom_en.txt 4848 46 -1 &quot;I&#39;ll stick to the widder till I rot, Tom; a~ ## 2 tom_en.txt 4849 6 1 &quot;CONCLUSION\\n\\nSO endeth this chronicle.&quot; ## 3 tom_en.txt 4850 29 -1 &quot;It being strictly a history of a _boy_, it\\~ ## 4 tom_en.txt 4851 38 1 &quot;When one writes a novel about grown people,~ ## 5 tom_en.txt 4852 18 2 &quot;Most of the characters that perform in this~ ## 6 tom_en.txt 4853 49 3 &quot;Some day it may seem worth while to take up~ Rezultat: po gornji metodi je povpreje ustvenih vrednosti v nemkem prevodu rahlo manje kot v anglekem izvirniku Tom Sawyer, vendar je razlika tako majhna, da najbr ne bi bila statistino znailna. Povpreje je v obeh primerih blizu nevtralne vrednosti (tj. 0): Tom Sawyer vsebuje kar nekaj vedrih prigod in dogodivin, je pa res, da so njegove pustolovine pogosto tudi nevarne ali straljive. sentiment %&gt;% group_by(doc_id) %&gt;% summarise(polarnost = mean(values)) ## # A tibble: 2 x 2 ## doc_id polarnost ## &lt;chr&gt; &lt;dbl&gt; ## 1 tom_de.txt -0.0109 ## 2 tom_en.txt 0.0196 Poskusimo e drugae: pozitivne, nevtralne in negativne vrednosti obravnajmo loeno in upotevajmo tudi dolino povedi. sentiment1 = sentiment %&gt;% group_by(doc_id) %&gt;% mutate(positive = ifelse(values &gt; 0, abs(values), 0), neutral = ifelse(values == 0, 1, 0), negative = ifelse(values &lt; 0, abs(values), 0)) sentiment1 %&gt;% summarise(pos = mean(100*positive/words), neut = mean(100*neutral/words), neg = mean(100*negative/words)) ## # A tibble: 2 x 4 ## doc_id pos neut neg ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 tom_de.txt 2.63 6.77 2.81 ## 2 tom_en.txt 2.07 6.74 2.10 Ta rezultat nakazuje, so ustvene vrednosti v nemkem prevodu nekoliko skrajneje (pozitivne ali negativne) kot v anglekem izvirniku. Zanimivo bi bilo vpraati poznavalca anglekega izvirnika in nemkega prevoda, ali je ob slogovni primerjavi dobil podoben vtis. Poglejmo e nekaj povedi, ki so bile ocenjene negativno: sentiment1 %&gt;% filter(negative &gt; 0) ## # A tibble: 2,157 x 8 ## # Groups: doc_id [2] ## doc_id sentence words values text positive neutral negative ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 tom_de.txt 3 42 -2 &quot;Huck Finn ist na~ 0 0 2 ## 2 tom_de.txt 15 81 -2 &quot;Unruhig hielt si~ 0 0 2 ## 3 tom_de.txt 16 8 -1 &quot;Sie hatte nichts~ 0 0 1 ## 4 tom_de.txt 17 12 -1 &quot;, ,So ein Junge ~ 0 0 1 ## 5 tom_de.txt 25 5 -1 &quot;\\&quot; , ,Nicht~ 0 0 1 ## 6 tom_de.txt 26 5 -1 &quot;\\&quot; , ,Nicht~ 0 0 1 ## 7 tom_de.txt 34 5 -3 &quot;Die Gefahr war d~ 0 0 3 ## 8 tom_de.txt 38 8 -1 &quot;, ,Der Kuckuck h~ 0 0 1 ## 9 tom_de.txt 41 18 -2 &quot;Aber alte Torhei~ 0 0 2 ## 10 tom_de.txt 47 11 -1 &quot;Er steckt voller~ 0 0 1 ## # ... with 2,147 more rows 12.18.2 Razliica 2 tom_v = get_sentences(txt$text[2]) # angleki izvirnik tom_nrc_values = get_nrc_sentiment(tom_v) tom_joy_items = which(tom_nrc_values$joy &gt; 0) head(tom_v[tom_joy_items], 4) ## [1] &quot;Although my book is intended mainly for the entertainment of boys and\\ngirls, I hope it will not be shunned by men and women on that account,\\nfor part of my plan has been to try to pleasantly remind adults of what\\nthey once were themselves, and of how they felt and thought and talked,\\nand what queer enterprises they sometimes engaged in.&quot; ## [2] &quot;She seldom or\\nnever looked _through_ them for so small a thing as a boy; they were\\nher state pair, the pride of her heart, and were built for \\&quot;style,\\&quot; not\\nserviceshe could have seen through a pair of stove-lids just as well.&quot; ## [3] &quot;She went to the open door and stood in it and looked out among the\\ntomato vines and \\&quot;jimpson\\&quot; weeds that constituted the garden.&quot; ## [4] &quot;His aunt Polly stood surprised a moment, and then broke into a gentle\\nlaugh.&quot; nrc_sentiment = as.data.frame(cbind(tom_v, tom_nrc_values)) head(nrc_sentiment) %&gt;% paged_table() 12.18.3 Razliica 3 Drugi sentimentni slovarji z medmreja: npr. BAWLR lahko uporabljamo kot sentimentni slovar. # This lexicons contains values of Emotional valence and arousal ranging from 1 to 5. # But this extended version contains also binary Emo_Val values (1, -1). bawlr &lt;- read.delim2(&quot;data/BAWLR_utf8.txt&quot;, sep = &quot;\\t&quot;, dec = &quot;,&quot;, fileEncoding = &quot;UTF-8&quot;, header = T, stringsAsFactors = T) # # bawlr$EmoVal &lt;- as.character(bawlr$EmoVal) # # str(EmoVal) # bawlr$EmoVal &lt;- gsub(&#39;NEG&#39;, &#39;-1&#39;, bawlr$EmoVal) # bawlr$EmoVal &lt;- gsub(&#39;POS&#39;, &#39;1&#39;, bawlr$EmoVal) # bawlr$EmoVal &lt;- as.numeric(bawlr$EmoVal) head(bawlr) ## EmoVal Freq WORD WORD_LOWER WORD_CLASS EMO_MEAN EMO_STD AROUSAL_MEAN ## 1 NEG HF AAL aal N -0.5 0.7 2.4 ## 2 NEG NF AAS aas N -2.1 1.1 2.6 ## 3 NEG NF ABART abart N -1.6 0.7 3.3 ## 4 NEG HF ABBAU abbau N -1.0 1.2 3.0 ## 5 NEG HF ABBAUEN abbauen V -0.8 0.9 2.1 ## 6 NEG NF ABBILD abbild N -0.2 0.6 2.1 ## AROUSAL_STD IMAGE_MEAN IMAGE_STD LETTERS PHONEMES SYLLABLES Ftot.1MIL N ## 1 1.2 6.6 0.7 3 2 1 13.3 6 ## 2 1.4 5.4 0.9 3 2 1 1.0 6 ## 3 1.0 2.3 1.3 5 5 2 1.2 2 ## 4 1.3 2.2 1.2 5 4 2 14.5 1 ## 5 1.2 3.7 1.6 7 6 3 15.5 3 ## 6 0.8 3.8 2.0 6 6 2 3.5 0 ## FN HFN FHFN BIGmean.TOKEN. ACCENT ## 1 3182.0 3 3175.2 83677.5 1 ## 2 10568.8 5 10568.5 30120.5 1 ## 3 3.0 1 2.3 80270.0 1 ## 4 6.8 0 0.0 94054.8 1 ## 5 51.0 1 38.0 238806.3 1 ## 6 0.0 0 0.0 45958.4 1 Sestavimo dva seznama: positive.words = bawlr %&gt;% mutate(WORD_LOWER = as.character(WORD_LOWER)) %&gt;% dplyr::select(EmoVal, WORD_LOWER) %&gt;% filter(EmoVal == &quot;POS&quot;) %&gt;% dplyr::select(WORD_LOWER) %&gt;% filter(str_detect(WORD_LOWER, &quot;[a-zA-Z]&quot;)) negative.words = bawlr %&gt;% mutate(WORD_LOWER = as.character(WORD_LOWER)) %&gt;% dplyr::select(EmoVal, WORD_LOWER) %&gt;% filter(EmoVal == &quot;NEG&quot;) %&gt;% dplyr::select(WORD_LOWER) %&gt;% filter(str_detect(WORD_LOWER, &quot;[a-zA-Z]&quot;)) Ustvarimo quanteda slovar dictionary(): bawlr_dict = dictionary(list(positive = list(positive.words), negative = list(negative.words))) Quanteda slovar lahko shranimo na disk. # jsonlite::write_json(bawlr_dict, &quot;data/quanteda_bawlr_dict.json&quot;) Uporabljamo matriko (dfm) s slovarskimi enotami (lemma), saj slovar bawlr_dict vsebujejo le osnovno obliko slovarskih enot. matrika_lemmas = dfm(matrika_lem_de, tolower = TRUE) result = matrika_lemmas %&gt;% dfm_lookup(bawlr_dict) %&gt;% convert(to = &quot;data.frame&quot;) %&gt;% as_tibble result ## # A tibble: 1 x 3 ## doc_id positive negative ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 tom_de 9137052 5245512 Dodamo lahko skupno dolino besed, e elimo normalizirati rezultat z ozirom na dolino besedil. result = result %&gt;% mutate(length=ntoken(matrika_lemmas)) result ## # A tibble: 1 x 4 ## doc_id positive negative length ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 tom_de 9137052 5245512 31618 Po navadi elimo izraunati skupno sentimentno vrednost. Monosti je ve: npr. - odteti negativne vrednosti od pozitivnih in nato razliko deliti z vsoto obeh vrednosti, - odteti negativne vrednosti od pozitivnih in nato razliko deliti z dolino besedil, Izraunamo lahko tudi stopnjo subjektivnosti, tj. koliko ustvenih vrednosti je skupno izraenih: result = result %&gt;% mutate(sentiment1=(positive - negative) / (positive + negative)) result = result %&gt;% mutate(sentiment2=(positive - negative) / length) result = result %&gt;% mutate(subjektivnost=(positive + negative) / length) result %&gt;% paged_table() 12.18.4 Barvno oznaevanje Program corpustools barvno oznauje besede v besedilih z ozirom na ustvene vrednosti besed v sentimentnem slovarju. Prvi korak je ustvarjanje tcorpusa. library(corpustools) t = create_tcorpus(txt1, doc_column=&quot;doc_id&quot;) # izbrali smo le nemki prevod V drugem koraku sledi iskanje po slovarju (tcorpus): t$code_dictionary(bawlr_dict, column = &#39;bawlr&#39;) t$set(&#39;sentiment&#39;, 1, subset = bawlr %in% c(&#39;positive&#39;,&#39;neg_negative&#39;)) t$set(&#39;sentiment&#39;, -1, subset = bawlr %in% c(&#39;negative&#39;,&#39;neg_positive&#39;)) Prikaz barvno oznaenih besedil v oknu Viewer: browse_texts(t, scale=&#39;sentiment&#39;) Prikaz barvno oznaenih besedil v spletnem brskalniku in shranjevanje v obliki html datoteke: browse_texts(t, scale=&#39;sentiment&#39;, filename = &quot;sentiment_tom.html&quot;, header = &quot;Sentiment in Twains Tom Sawyer&quot;) A-Z "],["regularni-izrazi-in-quanteda.html", "Kapitel 13 Regularni izrazi in quanteda 13.1 Programi 13.2 Preberemo besedila 13.3 Ustvarimo korpus 13.4 Tokenizacija 13.5 Kwic 13.6 tidytext", " Kapitel 13 Regularni izrazi in quanteda 13.1 Programi Najprej moramo zagnati programe, ki jih potrebujemo za nartovano delo. library(readtext) library(quanteda) library(quanteda.textstats) library(quanteda.textplots) library(tidyverse) library(tidytext) 13.2 Preberemo besedila txt = readtext(&quot;data/books/*.txt&quot;, encoding = &quot;UTF-8&quot;) txt ## readtext object consisting of 2 documents and 0 docvars. ## # Description: df [2 x 2] ## doc_id text ## &lt;chr&gt; &lt;chr&gt; ## 1 prozess.txt &quot;\\&quot;Der Prozes\\&quot;...&quot; ## 2 tom.txt &quot;\\&quot;Tom Sawyer\\&quot;...&quot; 13.3 Ustvarimo korpus Ustvarimo korpus ali jezikovno gradivo. Ukaz v programu quanteda je corpus(). romane = corpus(txt) 13.4 Tokenizacija woerter = tokens(romane) 13.5 Kwic Za sestavo konkordanc ima program quanteda funkcijo kwic() (keyword in context). Mono je iskati posamezne besede, besedne zveze, uporabljamo pa lahko tudi nadomestne znake (npr. *). 13.5.1 Frau, Mann kwic(woerter, pattern = c(&quot;Frau&quot;, &quot;Herr&quot;)) ## Keyword-in-context with 226 matches. ## [prozess.txt, 23] 1 Verhaftung, Gespräch mit | Frau | ## [prozess.txt, 55] verhaftet. Die Köchin der | Frau | ## [prozess.txt, 97] seinem Kopfkissen aus die alte | Frau | ## [prozess.txt, 417] im Nebenzimmer sind und wie | Frau | ## [prozess.txt, 552] Es war das Wohnzimmer der | Frau | ## [prozess.txt, 675] erblickte man wieder die alte | Frau | ## [prozess.txt, 701] . » Ich will doch | Frau | ## [prozess.txt, 1648] gerade die gegenüberliegende Tür und | Frau | ## [prozess.txt, 2423] drüben sah er die alte | Frau | ## [prozess.txt, 2869] war, so konnte er | Frau | ## [prozess.txt, 5961] . Im Vorzimmer öffnete dann | Frau | ## [prozess.txt, 6558] in der ganzen Wohnung der | Frau | ## [prozess.txt, 6732] Sohn des Hausmeisters, gnädiger | Herr | ## [prozess.txt, 6773] . » Wünscht der gnädige | Herr | ## [prozess.txt, 6853] , aber da er mit | Frau | ## [prozess.txt, 6896] so spät komme, aber | Frau | ## [prozess.txt, 6995] hinaustragen können. Er sah | Frau | ## [prozess.txt, 7196] . Nur mit einer alten | Frau | ## [prozess.txt, 7292] vertraulich mit mir reden, | Herr | ## [prozess.txt, 7458] was Sie gesagt haben, | Frau | ## [prozess.txt, 7696] , das Urteil einer vernünftigen | Frau | ## [prozess.txt, 7751] dachte er und sah die | Frau | ## [prozess.txt, 7821] doch nicht so schwer, | Herr | ## [prozess.txt, 7865] das Wertlose aller Zustimmungen dieser | Frau | ## [prozess.txt, 7888] » Nein «, sagte | Frau | ## [prozess.txt, 8007] Das ist nicht nötig, | Herr | ## [prozess.txt, 8141] sagte K. und sah | Frau | ## [prozess.txt, 8161] Leute sind! « sagte | Frau | ## [prozess.txt, 8191] kann es «, sagte | Frau | ## [prozess.txt, 8201] sehr haben Sie recht, | Herr | ## [prozess.txt, 8288] Gott, nur Ihnen, | Herr | ## [prozess.txt, 8427] Gute Nacht. « » | Herr | ## [prozess.txt, 8433] K. «, sagte | Frau | ## [prozess.txt, 8625] einen Augenblick sogar daran, | Frau | ## [prozess.txt, 9087] vor. » Ach, | Herr | ## [prozess.txt, 11021] schläft hier ein Neffe von | Frau | ## [prozess.txt, 11199] Sie wissen, wie mich | Frau | ## [prozess.txt, 11273] , und verbürge mich, | Frau | ## [prozess.txt, 11316] überfallen habe, so wird | Frau | ## [prozess.txt, 11363] Boden. » Warum sollte | Frau | ## [prozess.txt, 12308] : » Eine Frage, | Herr | ## [prozess.txt, 13016] flüchtig der zerraufte Kopf einer | Frau | ## [prozess.txt, 13617] Hauptmann, der Neffe der | Frau | ## [prozess.txt, 13777] wohne. Meistens öffnete eine | Frau | ## [prozess.txt, 13800] Bett erhob. » Der | Herr | ## [prozess.txt, 14057] «, sagte eine junge | Frau | ## [prozess.txt, 14165] und sagte zu der jungen | Frau | ## [prozess.txt, 14194] Ja «, sagte die | Frau | ## [prozess.txt, 14215] nicht gefolgt, wenn die | Frau | ## [prozess.txt, 15343] . » Ihre Frage, | Herr | ## [prozess.txt, 15673] » auch Ihr Heftchen, | Herr | ## [prozess.txt, 15766] Sie darin ruhig weiter, | Herr | ## [prozess.txt, 16142] nicht erreichbar sein. Der | Herr | ## [prozess.txt, 16580] Sinne nennen, sie heißt | Frau | ## [prozess.txt, 16585] Frau Grubach -, selbst | Frau | ## [prozess.txt, 16685] gibt hier neben mir der | Herr | ## [prozess.txt, 18306] sich weiter nach der bekannten | Frau | ## [prozess.txt, 18330] Sitzung «, sagte die | Frau | ## [prozess.txt, 18350] nicht glauben. Aber die | Frau | ## [prozess.txt, 18430] Nein «, sagte die | Frau | ## [prozess.txt, 18499] sein «, sagte die | Frau | ## [prozess.txt, 18531] melden? « fragte die | Frau | ## [prozess.txt, 18548] Natürlich «, sagte die | Frau | ## [prozess.txt, 18585] eingerichtetes Wohnzimmer bildete. Die | Frau | ## [prozess.txt, 18672] störte? « fragte die | Frau | ## [prozess.txt, 18712] , daß Sie eine verheiratete | Frau | ## [prozess.txt, 18773] kennen «, sagte die | Frau | ## [prozess.txt, 18891] verbessern? « fragte die | Frau | ## [prozess.txt, 19147] das? « fragte die | Frau | ## [prozess.txt, 19171] gewiß «, rief die | Frau | ## [prozess.txt, 19219] . kopfschüttelnd, und die | Frau | ## [prozess.txt, 19258] . Ein Mann und eine | Frau | ## [prozess.txt, 19291] nur ein Mann und eine | Frau | ## [prozess.txt, 19392] helfen «, sagte die | Frau | ## [prozess.txt, 19438] helfen «, sagte die | Frau | ## [prozess.txt, 19644] laut ausgesprochen und dadurch der | Frau | ## [prozess.txt, 20285] Natürlich «, sagte die | Frau | ## [prozess.txt, 20950] seinem Barte zog, der | Frau | ## [prozess.txt, 20957] ging zum Fenster, die | Frau | ## [prozess.txt, 21089] Hand ins Leere. Die | Frau | ## [prozess.txt, 21119] Einwand, daß ihn die | Frau | ## [prozess.txt, 21204] als daß er ihnen diese | Frau | ## [prozess.txt, 21237] später Nacht das Bett der | Frau | ## [prozess.txt, 21253] . gehörte, weil diese | Frau | ## [prozess.txt, 21288] Weise die Bedenken gegen die | Frau | ## [prozess.txt, 21325] kurz über die Schulter der | Frau | ## [prozess.txt, 21345] sich sogar eng an die | Frau | ## [prozess.txt, 21400] Student nach den Klagen der | Frau | ## [prozess.txt, 21601] Platz machen und mit der | Frau | ## [prozess.txt, 21675] , als wolle er der | Frau | ## [prozess.txt, 21731] streckte die Hand nach der | Frau | ## [prozess.txt, 21823] freien Hand den Arm der | Frau | ## [prozess.txt, 21856] würgen, da sagte die | Frau | ## [prozess.txt, 21937] Nein! « rief die | Frau | ## [prozess.txt, 22215] wollte sehen, wohin die | Frau | ## [prozess.txt, 22278] Treppe trug der Student die | Frau | ## [prozess.txt, 22297] bisherige Laufen geschwächt. Die | Frau | ## [prozess.txt, 22388] annehmen, daß ihn die | Frau | ## [prozess.txt, 22688] sich auch vom Diener keine | Frau | ## [prozess.txt, 22756] hier nicht vor kurzem eine | Frau | ## [prozess.txt, 22885] vor einem Weilchen mit Ihrer | Frau | ## [prozess.txt, 23176] « » Hat denn Ihre | Frau | ## [prozess.txt, 23261] , hinausgeworfen worden. Meine | Frau | ## [prozess.txt, 23323] einmal, wenn er meine | Frau | ## [prozess.txt, 24232] und aufzumuntern: » Der | Herr | ## [prozess.txt, 25282] : » Was wünscht der | Herr | ## [prozess.txt, 26626] brauchen schien, » dieser | Herr | ## [prozess.txt, 26637] vorstellen? « ( der | Herr | ## [prozess.txt, 26648] Erlaubnis ) - » dieser | Herr | ## [prozess.txt, 26895] es «, sagte der | Herr | ## [prozess.txt, 28293] besonders da er auch bei | Frau | ## [prozess.txt, 28491] hinübergetragen werden mußte. Als | Frau | ## [prozess.txt, 28576] Obwohl K. nicht zu | Frau | ## [prozess.txt, 28614] Es wird nicht aufgeräumt, | Herr | ## [prozess.txt, 28701] Bürstner aufgegeben? « » | Herr | ## [prozess.txt, 28707] K. «, rief | Frau | ## [prozess.txt, 28762] doch schon lange genug, | Herr | ## [prozess.txt, 28795] verleumden! Und Sie, | Herr | ## [prozess.txt, 28838] Weinen Sie doch nicht, | Frau | ## [prozess.txt, 28889] sich ins Zimmer zurückwandte und | Frau | ## [prozess.txt, 28924] Freunden einmal geschehen. « | Frau | ## [prozess.txt, 28966] , nach dem Verhalten der | Frau | ## [prozess.txt, 29006] ist es ja eben, | Herr | ## [prozess.txt, 29012] K. «, sagte | Frau | ## [prozess.txt, 29045] immerfort: Warum nimmt sich | Herr | ## [prozess.txt, 29132] den Kaffee zu trinken und | Frau | ## [prozess.txt, 29180] » Ja «, sagte | Frau | ## [prozess.txt, 29275] » Nein «, sagte | Frau | ## [prozess.txt, 29389] nicht vertragen kann. « | Frau | ## [prozess.txt, 29401] . » Soll ich, | Herr | ## [prozess.txt, 29446] » Ja «, sagte | Frau | ## [prozess.txt, 29478] ihre Sachen hinübertragen. « | Frau | ## [prozess.txt, 29519] zu gehen und nahm dadurch | Frau | ## [prozess.txt, 29608] höhnischen Blick nach der erschrockenen | Frau | ## [prozess.txt, 29649] Sonntagvormittag von den Mietern der | Frau | ## [prozess.txt, 29683] und hatte als Antwort für | Frau | ## [prozess.txt, 29715] nichts angerührt «, sagte | Frau | ## [prozess.txt, 29954] doch schon längere Zeit bei | Frau | ## [prozess.txt, 30844] Berechnung, was er von | Frau | ## [prozess.txt, 30958] führte, die Stimme der | Frau | ## [prozess.txt, 31538] zwei anderen riefen: » | Herr | ## [prozess.txt, 31633] nicht benommen. « » | Herr | ## [prozess.txt, 31834] dir nicht, daß der | Herr | ## [prozess.txt, 32031] vor. Und jetzt, | Herr | ## [prozess.txt, 33033] « » Guten Abend, | Herr | ## [prozess.txt, 33920] klagen und riefen: » | Herr | ## [prozess.txt, 35014] sei ein guter und gerechter | Herr | ## [prozess.txt, 37497] Advokaten! « » Der | Herr | ## [prozess.txt, 37519] des kleinen Ganges stand ein | Herr | ## [prozess.txt, 37571] drohend, als sei der | Herr | ## [prozess.txt, 37588] geöffnet «, sagte der | Herr | ## [prozess.txt, 37688] Mädchen vorüberschob. » Der | Herr | ## [prozess.txt, 38396] » Sie sehen, der | Herr | ## [prozess.txt, 39760] Würde tat, » der | Herr | ## [prozess.txt, 39792] ., und hier der | Herr | ## [prozess.txt, 39796] der Herr Kanzleidirektor - der | Herr | ## [prozess.txt, 39824] welcher weiß, wie der | Herr | ## [prozess.txt, 39887] Fausthiebe, Albert, der | Herr | ## [prozess.txt, 39930] wieder zusammenrücken können. - | Herr | ## [prozess.txt, 41552] Fräulein Bürstner, dann die | Frau | ## [prozess.txt, 42582] vor allem, dieser große | Herr | ## [prozess.txt, 45272] , ein guter, stiller | Herr | ## [prozess.txt, 45477] , dann wurde der alte | Herr | ## [prozess.txt, 48536] war ein kleiner, munterer | Herr | ## [prozess.txt, 50598] nichts zum Lachen. » | Herr | ## [prozess.txt, 50699] : » Ich hätte, | Herr | ## [prozess.txt, 52109] Rücksicht mehr üben. » | Herr | ## [prozess.txt, 52367] Sie gehen jetzt weg, | Herr | ## [prozess.txt, 65656] kurz nach dem Tod meiner | Frau | ## [prozess.txt, 70009] leiser Stimme an: » | Herr | ## [prozess.txt, 73915] Sie aber trotzdem noch ein | Herr | ## [prozess.txt, 73923] dann bin ich ein ebensolcher | Herr | ## [prozess.txt, 74223] . zu beschweren: » | Herr | ## [prozess.txt, 76864] ein und meldete, der | Herr | ## [prozess.txt, 76875] um nachzusehen, ob der | Herr | ## [prozess.txt, 76897] ins Empfangszimmer hinüberkommen, der | Herr | ## [prozess.txt, 81676] . Zeig dem Untersuchungsrichter eine | Frau | ## [prozess.txt, 86178] ? « fragte der eine | Herr | ## [prozess.txt, 87428] unwillkürlich, worauf ihm der | Herr | ## [prozess.txt, 87494] ab, während der andere | Herr | ## [prozess.txt, 87515] er, und der andere | Herr | ## [prozess.txt, 87586] und unglaubwürdige. Der eine | Herr | ## [prozess.txt, 87636] . Dann öffnete der eine | Herr | ## [tom.txt, 10407] würdevollen Dame, zweifellos der | Frau | ## [tom.txt, 11609] Thomas, und sage: | Herr | ## [tom.txt, 11624] ,, Thomas Sawyer - | Herr | ## [tom.txt, 12124] , der Mayor und seine | Frau | ## [tom.txt, 17371] kritisch war.,, | Herr | ## [tom.txt, 23990] doch!&quot;,, | Herr | ## [tom.txt, 24103] , Tom, aber, | Herr | ## [tom.txt, 25221] vermied er.,, | Herr | ## [tom.txt, 33491] ,, Ganz recht, | Herr | ## [tom.txt, 33510] , Wohl, wohl, | Herr | ## [tom.txt, 33527] ,, Abgefallen ist, | Herr | ## [tom.txt, 33581] , Toppsegel und Klüversegel, | Herr | ## [tom.txt, 33615] , Ho, ho, | Herr | ## [tom.txt, 33640] , Ho, ho, | Herr | ## [tom.txt, 38292] !&quot;,, Der | Herr | ## [tom.txt, 38297] Herr hat&#39;s gegeben, der | Herr | ## [tom.txt, 49139] ich wäre die dankbarste alte | Frau | ## [tom.txt, 49649] . Ich hoffe, der | Herr | ## [tom.txt, 49655] - ich _weiß_, der | Herr | ## [tom.txt, 52107] zu hassen. Des Lehrers | Frau | ## [tom.txt, 56045] beständig herum; aber, | Herr | ## [tom.txt, 57054] Staatsanwalt:,, Der | Herr | ## [tom.txt, 57106] abermals:,, Der | Herr | ## [tom.txt, 57145] habe.,, Der | Herr | ## [tom.txt, 57346] waren bewegt, und manche | Frau | ## [tom.txt, 57612] &quot;,, Ja, | Herr | ## [tom.txt, 57692] &quot;,, Ja, | Herr | ## [tom.txt, 60683] achthaben.&quot;,, | Herr | ## [tom.txt, 65576] Ort.&quot;,, | Herr | ## [tom.txt, 72460] Ende war, ging die | Frau | ## [tom.txt, 72465] Frau des Richters Thatcher auf | Frau | ## [tom.txt, 72633] müssen mit ihm.&quot; | Frau | ## [tom.txt, 72656] gewesen,&quot; sagte unsicher | Frau | ## [tom.txt, 72799] in der Höhle stecken! | Frau | ## [tom.txt, 72924] Frauen besuchten Tante Polly und | Frau | ## [tom.txt, 72982] mehr Kerzen und Lebensmittel&quot; | Frau | ## [tom.txt, 73291] dabei ein beschmutztes Band. | Frau | ## [tom.txt, 73646] ? Sonderbar, daß die | Frau | ## [tom.txt, 76300] Hälfte vergehen konnte, bevor | Frau | ## [tom.txt, 77434] endgültig aufgegeben werden müßten. | Frau | ## [tom.txt, 77650] sie zu küssen, drückte | Frau | ## [tom.txt, 77675] Pollys Seligkeit war vollkommen und | Frau | ## [tom.txt, 78457] &quot;,, Gott, | Herr | ## ## Grubach, dann Fräulein Brüstner ## Grubach, seiner Zimmervermieterin, ## , die ihm gegenüber wohnte ## Grubach diese Störung mir gegenüber ## Grubach, vielleicht war in ## , die mit wahrhaft greisenhafter ## Grubach - «, sagte ## Grubach wollte dort eintreten. ## , die einen noch viel ## Grubach als Zeugin führen oder ## Grubach, die gar nicht ## Grubach verursacht worden sei und ## «, antwortete der Bursche ## etwas? Soll ich den ## Grubach sprechen wollte, klopfte ## Grubach war sehr freundlich und ## Grubach mit einer gewissen Dankbarkeit ## kann ich davon sprechen. ## K., kann ich ## Grubach, wenigstens bin auch ## , wollte ich hören und ## anders als früher, prüfend ## K. «, sagte ## einsehend. Bei der Tür ## Grubach und lächelte bei dieser ## K., Sie sind ## Grubach an, als trage ## Grubach entschuldigend. » Gewiß ## Grubach, » wie sehr ## K. Vielleicht sogar in ## K., aber es ## K. «, sagte ## Grubach bittend und eilte K ## Grubach zu bestrafen und Fräulein ## K.! « sagte ## Grubach, ein Hauptmann. ## Grubach, die in dieser ## Grubach dazu zu bringen, ## Grubach in diesem Sinne unterrichtet ## Grubach nicht glauben, daß ## K.: Möchten Sie ## erschien. Man rief einander ## Grubach, so hieß - ## , hörte die Frage an ## fragt, ob ein Tischler ## mit schwarzen, leuchtenden Augen ## , die ihn wahrscheinlich falsch ## , » gehen Sie, ## nicht auf ihn zugegangen wäre ## Untersuchungsrichter, ob ich Zimmermaler ## Untersuchungsrichter, bestätigt, was ## Untersuchungsrichter, vor diesem Schuldbuch ## Untersuchungsrichter spricht wahrscheinlich viel besser ## Grubach -, selbst Frau ## Grubach war verständig genug, ## Untersuchungsrichter jemandem von Ihnen ein ## umzusehen, die bei der ## . » Warum sollte keine ## überzeugte ihn, indem sie ## und schloß wieder die Tür ## , die ihn nicht genau ## . » Sie kennen ihn ## , » mein Mann ist ## bemerkte sein Staunen und sagte ## . » Natürlich «, ## sind. « » Es ## , » der, welcher ## langsam und prüfend, als ## . » Indem Sie mir ## und zog ihn eiligst hinter ## wischte mit ihrer Schürze, ## saßen nackt auf einem Kanapee ## zu sehen waren, die ## . » Wollen Sie? ## , » kommen Sie, ## sein Verhalten erklärt. » ## , » an den dachte ## und ging zum Fenster, ## beugte sich zu K. ## verlockte ihn wirklich, er ## für das Gericht einfange, ## entzog und an sich nahm ## leer fand. Und leer ## am Fenster, dieser üppige ## beseitigt hatte, wurde ihm ## hinweg nach K. hin ## und umfaßte sie. Sie ## über sie ausübte, stand ## weggehen. Sie werden übrigens ## eine Erklärung für K.s beleidigende ## aus, » kommen Sie ## streichelte und drückte. K ## : » Es hilft nichts ## und wehrte K. mit ## getragen wurde, der Student ## hinauf, schon sehr langsam ## grüßte mit der Hand zu ## nicht nur betrogen, sondern ## auf dem Arm ins Büro ## gesehen habe. » Sie ## gesprochen. Sie ist nicht ## gar keine Schuld dabei « ## ist allerdings die Schönste im ## anrühren will, so durchprügeln ## hier fragt ja nur, ## ? « Hinter ihr in ## - ich darf Sie doch ## gab mit einer Handbewegung die ## also ist der Auskunftgeber. ## spöttisch, » aber ich ## Grubach nichts veranlassen könnte, ## Grubach K. das Frühstück ## Grubach aufsah, bemerkte er ## K. «, sagte ## K. «, rief ## Grubach, die nur auf ## K., um davon ## K., glaubten es ## Grubach «, sagte K ## Grubach noch immer weinte. ## Grubach rückte die Schürze unter ## Grubach zu schließen, der ## K. «, sagte ## Grubach, es war ihr ## K. so sehr des ## Grubach ihre Überflüssigkeit fühlen zu ## Grubach und seufzte, » ## Grubach, » an und ## Grubach kam sich recht machtlos ## K., sagen, ## Grubach, sie verstand nicht ## Grubach nickte nur. Diese ## Grubach die Möglichkeit, sich ## Grubach um. Dieser Blick ## Grubach erfahren mußte. Er ## Grubach, welche leise über ## Grubach. » Ach, ## Grubach. « » Sie ## Grubach über Fräulein Bürstner erfahren ## Grubach. Die Gelegenheit schien ## ! Wir sollen geprügelt werden ## «, sagte Willem, ## unsere Bestrafung nicht verlangt hat ## , ist alles verloren, ## Prokurist! « rief es ## ! « Sofort warf K ## , aber er wisse nicht ## Advokat ist krank «, ## im Schlafrock und machte mit ## die Krankheit, auf ihn ## , zeigte auf die Tür ## Advokat ist krank «, ## ist so krank, er ## Kanzleidirektor - ach so, ## Kanzleidirektor - der Herr Kanzleidirektor ## Kanzleidirektor also war so freundlich ## Kanzleidirektor mit Arbeit überhäuft ist ## Kanzleidirektor rückte mit Sessel und ## Kanzleidirektor «, sagte er ## des Gerichtsdieners und endlich diese ## , der deine Sache in ## , hatte eine schwierige Gerichtssache ## , er war ja auch ## , ein Fabrikant, den ## Prokurist «, sagte der ## Prokurist, noch eine kleine ## Prokurist «, sagte schon ## Prokurist? « » Ja ## , und das ist schon ## Prokurist «, K. ## sind, dann bin ich ## , wenn nicht gar ein ## Advokat «, sagte er ## Direktor habe ihn geschickt, ## Prokurist schon hier sei; ## aus Italien sei schon da ## aus der Ferne, und ## mit zuckenden Mundwinkeln den anderen ## einen leichten, beruhigenden Schlag ## den Steinbruch nach irgendeiner passenden ## geleitete K. hin. ## bat daher den anderen, ## seinen Gehrock und nahm aus ## des letzteren. Die Dame ## ! Nicht vergessen, was ## !&quot;,, So ## - denn es gab einen ## !&quot;,, Komm ## Gott, Tom, sie ## Gott, ich bin halb ## Gott, Joe, wie ## !&quot;,, Tüchtig ## .&quot;,,&#39; ## !&quot; Wie sie so ## .&quot;,, Bramsegel ## !&quot;,, Marssegel ## !&quot; Das Floß trieb ## hat&#39;s gegeben, der Herr ## hat&#39;s genommen, der Name ## auf der Welt, wenn ## - ich _weiß_, der ## wird ihm vergeben, denn ## wollte in wenigen Tagen zu ## Gott, das tun wir ## Verteidiger hat das Wort. ## Verteidiger hat das Wort. ## Verteidiger hat das Wort. ## verriet ihre Bewegung durch Tränen ## !&quot;,, Noch ## . Ich war da mit ## Gott!&quot;,, ## Gott, ich wag&#39;s nicht ## des Richters Thatcher auf Frau ## Harper zu, die mit ## Thatcher schüttelte schwach den Kopf ## Harper. In Tante Pollys ## Thatcher fiel in Ohnmacht, ## Thatcher, und versuchten, ## Thatcher war völlig verzweifelt, ## Thatcher erkannte das Band und ## da weinte. Solche trüben ## Thatcher erfuhr, daß Becky ## Thatcher war sehr krank und ## Thatchers Hand, suchte vergebens ## Thatchers beinahe. Vollkommen konnte ## Richter - in der Höhle Konkordanco bomo pretvorili v podatkovno zbirko, tj. data.frame ali tibble(). Prednost je npr., da tako pridobimo imena stolpcev (tj. spremenljivk). kwic() ima ve monosti, npr. case_insensitive = FALSE razlikuje med velikimi in malimi rkami. Privzeta vrednost je TRUE, tj. da tega ne razlikuje (tako kot Excel). (konkordanca = kwic(woerter, pattern = c(&quot;Frau&quot;, &quot;Herr&quot;), case_insensitive = FALSE) %&gt;% as_tibble() ) ## # A tibble: 226 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 23 23 1 Verhaftung , Ge~ Frau Grubach , dann Fr~ Frau ## 2 prozess.txt 55 55 verhaftet . Die K~ Frau Grubach , seiner ~ Frau ## 3 prozess.txt 97 97 seinem Kopfkissen~ Frau , die ihm gegenüb~ Frau ## 4 prozess.txt 417 417 im Nebenzimmer si~ Frau Grubach diese Stö~ Frau ## 5 prozess.txt 552 552 Es war das Wohnzi~ Frau Grubach , viellei~ Frau ## 6 prozess.txt 675 675 erblickte man wie~ Frau , die mit wahrhaf~ Frau ## 7 prozess.txt 701 701 . » Ich will doch Frau Grubach - « , sag~ Frau ## 8 prozess.txt 1648 1648 gerade die gegenü~ Frau Grubach wollte do~ Frau ## 9 prozess.txt 2423 2423 drüben sah er die~ Frau , die einen noch ~ Frau ## 10 prozess.txt 2869 2869 war , so konnte er Frau Grubach als Zeugi~ Frau ## # ... with 216 more rows Z ukazom count() lahko pretejemo, koliko pojavnic je kwic() nael v jezikovnem gradivu. konkordanca %&gt;% count(keyword) ## # A tibble: 2 x 2 ## keyword n ## &lt;chr&gt; &lt;int&gt; ## 1 Frau 132 ## 2 Herr 94 13.5.2 Pripona -in Poiskati elimo besede s pripono -in za samostalnike, ki oznaujejo enska osebna imena (npr. Ärztin, Köchin, ). (konkordanca2 &lt;- kwic(woerter, pattern = c(&quot;*in&quot;), case_insensitive = FALSE) %&gt;% as_tibble() ) ## # A tibble: 4,100 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 27 27 mit Frau Grubach , dann Fräulein Brüst~ *in ## 2 prozess.txt 53 53 eines Morgens verhaftet . Die Köchin der F~ *in ## 3 prozess.txt 59 59 der Frau Grubach , seiner Zimmerv~ , die~ *in ## 4 prozess.txt 87 87 . K . wartete noch ein Weilc~ *in ## 5 prozess.txt 130 130 . Sofort klopfte es und ein Mann ~ *in ## 6 prozess.txt 135 135 ein Mann , den er in diese~ *in ## 7 prozess.txt 144 144 niemals gesehen hatte , trat ein . Er ~ *in ## 8 prozess.txt 156 156 fest gebaut , er trug ein anlie~ *in ## 9 prozess.txt 293 293 zur Tür , die er ein wenig~ *in ## 10 prozess.txt 323 323 das Frühstück bringt . « Ein klein~ *in ## # ... with 4,090 more rows Med kljunimi besedami (keywords) so tudi besedne oblike, ki jih nismo eleli (npr. ein, in, ). Na seznamu elimo imeti samo samostalnike s pripono -in (npr. Köchin, Zimmervermieterin, ). Regularni izrazi (regular expressions, na kratko: regex) nam bodo pomagali izloiti nezaelene zadetke. Po navadi je to postopen proces, dokler ne najdemo najustreznejega regularnega izraza. \\A na zaetku rkovnega niza \\Z na koncu rkovnega niza ^ na zaetku rkovnega niza ali na zaetku vrstice v vevrstinem vzorcu $ na koncu vrstice \\b besedni rob \\w beseda \\&lt; zaetek besede \\&gt; konec besede \\s presledek \\d tevka [A-Z] samo abecedo (velike rke) [a-z] samo abecedo (male rke) [^Eae] teh znakov elimo izloiti ni ali ve znakov en ali ve znakov . poljuben znak (razen: nova vrstica ) (konkordanca2 = as_tibble(kwic(woerter, pattern = &quot;\\\\b[A-Z].+[^ae]in\\\\b&quot;, valuetype = &quot;regex&quot;, case_insensitive = FALSE)) %&gt;% filter(keyword != &quot;Immerhin&quot;, keyword != &quot;Darin&quot;, keyword != &quot;Termin&quot;, keyword != &quot;Worin&quot;, keyword != &quot;Robin&quot;, keyword != &quot;Medizin&quot;, keyword != &quot;Disziplin&quot;, keyword != &quot;Austin&quot;, keyword != &quot;Musselin&quot;, keyword != &quot;Benjamin&quot;, keyword != &quot;Franklin&quot;) ) ## # A tibble: 46 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 53 53 eines Morgens verhaftet . Die Köchin der ~ &quot;\\\\b[A~ ## 2 prozess.txt 59 59 der Frau Grubach , seiner Zimmer~ , di~ &quot;\\\\b[A~ ## 3 prozess.txt 2872 2872 konnte er Frau Grubach als Zeugin führ~ &quot;\\\\b[A~ ## 4 prozess.txt 3590 3590 einem Fräulein Bürstner , einer Schrei~ , be~ &quot;\\\\b[A~ ## 5 prozess.txt 6475 6475 in den späten Morgen als Kellne~ in e~ &quot;\\\\b[A~ ## 6 prozess.txt 7349 7349 ich bin ja bloß die Vermie~ . Nu~ &quot;\\\\b[A~ ## 7 prozess.txt 15556 15556 Saalende öffnete , die junge Wäsche~ , di~ &quot;\\\\b[A~ ## 8 prozess.txt 16522 16522 sollten , ebenso wie meine Vermie~ und ~ &quot;\\\\b[A~ ## 9 prozess.txt 16561 16561 , gelungen , selbst meine Vermie~ , ei~ &quot;\\\\b[A~ ## 10 prozess.txt 28090 28090 diesen verwenden . 4 Die Freund~ des ~ &quot;\\\\b[A~ ## # ... with 36 more rows Od 4100 zadetkov je ostalo le 46 zadetkov, ki vsebujejo samostalnik s pripono -in, ki oznauje ensko. Veino napanih besed smo s seznama odstranili z izbranim regularnim izrazom. Okrog deset smo morali posamino izloiti s funkcijo filter(). 13.5.3 Pripona -er V naslednji nalogi elimo poiskati samostalnike s pripono -er, ki se pogosto nanaajo na osebe mokega spola. Glede na to, da se pripona -er uporablja v mnoge druge namene, bo najbolje, e - najprej odstranimo funkcijske in druge pogoste besede (seznam stopwords) - in ele potem poizvedujemo s funkcijo kwic() wortformen = tokens_select(woerter, pattern = c(stopwords(&quot;de&quot;), &quot;bisher&quot;,&quot;immer&quot;), selection = &quot;remove&quot;) Priblino 500 besednih oblik manj, kot e ne bi izloili stopwords. (nomen_er = as_tibble(kwic(wortformen, pattern = &quot;\\\\b[A-Z].+er\\\\b&quot;, valuetype = &quot;regex&quot;, case_insensitive = FALSE)) ) ## # A tibble: 2,270 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 24 24 Gespräch Frau Gr~ Brüstner Jemand mußte J~ &quot;\\\\b[A-Z~ ## 2 prozess.txt 208 208 Frühstück bringt~ Gelächter Nebenzimmer fo~ &quot;\\\\b[A-Z~ ## 3 prozess.txt 209 209 bringt . « klein~ Nebenzim~ folgte , Klang~ &quot;\\\\b[A-Z~ ## 4 prozess.txt 261 261 . » sehen , Leute Nebenzim~ Frau Grubach S~ &quot;\\\\b[A-Z~ ## 5 prozess.txt 317 317 Fremde öffnete f~ Nebenzim~ , K . langsame~ &quot;\\\\b[A-Z~ ## 6 prozess.txt 333 333 fast genau Abend~ Wohnzimm~ Frau Grubach ,~ &quot;\\\\b[A-Z~ ## 7 prozess.txt 345 345 Decken , Porzell~ Zimmer heute wenig me~ &quot;\\\\b[A-Z~ ## 8 prozess.txt 363 363 Mannes bestand ,~ Fenster Buch saß , auf~ &quot;\\\\b[A-Z~ ## 9 prozess.txt 371 371 , aufblickte , »~ Zimmer bleiben sollen~ &quot;\\\\b[A-Z~ ## 10 prozess.txt 399 399 stehengeblieben ~ Fenster erblickte alte~ &quot;\\\\b[A-Z~ ## # ... with 2,260 more rows 462 je besednih oblik, ki se kona na -er, vendar med njimi niso samo samostalniki, ki bi se nanaali na osebe mokega spola. nomen_er %&gt;% count(keyword, sort = T) ## # A tibble: 462 x 2 ## keyword n ## &lt;chr&gt; &lt;int&gt; ## 1 Maler 118 ## 2 Zimmer 107 ## 3 Fenster 75 ## 4 Richter 73 ## 5 Bürstner 61 ## 6 Türhüter 57 ## 7 Wächter 54 ## 8 Untersuchungsrichter 48 ## 9 Wasser 44 ## 10 Potter 40 ## # ... with 452 more rows e vedno je potrebno posamino filtriranje: bodisi zaradi pomena bodisi zaradi besedotvornega vzorca. Zaradi prej izloenih nezaelenih besed (stopwords) je filtrirni seznam nekoliko kraji. (nomina_er = nomen_er %&gt;% filter(!str_detect(keyword, c(&quot;[Z|z]immer|[P|p]apier|[F|f]inger|[W|w]asser|[H|h]äuser|[B|b]ücher|spritzer|[G|g]itter|[K|k]ammer|[W|w]etter&quot;)), !keyword %in% c(&quot;Kinder&quot;,&quot;Messer&quot;,&quot;Blätter&quot;,&quot;Kleider&quot;,&quot;Bilder&quot;,&quot;Nummer&quot;,&quot;Koffer&quot;,&quot;Fenster&quot;, &quot;Feuer&quot;,&quot;Körper&quot;,&quot;Gesichter&quot;,&quot;Kummer&quot;,&quot;Abenteuer&quot;,&quot;Schulter&quot;,&quot;Tier&quot;, &quot;Theater&quot;,&quot;Fehler&quot;,&quot;Gelächter&quot;,&quot;Mutter&quot;,&quot;Seufzer&quot;,&quot;Vater&quot;,&quot;Wunder&quot;,&quot;Atelier&quot;, &quot;Geister&quot;,&quot;Mauer&quot;,&quot;Ufer&quot;,&quot;Bruder&quot;,&quot;Hunger&quot;,&quot;Lichter&quot;,&quot;Eimer&quot;,&quot;Lager&quot;, &quot;Meter&quot;,&quot;Trauer&quot;,&quot;Polster&quot;,&quot;Manier&quot;)) ) ## # A tibble: 1,461 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 24 24 Gespräch Frau G~ Brüstner Jemand mußte Jo~ &quot;\\\\b[A-Z]~ ## 2 prozess.txt 508 508 freundlich . we~ Wächter , zuversichtlic~ &quot;\\\\b[A-Z]~ ## 3 prozess.txt 672 672 zweiten Wächter~ Wächter - förmlich freu~ &quot;\\\\b[A-Z]~ ## 4 prozess.txt 695 695 seitlich gedreh~ Wächter verständigte . ~ &quot;\\\\b[A-Z]~ ## 5 prozess.txt 782 782 lachen , mitlac~ Dienstm~ Straßenecke , s~ &quot;\\\\b[A-Z]~ ## 6 prozess.txt 976 976 öffnete , wurde~ Wächter aufgeschreckt ,~ &quot;\\\\b[A-Z]~ ## 7 prozess.txt 1004 1004 darf « , sagte ~ Wächter . » verhaftet .~ &quot;\\\\b[A-Z]~ ## 8 prozess.txt 1022 1022 » fangen « , sa~ Wächter tauchte Butterb~ &quot;\\\\b[A-Z]~ ## 9 prozess.txt 1054 1054 lieber Himmel !~ Wächter . » Lage fügen ~ &quot;\\\\b[A-Z]~ ## 10 prozess.txt 1124 1124 ? « rief schon ~ Wächter . » führen ärge~ &quot;\\\\b[A-Z]~ ## # ... with 1,451 more rows nomina_er %&gt;% group_by(docname) %&gt;% count(keyword, sort = T) ## # A tibble: 398 x 3 ## # Groups: docname [2] ## docname keyword n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 prozess.txt Maler 118 ## 2 prozess.txt Bürstner 61 ## 3 prozess.txt Türhüter 57 ## 4 prozess.txt Richter 50 ## 5 prozess.txt Untersuchungsrichter 48 ## 6 prozess.txt Wächter 48 ## 7 tom.txt Potter 40 ## 8 prozess.txt Gerichtsdiener 38 ## 9 prozess.txt Diener 36 ## 10 tom.txt Thatcher 36 ## # ... with 388 more rows Za grafini prikaz obdrimo samo po 20 najpogostnejih izrazov iz vsakega besedila. nomina_er %&gt;% group_by(docname) %&gt;% count(keyword, sort = T) %&gt;% slice_head(n=20) ## # A tibble: 40 x 3 ## # Groups: docname [2] ## docname keyword n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 prozess.txt Maler 118 ## 2 prozess.txt Bürstner 61 ## 3 prozess.txt Türhüter 57 ## 4 prozess.txt Richter 50 ## 5 prozess.txt Untersuchungsrichter 48 ## 6 prozess.txt Wächter 48 ## 7 prozess.txt Gerichtsdiener 38 ## 8 prozess.txt Diener 36 ## 9 prozess.txt Aufseher 35 ## 10 prozess.txt Direktor-Stellvertreter 35 ## # ... with 30 more rows V romanu Tom Sawyer so priimki na -er na vrhu lestvice, roman Prozess vsebuje bistvenih ve splonih samostalnikov, ki se konajo s pripono -er in se nanaajo na moke osebe. Edini Priimek je Bürstner. library(tidytext) nomina_er %&gt;% group_by(docname) %&gt;% count(keyword, sort = T) %&gt;% slice_head(n=20) %&gt;% mutate(keyword = reorder_within(keyword, n, n, sep = &quot;: &quot;)) %&gt;% ggplot(aes(n, keyword, fill = keyword)) + geom_col() + theme(legend.position = &quot;none&quot;) + facet_wrap(~ docname, scales = &quot;free&quot;) + labs(x = &quot;Frequenz&quot;, y = &quot;&quot;) 13.5.4 Pripona -ung (nomen_ung = as_tibble(kwic(woerter, pattern = &quot;\\\\b[A-Z].+ung\\\\b&quot;, valuetype = &quot;regex&quot;, case_insensitive = FALSE)) ) ## # A tibble: 1,025 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 19 19 Der Prozess Franz Kafka 1 Verhaft~ , Gespr~ &quot;\\\\b[A-~ ## 2 prozess.txt 137 137 , den er in dieser Wohnung noch ni~ &quot;\\\\b[A-~ ## 3 prozess.txt 231 231 , als müsse man seine Erschei~ hinnehm~ &quot;\\\\b[A-~ ## 4 prozess.txt 374 374 K . im Tone einer Meldung : » Es ~ &quot;\\\\b[A-~ ## 5 prozess.txt 420 420 und wie Frau Grubach diese Störung mir geg~ &quot;\\\\b[A-~ ## 6 prozess.txt 589 589 so weniger , als die Hauptve~ in der ~ &quot;\\\\b[A-~ ## 7 prozess.txt 712 712 K . , machte eine Bewegung , als r~ &quot;\\\\b[A-~ ## 8 prozess.txt 873 873 Glück haben wie bei der Bestimm~ Ihrer W~ &quot;\\\\b[A-~ ## 9 prozess.txt 1091 1091 , sondern die Höhe der Bestech~ , und w~ &quot;\\\\b[A-~ ## 10 prozess.txt 1265 1265 wagte , ihn in seiner Wohnung zu über~ &quot;\\\\b[A-~ ## # ... with 1,015 more rows V romanu Prozess je tevilo pojavnic samostalnikov na -ung skoraj enkrat veje kot v Tomu. Mnogi samostalniki s pripono -ung so abstraktni in teje razumljivi kot konkretni samostalniki. nomen_ung %&gt;% group_by(docname) %&gt;% count(keyword, sort = T) %&gt;% summarise(Freq = sum(n)) ## # A tibble: 2 x 2 ## docname Freq ## &lt;chr&gt; &lt;int&gt; ## 1 prozess.txt 672 ## 2 tom.txt 353 kwic_ung = kwic(woerter, pattern = &quot;\\\\b[A-Z].+ung\\\\b&quot;, valuetype = &quot;regex&quot;, case_insensitive = FALSE) textplot_xray(kwic_ung) Najpogostneji samostalniki s pripono -ung odraajo osrednjo tematiko obeh besedil. V romanu Prozess se pogosteje pojavljajo samostalniki s pripono -ung, ki spadajo v pomensko polje (kriminalno) pravo, v romanu Tom Sawyer pa je na vrhu lestvice ve takih samostalnikov, ki se nanaajo na geografski prostor in razpoloenje. library(tidytext) (nomina_ung = nomen_ung %&gt;% group_by(docname) %&gt;% count(keyword, sort = T) %&gt;% slice_head(n=20) %&gt;% mutate(keyword = reorder_within(keyword, n, n, sep = &quot;: &quot;)) ) ## # A tibble: 40 x 3 ## # Groups: docname [2] ## docname keyword n ## &lt;chr&gt; &lt;fct&gt; &lt;int&gt; ## 1 prozess.txt Verteidigung: 26 26 ## 2 prozess.txt Meinung: 21 21 ## 3 prozess.txt Bemerkung: 19 19 ## 4 prozess.txt Erklärung: 19 19 ## 5 prozess.txt Verhaftung: 18 18 ## 6 prozess.txt Stellung: 17 17 ## 7 prozess.txt Wohnung: 17 17 ## 8 prozess.txt Freisprechung: 15 15 ## 9 prozess.txt Bedeutung: 14 14 ## 10 prozess.txt Verbindung: 14 14 ## # ... with 30 more rows nomina_ung %&gt;% ggplot(aes(n, keyword, fill = keyword)) + geom_col() + theme(legend.position = &quot;none&quot;) + facet_wrap(~ docname, scales = &quot;free&quot;) + labs(x = &quot;Frequenz&quot;, y = &quot;&quot;) Iskanje besednih zvez s funkcijo kwic() in phrase() - funkcijske glagolske zveze (Funktionsverbgefüge) in frazemi: (fvg1 = as_tibble(kwic(woerter, pattern = phrase( c(&quot;zur|in .+ung (ge)komm.+|(ge)brach.+|bring.+&quot;)), valuetype = &quot;regex&quot;, case_insensitive = FALSE)) ) ## # A tibble: 9 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 7059 7061 ; wenn ich meine Sachen in Ordn~ will ~ zur|in~ ## 2 prozess.txt 8040 8042 es ist auch schon alles in Ordn~ , seh~ zur|in~ ## 3 prozess.txt 9424 9426 meine Schuld , ein wenig in Unor~ worde~ zur|in~ ## 4 prozess.txt 10979 10981 , » ich werde alles in Ordn~ . Wer~ zur|in~ ## 5 prozess.txt 14537 14539 führte , hatte Mühe , seine M~ . Zwe~ zur|in~ ## 6 prozess.txt 25105 25107 zurückgehen , ich muß doch meine M~ und h~ zur|in~ ## 7 prozess.txt 57526 57528 zum erstenmal mit den Richtern in Verb~ ? « f~ zur|in~ ## 8 tom.txt 72134 72136 , mit den letzten Ereignissen in Verb~ zu we~ zur|in~ ## 9 tom.txt 77725 77727 Abenteuer , hie und da kleine ~ ; er ~ zur|in~ e so med sestavnimi deli besedne zveze drugi izrazi, lahko tudi postopoma filtriramo: phrase1 = &quot;\\\\bstand.*|\\\\bsteh.*&quot; (fvg2 = as_tibble(kwic(woerter, pattern = phrase(phrase1), window = 10, valuetype = &quot;regex&quot;, case_insensitive = FALSE)) %&gt;% filter(str_detect(post, &quot;zur&quot;)) %&gt;% filter(str_detect(post, &quot;.+ung\\\\b&quot;)) ) ## # A tibble: 1 x 7 ## docname from to pre keyword post pattern ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 prozess.txt 6329 6329 aus dem Wagen ,~ stand mit seinem Grinse~ &quot;\\\\bstand~ 13.6 tidytext 13.6.1 Besede Pretvorba besedil v povedi s programom tidytext, funkcija unnest_tokens(): romantexte = txt %&gt;% as_tibble() %&gt;% unnest_tokens(sentence, text, token = &quot;sentences&quot;) 13.6.2 Besedne zveze Izvleci samostalnike zveze: np = &quot;(der|die|das|des|dem|den) ([^ ]+)&quot; romantexte %&gt;% str_extract_all(np) ## [[1]] ## character(0) ## ## [[2]] ## [1] &quot;der prozess&quot; &quot;der prozess&quot; ## [3] &quot;die köchin&quot; &quot;der frau&quot; ## [5] &quot;die ihm&quot; &quot;den tag&quot; ## [7] &quot;das frühstück&quot; &quot;das war&quot; ## [9] &quot;die alte&quot; &quot;die ihm&quot; ## [11] &quot;die ihn&quot; &quot;den er&quot; ## [13] &quot;des schwarzes&quot; &quot;das ,&quot; ## [15] &quot;den reiseanzügen&quot; &quot;der mann&quot; ## [17] &quot;die frage&quot; &quot;das frühstück&quot; ## [19] &quot;der mann&quot; &quot;die er&quot; ## [21] &quot;dem ,&quot; &quot;der offenbar&quot; ## [23] &quot;der tür&quot; &quot;das frühstück&quot; ## [25] &quot;dem klang&quot; &quot;der fremde&quot; ## [27] &quot;das wäre&quot; &quot;dem bett&quot; ## [29] &quot;das nicht&quot; &quot;des fremden&quot; ## [31] &quot;der fremde&quot; &quot;der hierbleiben&quot; ## [33] &quot;den ,&quot; &quot;der fremde&quot; ## [35] &quot;die tür&quot; &quot;das k.&quot; ## [37] &quot;den ersten&quot; &quot;das wohnzimmer&quot; ## [39] &quot;der frau&quot; &quot;das nicht&quot; ## [41] &quot;die hauptveränderung&quot; &quot;der anwesenheit&quot; ## [43] &quot;der beim&quot; &quot;dem er&quot; ## [45] &quot;der neuen&quot; &quot;dem mit&quot; ## [47] &quot;der in&quot; &quot;der tür&quot; ## [49] &quot;der zurück&quot; &quot;das offene&quot; ## [51] &quot;der die&quot; &quot;die mit&quot; ## [53] &quot;dem jetzt&quot; &quot;den fenster&quot; ## [55] &quot;den zwei&quot; &quot;die aber&quot; ## [57] &quot;den ,&quot; &quot;der mann&quot; ## [59] &quot;das buch&quot; &quot;das zu&quot; ## [61] &quot;das verfahren&quot; &quot;den alles&quot; ## [63] &quot;der ist&quot; &quot;der bestimmung&quot; ## [65] &quot;dem sessel&quot; &quot;den noch&quot; ## [67] &quot;das alles&quot; &quot;dem andern&quot; ## [69] &quot;der letztere&quot; &quot;die schulter&quot; ## [71] &quot;der zurückgeben&quot; &quot;den .\\&quot;,&quot; ## [73] &quot;die sachen&quot; &quot;dem verkauft&quot; ## [75] &quot;das betreffende&quot; &quot;der nicht&quot; ## [77] &quot;den erlös&quot; &quot;die höhe&quot; ## [79] &quot;des angebotes&quot; &quot;die höhe&quot; ## [81] &quot;der bestechung&quot; &quot;den .\\&quot;,&quot; ## [83] &quot;den kaum&quot; &quot;das verfügungsrecht&quot; ## [85] &quot;das er&quot; &quot;der stieß&quot; ## [87] &quot;der bauch&quot; &quot;des zweiten&quot; ## [89] &quot;des trockenes&quot; &quot;das sich&quot; ## [91] &quot;dem anderen&quot; &quot;das für&quot; ## [93] &quot;den aufrecht&quot; &quot;das schlimmste&quot; ## [95] &quot;des schlimmsten&quot; &quot;die zukunft&quot; ## [97] &quot;das aber&quot; &quot;das ganze&quot; ## [99] &quot;den ihm&quot; &quot;den ,&quot; ## [101] &quot;die kollegen&quot; &quot;der bank&quot; ## [103] &quot;den wächtern&quot; &quot;den mitlachen&quot; ## [105] &quot;der straßenecke&quot; &quot;dem war&quot; ## [107] &quot;dem ersten&quot; &quot;des wächters&quot; ## [109] &quot;den geringsten&quot; &quot;den er&quot; ## [111] &quot;der hand&quot; &quot;den ,&quot; ## [113] &quot;den mit&quot; &quot;das geringste&quot; ## [115] &quot;die möglichen&quot; &quot;das ergebnis&quot; ## [117] &quot;den war&quot; &quot;der geschehen&quot; ## [119] &quot;die ,&quot; &quot;den wächtern&quot; ## [121] &quot;die schubladen&quot; &quot;des schreibtischs&quot; ## [123] &quot;die legitimationspapiere&quot; &quot;die er&quot; ## [125] &quot;der aufregung&quot; &quot;den .\\&quot;,&quot; ## [127] &quot;den wächtern&quot; &quot;das papier&quot; ## [129] &quot;den geburtsschein&quot; &quot;der in&quot; ## [131] &quot;das nebenzimmer&quot; &quot;die gegenüberliegende&quot; ## [133] &quot;die tür&quot; &quot;der mitte&quot; ## [135] &quot;des zimmers&quot; &quot;die tür&quot; ## [137] &quot;die sich&quot; &quot;der öffnete&quot; ## [139] &quot;der wächter&quot; &quot;die bei&quot; ## [141] &quot;dem tischchen&quot; &quot;der große&quot; ## [143] &quot;der an&quot; &quot;der wächter&quot; ## [145] &quot;den sie&quot; &quot;die ihrigen&quot; ## [147] &quot;den verhaftbefehl&quot; &quot;der wächter&quot; ## [149] &quot;die wir&quot; &quot;die kaffeetasse&quot; ## [151] &quot;die er&quot; &quot;der hand&quot; ## [153] &quot;der blicke&quot; &quot;die ?\\&quot;,&quot; ## [155] &quot;der große&quot; &quot;den wächtern&quot; ## [157] &quot;die sich&quot; &quot;die mit&quot; ## [159] &quot;den täglich&quot; &quot;den .\\&quot;,&quot; ## [161] &quot;das ist&quot; &quot;dem aber&quot; ## [163] &quot;die hohen&quot; &quot;den ,&quot; ## [165] &quot;die gründe&quot; &quot;der verhaftung&quot; ## [167] &quot;die person&quot; &quot;des verhafteten&quot; ## [169] &quot;die niedrigsten&quot; &quot;die schuld&quot; ## [171] &quot;der bevölkerung&quot; &quot;der schuld&quot; ## [173] &quot;das ist&quot; &quot;der wächter&quot; ## [175] &quot;die gedanken&quot; &quot;der wächter&quot; ## [177] &quot;den oder&quot; &quot;der wächter&quot; ## [179] &quot;den es&quot; &quot;das gesetz&quot; ## [181] &quot;der andere&quot; &quot;das geschwätz&quot; ## [183] &quot;den doch&quot; &quot;die sie&quot; ## [185] &quot;die ich&quot; &quot;den alles&quot; ## [187] &quot;die längsten&quot; &quot;den mit&quot; ## [189] &quot;dem freien&quot; &quot;des zimmers&quot; ## [191] &quot;die alte&quot; &quot;die einen&quot; ## [193] &quot;den sie&quot; &quot;der wächter&quot; ## [195] &quot;der willem&quot; &quot;den war&quot; ## [197] &quot;den wird&quot; &quot;den große&quot; ## [199] &quot;den .\\&quot;,&quot; &quot;das ist&quot; ## [201] &quot;dem sind&quot; &quot;dem kaffeehaus&quot; ## [203] &quot;den ihn&quot; &quot;die beiden&quot; ## [205] &quot;die tür&quot; &quot;des folgenden&quot; ## [207] &quot;der gar&quot; &quot;die tür&quot; ## [209] &quot;des vorzimmers&quot; &quot;die einfachste&quot; ## [211] &quot;des ganzen&quot; &quot;die spitze&quot; ## [213] &quot;den sie&quot; &quot;die er&quot; ## [215] &quot;die sicherheit&quot; &quot;der lösung&quot; ## [217] &quot;der natürliche&quot; &quot;der von&quot; ## [219] &quot;der wächter&quot; &quot;den er&quot; ## [221] &quot;das frühstück&quot; &quot;das frühstück&quot; ## [223] &quot;dem schmutzigen&quot; &quot;das er&quot; ## [225] &quot;die gnade&quot; &quot;der wächter&quot; ## [227] &quot;der bank&quot; &quot;das war&quot; ## [229] &quot;der verhältnismäßig&quot; &quot;die er&quot; ## [231] &quot;die wirkliche&quot; &quot;der auch&quot; ## [233] &quot;die beiden&quot; &quot;die wohl&quot; ## [235] &quot;dem marsch&quot; &quot;den fenster&quot; ## [237] &quot;dem gedankengang&quot; &quot;der wächter&quot; ## [239] &quot;das zimmer&quot; &quot;die zwei&quot; ## [241] &quot;der sinnlosigkeit&quot; &quot;die geistige&quot; ## [243] &quot;der wächter&quot; &quot;der gleichen&quot; ## [245] &quot;dem er&quot; &quot;des frühstücks&quot; ## [247] &quot;das letztere&quot; &quot;den unwahrscheinlichen&quot; ## [249] &quot;dem nebenzimmer&quot; &quot;den zähnen&quot; ## [251] &quot;der aufseher&quot; &quot;das schreien&quot; ## [253] &quot;das ihn&quot; &quot;das er&quot; ## [255] &quot;dem wächter&quot; &quot;der befehl&quot; ## [257] &quot;den wandschrank&quot; &quot;den die&quot; ## [259] &quot;das selbstverständlich&quot; &quot;der in&quot; ## [261] &quot;den aufseher&quot; &quot;der schon&quot; ## [263] &quot;den .\\&quot;,&quot; &quot;die wächter&quot; ## [265] &quot;die immer&quot; &quot;den und&quot; ## [267] &quot;der gewissermaßen&quot; &quot;den händen&quot; ## [269] &quot;dem urteil&quot; &quot;der wächter&quot; ## [271] &quot;die köpfe&quot; &quot;den rock&quot; ## [273] &quot;den und&quot; &quot;die hauptverhandlung&quot; ## [275] &quot;die wächter&quot; &quot;die sache&quot; ## [277] &quot;den kleiderkasten&quot; &quot;den vielen&quot; ## [279] &quot;das durch&quot; &quot;den bekannten&quot; ## [281] &quot;des ganzen&quot; &quot;die wächter&quot; ## [283] &quot;den ,&quot; &quot;das fiel&quot; ## [285] &quot;der meldung&quot; &quot;das leere&quot; ## [287] &quot;das folgende&quot; &quot;den flügeln&quot; ## [289] &quot;die sehr&quot; &quot;die arbeit&quot; ## [291] &quot;der k.&quot; &quot;die grußworte&quot; ## [293] &quot;das nachttischchen&quot; &quot;die mitte&quot; ## [295] &quot;des zimmers&quot; &quot;der aufseher&quot; ## [297] &quot;die beine&quot; &quot;die rückenlehne&quot; ## [299] &quot;des stuhles&quot; &quot;des zimmers&quot; ## [301] &quot;den drei&quot; &quot;die photographien&quot; ## [303] &quot;des fräulein&quot; &quot;die in&quot; ## [305] &quot;der wand&quot; &quot;der klinke&quot; ## [307] &quot;des offenen&quot; &quot;den fenster&quot; ## [309] &quot;der die&quot; &quot;der brust&quot; ## [311] &quot;der seinen&quot; &quot;den fingern&quot; ## [313] &quot;der aufseher&quot; &quot;die vorgänge&quot; ## [315] &quot;des heutigen&quot; &quot;der aufseher&quot; ## [317] &quot;den händen&quot; &quot;die wenigen&quot; ## [319] &quot;die auf&quot; &quot;dem nachttischchen&quot; ## [321] &quot;die kerze&quot; &quot;die er&quot; ## [323] &quot;das wohlgefühl&quot; &quot;der aufseher&quot; ## [325] &quot;die kerze&quot; &quot;die mitte&quot; ## [327] &quot;des tischchens&quot; &quot;die anderen&quot; ## [329] &quot;der aufseher&quot; &quot;der welt&quot; ## [331] &quot;den war&quot; &quot;die heutige&quot; ## [333] &quot;die heutige&quot; &quot;das ganze&quot; ## [335] &quot;die veranstaltungen&quot; &quot;die gemacht&quot; ## [337] &quot;den ,&quot; &quot;der der&quot; ## [339] &quot;das ginge&quot; &quot;die grenzen&quot; ## [341] &quot;der aufseher&quot; &quot;der zündhölzchenschachtel&quot; ## [343] &quot;die drei&quot; &quot;den photographien&quot; ## [345] &quot;die sache&quot; &quot;das daraus&quot; ## [347] &quot;die geringste&quot; &quot;den kann&quot; ## [349] &quot;das ist&quot; &quot;die hauptfrage&quot; ## [351] &quot;das verfahren&quot; &quot;der den&quot; ## [353] &quot;den nehmen&quot; &quot;der aufseher&quot; ## [355] &quot;die zündhölzchenschachtel&quot; &quot;den tisch&quot; ## [357] &quot;der .\\&quot;,&quot; &quot;den sich&quot; ## [359] &quot;die regelrechtesten&quot; &quot;der vielmehr&quot; ## [361] &quot;das ist&quot; &quot;die wächter&quot; ## [363] &quot;das ,&quot; &quot;dem gefühl&quot; ## [365] &quot;den nicht&quot; &quot;den sie&quot; ## [367] &quot;den zurückhaltender&quot; &quot;dem war&quot; ## [369] &quot;den aufseher&quot; &quot;den grund&quot; ## [371] &quot;die brust&quot; &quot;den drei&quot; ## [373] &quot;der vor&quot; &quot;dem tisch&quot; ## [375] &quot;des aufsehers&quot; &quot;der staatsanwalt&quot; ## [377] &quot;der aufseher&quot; &quot;das haben&quot; ## [379] &quot;das es&quot; &quot;die herren&quot; ## [381] &quot;der stehen&quot; &quot;die hohe&quot; ## [383] &quot;der aufseher&quot; &quot;die hand&quot; ## [385] &quot;das telephon&quot; &quot;die gesellschaft&quot; ## [387] &quot;der ruhe&quot; &quot;des zuschauens&quot; ## [389] &quot;die alten&quot; &quot;der mann&quot; ## [391] &quot;dem aufseher&quot; &quot;dem zeigefinger&quot; ## [393] &quot;die drei&quot; &quot;die beiden&quot; ## [395] &quot;den mann&quot; &quot;der sie&quot; ## [397] &quot;die entfernung&quot; &quot;den sie&quot; ## [399] &quot;den augenblick&quot; &quot;dem sie&quot; ## [401] &quot;der dem&quot; &quot;der aufseher&quot; ## [403] &quot;den tisch&quot; &quot;die finger&quot; ## [405] &quot;die zwei&quot; &quot;die drei&quot; ## [407] &quot;die hände&quot; &quot;die hüften&quot; ## [409] &quot;der ansicht&quot; &quot;die berechtigung&quot; ## [411] &quot;der nichtberechtigung&quot; &quot;der sache&quot; ## [413] &quot;den tisch&quot; &quot;des aufsehers&quot; ## [415] &quot;die hand&quot; &quot;der aufseher&quot; ## [417] &quot;die augen&quot; &quot;den lippen&quot; ## [419] &quot;der aufseher&quot; &quot;den hut&quot; ## [421] &quot;der auf&quot; &quot;den händen&quot; ## [423] &quot;der anprobe&quot; &quot;der sache&quot; ## [425] &quot;das geht&quot; &quot;das hatte&quot; ## [427] &quot;den ,&quot; &quot;den wohl&quot; ## [429] &quot;die bank&quot; &quot;die bank&quot; ## [431] &quot;den war&quot; &quot;dem der&quot; ## [433] &quot;den war&quot; &quot;die absicht&quot; ## [435] &quot;die bank&quot; &quot;der aufseher&quot; ## [437] &quot;der schon&quot; &quot;der tür&quot; ## [439] &quot;den .\\&quot;,&quot; &quot;das soll&quot; ## [441] &quot;das verhaftetsein&quot; &quot;den aufseher&quot; ## [443] &quot;die mitteilung&quot; &quot;der verhaftung&quot; ## [445] &quot;die anderen&quot; &quot;der tür&quot; ## [447] &quot;der aufseher&quot; &quot;der aufseher&quot; ## [449] &quot;den nicht&quot; &quot;die bank&quot; ## [451] &quot;die bank&quot; &quot;das zu&quot; ## [453] &quot;der bank&quot; &quot;die drei&quot; ## [455] &quot;die er&quot; &quot;den photographien&quot; ## [457] &quot;der erinnerung&quot; &quot;das war&quot; ## [459] &quot;der allwissenheit&quot; &quot;des aufsehers&quot; ## [461] &quot;der bank&quot; &quot;das übersehen&quot; ## [463] &quot;dem aufseher&quot; &quot;den wächtern&quot; ## [465] &quot;den steifen&quot; &quot;die hände&quot; ## [467] &quot;den rabensteiner&quot; &quot;den blonden&quot; ## [469] &quot;den tiefliegenden&quot; &quot;dem unausstehlichen&quot; ## [471] &quot;den sich&quot; &quot;den herren&quot; ## [473] &quot;die hand&quot; &quot;den wir&quot; ## [475] &quot;die arbeit&quot; &quot;die herren&quot; ## [477] &quot;die ganze&quot; &quot;der in&quot; ## [479] &quot;der ,&quot; &quot;die zwei&quot; ## [481] &quot;der letzte&quot; &quot;der gleichgültige&quot; ## [483] &quot;der bloß&quot; &quot;den hut&quot; ## [485] &quot;der bank&quot; &quot;die gar&quot; ## [487] &quot;der ganzen&quot; &quot;die wohnungstür&quot; ## [489] &quot;der ,&quot; &quot;das so&quot; ## [491] &quot;die uhr&quot; &quot;der hand&quot; ## [493] &quot;die schon&quot; &quot;den wagen&quot; ## [495] &quot;die zwei&quot; &quot;das gegenüberliegende&quot; ## [497] &quot;dem eben&quot; &quot;der große&quot; ## [499] &quot;dem blonden&quot; &quot;die alten&quot; ## [501] &quot;der treppe&quot; &quot;den mann&quot; ## [503] &quot;den er&quot; &quot;den er&quot; ## [505] &quot;das automobil&quot; &quot;das weggehen&quot; ## [507] &quot;des aufsehers&quot; &quot;der wächter&quot; ## [509] &quot;der aufseher&quot; &quot;die drei&quot; ## [511] &quot;der die&quot; &quot;den aufseher&quot; ## [513] &quot;das nicht&quot; &quot;das hinterdeck&quot; ## [515] &quot;des automobils&quot; &quot;den aufseher&quot; ## [517] &quot;die wächter&quot; &quot;der zurück&quot; ## [519] &quot;die wagenecke&quot; &quot;den versuch&quot; ## [521] &quot;den zu&quot; &quot;den anschein&quot; ## [523] &quot;die herren&quot; &quot;dem wagen&quot; ## [525] &quot;das einen&quot; &quot;der die&quot; ## [527] &quot;die abende&quot; &quot;der weise&quot; ## [529] &quot;der arbeit&quot; &quot;der mit&quot; ## [531] &quot;der seine&quot; &quot;der zu&quot; ## [533] &quot;den wurde&quot; &quot;dem ging&quot; ## [535] &quot;der woche&quot; &quot;die während&quot; ## [537] &quot;der nacht&quot; &quot;den späten&quot; ## [539] &quot;des tages&quot; &quot;der tag&quot; ## [541] &quot;den und&quot; &quot;der tagesarbeit&quot; ## [543] &quot;die vorfälle&quot; &quot;des morgens&quot; ## [545] &quot;der ganzen&quot; &quot;der frau&quot; ## [547] &quot;den sei&quot; &quot;die ordnung&quot; ## [549] &quot;der auf&quot; &quot;den drei&quot; ## [551] &quot;der in&quot; &quot;die große&quot; ## [553] &quot;der bank&quot; &quot;dem hause&quot; ## [555] &quot;dem er&quot; &quot;der dort&quot; ## [557] &quot;den burschen&quot; &quot;des flurs&quot; ## [559] &quot;der sohn&quot; &quot;des hausmeisters&quot; ## [561] &quot;der bursche&quot; &quot;die pfeife&quot; ## [563] &quot;dem mund&quot; &quot;der sohn&quot; ## [565] &quot;des hausmeisters&quot; &quot;den boden&quot; ## [567] &quot;der gnädige&quot; &quot;den vater&quot; ## [569] &quot;des ,&quot; &quot;der bursche&quot; ## [571] &quot;die treppe&quot; &quot;dem noch&quot; ## [573] &quot;der vollkommen&quot; &quot;das frühstücksgeschirr&quot; ## [575] &quot;das früh&quot; &quot;dem tischchen&quot; ## [577] &quot;den hatte&quot; &quot;das geschirr&quot; ## [579] &quot;der stelle&quot; &quot;die strümpfe&quot; ## [581] &quot;des tages&quot; &quot;den mietern&quot; ## [583] &quot;die abende&quot; &quot;die arbeit&quot; ## [585] &quot;die männer&quot; &quot;die heute&quot; ## [587] &quot;der in&quot; &quot;das hat&quot; ## [589] &quot;den strickstrumpf&quot; &quot;der vornahm&quot; ## [591] &quot;der vorkommen&quot; &quot;das kann&quot; ## [593] &quot;der vorkommen&quot; &quot;das ernstlich&quot; ## [595] &quot;der welt&quot; &quot;den ,&quot; ## [597] &quot;der tür&quot; &quot;die beiden&quot; ## [599] &quot;das liegt&quot; &quot;die vermieterin&quot; ## [601] &quot;das ich&quot; &quot;das man&quot; ## [603] &quot;das ganze&quot; &quot;das war&quot; ## [605] &quot;dem erwachen&quot; &quot;das ausbleiben&quot; ## [607] &quot;der anna&quot; &quot;den und&quot; ## [609] &quot;der mir&quot; &quot;den weg&quot; ## [611] &quot;der küche&quot; &quot;die kleidungsstücke&quot; ## [613] &quot;den wollte&quot; &quot;den .\\&quot;,&quot; ## [615] &quot;der bank&quot; &quot;das allgemeine&quot; ## [617] &quot;das bürotelephon&quot; &quot;dem tisch&quot; ## [619] &quot;dem aber&quot; &quot;der arbeit&quot; ## [621] &quot;den .\\&quot;,&quot; &quot;das urteil&quot; ## [623] &quot;die hand&quot; &quot;den .\\&quot;,&quot; ## [625] &quot;die hand&quot; &quot;der aufseher&quot; ## [627] &quot;die hand&quot; &quot;die frau&quot; ## [629] &quot;den war&quot; &quot;der stimme&quot; ## [631] &quot;den handschlag&quot; &quot;das wertlose&quot; ## [633] &quot;der tür&quot; &quot;den .\\&quot;,&quot; ## [635] &quot;der nicht&quot; &quot;das ist&quot; ## [637] &quot;den gesenkten&quot; &quot;der tür&quot; ## [639] &quot;das ist&quot; &quot;das fräulein&quot; ## [641] &quot;dem frühen&quot; &quot;die tür&quot; ## [643] &quot;der offenen&quot; &quot;der mond&quot; ## [645] &quot;das dunkle&quot; &quot;die bluse&quot; ## [647] &quot;der fensterklinke&quot; &quot;die polster&quot; ## [649] &quot;das fräulein&quot; &quot;die verantwortung&quot; ## [651] &quot;das kann&quot; &quot;den ,&quot; ## [653] &quot;das alles&quot; &quot;der sein&quot; ## [655] &quot;den lassen&quot; &quot;dem fräulein&quot; ## [657] &quot;das einzige&quot; &quot;das sie&quot; ## [659] &quot;das fräulein&quot; &quot;den ,&quot; ## [661] &quot;dem fräulein&quot; &quot;das fräulein&quot; ## [663] &quot;die er&quot; &quot;dem fräulein&quot; ## [665] &quot;den ,&quot; &quot;des mieters&quot; ## [667] &quot;die pension&quot; &quot;die reinheit&quot; ## [669] &quot;die spalte&quot; &quot;der tür&quot; ## [671] &quot;die pension&quot; &quot;die tür&quot; ## [673] &quot;den .\\&quot;,&quot; &quot;die müden&quot; ## [675] &quot;den ,&quot; &quot;das entsetzlich&quot; ## [677] &quot;den verdacht&quot; &quot;die wohnung&quot; ## [679] &quot;der vorfälle&quot; &quot;des hinausschauens&quot; ## [681] &quot;die leere&quot; &quot;den war&quot; ## [683] &quot;das kanapee&quot; &quot;dem er&quot; ## [685] &quot;die tür&quot; &quot;den ,&quot; ## [687] &quot;der die&quot; &quot;dem kanapee&quot; ## [689] &quot;die ankunft&quot; &quot;des fräulein&quot; ## [691] &quot;den und&quot; &quot;den abschluß&quot; ## [693] &quot;den für&quot; &quot;des konnte&quot; ## [695] &quot;das weinlokal&quot; &quot;dem elsa&quot; ## [697] &quot;der unterredung&quot; &quot;der ,&quot; ## [699] &quot;die gekommen&quot; &quot;die tür&quot; ## [701] &quot;das k.&quot; &quot;das elektrische&quot; ## [703] &quot;dem dunklen&quot; &quot;den anschein&quot; ## [705] &quot;den türspalt&quot; &quot;die hand&quot; ## [707] &quot;das jetzt&quot; &quot;der anlaß&quot; ## [709] &quot;das ,&quot; &quot;das wäre&quot; ## [711] &quot;der leute&quot; &quot;das licht&quot; ## [713] &quot;die ottomane&quot; &quot;der müdigkeit&quot; ## [715] &quot;der sie&quot; &quot;die beine&quot; ## [717] &quot;den vielleicht&quot; &quot;die sache&quot; ## [719] &quot;den ,&quot; &quot;das erleichtert&quot; ## [721] &quot;den ,&quot; &quot;des zimmers&quot; ## [723] &quot;der zum&quot; &quot;die augen&quot; ## [725] &quot;die art&quot; &quot;der es&quot; ## [727] &quot;das eigentlich&quot; &quot;den .\\&quot;,&quot; ## [729] &quot;die entschuldigung&quot; &quot;die sie&quot; ## [731] &quot;den kann&quot; &quot;die flachen&quot; ## [733] &quot;die hüften&quot; &quot;das zimmer&quot; ## [735] &quot;der matte&quot; &quot;den photographien&quot; ## [737] &quot;das ist&quot; &quot;den beamten&quot; ## [739] &quot;der seine&quot; &quot;den photographien&quot; ## [741] &quot;der sich&quot; &quot;die untersuchungskommission&quot; ## [743] &quot;der eine&quot; &quot;den ich&quot; ## [745] &quot;der bank&quot; &quot;die photographien&quot; ## [747] &quot;die hand&quot; &quot;das fräulein&quot; ## [749] &quot;den blick&quot; &quot;das fräulein&quot; ## [751] &quot;das fräulein&quot; &quot;das fräulein&quot; ## [753] &quot;dem man&quot; &quot;den leib&quot; ## [755] &quot;dem gefängnis&quot; &quot;die untersuchungskommission&quot; ## [757] &quot;der doch&quot; &quot;das kann&quot; ## [759] &quot;das habe&quot; &quot;das gericht&quot; ## [761] &quot;das ist&quot; &quot;den mir&quot; ## [763] &quot;das könnte&quot; &quot;der zumindest&quot; ## [765] &quot;dem halben&quot; &quot;dem sie&quot; ## [767] &quot;die sache&quot; &quot;das ist&quot; ## [769] &quot;der haken&quot; &quot;das weiß&quot; ## [771] &quot;den photographien&quot; &quot;den hatten&quot; ## [773] &quot;der ottomane&quot; &quot;der .\\&quot;,&quot; ## [775] &quot;des fräulein&quot; &quot;die das&quot; ## [777] &quot;der ellbogen&quot; &quot;dem kissen&quot; ## [779] &quot;der ottomane&quot; &quot;die andere&quot; ## [781] &quot;die hüfte&quot; &quot;das ist&quot; ## [783] &quot;das werden&quot; &quot;das nachttischchen&quot; ## [785] &quot;das dürfen&quot; &quot;den zu&quot; ## [787] &quot;das tischchen&quot; &quot;das tischchen&quot; ## [789] &quot;die mitte&quot; &quot;des zimmers&quot; ## [791] &quot;die verteilung&quot; &quot;der personen&quot; ## [793] &quot;der aufseher&quot; &quot;dem koffer&quot; ## [795] &quot;den photographien&quot; &quot;der fensterklinke&quot; ## [797] &quot;die wichtigste&quot; &quot;dem tischchen&quot; ## [799] &quot;der aufseher&quot; &quot;die beine&quot; ## [801] &quot;den arm&quot; &quot;die lehne&quot; ## [803] &quot;der aufseher&quot; &quot;der ,&quot; ## [805] &quot;den er&quot; &quot;die lachend&quot; ## [807] &quot;den zeigefinger&quot; &quot;den mund&quot; ## [809] &quot;der rolle&quot; &quot;der ruf&quot; ## [811] &quot;dem er&quot; &quot;die tür&quot; ## [813] &quot;des nebenzimmers&quot; &quot;die hand&quot; ## [815] &quot;die vorfälle&quot; &quot;des morgens&quot; ## [817] &quot;das mädchen&quot; &quot;dem er&quot; ## [819] &quot;das wohnzimmer&quot; &quot;dem niemand&quot; ## [821] &quot;das kissen&quot; &quot;der auf&quot; ## [823] &quot;der tür&quot; &quot;die andere&quot; ## [825] &quot;des zimmers&quot; &quot;die in&quot; ## [827] &quot;der hauptmann&quot; &quot;den ihrer&quot; ## [829] &quot;die erklärung&quot; &quot;der öffentlichkeit&quot; ## [831] &quot;den und&quot; &quot;das vertrauen&quot; ## [833] &quot;den boden&quot; &quot;den blick&quot; ## [835] &quot;den ,&quot; &quot;das plötzliche&quot; ## [837] &quot;den ,&quot; &quot;die folgen&quot; ## [839] &quot;die die&quot; &quot;des hauptmannes&quot; ## [841] &quot;der nähe&quot; &quot;der tür&quot; ## [843] &quot;die verantwortung&quot; &quot;dem .\\&quot;,&quot; ## [845] &quot;den guten&quot; &quot;die ich&quot; ## [847] &quot;den wenigen&quot; &quot;die sie&quot; ## [849] &quot;den .\\&quot;,&quot; &quot;der hand&quot; ## [851] &quot;dem böse&quot; &quot;der nach&quot; ## [853] &quot;der tür&quot; &quot;den ,&quot; ## [855] &quot;die tür&quot; &quot;die tür&quot; ## [857] &quot;des hauptmanns&quot; &quot;der ein&quot; ## [859] &quot;den mund&quot; &quot;das ganze&quot; ## [861] &quot;der zunge&quot; &quot;das endlich&quot; ## [863] &quot;den hals&quot; &quot;die gurgel&quot; ## [865] &quot;die lippen&quot; &quot;dem zimmer&quot; ## [867] &quot;des hauptmanns&quot; &quot;die hand&quot; ## [869] &quot;dem einschlafen&quot; &quot;den ,&quot; ## [871] &quot;des hauptmanns&quot; &quot;den ,&quot; ## [873] &quot;den würde&quot; &quot;der folgen&quot; ## [875] &quot;den .\\&quot;,&quot; &quot;den prozeß&quot; ## [877] &quot;die untersuchungen&quot; &quot;der hinsicht&quot; ## [879] &quot;der damit&quot; &quot;den ausweg&quot; ## [881] &quot;den ,&quot; &quot;die bestimmung&quot; ## [883] &quot;des sonntags&quot; &quot;den sei&quot; ## [885] &quot;die untersuchungen&quot; &quot;der nacht&quot; ## [887] &quot;die nummer&quot; &quot;des hauses&quot; ## [889] &quot;dem er&quot; &quot;den solle&quot; ## [891] &quot;der k.&quot; &quot;den hörer&quot; ## [893] &quot;der prozeß&quot; &quot;dem entgegenstellen&quot; ## [895] &quot;die letzte&quot; &quot;die stimme&quot; ## [897] &quot;des direktor-stellvertreters&quot; &quot;der telephonieren&quot; ## [899] &quot;dem aber&quot; &quot;den weg&quot; ## [901] &quot;der direktor-stellvertreter&quot; &quot;der direktor-stellvertreter&quot; ## [903] &quot;den hörer&quot; &quot;die telephonische&quot; ## [905] &quot;das hörrohr&quot; &quot;das vergnügen&quot; ## [907] &quot;der direktor-stellvertreter&quot; &quot;des direktor-stellvertreters&quot; ## [909] &quot;dem er&quot; &quot;der bank&quot; ## [911] &quot;den war&quot; &quot;der wenigstens&quot; ## [913] &quot;dem zweithöchsten&quot; &quot;der bank&quot; ## [915] &quot;des direktor-stellvertreters&quot; &quot;der telephonischen&quot; ## [917] &quot;das hörrohr&quot; &quot;der sonntag&quot; ## [919] &quot;der direktor-stellvertreter&quot; &quot;dem telephonischen&quot; ## [921] &quot;das gerade&quot; &quot;den war&quot; ## [923] &quot;die ganze&quot; &quot;dem apparat&quot; ## [925] &quot;der direktor-stellvertreter&quot; &quot;den ,&quot; ## [927] &quot;der direktor-stellvertreter&quot; &quot;der direktor-stellvertreter&quot; ## [929] &quot;die nacht&quot; &quot;die verschiedenen&quot; ## [931] &quot;die er&quot; &quot;der woche&quot; ## [933] &quot;die ihm&quot; &quot;die drei&quot; ## [935] &quot;die ersten&quot; &quot;der terrasse&quot; ## [937] &quot;die brüstung&quot; &quot;der k.&quot; ## [939] &quot;der ,&quot; &quot;der geringsten&quot; ## [941] &quot;den hilfe&quot; &quot;den in&quot; ## [943] &quot;die geringste&quot; &quot;der untersuchungskommission&quot; ## [945] &quot;das haus&quot; &quot;der ferne&quot; ## [947] &quot;das er&quot; &quot;der an&quot; ## [949] &quot;dem eingang&quot; &quot;die juliusstraße&quot; ## [951] &quot;der es&quot; &quot;den seiten&quot; ## [953] &quot;die meisten&quot; &quot;der hielten&quot; ## [955] &quot;der vorsichtig&quot; &quot;den fensterrand&quot; ## [957] &quot;dem flüchtig&quot; &quot;der zerraufte&quot; ## [959] &quot;der über&quot; &quot;die gasse&quot; ## [961] &quot;den sich&quot; &quot;der langen&quot; ## [963] &quot;dem straßenniveau&quot; &quot;den mit&quot; ## [965] &quot;der standen&quot; &quot;den stufen&quot; ## [967] &quot;der seine&quot; &quot;den fenstern&quot; ## [969] &quot;die gasse&quot; &quot;der als&quot; ## [971] &quot;der untersuchungsrichter&quot; &quot;den habe&quot; ## [973] &quot;das haus&quot; &quot;die toreinfahrt&quot; ## [975] &quot;die zu&quot; &quot;den verschiedenen&quot; ## [977] &quot;die jetzt&quot; &quot;den großen&quot; ## [979] &quot;dem bankgeschäft&quot; &quot;des hofes&quot; ## [981] &quot;das wasser&quot; &quot;des hofes&quot; ## [983] &quot;dem die&quot; &quot;die arbeit&quot; ## [985] &quot;der treppe&quot; &quot;der still&quot; ## [987] &quot;des hofes&quot; &quot;die lage&quot; ## [989] &quot;des zimmers&quot; &quot;der gleichgültigkeit&quot; ## [991] &quot;der man&quot; &quot;das sehr&quot; ## [993] &quot;die treppe&quot; &quot;den ausspruch&quot; ## [995] &quot;des wächters&quot; &quot;das gericht&quot; ## [997] &quot;der schuld&quot; &quot;das untersuchungszimmer&quot; ## [999] &quot;der treppe&quot; &quot;die k.&quot; ## [1001] &quot;der ,&quot; &quot;die auf&quot; ## [1003] &quot;der treppe&quot; &quot;der hergehen&quot; ## [1005] &quot;der zuckerwerk&quot; &quot;der den&quot; ## [1007] &quot;dem ersten&quot; &quot;den verzwickten&quot; ## [1009] &quot;den beinkleidern&quot; &quot;die eigentliche&quot; ## [1011] &quot;der untersuchungskommission&quot; &quot;der name&quot; ## [1013] &quot;der hauptmann&quot; &quot;der neffe&quot; ## [1015] &quot;der frau&quot; &quot;die möglichkeit&quot; ## [1017] &quot;die zimmer&quot; &quot;das meistens&quot; ## [1019] &quot;den offen&quot; &quot;die kinder&quot; ## [1021] &quot;der regel&quot; &quot;der freien&quot; ## [1023] &quot;dem herd&quot; &quot;den die&quot; ## [1025] &quot;der noch&quot; &quot;der leute&quot; ## [1027] &quot;die sich&quot; &quot;den wohnungen&quot; ## [1029] &quot;die frage&quot; &quot;dem ,&quot; ## [1031] &quot;der sich&quot; &quot;dem bett&quot; ## [1033] &quot;der herr&quot; &quot;der aus&quot; ## [1035] &quot;dem bett&quot; &quot;die untersuchungskommission&quot; ## [1037] &quot;den tischler&quot; &quot;den ,&quot; ## [1039] &quot;der aber&quot; &quot;der einen&quot; ## [1041] &quot;der mit&quot; &quot;der sie&quot; ## [1043] &quot;der begleiteten&quot; &quot;der wo&quot; ## [1045] &quot;der bessere&quot; &quot;die stockwerke&quot; ## [1047] &quot;der ihm&quot; &quot;dem fünften&quot; ## [1049] &quot;die suche&quot; &quot;der ihn&quot; ## [1051] &quot;der das&quot; &quot;die erste&quot; ## [1053] &quot;des fünften&quot; &quot;das erste&quot; ## [1055] &quot;dem kleinen&quot; &quot;die schon&quot; ## [1057] &quot;den augen&quot; &quot;die gerade&quot; ## [1059] &quot;der nassen&quot; &quot;die offene&quot; ## [1061] &quot;des nebenzimmers&quot; &quot;der verschiedensten&quot; ## [1063] &quot;den eintretenden&quot; &quot;das knapp&quot; ## [1065] &quot;der decke&quot; &quot;die gleichfalls&quot; ## [1067] &quot;die leute&quot; &quot;die decke&quot; ## [1069] &quot;dem die&quot; &quot;der hinaus&quot; ## [1071] &quot;der jungen&quot; &quot;die ihn&quot; ## [1073] &quot;den hatte&quot; &quot;die frau&quot; ## [1075] &quot;die frau&quot; &quot;die türklinke&quot; ## [1077] &quot;der hinein&quot; &quot;die sich&quot; ## [1079] &quot;der tür&quot; &quot;der eine&quot; ## [1081] &quot;den ,&quot; &quot;den die&quot; ## [1083] &quot;des geldaufzählens&quot; &quot;der andere&quot; ## [1085] &quot;die augen&quot; &quot;dem durcheinanderwimmelnden&quot; ## [1087] &quot;der möglicherweise&quot; &quot;den ersten&quot; ## [1089] &quot;die rücken&quot; &quot;den und&quot; ## [1091] &quot;die meisten&quot; &quot;den feiertagsröcken&quot; ## [1093] &quot;das ganze&quot; &quot;des saales&quot; ## [1095] &quot;dem k.&quot; &quot;der quere&quot; ## [1097] &quot;des podiums&quot; &quot;der mann&quot; ## [1099] &quot;der sich&quot; &quot;den ellbogen&quot; ## [1101] &quot;die sessellehne&quot; &quot;die beine&quot; ## [1103] &quot;den arm&quot; &quot;die luft&quot; ## [1105] &quot;den .\\&quot;,&quot; &quot;der junge&quot; ## [1107] &quot;der k.&quot; &quot;den fußspitzen&quot; ## [1109] &quot;dem mann&quot; &quot;den zu&quot; ## [1111] &quot;der leute&quot; &quot;dem podium&quot; ## [1113] &quot;den jungen&quot; &quot;der mann&quot; ## [1115] &quot;der mann&quot; &quot;der rechten&quot; ## [1117] &quot;der mann&quot; &quot;den saal&quot; ## [1119] &quot;das murren&quot; &quot;der mann&quot; ## [1121] &quot;die leute&quot; &quot;der galerie&quot; ## [1123] &quot;dem halbdunkel&quot; &quot;den konnte&quot; ## [1125] &quot;die unten&quot; &quot;die sie&quot; ## [1127] &quot;den kopf&quot; &quot;die zimmerdecke&quot; ## [1129] &quot;den ,&quot; &quot;die verteidigung&quot; ## [1131] &quot;der aus&quot; &quot;der rechten&quot; ## [1133] &quot;die stille&quot; &quot;der linken&quot; ## [1135] &quot;die gerade&quot; &quot;der sich&quot; ## [1137] &quot;der ,&quot; &quot;das nicht&quot; ## [1139] &quot;die anderen&quot; &quot;der mann&quot; ## [1141] &quot;der das&quot; &quot;der mann&quot; ## [1143] &quot;dem er&quot; &quot;den leuten&quot; ## [1145] &quot;der hand&quot; &quot;den er&quot; ## [1147] &quot;den tisch&quot; &quot;das gedränge&quot; ## [1149] &quot;den tisch&quot; &quot;des untersuchungsrichters&quot; ## [1151] &quot;der untersuchungsrichter&quot; &quot;dem er&quot; ## [1153] &quot;dem mann&quot; &quot;des wort&quot; ## [1155] &quot;dem einzigen&quot; &quot;der form&quot; ## [1157] &quot;der untersuchungsrichter&quot; &quot;dem heft&quot; ## [1159] &quot;der rechten&quot; &quot;das so&quot; ## [1161] &quot;die leute&quot; &quot;den händen&quot; ## [1163] &quot;der galerie&quot; &quot;der ganz&quot; ## [1165] &quot;der wahrscheinlich&quot; &quot;die leute&quot; ## [1167] &quot;der galerie&quot; &quot;der galerie&quot; ## [1169] &quot;den augenbrauen&quot; &quot;die linke&quot; ## [1171] &quot;die leute&quot; &quot;den dort&quot; ## [1173] &quot;dem podium&quot; &quot;den worten&quot; ## [1175] &quot;die oben&quot; &quot;den ,&quot; ## [1177] &quot;dem lärm&quot; &quot;der anderen&quot; ## [1179] &quot;der anderen&quot; &quot;die leute&quot; ## [1181] &quot;der linken&quot; &quot;die übrigens&quot; ## [1183] &quot;die der&quot; &quot;die ruhe&quot; ## [1185] &quot;den begann&quot; &quot;den kopf&quot; ## [1187] &quot;die ganze&quot; &quot;des verfahrens&quot; ## [1189] &quot;das gegen&quot; &quot;den ,&quot; ## [1191] &quot;den augenblick&quot; &quot;den saal&quot; ## [1193] &quot;der dort&quot; &quot;das folgende&quot; ## [1195] &quot;der stille&quot; &quot;der allem&quot; ## [1197] &quot;die tür&quot; &quot;die junge&quot; ## [1199] &quot;die ihre&quot; &quot;die sie&quot; ## [1201] &quot;der untersuchungsrichter&quot; &quot;den worten&quot; ## [1203] &quot;den .\\&quot;,&quot; &quot;den ,&quot; ## [1205] &quot;die galerie&quot; &quot;der pause&quot; ## [1207] &quot;den .\\&quot;,&quot; &quot;der das&quot; ## [1209] &quot;den damit&quot; &quot;der fremden&quot; ## [1211] &quot;das heft&quot; &quot;dem untersuchungsrichter&quot; ## [1213] &quot;den fingerspitzen&quot; &quot;die engbeschriebenen&quot; ## [1215] &quot;das sind&quot; &quot;die akten&quot; ## [1217] &quot;des untersuchungsrichters&quot; &quot;das heft&quot; ## [1219] &quot;den tisch&quot; &quot;die hand&quot; ## [1221] &quot;der es&quot; &quot;den ,&quot; ## [1223] &quot;der untersuchungsrichter&quot; &quot;dem heftchen&quot; ## [1225] &quot;den tisch&quot; &quot;der vornahm&quot; ## [1227] &quot;die gesichter&quot; &quot;der leute&quot; ## [1229] &quot;der ersten&quot; &quot;die entscheidenden&quot; ## [1231] &quot;die die&quot; &quot;die demütigung&quot; ## [1233] &quot;des untersuchungsrichters&quot; &quot;der regungslosigkeit&quot; ## [1235] &quot;der die&quot; &quot;der ersten&quot; ## [1237] &quot;das zeichen&quot; &quot;den und&quot; ## [1239] &quot;der bravo&quot; &quot;die in&quot; ## [1241] &quot;der ersten&quot; &quot;des ausrufs&quot; ## [1243] &quot;die allgemeinheit&quot; &quot;die sache&quot; ## [1245] &quot;der herr&quot; &quot;die öffentliche&quot; ## [1247] &quot;des .\\&quot;,&quot; &quot;den ,&quot; ## [1249] &quot;die tatsache&quot; &quot;der verhaftung&quot; ## [1251] &quot;das gehört&quot; &quot;dem ,&quot; ## [1253] &quot;der untersuchungsrichter&quot; &quot;den befehl&quot; ## [1255] &quot;der ebenso&quot; &quot;das nebenzimmer&quot; ## [1257] &quot;die ohren&quot; &quot;der herauslocken&quot; ## [1259] &quot;dem sie&quot; &quot;den aufseher&quot; ## [1261] &quot;das zimmer&quot; &quot;die ich&quot; ## [1263] &quot;die anwesenheit&quot; &quot;der wächter&quot; ## [1265] &quot;des aufsehers&quot; &quot;den aufseher&quot; ## [1267] &quot;den ich&quot; &quot;dem sessel&quot; ## [1269] &quot;der erwähnten&quot; &quot;des stumpfsinnigsten&quot; ## [1271] &quot;den .\\&quot;,&quot; &quot;das zimmer&quot; ## [1273] &quot;die sich&quot; &quot;der dame&quot; ## [1275] &quot;die anwesenheit&quot; &quot;die nachricht&quot; ## [1277] &quot;der bank&quot; &quot;dem sinne&quot; ## [1279] &quot;den nicht&quot; &quot;der gasse&quot; ## [1281] &quot;das ganze&quot; &quot;den ärger&quot; ## [1283] &quot;dem stillen&quot; &quot;dem in&quot; ## [1285] &quot;der menge&quot; &quot;der herr&quot; ## [1287] &quot;dem von&quot; &quot;die von&quot; ## [1289] &quot;den .\\&quot;,&quot; &quot;das zeichen&quot; ## [1291] &quot;der beifall&quot; &quot;die sache&quot; ## [1293] &quot;die bedeutung&quot; &quot;des zeichens&quot; ## [1295] &quot;den herrn&quot; &quot;dem er&quot; ## [1297] &quot;das nächste&quot; &quot;der ungeduld&quot; ## [1299] &quot;der untersuchungsrichter&quot; &quot;der mann&quot; ## [1301] &quot;dem er&quot; &quot;der zu&quot; ## [1303] &quot;der um&quot; &quot;die leute&quot; ## [1305] &quot;die zwei&quot; &quot;die früher&quot; ## [1307] &quot;dem finger&quot; &quot;den untersuchungsrichter&quot; ## [1309] &quot;der neblige&quot; &quot;der fernerstehenden&quot; ## [1311] &quot;die galeriebesucher&quot; &quot;dem untersuchungsrichter&quot; ## [1313] &quot;die versammlungsteilnehmer&quot; &quot;die antworten&quot; ## [1315] &quot;den im&quot; &quot;der vorgehaltenen&quot; ## [1317] &quot;den war&quot; &quot;der faust&quot; ## [1319] &quot;den tisch&quot; &quot;die köpfe&quot; ## [1321] &quot;des untersuchungsrichters&quot; &quot;der :&quot; ## [1323] &quot;die ganze&quot; &quot;die versammlung&quot; ## [1325] &quot;der wie&quot; &quot;der auf&quot; ## [1327] &quot;dem nächsten&quot; &quot;das angespannte&quot; ## [1329] &quot;der ganzen&quot; &quot;das aufreizender&quot; ## [1331] &quot;der verzückteste&quot; &quot;der verhaftung&quot; ## [1333] &quot;der heutigen&quot; &quot;die nicht&quot; ## [1335] &quot;die günstigsten&quot; &quot;den sind&quot; ## [1337] &quot;die weiterhin&quot; &quot;des unterhält&quot; ## [1339] &quot;dem zahllosen&quot; &quot;dem wort&quot; ## [1341] &quot;der sinn&quot; &quot;den und&quot; ## [1343] &quot;des ganzen&quot; &quot;die schlimmste&quot; ## [1345] &quot;der beamtenschaft&quot; &quot;den ?\\&quot;,&quot; ## [1347] &quot;das ist&quot; &quot;das brächte&quot; ## [1349] &quot;der höchste&quot; &quot;die wächter&quot; ## [1351] &quot;den verhafteten&quot; &quot;die kleider&quot; ## [1353] &quot;den .\\&quot;,&quot; &quot;die wächter&quot; ## [1355] &quot;die man&quot; &quot;das eigentum&quot; ## [1357] &quot;der verhafteten&quot; &quot;das mühsam&quot; ## [1359] &quot;der verhafteten&quot; &quot;die augen&quot; ## [1361] &quot;das trübe&quot; &quot;den dunst&quot; ## [1363] &quot;die waschfrau&quot; &quot;die k.&quot; ## [1365] &quot;der nicht&quot; &quot;der tür&quot; ## [1367] &quot;der mann&quot; &quot;den mund&quot; ## [1369] &quot;die galeriebesucher&quot; &quot;der nähe&quot; ## [1371] &quot;der ernst&quot; &quot;den k.&quot; ## [1373] &quot;die versammlung&quot; &quot;dem ersten&quot; ## [1375] &quot;das paar&quot; &quot;dem saal&quot; ## [1377] &quot;die ersten&quot; &quot;den arm&quot; ## [1379] &quot;das paar&quot; &quot;der verhaftung&quot; ## [1381] &quot;dem gedränge&quot; &quot;die leute&quot; ## [1383] &quot;den schlußfolgerungen&quot; &quot;die verstellung&quot; ## [1385] &quot;die wangen&quot; &quot;die langen&quot; ## [1387] &quot;den bärten&quot; &quot;das war&quot; ## [1389] &quot;die eigentliche&quot; &quot;die k.&quot; ## [1391] &quot;der ,&quot; &quot;die scheinbaren&quot; ## [1393] &quot;die gleichen&quot; &quot;des untersuchungsrichters&quot; ## [1395] &quot;der ,&quot; &quot;die hände&quot; ## [1397] &quot;die arme&quot; &quot;die höhe&quot; ## [1399] &quot;die plötzliche&quot; &quot;die korrupte&quot; ## [1401] &quot;die ich&quot; &quot;der habt&quot; ## [1403] &quot;die verteidigung&quot; &quot;der unschuld&quot; ## [1405] &quot;der aber&quot; &quot;der ich&quot; ## [1407] &quot;den greis&quot; &quot;der sich&quot; ## [1409] &quot;der aber&quot; &quot;der am&quot; ## [1411] &quot;des tisches&quot; &quot;der stille&quot; ## [1413] &quot;der untersuchungsrichter&quot; &quot;der tür&quot; ## [1415] &quot;den untersuchungsrichter&quot; &quot;die tür&quot; ## [1417] &quot;der untersuchungsrichter&quot; &quot;des vorteils&quot; ## [1419] &quot;den ein&quot; &quot;den verhafteten&quot; ## [1421] &quot;dem falle&quot; &quot;die tür&quot; ## [1423] &quot;die tür&quot; &quot;die treppe&quot; ## [1425] &quot;der lärm&quot; &quot;der wieder&quot; ## [1427] &quot;die vorfälle&quot; &quot;den zu&quot; ## [1429] &quot;der student&quot; &quot;die kanzleien&quot; ## [1431] &quot;der nächsten&quot; &quot;die erwartete&quot; ## [1433] &quot;das gleiche&quot; &quot;die gleiche&quot; ## [1435] &quot;der vorgeladen&quot; &quot;der hin&quot; ## [1437] &quot;die sich&quot; &quot;den mehr&quot; ## [1439] &quot;der richtigen&quot; &quot;der bekannten&quot; ## [1441] &quot;die bei&quot; &quot;der tür&quot; ## [1443] &quot;die frau&quot; &quot;die frau&quot; ## [1445] &quot;dem sie&quot; &quot;die tür&quot; ## [1447] &quot;des nebenzimmers&quot; &quot;dem tisch&quot; ## [1449] &quot;der unverändert&quot; &quot;dem podium&quot; ## [1451] &quot;die bücher&quot; &quot;die frau&quot; ## [1453] &quot;der die&quot; &quot;das ist&quot; ## [1455] &quot;die bücher&quot; &quot;dem untersuchungsrichter&quot; ## [1457] &quot;die bücher&quot; &quot;der art&quot; ## [1459] &quot;die frau&quot; &quot;die ihn&quot; ## [1461] &quot;den hatte&quot; &quot;der «&quot; ## [1463] &quot;dem untersuchungsrichter&quot; &quot;den ?\\&quot;,&quot; ## [1465] &quot;die frau&quot; &quot;die frau&quot; ## [1467] &quot;das zimmer&quot; &quot;dem letzthin&quot; ## [1469] &quot;den war&quot; &quot;die frau&quot; ## [1471] &quot;das zimmer&quot; &quot;die stellung&quot; ## [1473] &quot;das zimmer&quot; &quot;den vorfall&quot; ## [1475] &quot;der letzten&quot; &quot;den ich&quot; ## [1477] &quot;die frau&quot; &quot;das nicht&quot; ## [1479] &quot;die mich&quot; &quot;die frau&quot; ## [1481] &quot;der ,&quot; &quot;den ;&quot; ## [1483] &quot;den ,&quot; &quot;die frau&quot; ## [1485] &quot;das schon&quot; &quot;die mir&quot; ## [1487] &quot;den anfang&quot; &quot;des schlusses&quot; ## [1489] &quot;dem studenten&quot; &quot;dem boden&quot; ## [1491] &quot;den .\\&quot;,&quot; &quot;dem untersuchungsrichter&quot; ## [1493] &quot;den sie&quot; &quot;der bestraft&quot; ## [1495] &quot;den .\\&quot;,&quot; &quot;die verbesserungsbedürftigkeit&quot; ## [1497] &quot;den ,&quot; &quot;dem deshalb&quot; ## [1499] &quot;das ?\\&quot;,&quot; &quot;die frau&quot; ## [1501] &quot;dem sie&quot; &quot;die bücher&quot; ## [1503] &quot;dem tisch&quot; &quot;die frau&quot; ## [1505] &quot;der mitte&quot; &quot;die stücke&quot; ## [1507] &quot;die frau&quot; &quot;den büchern&quot; ## [1509] &quot;den staub&quot; &quot;das oberste&quot; ## [1511] &quot;die gemeine&quot; &quot;des zeichners&quot; ## [1513] &quot;die allzu&quot; &quot;dem bilde&quot; ## [1515] &quot;der zuwendeten&quot; &quot;das titelblatt&quot; ## [1517] &quot;des zweiten&quot; &quot;dem titel&quot; ## [1519] &quot;die plagen&quot; &quot;den hatte&quot; ## [1521] &quot;das sind&quot; &quot;die gesetzbücher&quot; ## [1523] &quot;die hier&quot; &quot;den «&quot; ## [1525] &quot;den .\\&quot;,&quot; &quot;die frau&quot; ## [1527] &quot;das wirklich&quot; &quot;dem will&quot; ## [1529] &quot;die frau&quot; &quot;den sie&quot; ## [1531] &quot;die gefahr&quot; &quot;das podium&quot; ## [1533] &quot;die stufe&quot; &quot;dem sie&quot; ## [1535] &quot;der grund&quot; &quot;das ist&quot; ## [1537] &quot;die gerichtsbeamten&quot; &quot;den beliebigen&quot; ## [1539] &quot;den mit&quot; &quot;der frau&quot; ## [1541] &quot;die niedrigen&quot; &quot;die sich&quot; ## [1543] &quot;das bezweifle&quot; &quot;das größte&quot; ## [1545] &quot;den endgültigen&quot; &quot;des prozesses&quot; ## [1547] &quot;das will&quot; &quot;das nicht&quot; ## [1549] &quot;der gesellschaft&quot; &quot;die ich&quot; ## [1551] &quot;den sich&quot; &quot;den studenten&quot; ## [1553] &quot;das konnte&quot; &quot;die er&quot; ## [1555] &quot;den gefallen&quot; &quot;der erwartung&quot; ## [1557] &quot;dem ,&quot; &quot;das muß&quot; ## [1559] &quot;des prozesses&quot; &quot;des prozesses&quot; ## [1561] &quot;das verfahren&quot; &quot;der vergeßlichkeit&quot; ## [1563] &quot;der vielleicht&quot; &quot;der beamtenschaft&quot; ## [1565] &quot;der in&quot; &quot;der nächsten&quot; ## [1567] &quot;den wird&quot; &quot;den prozeß&quot; ## [1569] &quot;den .\\&quot;,&quot; &quot;die sie&quot; ## [1571] &quot;dem untersuchungsrichter&quot; &quot;der irgend&quot; ## [1573] &quot;dem sonst&quot; &quot;der wichtige&quot; ## [1575] &quot;die herren&quot; &quot;das können&quot; ## [1577] &quot;den herren&quot; &quot;den ,&quot; ## [1579] &quot;die ich&quot; &quot;die anderen&quot; ## [1581] &quot;den untersuchungsrichter&quot; &quot;die frau&quot; ## [1583] &quot;den dachte&quot; &quot;dem glaube&quot; ## [1585] &quot;der bericht&quot; &quot;den er&quot; ## [1587] &quot;die beamten&quot; &quot;die sitzung&quot; ## [1589] &quot;der untersuchungsrichter&quot; &quot;den und&quot; ## [1591] &quot;der an&quot; &quot;die möbel&quot; ## [1593] &quot;der unser&quot; &quot;den untersuchungsrichter&quot; ## [1595] &quot;der nacht&quot; &quot;der nacht&quot; ## [1597] &quot;dem bett&quot; &quot;der untersuchungsrichter&quot; ## [1599] &quot;die lampe&quot; &quot;der hand&quot; ## [1601] &quot;das licht&quot; &quot;der untersuchungsrichter&quot; ## [1603] &quot;die lampe&quot; &quot;den anblick&quot; ## [1605] &quot;den habe&quot; &quot;dem allem&quot; ## [1607] &quot;der untersuchungsrichter&quot; &quot;der hauptgegenstände&quot; ## [1609] &quot;der sonntäglichen&quot; &quot;dem aber&quot; ## [1611] &quot;dem vorfall&quot; &quot;der untersuchungsrichter&quot; ## [1613] &quot;der ersten&quot; &quot;den studenten&quot; ## [1615] &quot;dem er&quot; &quot;der sein&quot; ## [1617] &quot;das sitzungszimmer&quot; &quot;das ist&quot; ## [1619] &quot;die beine&quot; &quot;die röcke&quot; ## [1621] &quot;die strümpfe&quot; &quot;den blick&quot; ## [1623] &quot;der tür&quot; &quot;des sitzungszimmers&quot; ## [1625] &quot;dem er&quot; &quot;die finger&quot; ## [1627] &quot;der erste&quot; &quot;der unbekannten&quot; ## [1629] &quot;dem er&quot; &quot;der wahrscheinlich&quot; ## [1631] &quot;der student&quot; &quot;den er&quot; ## [1633] &quot;der frau&quot; &quot;die frau&quot; ## [1635] &quot;die frau&quot; &quot;der verlockung&quot; ## [1637] &quot;den flüchtigen&quot; &quot;die frau&quot; ## [1639] &quot;das gericht&quot; &quot;das ganze&quot; ## [1641] &quot;dem untersuchungsrichter&quot; &quot;der fall&quot; ## [1643] &quot;der untersuchungsrichter&quot; &quot;das bett&quot; ## [1645] &quot;der frau&quot; &quot;dem er&quot; ## [1647] &quot;die bedenken&quot; &quot;die frau&quot; ## [1649] &quot;das leise&quot; &quot;den knöcheln&quot; ## [1651] &quot;das podium&quot; &quot;der faust&quot; ## [1653] &quot;der student&quot; &quot;die schulter&quot; ## [1655] &quot;der frau&quot; &quot;die frau&quot; ## [1657] &quot;den kopf&quot; &quot;den hals&quot; ## [1659] &quot;den wesentlich&quot; &quot;die tyrannei&quot; ## [1661] &quot;die der&quot; &quot;den klagen&quot; ## [1663] &quot;der frau&quot; &quot;dem studenten&quot; ## [1665] &quot;der student&quot; &quot;das schon&quot; ## [1667] &quot;der hochmut&quot; &quot;des künftigen&quot; ## [1669] &quot;der zu&quot; &quot;das ist&quot; ## [1671] &quot;der frau&quot; &quot;den übrigens&quot; ## [1673] &quot;den .\\&quot;,&quot; &quot;den allein&quot; ## [1675] &quot;die sie&quot; &quot;der student&quot; ## [1677] &quot;der frau&quot; &quot;dem untersuchungsrichter&quot; ## [1679] &quot;den verhören&quot; &quot;der untersuchungsrichter&quot; ## [1681] &quot;den «&quot; &quot;die hand&quot; ## [1683] &quot;der frau&quot; &quot;der student&quot; ## [1685] &quot;die bekommen&quot; &quot;die man&quot; ## [1687] &quot;dem wagte&quot; &quot;dem er&quot; ## [1689] &quot;der freien&quot; &quot;den arm&quot; ## [1691] &quot;der frau&quot; &quot;die frau&quot; ## [1693] &quot;der untersuchungsrichter&quot; &quot;dem studenten&quot; ## [1695] &quot;der hand&quot; &quot;den !\\&quot;,&quot; ## [1697] &quot;die hand&quot; &quot;die schulter&quot; ## [1699] &quot;des studenten&quot; &quot;der mit&quot; ## [1701] &quot;den zähnen&quot; &quot;die frau&quot; ## [1703] &quot;den händen&quot; &quot;das nicht&quot; ## [1705] &quot;das wäre&quot; &quot;den befehl&quot; ## [1707] &quot;des untersuchungsrichters&quot; &quot;dem studenten&quot; ## [1709] &quot;den rücken&quot; &quot;das die&quot; ## [1711] &quot;die er&quot; &quot;die niederlage&quot; ## [1713] &quot;den kampf&quot; &quot;dem dieser&quot; ## [1715] &quot;den mit&quot; &quot;die allerlächerlichste&quot; ## [1717] &quot;die es&quot; &quot;den um&quot; ## [1719] &quot;den studenten&quot; &quot;die frau&quot; ## [1721] &quot;der student&quot; &quot;die straßen&quot; ## [1723] &quot;dem arm&quot; &quot;der weg&quot; ## [1725] &quot;der wohnung&quot; &quot;den ,&quot; ## [1727] &quot;der student&quot; &quot;die frau&quot; ## [1729] &quot;das bisherige&quot; &quot;die frau&quot; ## [1731] &quot;der hand&quot; &quot;der schultern&quot; ## [1733] &quot;der entführung&quot; &quot;der verraten&quot; ## [1735] &quot;die enttäuschung&quot; &quot;den könne&quot; ## [1737] &quot;die zwei&quot; &quot;den ,&quot; ## [1739] &quot;der tür&quot; &quot;die frau&quot; ## [1741] &quot;der angabe&quot; &quot;der untersuchungsrichter&quot; ## [1743] &quot;dem dachboden&quot; &quot;die holztreppe&quot; ## [1745] &quot;dem aufgang&quot; &quot;den gerichtskanzleien&quot; ## [1747] &quot;dem dachboden&quot; &quot;die gerichtskanzleien&quot; ## [1749] &quot;das war&quot; &quot;die viel&quot; ## [1751] &quot;den ,&quot; &quot;die mietsparteien&quot; ## [1753] &quot;die schon&quot; &quot;den ärmsten&quot; ## [1755] &quot;die beamtenschaft&quot; &quot;das war&quot; ## [1757] &quot;den bisherigen&quot; &quot;des gerichtes&quot; ## [1759] &quot;der ,&quot; &quot;die armut&quot; ## [1761] &quot;des gerichtes&quot; &quot;den angeklagten&quot; ## [1763] &quot;den dachboden&quot; &quot;den und&quot; ## [1765] &quot;dem richter&quot; &quot;der auf&quot; ## [1767] &quot;dem dachboden&quot; &quot;der bank&quot; ## [1769] &quot;den belebten&quot; &quot;der unterschlagungen&quot; ## [1771] &quot;dem arm&quot; &quot;dem anschlagzettel&quot; ## [1773] &quot;die treppe&quot; &quot;die offene&quot; ## [1775] &quot;dem man&quot; &quot;das sitzungszimmer&quot; ## [1777] &quot;der gerichtsdiener&quot; &quot;der mann&quot; ## [1779] &quot;der angeklagte&quot; &quot;der es&quot; ## [1781] &quot;die hand&quot; &quot;der gerichtsdiener&quot; ## [1783] &quot;den zivilrock&quot; &quot;des gerichtsdieners&quot; ## [1785] &quot;der als&quot; &quot;die von&quot; ## [1787] &quot;der student&quot; &quot;der gerichtsdiener&quot; ## [1789] &quot;die hoffnung&quot; &quot;dem amt&quot; ## [1791] &quot;dem ich&quot; &quot;den türspalt&quot; ## [1793] &quot;den haben&quot; &quot;der zurück&quot; ## [1795] &quot;der student&quot; &quot;die bodentreppe&quot; ## [1797] &quot;den studenten&quot; &quot;der wand&quot; ## [1799] &quot;dem anschlagzettel&quot; &quot;dem fußboden&quot; ## [1801] &quot;die arme&quot; &quot;die finger&quot; ## [1803] &quot;die krummen&quot; &quot;der gerichtsdiener&quot; ## [1805] &quot;die eifersucht&quot; &quot;der gerichtsdiener&quot; ## [1807] &quot;die größte&quot; &quot;die er&quot; ## [1809] &quot;den .\\&quot;,&quot; &quot;die schönste&quot; ## [1811] &quot;der gerichtsdiener&quot; &quot;den studenten&quot; ## [1813] &quot;der ein&quot; &quot;den gefallen&quot; ## [1815] &quot;der gerichtsdiener&quot; &quot;den ausgang&quot; ## [1817] &quot;des prozesses&quot; &quot;die voruntersuchung&quot; ## [1819] &quot;der gerichtsdiener&quot; &quot;die ansicht&quot; ## [1821] &quot;den aber&quot; &quot;der regel&quot; ## [1823] &quot;das soll&quot; &quot;den studenten&quot; ## [1825] &quot;der gerichtsdiener&quot; &quot;die erfüllbarkeit&quot; ## [1827] &quot;den vielleicht&quot; &quot;das gleiche&quot; ## [1829] &quot;der gerichtsdiener&quot; &quot;das gespräch&quot; ## [1831] &quot;den zu&quot; &quot;dem er&quot; ## [1833] &quot;der kanzlei&quot; &quot;den .\\&quot;,&quot; ## [1835] &quot;die kanzleien&quot; &quot;der gerichtsdiener&quot; ## [1837] &quot;der gerichtsdiener&quot; &quot;die treppe&quot; ## [1839] &quot;der tür&quot; &quot;das publikum&quot; ## [1841] &quot;der gerichtsdiener&quot; &quot;das wartezimmer&quot; ## [1843] &quot;dem aus&quot; &quot;den einzelnen&quot; ## [1845] &quot;des dachbodens&quot; &quot;den gang&quot; ## [1847] &quot;die einiges&quot; &quot;die man&quot; ## [1849] &quot;der geradezu&quot; &quot;den und&quot; ## [1851] &quot;die lücken&quot; &quot;die leute&quot; ## [1853] &quot;dem gang&quot; &quot;dem gang&quot; ## [1855] &quot;der saßen&quot; &quot;den zwei&quot; ## [1857] &quot;die zu&quot; &quot;den seiten&quot; ## [1859] &quot;des ganges&quot; &quot;die meisten&quot; ## [1861] &quot;dem gesichtsausdruck&quot; &quot;der haltung&quot; ## [1863] &quot;der barttracht&quot; &quot;den kleinen&quot; ## [1865] &quot;den höheren&quot; &quot;den waren&quot; ## [1867] &quot;die hüte&quot; &quot;dem beispiel&quot; ## [1869] &quot;des anderen&quot; &quot;die bank&quot; ## [1871] &quot;die ,&quot; &quot;der tür&quot; ## [1873] &quot;den gerichtsdiener&quot; &quot;das die&quot; ## [1875] &quot;den sahen&quot; &quot;der beiden&quot; ## [1877] &quot;den niemals&quot; &quot;der rücken&quot; ## [1879] &quot;die knie&quot; &quot;den wie&quot; ## [1881] &quot;den ein&quot; &quot;den gerichtsdiener&quot; ## [1883] &quot;die sein&quot; &quot;der gerichtsdiener&quot; ## [1885] &quot;die sie&quot; &quot;den nächsten&quot; ## [1887] &quot;die unerwartete&quot; &quot;den mann&quot; ## [1889] &quot;der anderswo&quot; &quot;die überlegenheit&quot; ## [1891] &quot;die er&quot; &quot;die anderen&quot; ## [1893] &quot;der gerichtsdiener&quot; &quot;den mann&quot; ## [1895] &quot;der herr&quot; &quot;die ihm&quot; ## [1897] &quot;des gerichtsdieners&quot; &quot;die fragestellung&quot; ## [1899] &quot;die fortsetzung&quot; &quot;der wartenden&quot; ## [1901] &quot;den die&quot; &quot;der gerichtsdiener&quot; ## [1903] &quot;den gang&quot; &quot;der gefragte&quot; ## [1905] &quot;die erledigung&quot; &quot;der mann&quot; ## [1907] &quot;der denkt&quot; &quot;den will&quot; ## [1909] &quot;der einen&quot; &quot;das für&quot; ## [1911] &quot;der mann&quot; &quot;der in&quot; ## [1913] &quot;der mann&quot; &quot;der antwort&quot; ## [1915] &quot;das demütige&quot; &quot;des mannes&quot; ## [1917] &quot;dem schrie&quot; &quot;der mann&quot; ## [1919] &quot;den zange&quot; &quot;die bank&quot; ## [1921] &quot;die meisten&quot; &quot;der gerichtsdiener&quot; ## [1923] &quot;den um&quot; &quot;den mann&quot; ## [1925] &quot;der schon&quot; &quot;den zwischenfall&quot; ## [1927] &quot;der hauptsächlich&quot; &quot;der farbe&quot; ## [1929] &quot;der hand&quot; &quot;der wächter&quot; ## [1931] &quot;der wegen&quot; &quot;des schreiens&quot; ## [1933] &quot;dem vorgefallenen&quot; &quot;der gerichtsdiener&quot; ## [1935] &quot;der wächter&quot; &quot;die gesellschaft&quot; ## [1937] &quot;dem gang&quot; &quot;der hälfte&quot; ## [1939] &quot;des ganges&quot; &quot;die möglichkeit&quot; ## [1941] &quot;dem gerichtsdiener&quot; &quot;das der&quot; ## [1943] &quot;der gerichtsdiener&quot; &quot;der zwei&quot; ## [1945] &quot;dem gerichtsdiener&quot; &quot;den anschein&quot; ## [1947] &quot;den gerichtsdiener&quot; &quot;der zurück&quot; ## [1949] &quot;der gerichtsdiener&quot; &quot;der sich&quot; ## [1951] &quot;der gerichtsdiener&quot; &quot;den gang&quot; ## [1953] &quot;den weg&quot; &quot;der einzige&quot; ## [1955] &quot;der gerichtsdiener&quot; &quot;der mit&quot; ## [1957] &quot;den gerichtsdiener&quot; &quot;der gerichtsdiener&quot; ## [1959] &quot;der warten&quot; &quot;der zurückgehen&quot; ## [1961] &quot;dem raum&quot; &quot;dem er&quot; ## [1963] &quot;der vielen&quot; &quot;die ringsherum&quot; ## [1965] &quot;den ,&quot; &quot;das wohl&quot; ## [1967] &quot;der herr&quot; &quot;der ferne&quot; ## [1969] &quot;den gerichtsdiener&quot; &quot;die beamtenschaft&quot; ## [1971] &quot;die einzig&quot; &quot;die ,&quot; ## [1973] &quot;das datum&quot; &quot;des nächsten&quot; ## [1975] &quot;der ,&quot; &quot;dem verlangen&quot; ## [1977] &quot;das innere&quot; &quot;dem ,&quot; ## [1979] &quot;der verfassung&quot; &quot;der tür&quot; ## [1981] &quot;dem gerichtsdiener&quot; &quot;der allein&quot; ## [1983] &quot;das mädchen&quot; &quot;der gerichtsdiener&quot; ## [1985] &quot;der nächsten&quot; &quot;die sie&quot; ## [1987] &quot;der türöffnung&quot; &quot;der mann&quot; ## [1989] &quot;den k.&quot; &quot;der ferne&quot; ## [1991] &quot;der niedrigen&quot; &quot;den fußspitzen&quot; ## [1993] &quot;das mädchen&quot; &quot;das benehmen&quot; ## [1995] &quot;die ellbogen&quot; &quot;die lehnen&quot; ## [1997] &quot;den strengen&quot; &quot;das ist&quot; ## [1999] &quot;der bekommt&quot; &quot;das ist&quot; ## [2001] &quot;die sonne&quot; &quot;das dachgerüst&quot; ## [2003] &quot;das heiße&quot; &quot;die luft&quot; ## [2005] &quot;der ort&quot; &quot;die luft&quot; ## [2007] &quot;das ist&quot; &quot;der tag&quot; ## [2009] &quot;den mietern&quot; &quot;den sie&quot; ## [2011] &quot;die luft&quot; &quot;der drittenmal&quot; ## [2013] &quot;den sie&quot; &quot;das drückende&quot; ## [2015] &quot;den leuten&quot; &quot;die ursachen&quot; ## [2017] &quot;das mädchen&quot; &quot;die an&quot; ## [2019] &quot;der wand&quot; &quot;die gerade&quot; ## [2021] &quot;das mädchen&quot; &quot;die luke&quot; ## [2023] &quot;der zuziehen&quot; &quot;die hände&quot; ## [2025] &quot;das selbst&quot; &quot;das mußte&quot; ## [2027] &quot;das mädchen&quot; &quot;den verkehr&quot; ## [2029] &quot;den blicken&quot; &quot;dem mann&quot; ## [2031] &quot;der tür&quot; &quot;der auch&quot; ## [2033] &quot;das wollte&quot; &quot;den ,&quot; ## [2035] &quot;den ,&quot; &quot;den .\\&quot;,&quot; ## [2037] &quot;das bequeme&quot; &quot;der nieder&quot; ## [2039] &quot;den gerichtsdiener&quot; &quot;der ihn&quot; ## [2041] &quot;der schien&quot; &quot;dem mädchen&quot; ## [2043] &quot;dem mann&quot; &quot;die vor&quot; ## [2045] &quot;den ,&quot; &quot;den gerichtsdiener&quot; ## [2047] &quot;den .\\&quot;,&quot; &quot;der mann&quot; ## [2049] &quot;der übrigens&quot; &quot;die in&quot; ## [2051] &quot;das unwohlsein&quot; &quot;des herrn&quot; ## [2053] &quot;die atmosphäre&quot; &quot;den kanzleien&quot; ## [2055] &quot;das ist&quot; &quot;die rede&quot; ## [2057] &quot;des mannes&quot; &quot;den ,&quot; ## [2059] &quot;den achseln&quot; &quot;die stufen&quot; ## [2061] &quot;die freundlichkeit&quot; &quot;die schultern&quot; ## [2063] &quot;den beiden&quot; &quot;die arme&quot; ## [2065] &quot;der mann&quot; &quot;der aufforderung&quot; ## [2067] &quot;die hände&quot; &quot;den hosentaschen&quot; ## [2069] &quot;dem mädchen&quot; &quot;das richtige&quot; ## [2071] &quot;dem herrn&quot; &quot;das mädchen&quot; ## [2073] &quot;dem mann&quot; &quot;den fingerspitzen&quot; ## [2075] &quot;den arm&quot; &quot;der mann&quot; ## [2077] &quot;den herrn&quot; &quot;das mädchen&quot; ## [2079] &quot;dem sie&quot; &quot;dem lachen&quot; ## [2081] &quot;das mädchen&quot; &quot;der ,&quot; ## [2083] &quot;der traurig&quot; &quot;den ,&quot; ## [2085] &quot;der herr&quot; &quot;die erlaubnis&quot; ## [2087] &quot;der auskunftgeber&quot; &quot;den wartenden&quot; ## [2089] &quot;die sie&quot; &quot;der bevölkerung&quot; ## [2091] &quot;den viele&quot; &quot;das ist&quot; ## [2093] &quot;die elegante&quot; &quot;das heißt&quot; ## [2095] &quot;die beamtenschaft&quot; &quot;den auskunftgeber&quot; ## [2097] &quot;der immerfort&quot; &quot;des würdigen&quot; ## [2099] &quot;der sehr&quot; &quot;die kleidung&quot; ## [2101] &quot;den ,&quot; &quot;den kanzleien&quot; ## [2103] &quot;den auskunftgeber&quot; &quot;die in&quot; ## [2105] &quot;der und&quot; &quot;die leute&quot; ## [2107] &quot;der herr&quot; &quot;dem herrn&quot; ## [2109] &quot;der besser&quot; &quot;die absicht&quot; ## [2111] &quot;des mädchens&quot; &quot;der ihm&quot; ## [2113] &quot;die möglichkeit&quot; &quot;das mittel&quot; ## [2115] &quot;das mädchen&quot; &quot;die zwei&quot; ## [2117] &quot;die hand&quot; &quot;des auskunftgebers&quot; ## [2119] &quot;die hand&quot; &quot;des mädchens&quot; ## [2121] &quot;der auskunftgeber&quot; &quot;den vielmals&quot; ## [2123] &quot;die fremden&quot; &quot;die stellen&quot; ## [2125] &quot;die stütze&quot; &quot;das mädchen&quot; ## [2127] &quot;dem gang&quot; &quot;den auskunftgeber&quot; ## [2129] &quot;die wahrheit&quot; &quot;den anschein&quot; ## [2131] &quot;dem helfen&quot; &quot;der auskunftgeber&quot; ## [2133] &quot;dem angeklagten&quot; &quot;den k.&quot; ## [2135] &quot;den ,&quot; &quot;der auskunftgeber&quot; ## [2137] &quot;den gespreizten&quot; &quot;die frisur&quot; ## [2139] &quot;die haare&quot; &quot;die schweißbedeckte&quot; ## [2141] &quot;der angeklagte&quot; &quot;dem auskunftgeber&quot; ## [2143] &quot;der über&quot; &quot;die erledigung&quot; ## [2145] &quot;den kann&quot; &quot;das nicht&quot; ## [2147] &quot;der auskunftgeber&quot; &quot;den platz&quot; ## [2149] &quot;dem ,&quot; &quot;den gang&quot; ## [2151] &quot;die ihre&quot; &quot;den parteien&quot; ## [2153] &quot;den versteht&quot; &quot;das mädchen&quot; ## [2155] &quot;der auskunftgeber&quot; &quot;der fragte&quot; ## [2157] &quot;das mit&quot; &quot;das sich&quot; ## [2159] &quot;das wasser&quot; &quot;die holzwände&quot; ## [2161] &quot;der tiefe&quot; &quot;des ganges&quot; ## [2163] &quot;dem wasser&quot; &quot;der gang&quot; ## [2165] &quot;der quere&quot; &quot;den die&quot; ## [2167] &quot;den parteien&quot; &quot;den seiten&quot; ## [2169] &quot;die ruhe&quot; &quot;des mädchens&quot; ## [2171] &quot;des mannes&quot; &quot;die ihn&quot; ## [2173] &quot;den lärm&quot; &quot;der alles&quot; ## [2175] &quot;den hindurch&quot; &quot;die wand&quot; ## [2177] &quot;der ausgang&quot; &quot;der ausgangstür&quot; ## [2179] &quot;die das&quot; &quot;der freiheit&quot; ## [2181] &quot;die sich&quot; &quot;den wiederholt&quot; ## [2183] &quot;die hände&quot; &quot;die kanzleiluft&quot; ## [2185] &quot;die verhältnismäßig&quot; &quot;die von&quot; ## [2187] &quot;der treppe&quot; &quot;das mädchen&quot; ## [2189] &quot;die tür&quot; &quot;das haar&quot; ## [2191] &quot;der auf&quot; &quot;dem nächsten&quot; ## [2193] &quot;der auskunftgeber&quot; &quot;die treppe&quot; ## [2195] &quot;den alten&quot; &quot;den gedanken&quot; ## [2197] &quot;den .\\&quot;,&quot; &quot;die freundin&quot; ## [2199] &quot;des fräulein&quot; &quot;der nächsten&quot; ## [2201] &quot;die verschiedenste&quot; &quot;dem büro&quot; ## [2203] &quot;das licht&quot; &quot;dem kanapee&quot; ## [2205] &quot;das vorzimmer&quot; &quot;das dienstmädchen&quot; ## [2207] &quot;die tür&quot; &quot;des scheinbar&quot; ## [2209] &quot;der .\\&quot;,&quot; &quot;des morgens&quot; ## [2211] &quot;die wohnung&quot; &quot;der genugtuung&quot; ## [2213] &quot;die grenzen&quot; &quot;die sie&quot; ## [2215] &quot;die möglichkeit&quot; &quot;den nächsten&quot; ## [2217] &quot;des ganzen&quot; &quot;das ihm&quot; ## [2219] &quot;die erfüllung&quot; &quot;der das&quot; ## [2221] &quot;die bitte&quot; &quot;die briefe&quot; ## [2223] &quot;das schlüsselloch&quot; &quot;die sich&quot; ## [2225] &quot;des französischen&quot; &quot;des mädchen&quot; ## [2227] &quot;das bisher&quot; &quot;das zimmer&quot; ## [2229] &quot;des fräulein&quot; &quot;das vorzimmer&quot; ## [2231] &quot;der ein&quot; &quot;der ein&quot; ## [2233] &quot;das besonders&quot; &quot;die neue&quot; ## [2235] &quot;den mußte&quot; &quot;das frühstück&quot; ## [2237] &quot;dem sie&quot; &quot;die geringste&quot; ## [2239] &quot;dem dienstmädchen&quot; &quot;den kaffee&quot; ## [2241] &quot;das nicht&quot; &quot;den ?\\&quot;,&quot; ## [2243] &quot;den ?\\&quot;,&quot; &quot;der als&quot; ## [2245] &quot;der verzeihung&quot; &quot;den .\\&quot;,&quot; ## [2247] &quot;die probe&quot; &quot;den kaffee&quot; ## [2249] &quot;dem löffel&quot; &quot;die nur&quot; ## [2251] &quot;der irgend&quot; &quot;die letzten&quot; ## [2253] &quot;den !\\&quot;,&quot; &quot;der letzte&quot; ## [2255] &quot;die schürze&quot; &quot;des mädchen&quot; ## [2257] &quot;der gegenseitig&quot; &quot;den .\\&quot;,&quot; ## [2259] &quot;das kann&quot; &quot;den einmal&quot; ## [2261] &quot;die schürze&quot; &quot;die augen&quot; ## [2263] &quot;dem verhalten&quot; &quot;der frau&quot; ## [2265] &quot;der hauptmann&quot; &quot;den mädchens&quot; ## [2267] &quot;den könnte&quot; &quot;das ist&quot; ## [2269] &quot;des fräulein&quot; &quot;des böse&quot; ## [2271] &quot;den schlaf&quot; &quot;das fräulein&quot; ## [2273] &quot;dem ersten&quot; &quot;dem zimmer&quot; ## [2275] &quot;das wollte&quot; &quot;den kaffee&quot; ## [2277] &quot;der den&quot; &quot;den schritt&quot; ## [2279] &quot;des fräulein&quot; &quot;das ganze&quot; ## [2281] &quot;der hand&quot; &quot;der tür&quot; ## [2283] &quot;das muß&quot; &quot;die zuckerreste&quot; ## [2285] &quot;der tasse&quot; &quot;den ?\\&quot;,&quot; ## [2287] &quot;den hauptmann&quot; &quot;den letzten&quot; ## [2289] &quot;des fräulein&quot; &quot;der zurück&quot; ## [2291] &quot;den restlichen&quot; &quot;der übersiedlung&quot; ## [2293] &quot;die äußerlich&quot; &quot;die möglichkeit&quot; ## [2295] &quot;der bis&quot; &quot;das dienstmädchen&quot; ## [2297] &quot;das dienstmädchen&quot; &quot;der erschrockenen&quot; ## [2299] &quot;des fräulein&quot; &quot;der quälerei&quot; ## [2301] &quot;die er&quot; &quot;den mietern&quot; ## [2303] &quot;der frau&quot; &quot;das dienstmädchen&quot; ## [2305] &quot;der antwort&quot; &quot;den rock&quot; ## [2307] &quot;die lästige&quot; &quot;die bitte&quot; ## [2309] &quot;das frühstücksgeschirr&quot; &quot;das vorzimmer&quot; ## [2311] &quot;der geschlossenen&quot; &quot;den ,&quot; ## [2313] &quot;das eßzimmer&quot; &quot;den ,&quot; ## [2315] &quot;den ecken&quot; &quot;der türseite&quot; ## [2317] &quot;der übrige&quot; &quot;dem langen&quot; ## [2319] &quot;der in&quot; &quot;der nähe&quot; ## [2321] &quot;der tür&quot; &quot;den war&quot; ## [2323] &quot;der tisch&quot; &quot;der einen&quot; ## [2325] &quot;des tisches&quot; &quot;der stumm&quot; ## [2327] &quot;den kopf&quot; &quot;die pension&quot; ## [2329] &quot;des tisches&quot; &quot;der gegenüber&quot; ## [2331] &quot;der auf&quot; &quot;dem fensterbrett&quot; ## [2333] &quot;das ganze&quot; &quot;das handtäschchen&quot; ## [2335] &quot;der zurückkam&quot; &quot;der dessen&quot; ## [2337] &quot;die augen&quot; &quot;des fräulein&quot; ## [2339] &quot;die persönliche&quot; &quot;die ich&quot; ## [2341] &quot;das ist&quot; &quot;der vielmehr&quot; ## [2343] &quot;den doch&quot; &quot;der bewilligt&quot; ## [2345] &quot;das gegenteil&quot; &quot;den .\\&quot;,&quot; ## [2347] &quot;der mündlich&quot; &quot;den ,&quot; ## [2349] &quot;die ich&quot; &quot;dem nutzen&quot; ## [2351] &quot;die unterredung&quot; &quot;der unterredung&quot; ## [2353] &quot;den selbst&quot; &quot;die sinnlosigkeit&quot; ## [2355] &quot;des ganzen&quot; &quot;das richtig&quot; ## [2357] &quot;die kleinste&quot; &quot;der geringfügigsten&quot; ## [2359] &quot;den tisch&quot; &quot;dem fenster&quot; ## [2361] &quot;das gegenüberliegende&quot; &quot;der sonne&quot; ## [2363] &quot;der tür&quot; &quot;der hauptmann&quot; ## [2365] &quot;der nähe&quot; &quot;die auch&quot; ## [2367] &quot;die hand&quot; &quot;der behandlung&quot; ## [2369] &quot;die sie&quot; &quot;dem schien&quot; ## [2371] &quot;dem hauptmann&quot; &quot;den ,&quot; ## [2373] &quot;der dem&quot; &quot;der handkuß&quot; ## [2375] &quot;den ,&quot; &quot;die ihn&quot; ## [2377] &quot;dem anschein&quot; &quot;das zu&quot; ## [2379] &quot;die bedeutung&quot; &quot;der beziehung&quot; ## [2381] &quot;die bedeutung&quot; &quot;der erbetenen&quot; ## [2383] &quot;den ,&quot; &quot;der alles&quot; ## [2385] &quot;das ihm&quot; &quot;das alles&quot; ## [2387] &quot;das zimmer&quot; &quot;des fräulein&quot; ## [2389] &quot;das er&quot; &quot;dem eßzimmer&quot; ## [2391] &quot;den gedanken&quot; &quot;den ,&quot; ## [2393] &quot;dem hauptmann&quot; &quot;der umliegenden&quot; ## [2395] &quot;die unterhaltung&quot; &quot;dem eßzimmer&quot; ## [2397] &quot;dem gang&quot; &quot;der zur&quot; ## [2399] &quot;die stimme&quot; &quot;der frau&quot; ## [2401] &quot;die gelegenheit&quot; &quot;der war&quot; ## [2403] &quot;der verleugnete&quot; &quot;der so&quot; ## [2405] &quot;das klopfen&quot; &quot;das gefühl&quot; ## [2407] &quot;die tür&quot; &quot;das zimmer&quot; ## [2409] &quot;der wand&quot; &quot;der aufgestellt&quot; ## [2411] &quot;der nähe&quot; &quot;der tür&quot; ## [2413] &quot;die tür&quot; &quot;der schloß&quot; ## [2415] &quot;der offenen&quot; &quot;des eßzimmers&quot; ## [2417] &quot;den hauptmann&quot; &quot;den dort&quot; ## [2419] &quot;dem k.&quot; &quot;die tür&quot; ## [2421] &quot;den jeden&quot; &quot;den blicken&quot; ## [2423] &quot;der wand&quot; &quot;der prügler&quot; ## [2425] &quot;der nächsten&quot; &quot;den korridor&quot; ## [2427] &quot;der sein&quot; &quot;der haupttreppe&quot; ## [2429] &quot;der letzte&quot; &quot;der expedition&quot; ## [2431] &quot;der er&quot; &quot;der seufzer&quot; ## [2433] &quot;der diener&quot; &quot;die tür&quot; ## [2435] &quot;der schwelle&quot; &quot;der kammer&quot; ## [2437] &quot;den drei&quot; &quot;dem niedrigen&quot; ## [2439] &quot;der eine&quot; &quot;der die&quot; ## [2441] &quot;den blick&quot; &quot;die den&quot; ## [2443] &quot;die ganzen&quot; &quot;die zwei&quot; ## [2445] &quot;den ,&quot; &quot;die wächter&quot; ## [2447] &quot;der dritte&quot; &quot;der hand&quot; ## [2449] &quot;dem dritten&quot; &quot;die angestrengteste&quot; ## [2451] &quot;den wächtern&quot; &quot;die wäsche&quot; ## [2453] &quot;den wächtern&quot; &quot;den ,&quot; ## [2455] &quot;den ?\\&quot;,&quot; &quot;die strafe&quot; ## [2457] &quot;der herr&quot; &quot;den müssen&quot; ## [2459] &quot;den rühren&quot; &quot;der dritte&quot; ## [2461] &quot;die strafe&quot; &quot;die hand&quot; ## [2463] &quot;die er&quot; &quot;den mund&quot; ## [2465] &quot;den nur&quot; &quot;das gerechtigkeit&quot; ## [2467] &quot;der behörde&quot; &quot;den wie&quot; ## [2469] &quot;der eben&quot; &quot;das glück&quot; ## [2471] &quot;dem angezeigt&quot; &quot;den zu&quot; ## [2473] &quot;den noch&quot; &quot;der wachdienst&quot; ## [2475] &quot;die rute&quot; &quot;die rute&quot; ## [2477] &quot;die der&quot; &quot;den uns&quot; ## [2479] &quot;den prügler&quot; &quot;des ,&quot; ## [2481] &quot;den beiden&quot; &quot;die prügel&quot; ## [2483] &quot;der prügler&quot; &quot;den kopf&quot; ## [2485] &quot;den wächtern&quot; &quot;die angst&quot; ## [2487] &quot;den prügeln&quot; &quot;den .\\&quot;,&quot; ## [2489] &quot;die ersten&quot; &quot;den überhaupt&quot; ## [2491] &quot;den ist&quot; &quot;die gewohnheit&quot; ## [2493] &quot;das frühstück&quot; &quot;den ,&quot; ## [2495] &quot;das ist&quot; &quot;der gerade&quot; ## [2497] &quot;der prügler&quot; &quot;der rute&quot; ## [2499] &quot;den hals&quot; &quot;den prügler&quot; ## [2501] &quot;den beiderseits&quot; &quot;der prügler&quot; ## [2503] &quot;den bestraft&quot; &quot;den ,&quot; ## [2505] &quot;die tür&quot; &quot;das aber&quot; ## [2507] &quot;den sollen&quot; &quot;der auch&quot; ## [2509] &quot;den können&quot; &quot;die organisation&quot; ## [2511] &quot;die hohen&quot; &quot;die wächter&quot; ## [2513] &quot;die rute&quot; &quot;die sich&quot; ## [2515] &quot;der erheben&quot; &quot;der ,&quot; ## [2517] &quot;die gute&quot; &quot;der prügler&quot; ## [2519] &quot;der wächter&quot; &quot;der vielleicht&quot; ## [2521] &quot;des eingreifens&quot; &quot;den hosen&quot; ## [2523] &quot;der hinsicht&quot; &quot;den ,&quot; ## [2525] &quot;der im&quot; &quot;der bank&quot; ## [2527] &quot;den ausgang&quot; &quot;der prügler&quot; ## [2529] &quot;die rute&quot; &quot;den händen&quot; ## [2531] &quot;der schrei&quot; &quot;den franz&quot; ## [2533] &quot;der ganze&quot; &quot;das ganze&quot; ## [2535] &quot;die richtung&quot; &quot;der die&quot; ## [2537] &quot;der besinnungslose&quot; &quot;den händen&quot; ## [2539] &quot;den boden&quot; &quot;den schlägen&quot; ## [2541] &quot;die rute&quot; &quot;der erde&quot; ## [2543] &quot;der ferne&quot; &quot;die tür&quot; ## [2545] &quot;der hoffenster&quot; &quot;das schreien&quot; ## [2547] &quot;die diener&quot; &quot;dem hof&quot; ## [2549] &quot;die diener&quot; &quot;den dienern&quot; ## [2551] &quot;dem fenster&quot; &quot;der in&quot; ## [2553] &quot;den korridor&quot; &quot;die rumpelkammer&quot; ## [2555] &quot;den er&quot; &quot;die obersten&quot; ## [2557] &quot;des mondes&quot; &quot;den blicken&quot; ## [2559] &quot;das dunkel&quot; &quot;dem einige&quot; ## [2561] &quot;das prügeln&quot; &quot;den augenblick&quot; ## [2563] &quot;den ,&quot; &quot;den prügler&quot; ## [2565] &quot;den .\\&quot;,&quot; &quot;die ganze&quot; ## [2567] &quot;der prügler&quot; &quot;der das&quot; ## [2569] &quot;der banknote&quot; &quot;die augen&quot; ## [2571] &quot;dem prügeln&quot; &quot;die bestechungssumme&quot; ## [2573] &quot;die wächter&quot; &quot;die verderbnis&quot; ## [2575] &quot;dem augenblick&quot; &quot;die diener&quot; ## [2577] &quot;der gesellschaft&quot; &quot;der rumpelkammer&quot; ## [2579] &quot;das zu&quot; &quot;dem prügler&quot; ## [2581] &quot;die wächter&quot; &quot;der prügler&quot; ## [2583] &quot;des gerichts&quot; &quot;die tür&quot; ## [2585] &quot;der ferne&quot; &quot;die schritte&quot; ## [2587] &quot;der diener&quot; &quot;den ,&quot; ## [2589] &quot;das fenster&quot; &quot;der richtung&quot; ## [2591] &quot;der tür&quot; &quot;der mann&quot; ## [2593] &quot;die wächter&quot; &quot;die hand&quot; ## [2595] &quot;der klinke&quot; &quot;der zurück&quot; ## [2597] &quot;dem mehr&quot; &quot;die diener&quot; ## [2599] &quot;die sache&quot; &quot;die wirklich&quot; ## [2601] &quot;die hohen&quot; &quot;die freitreppe&quot; ## [2603] &quot;der bank&quot; &quot;der weiteren&quot; ## [2605] &quot;das auf&quot; &quot;den gewartet&quot; ## [2607] &quot;die bemerkung&quot; &quot;die nur&quot; ## [2609] &quot;den zweck&quot; &quot;die wächter&quot; ## [2611] &quot;dem sinn&quot; &quot;der arbeit&quot; ## [2613] &quot;dem nachhausewege&quot; &quot;der an&quot; ## [2615] &quot;der rumpelkammer&quot; &quot;dem ,&quot; ## [2617] &quot;des erwarteten&quot; &quot;der tür&quot; ## [2619] &quot;den hatte&quot; &quot;die drucksorten&quot; ## [2621] &quot;der schwelle&quot; &quot;der prügler&quot; ## [2623] &quot;der rute&quot; &quot;die noch&quot; ## [2625] &quot;die kerze&quot; &quot;dem regal&quot; ## [2627] &quot;die wächter&quot; &quot;die tür&quot; ## [2629] &quot;den fäusten&quot; &quot;den dienern&quot; ## [2631] &quot;die ruhig&quot; &quot;den kopiermaschinen&quot; ## [2633] &quot;die rumpelkammer&quot; &quot;die diener&quot; ## [2635] &quot;der arbeit&quot; &quot;die diener&quot; ## [2637] &quot;der nähe&quot; &quot;der ,&quot; ## [2639] &quot;den anschein&quot; &quot;die diener&quot; ## [2641] &quot;den ,&quot; &quot;der onkel&quot; ## [2643] &quot;dem postabschluß&quot; &quot;die schriftstücke&quot; ## [2645] &quot;dem anblick&quot; &quot;der vorstellung&quot; ## [2647] &quot;des onkels&quot; &quot;der onkel&quot; ## [2649] &quot;das stand&quot; &quot;den eingedrückten&quot; ## [2651] &quot;der linken&quot; &quot;die rechte&quot; ## [2653] &quot;den schreibtisch&quot; &quot;der onkel&quot; ## [2655] &quot;dem unglücklichen&quot; &quot;der hauptstadt&quot; ## [2657] &quot;des gespräch&quot; &quot;der geschäft&quot; ## [2659] &quot;der vergnügen&quot; &quot;der ihm&quot; ## [2661] &quot;dem bei&quot; &quot;das gespenst&quot; ## [2663] &quot;der begrüßung&quot; &quot;den fauteuil&quot; ## [2665] &quot;die diener&quot; &quot;dem zimmer&quot; ## [2667] &quot;der weisung&quot; &quot;der onkel&quot; ## [2669] &quot;den tisch&quot; &quot;der anstrengenden&quot; ## [2671] &quot;das fenster&quot; &quot;die gegenüberliegende&quot; ## [2673] &quot;der von&quot; &quot;dem fenster&quot; ## [2675] &quot;der onkel&quot; &quot;der onkel&quot; ## [2677] &quot;die wahrheit&quot; &quot;der onkel&quot; ## [2679] &quot;der onkel&quot; &quot;der nicht&quot; ## [2681] &quot;dem hat&quot; &quot;den brief&quot; ## [2683] &quot;der grund&quot; &quot;die briefstelle&quot; ## [2685] &quot;die dich&quot; &quot;den brief&quot; ## [2687] &quot;der brieftasche&quot; &quot;der bank&quot; ## [2689] &quot;den .\\&quot;,&quot; &quot;der pension&quot; ## [2691] &quot;den ist&quot; &quot;der bank&quot; ## [2693] &quot;dem ich&quot; &quot;die verhandlung&quot; ## [2695] &quot;das dürfte&quot; &quot;den prozeß&quot; ## [2697] &quot;der gegen&quot; &quot;den herrn&quot; ## [2699] &quot;das für&quot; &quot;dem herrn&quot; ## [2701] &quot;den .\\&quot;,&quot; &quot;der laune&quot; ## [2703] &quot;des herrn&quot; &quot;den natürlich&quot; ## [2705] &quot;den einfältigen&quot; &quot;das ganze&quot; ## [2707] &quot;dem wäre&quot; &quot;der sache&quot; ## [2709] &quot;das wahrscheinlichste&quot; &quot;der onkel&quot; ## [2711] &quot;die vorlesung&quot; &quot;den augen&quot; ## [2713] &quot;der verschiedenen&quot; &quot;der letzten&quot; ## [2715] &quot;die geschichte&quot; &quot;der schokolade&quot; ## [2717] &quot;dem zweck&quot; &quot;den ,&quot; ## [2719] &quot;den theaterkarten&quot; &quot;die er&quot; ## [2721] &quot;der pension&quot; &quot;der onkel&quot; ## [2723] &quot;der durch&quot; &quot;den brief&quot; ## [2725] &quot;der onkel&quot; &quot;dem halse&quot; ## [2727] &quot;der onkel&quot; &quot;der immer&quot; ## [2729] &quot;den ausgang&quot; &quot;das kann&quot; ## [2731] &quot;der onkel&quot; &quot;den .\\&quot;,&quot; ## [2733] &quot;der noch&quot; &quot;die bank&quot; ## [2735] &quot;der diener&quot; &quot;der tür&quot; ## [2737] &quot;das ist&quot; &quot;der familie&quot; ## [2739] &quot;der onkel&quot; &quot;der in&quot; ## [2741] &quot;der onkel&quot; &quot;der hand&quot; ## [2743] &quot;der vor&quot; &quot;dem schreibtisch&quot; ## [2745] &quot;dem jungen&quot; &quot;der kühl&quot; ## [2747] &quot;den müsse&quot; &quot;der onkel&quot; ## [2749] &quot;dem er&quot; &quot;der anschein&quot; ## [2751] &quot;dem fenster&quot; &quot;der vor&quot; ## [2753] &quot;der »&quot; &quot;den !\\&quot;,&quot; ## [2755] &quot;der junge&quot; &quot;dem er&quot; ## [2757] &quot;dem onkel&quot; &quot;der ihm&quot; ## [2759] &quot;den rücken&quot; &quot;dem fenster&quot; ## [2761] &quot;den die&quot; &quot;die tür&quot; ## [2763] &quot;der onkel&quot; &quot;der hampelmann&quot; ## [2765] &quot;der kein&quot; &quot;den onkel&quot; ## [2767] &quot;der vorhalle&quot; &quot;den und&quot; ## [2769] &quot;die gerade&quot; &quot;der direktor-stellvertreter&quot; ## [2771] &quot;die fragen&quot; &quot;des prozesses&quot; ## [2773] &quot;der onkel&quot; &quot;die verbeugungen&quot; ## [2775] &quot;der umstehenden&quot; &quot;der treppe&quot; ## [2777] &quot;dem onkel&quot; &quot;den leuten&quot; ## [2779] &quot;den wollen&quot; &quot;der onkel&quot; ## [2781] &quot;dem gewöhnlichen&quot; &quot;das ist&quot; ## [2783] &quot;der onkel&quot; &quot;den onkel&quot; ## [2785] &quot;das schlimm&quot; &quot;der onkel&quot; ## [2787] &quot;den auf&quot; &quot;der freitreppe&quot; ## [2789] &quot;die zur&quot; &quot;der portier&quot; ## [2791] &quot;den onkel&quot; &quot;der lebhafte&quot; ## [2793] &quot;der onkel&quot; &quot;der sich&quot; ## [2795] &quot;dem prozeß&quot; &quot;der onkel&quot; ## [2797] &quot;die hinter&quot; &quot;den leute&quot; ## [2799] &quot;der prozeß&quot; &quot;dem land&quot; ## [2801] &quot;das wird&quot; &quot;dem aber&quot; ## [2803] &quot;dem gericht&quot; &quot;die sie&quot; ## [2805] &quot;den ;&quot; &quot;das land&quot; ## [2807] &quot;der nur&quot; &quot;das schwächt&quot; ## [2809] &quot;die wirkung&quot; &quot;den die&quot; ## [2811] &quot;des onkels&quot; &quot;das tun&quot; ## [2813] &quot;den «&quot; &quot;der onkel&quot; ## [2815] &quot;der verlust&quot; &quot;den sie&quot; ## [2817] &quot;den .\\&quot;,&quot; &quot;den onkel&quot; ## [2819] &quot;dem ganzen&quot; &quot;der onkel&quot; ## [2821] &quot;den ,&quot; &quot;den prozeß&quot; ## [2823] &quot;das bedeutet&quot; &quot;das bedeutet&quot; ## [2825] &quot;die ganze&quot; &quot;der wenigstens&quot; ## [2827] &quot;den boden&quot; &quot;den verstand&quot; ## [2829] &quot;dem sprichwort&quot; &quot;die aufregung&quot; ## [2831] &quot;die prozesse&quot; &quot;die familie&quot; ## [2833] &quot;den prozeß&quot; &quot;das ist&quot; ## [2835] &quot;den landaufenthalt&quot; &quot;das würde&quot; ## [2837] &quot;die sache&quot; &quot;der onkel&quot; ## [2839] &quot;der näher&quot; &quot;den vorschlag&quot; ## [2841] &quot;die sache&quot; &quot;die sache&quot; ## [2843] &quot;der onkel&quot; &quot;dem lande&quot; ## [2845] &quot;der spürsinn&quot; &quot;die sich&quot; ## [2847] &quot;dem land&quot; &quot;das weißt&quot; ## [2849] &quot;das ist&quot; &quot;das wichtigste&quot; ## [2851] &quot;den fußspitzen&quot; &quot;dem wagenlenker&quot; ## [2853] &quot;den wagen&quot; &quot;den namen&quot; ## [2855] &quot;das ist&quot; &quot;den ruf&quot; ## [2857] &quot;die eilige&quot; &quot;der der&quot; ## [2859] &quot;die angelegenheit&quot; &quot;der onkel&quot; ## [2861] &quot;das ist&quot; &quot;die sache&quot; ## [2863] &quot;der einzige&quot; &quot;den er&quot; ## [2865] &quot;des onkels&quot; &quot;der prozeß&quot; ## [2867] &quot;das beeinträchtigte&quot; &quot;die offenheit&quot; ## [2869] &quot;dem prozeß&quot; &quot;dem fenster&quot; ## [2871] &quot;der die&quot; &quot;den onkel&quot; ## [2873] &quot;der aber&quot; &quot;das zusammentreffen&quot; ## [2875] &quot;der wagen&quot; &quot;der onkel&quot; ## [2877] &quot;der ersten&quot; &quot;der tür&quot; ## [2879] &quot;die zwei&quot; &quot;den ;&quot; ## [2881] &quot;die tür&quot; &quot;der onkel&quot; ## [2883] &quot;der gegenseitig&quot; &quot;die tatsache&quot; ## [2885] &quot;die zwei&quot; &quot;das sich&quot; ## [2887] &quot;den fürchtet&quot; &quot;der onkel&quot; ## [2889] &quot;der erschienen&quot; &quot;die augen&quot; ## [2891] &quot;das aber&quot; &quot;die offene&quot; ## [2893] &quot;die nahe&quot; &quot;den köpfen&quot; ## [2895] &quot;der onkel&quot; &quot;der faust&quot; ## [2897] &quot;die tür&quot; &quot;des herrn&quot; ## [2899] &quot;der herr&quot; &quot;des kleinen&quot; ## [2901] &quot;der onkel&quot; &quot;der schon&quot; ## [2903] &quot;des langen&quot; &quot;der herr&quot; ## [2905] &quot;die krankheit&quot; &quot;der herr&quot; ## [2907] &quot;die tür&quot; &quot;des advokaten&quot; ## [2909] &quot;die tür&quot; &quot;den ,&quot; ## [2911] &quot;die dunklen&quot; &quot;der hand&quot; ## [2913] &quot;der onkel&quot; &quot;das mädchen&quot; ## [2915] &quot;der sich&quot; &quot;dem mädchen&quot; ## [2917] &quot;der herr&quot; &quot;das mädchen&quot; ## [2919] &quot;der onkel&quot; &quot;das mädchen&quot; ## [2921] &quot;die wohnungstür&quot; &quot;der zu&quot; ## [2923] &quot;die bleichen&quot; &quot;das kinn&quot; ## [2925] &quot;die schläfen&quot; &quot;die stirnränder&quot; ## [2927] &quot;der onkel&quot; &quot;der ,&quot; ## [2929] &quot;das mädchen&quot; &quot;das herzleiden&quot; ## [2931] &quot;das mädchen&quot; &quot;den ,&quot; ## [2933] &quot;der kerze&quot; &quot;die zimmertür&quot; ## [2935] &quot;des zimmers&quot; &quot;das kerzenlicht&quot; ## [2937] &quot;der advokat&quot; &quot;der ,&quot; ## [2939] &quot;die kerze&quot; &quot;die gäste&quot; ## [2941] &quot;der onkel&quot; &quot;der advokat&quot; ## [2943] &quot;die kissen&quot; &quot;der onkel&quot; ## [2945] &quot;den bettrand&quot; &quot;die früheren&quot; ## [2947] &quot;der advokat&quot; &quot;der onkel&quot; ## [2949] &quot;den panamahut&quot; &quot;das sind&quot; ## [2951] &quot;die richtige&quot; &quot;der sie&quot; ## [2953] &quot;das mädchen&quot; &quot;der kerze&quot; ## [2955] &quot;der tür&quot; &quot;den onkel&quot; ## [2957] &quot;den er&quot; &quot;die nähe&quot; ## [2959] &quot;des mädchens&quot; &quot;der advokat&quot; ## [2961] &quot;den onkel&quot; &quot;das aber&quot; ## [2963] &quot;die pflegerin&quot; &quot;dem kranken&quot; ## [2965] &quot;die pflegerin&quot; &quot;die kerze&quot; ## [2967] &quot;das nachttischchen&quot; &quot;den kranken&quot; ## [2969] &quot;der kissen&quot; &quot;die rücksicht&quot; ## [2971] &quot;den kranken&quot; &quot;der pflegerin&quot; ## [2973] &quot;den röcken&quot; &quot;die krankheit&quot; ## [2975] &quot;des advokaten&quot; &quot;dem eifer&quot; ## [2977] &quot;den der&quot; &quot;die ablenkung&quot; ## [2979] &quot;die dieser&quot; &quot;der onkel&quot; ## [2981] &quot;der absicht&quot; &quot;die pflegerin&quot; ## [2983] &quot;die pflegerin&quot; &quot;die noch&quot; ## [2985] &quot;den kranken&quot; &quot;das leintuch&quot; ## [2987] &quot;der wand&quot; &quot;den kopf&quot; ## [2989] &quot;den unterschied&quot; &quot;den vor&quot; ## [2991] &quot;den und&quot; &quot;der überfließenden&quot; ## [2993] &quot;den des&quot; &quot;der herr&quot; ## [2995] &quot;die worte&quot; &quot;des onkels&quot; ## [2997] &quot;den ,&quot; &quot;der onkel&quot; ## [2999] &quot;der aufregung&quot; &quot;den onkel&quot; ## [3001] &quot;der bestimmten&quot; &quot;den händen&quot; ## [3003] &quot;den mund&quot; &quot;dem mädchen&quot; ## [3005] &quot;der kranke&quot; &quot;der onkel&quot; ## [3007] &quot;den verstand&quot; &quot;das ,&quot; ## [3009] &quot;die pflegerin&quot; &quot;dem onkel&quot; ## [3011] &quot;der einen&quot; &quot;die hand&quot; ## [3013] &quot;des advokaten&quot; &quot;der kranke&quot; ## [3015] &quot;den bitte&quot; &quot;der onkel&quot; ## [3017] &quot;der advokat&quot; &quot;der stimme&quot; ## [3019] &quot;der zurück&quot; &quot;der onkel&quot; ## [3021] &quot;der kranke&quot; &quot;die hand&quot; ## [3023] &quot;der pflegerin&quot; &quot;die sich&quot; ## [3025] &quot;die hand&quot; &quot;der ,&quot; ## [3027] &quot;die vorstellung&quot; &quot;den advokaten&quot; ## [3029] &quot;der an&quot; &quot;der mitte&quot; ## [3031] &quot;der aus&quot; &quot;der onkel&quot; ## [3033] &quot;der tür&quot; &quot;der onkel&quot; ## [3035] &quot;der advokat&quot; &quot;die pflegerin&quot; ## [3037] &quot;die angelegenheit&quot; &quot;den anderen&quot; ## [3039] &quot;die sache&quot; &quot;den ,&quot; ## [3041] &quot;den onkel&quot; &quot;den ,&quot; ## [3043] &quot;der kerze&quot; &quot;der hand&quot; ## [3045] &quot;dem nachttischchen&quot; &quot;dem bereits&quot; ## [3047] &quot;den teppich&quot; &quot;der advokat&quot; ## [3049] &quot;den und&quot; &quot;der aufforderung&quot; ## [3051] &quot;der onkel&quot; &quot;dem advokaten&quot; ## [3053] &quot;dem prozeß&quot; &quot;das war&quot; ## [3055] &quot;den ?\\&quot;,&quot; &quot;der advokat&quot; ## [3057] &quot;der onkel&quot; &quot;der advokat&quot; ## [3059] &quot;den neffen&quot; &quot;des betrifft&quot; ## [3061] &quot;das ist&quot; &quot;der onkel&quot; ## [3063] &quot;der advokat&quot; &quot;der onkel&quot; ## [3065] &quot;der advokat&quot; &quot;dem gericht&quot; ## [3067] &quot;dem auf&quot; &quot;dem dachboden&quot; ## [3069] &quot;den ,&quot; &quot;der advokat&quot; ## [3071] &quot;den .\\&quot;,&quot; &quot;dem besuch&quot; ## [3073] &quot;den vom&quot; &quot;die in&quot; ## [3075] &quot;den ganzen&quot; &quot;der ersten&quot; ## [3077] &quot;das licht&quot; &quot;der kleinen&quot; ## [3079] &quot;den wand&quot; &quot;der ecke&quot; ## [3081] &quot;der kerze&quot; &quot;die der&quot; ## [3083] &quot;den damit&quot; &quot;den händen&quot; ## [3085] &quot;die er&quot; &quot;die anderen&quot; ## [3087] &quot;der um&quot; &quot;die versetzung&quot; ## [3089] &quot;das vergessen&quot; &quot;das konnte&quot; ## [3091] &quot;der advokat&quot; &quot;dem herrn&quot; ## [3093] &quot;der herr&quot; &quot;der herr&quot; ## [3095] &quot;der herr&quot; &quot;den wert&quot; ## [3097] &quot;der eingeweihte&quot; &quot;der herr&quot; ## [3099] &quot;dem ,&quot; &quot;der herr&quot; ## [3101] &quot;den winkel&quot; &quot;das heißt&quot; ## [3103] &quot;der wunsch&quot; &quot;der zusammenrücken&quot; ## [3105] &quot;der nähe&quot; &quot;des bettes&quot; ## [3107] &quot;der nur&quot; &quot;der kanzleidirektor&quot; ## [3109] &quot;den lehnstuhl&quot; &quot;die uhr&quot; ## [3111] &quot;die geschäfte&quot; &quot;die gelegenheit&quot; ## [3113] &quot;des kennenzulernen&quot; &quot;den kopf&quot; ## [3115] &quot;den onkel&quot; &quot;der von&quot; ## [3117] &quot;der neuen&quot; &quot;der ergebenheit&quot; ## [3119] &quot;die worte&quot; &quot;des kanzleidirektors&quot; ## [3121] &quot;der kanzleidirektor&quot; &quot;die herrschaft&quot; ## [3123] &quot;das gespräch&quot; &quot;der advokat&quot; ## [3125] &quot;den neuen&quot; &quot;die hand&quot; ## [3127] &quot;der onkel&quot; &quot;die kerze&quot; ## [3129] &quot;der advokat&quot; &quot;der art&quot; ## [3131] &quot;der rede&quot; &quot;des kanzleidirektors&quot; ## [3133] &quot;den sanften&quot; &quot;der am&quot; ## [3135] &quot;den alten&quot; &quot;die rede&quot; ## [3137] &quot;die pflegerin&quot; &quot;die schlechte&quot; ## [3139] &quot;die sie&quot; &quot;den kanzleidirektor&quot; ## [3141] &quot;der versammlung&quot; &quot;der kanzleidirektor&quot; ## [3143] &quot;den versammlungsteilnehmern&quot; &quot;der ersten&quot; ## [3145] &quot;den alten&quot; &quot;den schütteren&quot; ## [3147] &quot;dem vorzimmer&quot; &quot;dem porzellan&quot; ## [3149] &quot;den anderen&quot; &quot;den ,&quot; ## [3151] &quot;die hand&quot; &quot;der er&quot; ## [3153] &quot;die tür&quot; &quot;die tür&quot; ## [3155] &quot;die pflegerin&quot; &quot;die hier&quot; ## [3157] &quot;die mauer&quot; &quot;die pflegerin&quot; ## [3159] &quot;die pflegerin&quot; &quot;das arbeitszimmer&quot; ## [3161] &quot;des advokaten&quot; &quot;das jetzt&quot; ## [3163] &quot;des fußbodens&quot; &quot;dem der&quot; ## [3165] &quot;die pflegerin&quot; &quot;die kundschaft&quot; ## [3167] &quot;des armenadvokaten&quot; &quot;die kleinen&quot; ## [3169] &quot;die besucher&quot; &quot;dem gewaltigen&quot; ## [3171] &quot;die pflegerin&quot; &quot;die ganz&quot; ## [3173] &quot;die seitenlehne&quot; &quot;den von&quot; ## [3175] &quot;den .\\&quot;,&quot; &quot;die merkwürdigkeit&quot; ## [3177] &quot;das geschwätz&quot; &quot;der alten&quot; ## [3179] &quot;das ist&quot; &quot;den arm&quot; ## [3181] &quot;die lehne&quot; &quot;das dunkel&quot; ## [3183] &quot;der einrichtung&quot; &quot;den .\\&quot;,&quot; ## [3185] &quot;das rechts&quot; &quot;der tür&quot; ## [3187] &quot;dem bilde&quot; &quot;das ungewöhnliche&quot; ## [3189] &quot;den linken&quot; &quot;den rechten&quot; ## [3191] &quot;der hand&quot; &quot;die seitenlehne&quot; ## [3193] &quot;des zu&quot; &quot;der gar&quot; ## [3195] &quot;das urteil&quot; &quot;den .\\&quot;,&quot; ## [3197] &quot;der angeklagte&quot; &quot;der treppe&quot; ## [3199] &quot;dem bilde&quot; &quot;das mein&quot; ## [3201] &quot;das bild&quot; &quot;das bild&quot; ## [3203] &quot;dem bilde&quot; &quot;dem hat&quot; ## [3205] &quot;dem bild&quot; &quot;die länge&quot; ## [3207] &quot;den damit&quot; &quot;die letzte&quot; ## [3209] &quot;den kopf&quot; &quot;dem übrigen&quot; ## [3211] &quot;der er&quot; &quot;der nur&quot; ## [3213] &quot;die hohen&quot; &quot;das ist&quot; ## [3215] &quot;das gesicht&quot; &quot;dem eine&quot; ## [3217] &quot;das ist&quot; &quot;der fehler&quot; ## [3219] &quot;den sie&quot; &quot;das gesagt&quot; ## [3221] &quot;das sagte&quot; &quot;das geständnis&quot; ## [3223] &quot;das geständnis&quot; &quot;die möglichkeit&quot; ## [3225] &quot;das ist&quot; &quot;die will&quot; ## [3227] &quot;den betrügereien&quot; &quot;die hier&quot; ## [3229] &quot;dem sie&quot; &quot;den rock&quot; ## [3231] &quot;die bluse&quot; &quot;den händen&quot; ## [3233] &quot;das geständnis&quot; &quot;die frau&quot; ## [3235] &quot;des gerichtsdieners&quot; &quot;die ein&quot; ## [3237] &quot;den kopf&quot; &quot;das bild&quot; ## [3239] &quot;dem weinlokal&quot; &quot;der drehung&quot; ## [3241] &quot;die hände&quot; &quot;die festen&quot; ## [3243] &quot;dem bild&quot; &quot;die stelle&quot; ## [3245] &quot;dem bilde&quot; &quot;der sanft&quot; ## [3247] &quot;der das&quot; &quot;das andere&quot; ## [3249] &quot;das bild&quot; &quot;den sie&quot; ## [3251] &quot;der für&quot; &quot;das wäre&quot; ## [3253] &quot;den suchen&quot; &quot;das ist&quot; ## [3255] &quot;den mut&quot; &quot;den mittelund&quot; ## [3257] &quot;der ,&quot; &quot;das verbindungshäutchen&quot; ## [3259] &quot;der kurzen&quot; &quot;die ganze&quot; ## [3261] &quot;der ihre&quot; &quot;den knien&quot; ## [3263] &quot;der geruch&quot; &quot;den teppich&quot; ## [3265] &quot;den hausschlüssel&quot; &quot;den rücken&quot; ## [3267] &quot;dem haustor&quot; &quot;die mitte&quot; ## [3269] &quot;der straße&quot; &quot;das vor&quot; ## [3271] &quot;dem hause&quot; &quot;das k.&quot; ## [3273] &quot;der onkel&quot; &quot;den armen&quot; ## [3275] &quot;das haustor&quot; &quot;das tun&quot; ## [3277] &quot;die auf&quot; &quot;das überdies&quot; ## [3279] &quot;die geliebte&quot; &quot;des advokaten&quot; ## [3281] &quot;der onkel&quot; &quot;der sich&quot; ## [3283] &quot;der advokat&quot; &quot;der für&quot; ## [3285] &quot;den soll&quot; &quot;der kanzleidirektor&quot; ## [3287] &quot;der deine&quot; &quot;den advokaten&quot; ## [3289] &quot;der den&quot; &quot;den ,&quot; ## [3291] &quot;der sache&quot; &quot;den können&quot; ## [3293] &quot;der kanzleidirektor&quot; &quot;der viel&quot; ## [3295] &quot;der tür&quot; &quot;die luft&quot; ## [3297] &quot;den kranken&quot; &quot;der gute&quot; ## [3299] &quot;den tod&quot; &quot;den du&quot; ## [3301] &quot;der frühen&quot; &quot;den unteren&quot; ## [3303] &quot;dem diener&quot; &quot;den auftrag&quot; ## [3305] &quot;den von&quot; &quot;dem tisch&quot; ## [3307] &quot;den ganzen&quot; &quot;der tischplatte&quot; ## [3309] &quot;der gedanke&quot; &quot;den prozeß&quot; ## [3311] &quot;dem irgendwie&quot; &quot;den er&quot; ## [3313] &quot;der zu&quot; &quot;der jenes&quot; ## [3315] &quot;die vorteile&quot; &quot;der bloßen&quot; ## [3317] &quot;den übrigens&quot; &quot;der advokat&quot; ## [3319] &quot;der früheren&quot; &quot;den eindruck&quot; ## [3321] &quot;die hauptsache&quot; &quot;das gefühl&quot; ## [3323] &quot;der advokat&quot; &quot;der saß&quot; ## [3325] &quot;den schreibtisch&quot; &quot;den teppich&quot; ## [3327] &quot;der ,&quot; &quot;die stelle&quot; ## [3329] &quot;den ,&quot; &quot;die k.&quot; ## [3331] &quot;der schlußabrechnung&quot; &quot;dem der&quot; ## [3333] &quot;der ein&quot; &quot;der teilweise&quot; ## [3335] &quot;die ,&quot; &quot;der schublade&quot; ## [3337] &quot;des tisches&quot; &quot;die schriften&quot; ## [3339] &quot;der nicht&quot; &quot;dem komme&quot; ## [3341] &quot;die große&quot; &quot;die er&quot; ## [3343] &quot;die erste&quot; &quot;der erste&quot; ## [3345] &quot;den die&quot; &quot;die ganze&quot; ## [3347] &quot;des verfahrens&quot; &quot;der ,&quot; ## [3349] &quot;die ersten&quot; &quot;den .\\&quot;,&quot; ## [3351] &quot;den akten&quot; &quot;die einvernahme&quot; ## [3353] &quot;des angeklagten&quot; &quot;der petent&quot; ## [3355] &quot;der entscheidung&quot; &quot;der sei&quot; ## [3357] &quot;die erste&quot; &quot;der gehe&quot; ## [3359] &quot;der advokat&quot; &quot;das alles&quot; ## [3361] &quot;das verfahren&quot; &quot;das gericht&quot; ## [3363] &quot;den ,&quot; &quot;das gesetz&quot; ## [3365] &quot;die schriften&quot; &quot;des gerichts&quot; ## [3367] &quot;die anklageschrift&quot; &quot;dem angeklagten&quot; ## [3369] &quot;der wenigstens&quot; &quot;die erste&quot; ## [3371] &quot;die sache&quot; &quot;der einvernahmen&quot; ## [3373] &quot;des angeklagten&quot; &quot;die einzelnen&quot; ## [3375] &quot;der erraten&quot; &quot;den können&quot; ## [3377] &quot;die verteidigung&quot; &quot;das ist&quot; ## [3379] &quot;die verteidigung&quot; &quot;das gesetz&quot; ## [3381] &quot;der betreffenden&quot; &quot;den soll&quot; ## [3383] &quot;die vor&quot; &quot;das wirkt&quot; ## [3385] &quot;den ganzen&quot; &quot;die gerichtskanzleien&quot; ## [3387] &quot;das einmal&quot; &quot;das advokatenzimmer&quot; ## [3389] &quot;der gesellschaft&quot; &quot;die dort&quot; ## [3391] &quot;die ihnen&quot; &quot;die verachtung&quot; ## [3393] &quot;die das&quot; &quot;die kammer&quot; ## [3395] &quot;die so&quot; &quot;der rauch&quot; ## [3397] &quot;die nase&quot; &quot;das gesicht&quot; ## [3399] &quot;der einen&quot; &quot;den rücken&quot; ## [3401] &quot;den dieser&quot; &quot;das advokatenzimmer&quot; ## [3403] &quot;dem zweiten&quot; &quot;den ;&quot; ## [3405] &quot;das bein&quot; &quot;den ersten&quot; ## [3407] &quot;den hinunter&quot; &quot;den gang&quot; ## [3409] &quot;die parteien&quot; &quot;den an&quot; ## [3411] &quot;die verwaltung&quot; &quot;den geringsten&quot; ## [3413] &quot;den advokaten&quot; &quot;das strengste&quot; ## [3415] &quot;dem zimmer&quot; &quot;der advokaten&quot; ## [3417] &quot;die verteidigung&quot; &quot;den angeklagten&quot; ## [3419] &quot;die advokaten&quot; &quot;den angeklagten&quot; ## [3421] &quot;das verfahren&quot; &quot;der öffentlichkeit&quot; ## [3423] &quot;dem angeklagten&quot; &quot;der angeklagte&quot; ## [3425] &quot;die gerichtsschriften&quot; &quot;den verhören&quot; ## [3427] &quot;die ihnen&quot; &quot;den schriften&quot; ## [3429] &quot;den angeklagten&quot; &quot;der doch&quot; ## [3431] &quot;die ihn&quot; &quot;die verteidigung&quot; ## [3433] &quot;den verhören&quot; &quot;den verhören&quot; ## [3435] &quot;der tür&quot; &quot;des untersuchungszimmers&quot; ## [3437] &quot;den angeklagten&quot; &quot;das verhör&quot; ## [3439] &quot;das für&quot; &quot;die verteidigung&quot; ## [3441] &quot;das wichtigste&quot; &quot;das wichtigste&quot; ## [3443] &quot;dem die&quot; &quot;des advokaten&quot; ## [3445] &quot;der hauptwert&quot; &quot;der verteidigung&quot; ## [3447] &quot;die allerunterste&quot; &quot;des gerichtes&quot; ## [3449] &quot;die strenge&quot; &quot;des gerichtes&quot; ## [3451] &quot;die mehrzahl&quot; &quot;der advokaten&quot; ## [3453] &quot;den augenblick&quot; &quot;den angeklagten&quot; ## [3455] &quot;den weiteren&quot; &quot;des prozesses&quot; ## [3457] &quot;der nichts&quot; &quot;der nichts&quot; ## [3459] &quot;der unteren&quot; &quot;der fortgang&quot; ## [3461] &quot;des prozesses&quot; &quot;den .\\&quot;,&quot; ## [3463] &quot;das können&quot; &quot;die wahl&quot; ## [3465] &quot;der zwei&quot; &quot;die gesellschaft&quot; ## [3467] &quot;die verbindung&quot; &quot;den gerichtsbeamten&quot; ## [3469] &quot;den vorzimmern&quot; &quot;der untersuchungsrichter&quot; ## [3471] &quot;der auch&quot; &quot;die beamten&quot; ## [3473] &quot;der wenigstens&quot; &quot;den nächsten&quot; ## [3475] &quot;der prozesse&quot; &quot;die fremde&quot; ## [3477] &quot;die verteidigung&quot; &quot;den nächsten&quot; ## [3479] &quot;der gerade&quot; &quot;das entgegengesetzte&quot; ## [3481] &quot;den angeklagten&quot; &quot;der sie&quot; ## [3483] &quot;das ,&quot; &quot;die verteidigung&quot; ## [3485] &quot;die gunst&quot; &quot;der herren&quot; ## [3487] &quot;die herren&quot; &quot;der aus&quot; ## [3489] &quot;der verteidigung&quot; &quot;der nachteil&quot; ## [3491] &quot;die selbst&quot; &quot;das geheime&quot; ## [3493] &quot;den beamten&quot; &quot;der zusammenhang&quot; ## [3495] &quot;der bevölkerung&quot; &quot;die gewöhnlichen&quot; ## [3497] &quot;den ganz&quot; &quot;den besonders&quot; ## [3499] &quot;den richtigen&quot; &quot;das entbehren&quot; ## [3501] &quot;die akten&quot; &quot;die sonst&quot; ## [3503] &quot;die gasse&quot; &quot;der advokat&quot; ## [3505] &quot;die akten&quot; &quot;die herren&quot; ## [3507] &quot;die sie&quot; &quot;die rangordnung&quot; ## [3509] &quot;des gerichtes&quot; &quot;den eingeweihten&quot; ## [3511] &quot;das verfahren&quot; &quot;den gerichtshöfen&quot; ## [3513] &quot;die unteren&quot; &quot;die angelegenheiten&quot; ## [3515] &quot;die sie&quot; &quot;die gerichtssache&quot; ## [3517] &quot;die belehrung&quot; &quot;die man&quot; ## [3519] &quot;dem studium&quot; &quot;der einzelnen&quot; ## [3521] &quot;der schließlichen&quot; &quot;des prozesses&quot; ## [3523] &quot;der vom&quot; &quot;dem weiteren&quot; ## [3525] &quot;den ergebnissen&quot; &quot;die verteidigung&quot; ## [3527] &quot;die doch&quot; &quot;der regel&quot; ## [3529] &quot;des prozesses&quot; &quot;dem angeklagten&quot; ## [3531] &quot;der verteidigung&quot; &quot;die gereiztheit&quot; ## [3533] &quot;der beamten&quot; &quot;die sich&quot; ## [3535] &quot;den parteien&quot; &quot;der mache&quot; ## [3537] &quot;der weise&quot; &quot;die kleinen&quot; ## [3539] &quot;den .\\&quot;,&quot; &quot;die sehr&quot; ## [3541] &quot;den anschein&quot; &quot;der wahrheit&quot; ## [3543] &quot;die eingaben&quot; &quot;des advokaten&quot; ## [3545] &quot;den war&quot; &quot;den advokaten&quot; ## [3547] &quot;der eintreten&quot; &quot;die treppe&quot; ## [3549] &quot;die advokaten&quot; &quot;dem treppenabsatz&quot; ## [3551] &quot;den ,&quot; &quot;den beamten&quot; ## [3553] &quot;die beamtenschaft&quot; &quot;der nicht&quot; ## [3555] &quot;den alten&quot; &quot;den wollten&quot; ## [3557] &quot;der wurde&quot; &quot;der die&quot; ## [3559] &quot;den kollegen&quot; &quot;das dauerte&quot; ## [3561] &quot;der alte&quot; &quot;der nachtarbeit&quot; ## [3563] &quot;die unten&quot; &quot;der hinter&quot; ## [3565] &quot;der tür&quot; &quot;den advokaten&quot; ## [3567] &quot;der kleinste&quot; &quot;die verhältnisse&quot; ## [3569] &quot;der durchsetzen&quot; &quot;der angeklagte&quot; ## [3571] &quot;den prozeß&quot; &quot;den ,&quot; ## [3573] &quot;die anders&quot; &quot;den könnten&quot; ## [3575] &quot;das einzig&quot; &quot;den vorhandenen&quot; ## [3577] &quot;den .\\&quot;,&quot; &quot;die besondere&quot; ## [3579] &quot;der immer&quot; &quot;den sinn&quot; ## [3581] &quot;der schwebe&quot; &quot;den boden&quot; ## [3583] &quot;den füßen&quot; &quot;der große&quot; ## [3585] &quot;die kleine&quot; &quot;die arbeit&quot; ## [3587] &quot;dem advokaten&quot; &quot;den ,&quot; ## [3589] &quot;das verhalten&quot; &quot;dem kanzleidirektor&quot; ## [3591] &quot;der liste&quot; &quot;des prozesses&quot; ## [3593] &quot;die beamten&quot; &quot;der .\\&quot;,&quot; ## [3595] &quot;die allerdings&quot; &quot;der nicht&quot; ## [3597] &quot;den ,&quot; &quot;den zu&quot; ## [3599] &quot;den aufhören&quot; &quot;den ,&quot; ## [3601] &quot;den man&quot; &quot;den ,&quot; ## [3603] &quot;der hat&quot; &quot;das geringste&quot; ## [3605] &quot;die von&quot; &quot;die man&quot; ## [3607] &quot;die mithilfe&quot; &quot;das ist&quot; ## [3609] &quot;das einzige&quot; &quot;das dann&quot; ## [3611] &quot;den sie&quot; &quot;der hand&quot; ## [3613] &quot;das ist&quot; &quot;das ärgste&quot; ## [3615] &quot;das einem&quot; &quot;den angeklagten&quot; ## [3617] &quot;der prozeß&quot; &quot;das geschieht&quot; ## [3619] &quot;der einmal&quot; &quot;das geschieht&quot; ## [3621] &quot;der prozeß&quot; &quot;der advokat&quot; ## [3623] &quot;der prozeß&quot; &quot;der angeklagte&quot; ## [3625] &quot;dem advokaten&quot; &quot;die besten&quot; ## [3627] &quot;den beamten&quot; &quot;der prozeß&quot; ## [3629] &quot;den darf&quot; &quot;der angeklagte&quot; ## [3631] &quot;den advokaten&quot; &quot;die vielen&quot; ## [3633] &quot;die man&quot; &quot;den schönsten&quot; ## [3635] &quot;den ,&quot; &quot;das neue&quot; ## [3637] &quot;den dürfen&quot; &quot;der prozeß&quot; ## [3639] &quot;der grund&quot; &quot;dem prozeß&quot; ## [3641] &quot;die eingabe&quot; &quot;das eile&quot; ## [3643] &quot;die einleitenden&quot; &quot;den beamten&quot; ## [3645] &quot;die hätten&quot; &quot;den .\\&quot;,&quot; ## [3647] &quot;den werden&quot; &quot;die k.&quot; ## [3649] &quot;der allzu&quot; &quot;den könnte&quot; ## [3651] &quot;das ergebnis&quot; &quot;die weitere&quot; ## [3653] &quot;den wert&quot; &quot;den kanzleidirektor&quot; ## [3655] &quot;das ganze&quot; &quot;die chirurgen&quot; ## [3657] &quot;das folgende&quot; &quot;den war&quot; ## [3659] &quot;der advokat&quot; &quot;dem besuch&quot; ## [3661] &quot;die art&quot; &quot;den .\\&quot;,&quot; ## [3663] &quot;der ersten&quot; &quot;die letzte&quot; ## [3665] &quot;die übergabe&quot; &quot;den reden&quot; ## [3667] &quot;den advokaten&quot; &quot;das hatte&quot; ## [3669] &quot;der versäumt&quot; &quot;die einzige&quot; ## [3671] &quot;die es&quot; &quot;dem advokaten&quot; ## [3673] &quot;den tee&quot; &quot;der advokat&quot; ## [3675] &quot;den tee&quot; &quot;der advokat&quot; ## [3677] &quot;der advokat&quot; &quot;dem er&quot; ## [3679] &quot;das geschirr&quot; &quot;der advokat&quot; ## [3681] &quot;den mund&quot; &quot;den .\\&quot;,&quot; ## [3683] &quot;der verzweiflung&quot; &quot;der advokat&quot; ## [3685] &quot;den war&quot; &quot;der advokat&quot; ## [3687] &quot;den vordergrund&quot; &quot;die unaufhörlich&quot; ## [3689] &quot;den beamten&quot; &quot;den ?\\&quot;,&quot; ## [3691] &quot;der advokat&quot; &quot;der prozesse&quot; ## [3693] &quot;den advokaten&quot; &quot;den angeklagten&quot; ## [3695] &quot;das nicht&quot; &quot;dem prozeß&quot; ## [3697] &quot;das war&quot; &quot;der prozesse&quot; ## [3699] &quot;dem advokaten&quot; &quot;den sie&quot; ## [3701] &quot;der ,&quot; &quot;der advokat&quot; ## [3703] &quot;den .\\&quot;,&quot; &quot;die erste&quot; ## [3705] &quot;der prozeß&quot; &quot;den angaben&quot; ## [3707] &quot;des advokaten&quot; &quot;den anfängen&quot; ## [3709] &quot;den angeklagten&quot; &quot;der entscheidung&quot; ## [3711] &quot;der wenigstens&quot; &quot;der bekanntmachung&quot; ## [3713] &quot;die zu&quot; &quot;die höheren&quot; ## [3715] &quot;den weitergegeben&quot; &quot;den großer&quot; ## [3717] &quot;den kopf&quot; &quot;die verachtung&quot; ## [3719] &quot;die er&quot; &quot;den prozeß&quot; ## [3721] &quot;der welt&quot; &quot;den prozeß&quot; ## [3723] &quot;der prozeß&quot; &quot;den wäre&quot; ## [3725] &quot;der onkel&quot; &quot;dem verlauf&quot; ## [3727] &quot;des prozesses&quot; &quot;den prozeß&quot; ## [3729] &quot;das verhältnis&quot; &quot;dem prozeß&quot; ## [3731] &quot;die wahl&quot; &quot;den prozeß&quot; ## [3733] &quot;der abzulehnen&quot; &quot;den ,&quot; ## [3735] &quot;der bank&quot; &quot;die ihm&quot; ## [3737] &quot;das ermöglicht&quot; &quot;dem prozeß&quot; ## [3739] &quot;den ,&quot; &quot;den sollte&quot; ## [3741] &quot;den gedanken&quot; &quot;der prozeß&quot; ## [3743] &quot;die bank&quot; &quot;das die&quot; ## [3745] &quot;die eben&quot; &quot;den mußten&quot; ## [3747] &quot;den gedanken&quot; &quot;den eigenen&quot; ## [3749] &quot;dem advokaten&quot; &quot;die vertretung&quot; ## [3751] &quot;des ,&quot; &quot;den ,&quot; ## [3753] &quot;dem prozeß&quot; &quot;die vielleicht&quot; ## [3755] &quot;der advokat&quot; &quot;die eingabe&quot; ## [3757] &quot;den tag&quot; &quot;den ,&quot; ## [3759] &quot;die anderen&quot; &quot;den hut&quot; ## [3761] &quot;die bank&quot; &quot;der die&quot; ## [3763] &quot;der andere&quot; &quot;die beamten&quot; ## [3765] &quot;das gitter&quot; &quot;den gang&quot; ## [3767] &quot;den ,&quot; &quot;das gericht&quot; ## [3769] &quot;der sein&quot; &quot;die schwierigkeit&quot; ## [3771] &quot;der abfassung&quot; &quot;der eingabe&quot; ## [3773] &quot;der scham&quot; &quot;den schreibblock&quot; ## [3775] &quot;den gedankengang&quot; &quot;dem schwerfälligen&quot; ## [3777] &quot;die tür&quot; &quot;des direktionszimmers&quot; ## [3779] &quot;der direktor-stellvertreter&quot; &quot;der direktor-stellvertreter&quot; ## [3781] &quot;die eingabe&quot; &quot;der er&quot; ## [3783] &quot;den er&quot; &quot;der zum&quot; ## [3785] &quot;die nun&quot; &quot;der direktor-stellvertreter&quot; ## [3787] &quot;den er&quot; &quot;der hand&quot; ## [3789] &quot;dem schreibblock&quot; &quot;der für&quot; ## [3791] &quot;die eingabe&quot; &quot;die eingabe&quot; ## [3793] &quot;den .\\&quot;,&quot; &quot;den nächten&quot; ## [3795] &quot;den auch&quot; &quot;die nächte&quot; ## [3797] &quot;das war&quot; &quot;das unsinnigste&quot; ## [3799] &quot;die eingabe&quot; &quot;dem glauben&quot; ## [3801] &quot;die eingabe&quot; &quot;der hinterlist&quot; ## [3803] &quot;die den&quot; &quot;der fertigstellung&quot; ## [3805] &quot;der vorhandenen&quot; &quot;das ganze&quot; ## [3807] &quot;den kleinsten&quot; &quot;die erinnerung&quot; ## [3809] &quot;den mußte&quot; &quot;der pensionierung&quot; ## [3811] &quot;den kindisch&quot; &quot;die langen&quot; ## [3813] &quot;den direktor-stellvertreter&quot; &quot;die kurzen&quot; ## [3815] &quot;der verfassung&quot; &quot;der ging&quot; ## [3817] &quot;dem ein&quot; &quot;dem finger&quot; ## [3819] &quot;dem knopf&quot; &quot;der elektrischen&quot; ## [3821] &quot;die ins&quot; &quot;den ,&quot; ## [3823] &quot;die zeit&quot; &quot;die wertvoll&quot; ## [3825] &quot;die diener&quot; &quot;die schon&quot; ## [3827] &quot;der bank&quot; &quot;die man&quot; ## [3829] &quot;der die&quot; &quot;der geschlossenen&quot; ## [3831] &quot;der fleißige&quot; &quot;die beste&quot; ## [3833] &quot;dem vorhergegangenen&quot; &quot;das folgende&quot; ## [3835] &quot;den ersten&quot; &quot;den k.&quot; ## [3837] &quot;den fabrikanten&quot; &quot;der fabrikant&quot; ## [3839] &quot;der geschäftssache&quot; &quot;der ihm&quot; ## [3841] &quot;das er&quot; &quot;das geschäft&quot; ## [3843] &quot;die rede&quot; &quot;des fabrikanten&quot; ## [3845] &quot;der gedanke&quot; &quot;das wichtige&quot; ## [3847] &quot;der nicht&quot; &quot;die dauer&quot; ## [3849] &quot;den lauteren&quot; &quot;des fabrikanten&quot; ## [3851] &quot;dem kopf&quot; &quot;das unterlassen&quot; ## [3853] &quot;den kahlen&quot; &quot;die papiere&quot; ## [3855] &quot;der fabrikant&quot; &quot;dem eingeständnis&quot; ## [3857] &quot;dem gespannten&quot; &quot;des offenbar&quot; ## [3859] &quot;die geschäftliche&quot; &quot;den müsse&quot; ## [3861] &quot;den kopf&quot; &quot;dem bleistift&quot; ## [3863] &quot;den papieren&quot; &quot;der fabrikant&quot; ## [3865] &quot;die ziffern&quot; &quot;das entscheidende&quot; ## [3867] &quot;der fabrikant&quot; &quot;die papiere&quot; ## [3869] &quot;der hand&quot; &quot;des geschäftes&quot; ## [3871] &quot;die lippen&quot; &quot;die papiere&quot; ## [3873] &quot;das einzig&quot; &quot;die seitenlehne&quot; ## [3875] &quot;die tür&quot; &quot;des direktionszimmers&quot; ## [3877] &quot;der direktor-stellvertreter&quot; &quot;die unmittelbare&quot; ## [3879] &quot;die für&quot; &quot;der fabrikant&quot; ## [3881] &quot;dem direktor-stellvertreter&quot; &quot;der direktor-stellvertreter&quot; ## [3883] &quot;der verschwinden&quot; &quot;die herren&quot; ## [3885] &quot;der ,&quot; &quot;der die&quot; ## [3887] &quot;der fabrikant&quot; &quot;das geschäft&quot; ## [3889] &quot;den habe&quot; &quot;der sich&quot; ## [3891] &quot;dem blick&quot; &quot;des direktor-stellvertreters&quot; ## [3893] &quot;der über&quot; &quot;die papiere&quot; ## [3895] &quot;die beiden&quot; &quot;den schreibtisch&quot; ## [3897] &quot;der fabrikant&quot; &quot;den direktor-stellvertreter&quot; ## [3899] &quot;der papiere&quot; &quot;die flache&quot; ## [3901] &quot;den herren&quot; &quot;dem gefühl&quot; ## [3903] &quot;die große&quot; &quot;die ihn&quot; ## [3905] &quot;der direktor-stellvertreter&quot; &quot;der sich&quot; ## [3907] &quot;dem gespräch&quot; &quot;das papier&quot; ## [3909] &quot;dem prokuristen&quot; &quot;der auf&quot; ## [3911] &quot;den tisch&quot; &quot;der seite&quot; ## [3913] &quot;der direktor-stellvertreter&quot; &quot;der wurde&quot; ## [3915] &quot;den fabrikanten&quot; &quot;der er&quot; ## [3917] &quot;dem er&quot; &quot;die angelegenheit&quot; ## [3919] &quot;dem fabrikanten&quot; &quot;das vollständig&quot; ## [3921] &quot;dem herrn&quot; &quot;die sache&quot; ## [3923] &quot;dem fabrikanten&quot; &quot;den ,&quot; ## [3925] &quot;den händen&quot; &quot;den schreibtisch&quot; ## [3927] &quot;dem pult&quot; &quot;die zwei&quot; ## [3929] &quot;den die&quot; &quot;den .\\&quot;,&quot; ## [3931] &quot;der tür&quot; &quot;der fabrikant&quot; ## [3933] &quot;dem herrn&quot; &quot;den erfolg&quot; ## [3935] &quot;der besprechung&quot; &quot;die leute&quot; ## [3937] &quot;dem glauben&quot; &quot;dem fabrikanten&quot; ## [3939] &quot;der diener&quot; &quot;die brüstung&quot; ## [3941] &quot;der hand&quot; &quot;der klinke&quot; ## [3943] &quot;den platz&quot; &quot;der schnee&quot; ## [3945] &quot;die schulter&quot; &quot;der entschluß&quot; ## [3947] &quot;die hand&quot; &quot;der dar&quot; ## [3949] &quot;die verteidigung&quot; &quot;den advokaten&quot; ## [3951] &quot;der ferne&quot; &quot;den können&quot; ## [3953] &quot;den kopf&quot; &quot;der zurückziehen&quot; ## [3955] &quot;den augenblick&quot; &quot;dem gericht&quot; ## [3957] &quot;der erfolg&quot; &quot;das heutige&quot; ## [3959] &quot;dem direktor-stellvertreter&quot; &quot;dem fabrikanten&quot; ## [3961] &quot;den ?\\&quot;,&quot; &quot;den ihm&quot; ## [3963] &quot;den weg&quot; &quot;den ,&quot; ## [3965] &quot;der durch&quot; &quot;die notwendigkeit&quot; ## [3967] &quot;das glücklich&quot; &quot;die durchführung&quot; ## [3969] &quot;der bank&quot; &quot;die eingabe&quot; ## [3971] &quot;die ein&quot; &quot;die bitte&quot; ## [3973] &quot;den !\\&quot;,&quot; &quot;die bank&quot; ## [3975] &quot;den schreibtisch&quot; &quot;dem dachboden&quot; ## [3977] &quot;die gerichtsbeamten&quot; &quot;den schriften&quot; ## [3979] &quot;die geschäfte&quot; &quot;der bank&quot; ## [3981] &quot;die ,&quot; &quot;dem prozeß&quot; ## [3983] &quot;der bank&quot; &quot;der beurteilung&quot; ## [3985] &quot;das gerücht&quot; &quot;der direktor&quot; ## [3987] &quot;das gegengewicht&quot; &quot;das k.&quot; ## [3989] &quot;den anfing&quot; &quot;dem einfluß&quot; ## [3991] &quot;des direktor-stellvertreters&quot; &quot;der außerdem&quot; ## [3993] &quot;den leidenden&quot; &quot;des direktors&quot; ## [3995] &quot;der eigenen&quot; &quot;das fenster&quot; ## [3997] &quot;den händen&quot; &quot;die klinke&quot; ## [3999] &quot;das fenster&quot; &quot;der mit&quot; ## [4001] &quot;das zimmer&quot; &quot;den hereingeweht&quot; ## [4003] &quot;der fabrikant&quot; &quot;der vom&quot; ## [4005] &quot;die aktentasche&quot; &quot;des fabrikanten&quot; ## [4007] &quot;der dieser&quot; &quot;die papiere&quot; ## [4009] &quot;das ergebnis&quot; &quot;der verhandlungen&quot; ## [4011] &quot;dem direktor-stellvertreter&quot; &quot;der fabrikant&quot; ## [4013] &quot;den geschäftsabschluß&quot; &quot;der tasche&quot; ## [4015] &quot;der mensch&quot; &quot;der verdächtig&quot; ## [4017] &quot;der fabrikant&quot; &quot;die papier&quot; ## [4019] &quot;der bemerkung&quot; &quot;des fabrikanten&quot; ## [4021] &quot;der fabrikant&quot; &quot;den wohl&quot; ## [4023] &quot;dem wetter&quot; &quot;der hand&quot; ## [4025] &quot;die schläfe&quot; &quot;der fabrikant&quot; ## [4027] &quot;der ein&quot; &quot;den ruhig&quot; ## [4029] &quot;der hat&quot; &quot;die tür&quot; ## [4031] &quot;den fabrikanten&quot; &quot;der letzten&quot; ## [4033] &quot;das wäre&quot; &quot;der fabrikant&quot; ## [4035] &quot;dem fingerknöchel&quot; &quot;das hat&quot; ## [4037] &quot;der direktor-stellvertreter&quot; &quot;der fabrikant&quot; ## [4039] &quot;der direktor-stellvertreter&quot; &quot;dem gericht&quot; ## [4041] &quot;der fabrikant&quot; &quot;das betrifft&quot; ## [4043] &quot;die mitteilung&quot; &quot;die ich&quot; ## [4045] &quot;dem gericht&quot; &quot;den fabrikanten&quot; ## [4047] &quot;der wie&quot; &quot;der fabrikant&quot; ## [4049] &quot;der nicht&quot; &quot;das geringste&quot; ## [4051] &quot;dem drängt&quot; &quot;den .\\&quot;,&quot; ## [4053] &quot;der heutigen&quot; &quot;der fabrikant&quot; ## [4055] &quot;die aktentasche&quot; &quot;die achsel&quot; ## [4057] &quot;der mit&quot; &quot;die ich&quot; ## [4059] &quot;der ,&quot; &quot;das porträtmalen&quot; ## [4061] &quot;das gericht&quot; &quot;dem gericht&quot; ## [4063] &quot;den sich&quot; &quot;dem höre&quot; ## [4065] &quot;dem seiner&quot; &quot;die sache&quot; ## [4067] &quot;der unter&quot; &quot;den eigenen&quot; ## [4069] &quot;das nur&quot; &quot;den sie&quot; ## [4071] &quot;das will&quot; &quot;das empfehlungsschreiben&quot; ## [4073] &quot;die adresse&quot; &quot;den brief&quot; ## [4075] &quot;die tasche&quot; &quot;der vorteil&quot; ## [4077] &quot;den ihm&quot; &quot;die empfehlung&quot; ## [4079] &quot;der schaden&quot; &quot;der darin&quot; ## [4081] &quot;der fabrikant&quot; &quot;der maler&quot; ## [4083] &quot;die nachricht&quot; &quot;dem fabrikanten&quot; ## [4085] &quot;der schon&quot; &quot;dem weg&quot; ## [4087] &quot;der tür&quot; &quot;der ihm&quot; ## [4089] &quot;der fabrikant&quot; &quot;den besten&quot; ## [4091] &quot;den würden&quot; &quot;den wollen&quot; ## [4093] &quot;die bank&quot; &quot;den ,&quot; ## [4095] &quot;den prozeß&quot; &quot;der hand&quot; ## [4097] &quot;den fabrikanten&quot; &quot;das vorzimmer&quot; ## [4099] &quot;dem fabrikanten&quot; &quot;die empfehlung&quot; ## [4101] &quot;die möglichkeiten&quot; &quot;die gefahren&quot; ## [4103] &quot;die das&quot; &quot;die bemerkung&quot; ## [4105] &quot;des fabrikanten&quot; &quot;die bank&quot; ## [4107] &quot;der in&quot; &quot;die schwierigkeiten&quot; ## [4109] &quot;die er&quot; &quot;die bank&quot; ## [4111] &quot;den wollen&quot; &quot;den kopf&quot; ## [4113] &quot;der diener&quot; &quot;die hier&quot; ## [4115] &quot;den .\\&quot;,&quot; &quot;der diener&quot; ## [4117] &quot;den ,&quot; &quot;der wollte&quot; ## [4119] &quot;den anderen&quot; &quot;der bank&quot; ## [4121] &quot;der eine&quot; &quot;den winterrock&quot; ## [4123] &quot;des dieners&quot; &quot;der keine&quot; ## [4125] &quot;den geschäftsgang&quot; &quot;der wann&quot; ## [4127] &quot;der wollen&quot; &quot;die sachen&quot; ## [4129] &quot;der wollen&quot; &quot;die herren&quot; ## [4131] &quot;die nun&quot; &quot;der stumm&quot; ## [4133] &quot;der sich&quot; &quot;dem diener&quot; ## [4135] &quot;der ihm&quot; &quot;den hut&quot; ## [4137] &quot;die offene&quot; &quot;der schneefall&quot; ## [4139] &quot;den mantelkragen&quot; &quot;die höhe&quot; ## [4141] &quot;dem halse&quot; &quot;dem nebenzimmer&quot; ## [4143] &quot;der direktor-stellvertreter&quot; &quot;den herren&quot; ## [4145] &quot;der direktor-stellvertreter&quot; &quot;den herren&quot; ## [4147] &quot;die herren&quot; &quot;die herren&quot; ## [4149] &quot;den müßten&quot; &quot;der direktor-stellvertreter&quot; ## [4151] &quot;der den&quot; &quot;der hand&quot; ## [4153] &quot;die verhandlungen&quot; &quot;des herren&quot; ## [4155] &quot;den .\\&quot;,&quot; &quot;die zeit&quot; ## [4157] &quot;die tür&quot; &quot;die zu&quot; ## [4159] &quot;dem vorzimmer&quot; &quot;der direktor-stellvertreter&quot; ## [4161] &quot;den winterrock&quot; &quot;der auszuziehen&quot; ## [4163] &quot;die zwei&quot; &quot;die ja&quot; ## [4165] &quot;den direktor-stellvertreter&quot; &quot;der ,&quot; ## [4167] &quot;der tür&quot; &quot;der zu&quot; ## [4169] &quot;die sich&quot; &quot;der vertreter&quot; ## [4171] &quot;der firma&quot; &quot;den soll&quot; ## [4173] &quot;der direktor-stellvertreter&quot; &quot;den «&quot; ## [4175] &quot;das nicht&quot; &quot;die vertragsabschrift&quot; ## [4177] &quot;der in&quot; &quot;den ,&quot; ## [4179] &quot;der erste&quot; &quot;der es&quot; ## [4181] &quot;dem diener&quot; &quot;der schon&quot; ## [4183] &quot;die tür&quot; &quot;den auftrag&quot; ## [4185] &quot;dem direktor&quot; &quot;die meldung&quot; ## [4187] &quot;die bank&quot; &quot;der in&quot; ## [4189] &quot;die jener&quot; &quot;die gerichtskanzleien&quot; ## [4191] &quot;den ,&quot; &quot;die häuser&quot; ## [4193] &quot;die gassen&quot; &quot;der auf&quot; ## [4195] &quot;dem zerflossenen&quot; &quot;dem der&quot; ## [4197] &quot;des großen&quot; &quot;den anderen&quot; ## [4199] &quot;der mauer&quot; &quot;der gerade&quot; ## [4201] &quot;der sich&quot; &quot;den nahen&quot; ## [4203] &quot;der treppe&quot; &quot;der erde&quot; ## [4205] &quot;des alles&quot; &quot;den lärms&quot; ## [4207] &quot;der aus&quot; &quot;der anderen&quot; ## [4209] &quot;des torganges&quot; &quot;die tür&quot; ## [4211] &quot;der werkstätte&quot; &quot;den im&quot; ## [4213] &quot;das sie&quot; &quot;den hämmern&quot; ## [4215] &quot;die an&quot; &quot;der wand&quot; ## [4217] &quot;das zwischen&quot; &quot;die gesichter&quot; ## [4219] &quot;den ,&quot; &quot;den maler&quot; ## [4221] &quot;der in&quot; &quot;die bank&quot; ## [4223] &quot;den kleinsten&quot; &quot;das auf&quot; ## [4225] &quot;der bank&quot; &quot;die treppen&quot; ## [4227] &quot;die stockwerke&quot; &quot;der maler&quot; ## [4229] &quot;die luft&quot; &quot;die enge&quot; ## [4231] &quot;den seiten&quot; &quot;die treppe&quot; ## [4233] &quot;der mädchen&quot; &quot;das gestolpert&quot; ## [4235] &quot;den anderen&quot; &quot;der weiterstiegen&quot; ## [4237] &quot;das mädchen&quot; &quot;dem ellbogen&quot; ## [4239] &quot;der seite&quot; &quot;der ihre&quot; ## [4241] &quot;dem blicke&quot; &quot;den maler&quot; ## [4243] &quot;den mund&quot; &quot;der hand&quot; ## [4245] &quot;des oder&quot; &quot;den händen&quot; ## [4247] &quot;den andern&quot; &quot;der höhe&quot; ## [4249] &quot;der nächsten&quot; &quot;der treppe&quot; ## [4251] &quot;der alle&quot; &quot;der buckligen&quot; ## [4253] &quot;den und&quot; &quot;den zu&quot; ## [4255] &quot;den seiten&quot; &quot;der treppe&quot; ## [4257] &quot;die mauer&quot; &quot;der hand&quot; ## [4259] &quot;der spitze&quot; &quot;der mädchen&quot; ## [4261] &quot;die sich&quot; &quot;die bucklige&quot; ## [4263] &quot;die führung&quot; &quot;den richtigen&quot; ## [4265] &quot;der treppe&quot; &quot;die treppe&quot; ## [4267] &quot;die zu&quot; &quot;die durch&quot; ## [4269] &quot;die der&quot; &quot;der mitte&quot; ## [4271] &quot;der treppe&quot; &quot;das geräusch&quot; ## [4273] &quot;der vielen&quot; &quot;die tür&quot; ## [4275] &quot;der türspalte&quot; &quot;die menge&quot; ## [4277] &quot;die bucklige&quot; &quot;die hände&quot; ## [4279] &quot;die übrigen&quot; &quot;der maler&quot; ## [4281] &quot;die tür&quot; &quot;die mädchen&quot; ## [4283] &quot;der buckligen&quot; &quot;der maler&quot; ## [4285] &quot;den röcken&quot; &quot;die tür&quot; ## [4287] &quot;den anderen&quot; &quot;die es&quot; ## [4289] &quot;der maler&quot; &quot;die schwelle&quot; ## [4291] &quot;das ganze&quot; &quot;den anschein&quot; ## [4293] &quot;die mädchen&quot; &quot;der tür&quot; ## [4295] &quot;dem anderen&quot; &quot;die hälse&quot; ## [4297] &quot;die höhe&quot; &quot;dem maler&quot; ## [4299] &quot;die k.&quot; &quot;der maler&quot; ## [4301] &quot;die bucklige&quot; &quot;die tür&quot; ## [4303] &quot;die hand&quot; &quot;die tür&quot; ## [4305] &quot;der die&quot; &quot;die fratzen&quot; ## [4307] &quot;der maler&quot; &quot;die mit&quot; ## [4309] &quot;dem verfolgen&quot; &quot;den sie&quot; ## [4311] &quot;der verleihen&quot; &quot;das ist&quot; ## [4313] &quot;die ich&quot; &quot;die tür&quot; ## [4315] &quot;die bucklige&quot; &quot;dem pinsel&quot; ## [4317] &quot;die lippen&quot; &quot;die sie&quot; ## [4319] &quot;das zimmer&quot; &quot;der ich&quot; ## [4321] &quot;die unordnung&quot; &quot;das bett&quot; ## [4323] &quot;der so&quot; &quot;der tür&quot; ## [4325] &quot;der maler&quot; &quot;der .\\&quot;,&quot; ## [4327] &quot;der maler&quot; &quot;den gedanken&quot; ## [4329] &quot;der länge&quot; &quot;den ,&quot; ## [4331] &quot;den balken&quot; &quot;der wand&quot; ## [4333] &quot;das bett&quot; &quot;das mit&quot; ## [4335] &quot;den war&quot; &quot;der mitte&quot; ## [4337] &quot;des zimmers&quot; &quot;das mit&quot; ## [4339] &quot;den baumelten&quot; &quot;das fenster&quot; ## [4341] &quot;das man&quot; &quot;das mit&quot; ## [4343] &quot;des nachbarhauses&quot; &quot;das umdrehen&quot; ## [4345] &quot;des schlüssels&quot; &quot;den brief&quot; ## [4347] &quot;des fabrikanten&quot; &quot;der tasche&quot; ## [4349] &quot;dem maler&quot; &quot;der maler&quot; ## [4351] &quot;den brief&quot; &quot;der fabrikant&quot; ## [4353] &quot;das bestimmteste&quot; &quot;der auf&quot; ## [4355] &quot;den fabrikanten&quot; &quot;der wisse&quot; ## [4357] &quot;der maler&quot; &quot;der kaufen&quot; ## [4359] &quot;der sich&quot; &quot;den maler&quot; ## [4361] &quot;dem brief&quot; &quot;der fabrikant&quot; ## [4363] &quot;dem brief&quot; &quot;den maler&quot; ## [4365] &quot;dem maler&quot; &quot;die staffelei&quot; ## [4367] &quot;der maler&quot; &quot;das hemd&quot; ## [4369] &quot;das über&quot; &quot;der staffelei&quot; ## [4371] &quot;dem brief&quot; &quot;das bett&quot; ## [4373] &quot;der zufall&quot; &quot;die möglichkeit&quot; ## [4375] &quot;den ,&quot; &quot;das porträt&quot; ## [4377] &quot;dem bild&quot; &quot;des advokaten&quot; ## [4379] &quot;der seitlich&quot; &quot;die wangen&quot; ## [4381] &quot;der richter&quot; &quot;das ist&quot; ## [4383] &quot;dem bild&quot; &quot;den einzelheiten&quot; ## [4385] &quot;die in&quot; &quot;der mitte&quot; ## [4387] &quot;der rückenlehne&quot; &quot;des thronsessels&quot; ## [4389] &quot;den maler&quot; &quot;den ,&quot; ## [4391] &quot;der maler&quot; &quot;den rändern&quot; ## [4393] &quot;der figur&quot; &quot;die gerechtigkeit&quot; ## [4395] &quot;der maler&quot; &quot;die binde&quot; ## [4397] &quot;die augen&quot; &quot;die waage&quot; ## [4399] &quot;den fersen&quot; &quot;der maler&quot; ## [4401] &quot;die gerechtigkeit&quot; &quot;die siegesgöttin&quot; ## [4403] &quot;das ist&quot; &quot;die gerechtigkeit&quot; ## [4405] &quot;die waage&quot; &quot;der maler&quot; ## [4407] &quot;der mit&quot; &quot;den hatte&quot; ## [4409] &quot;die figur&quot; &quot;dem thronsessel&quot; ## [4411] &quot;der maler&quot; &quot;der die&quot; ## [4413] &quot;den thronsessel&quot; &quot;das alles&quot; ## [4415] &quot;den maler&quot; &quot;der auf&quot; ## [4417] &quot;dem richterstuhl&quot; &quot;der maler&quot; ## [4419] &quot;die herren&quot; &quot;der maler&quot; ## [4421] &quot;die höhere&quot; &quot;dem ist&quot; ## [4423] &quot;der gerade&quot; &quot;die einzelheiten&quot; ## [4425] &quot;der tracht&quot; &quot;des sitzes&quot; ## [4427] &quot;die pastellfarben&quot; &quot;der richter&quot; ## [4429] &quot;der maler&quot; &quot;der anblick&quot; ## [4431] &quot;des bildes&quot; &quot;die hemdärmel&quot; ## [4433] &quot;die hand&quot; &quot;den zitternden&quot; ## [4435] &quot;der stifte&quot; &quot;den kopf&quot; ## [4437] &quot;des richters&quot; &quot;der strahlenförmig&quot; ## [4439] &quot;den rand&quot; &quot;des bildes&quot; ## [4441] &quot;des schattens&quot; &quot;den kopf&quot; ## [4443] &quot;der eine&quot; &quot;die figur&quot; ## [4445] &quot;der gerechtigkeit&quot; &quot;die figur&quot; ## [4447] &quot;die göttin&quot; &quot;der gerechtigkeit&quot; ## [4449] &quot;die des&quot; &quot;die göttin&quot; ## [4451] &quot;der jagd&quot; &quot;die arbeit&quot; ## [4453] &quot;des malers&quot; &quot;das darf&quot; ## [4455] &quot;der maler&quot; &quot;den er&quot; ## [4457] &quot;das für&quot; &quot;des gerichtes&quot; ## [4459] &quot;der maler&quot; &quot;die stifte&quot; ## [4461] &quot;die hände&quot; &quot;der und&quot; ## [4463] &quot;der wahrheit&quot; &quot;das gericht&quot; ## [4465] &quot;der gesprochen&quot; &quot;das nicht&quot; ## [4467] &quot;das bei&quot; &quot;den wollte&quot; ## [4469] &quot;des gerichtes&quot; &quot;den .\\&quot;,&quot; ## [4471] &quot;der hinter&quot; &quot;der tür&quot; ## [4473] &quot;die mädchen&quot; &quot;das schlüsselloch&quot; ## [4475] &quot;die ritzen&quot; &quot;den maler&quot; ## [4477] &quot;der maler&quot; &quot;das eine&quot; ## [4479] &quot;der maler&quot; &quot;die weitere&quot; ## [4481] &quot;die anerkannten&quot; &quot;das ist&quot; ## [4483] &quot;der fall&quot; &quot;der maler&quot; ## [4485] &quot;dem fabrikanten&quot; &quot;der mann&quot; ## [4487] &quot;die sache&quot; &quot;des malers&quot; ## [4489] &quot;die luft&quot; &quot;den ,&quot; ## [4491] &quot;der ecke&quot; &quot;die schwüle&quot; ## [4493] &quot;den winterrock&quot; &quot;den rock&quot; ## [4495] &quot;der maler&quot; &quot;das zimmer&quot; ## [4497] &quot;die wärme&quot; &quot;die ihm&quot; ## [4499] &quot;die dumpfe&quot; &quot;das atmen&quot; ## [4501] &quot;das zimmer&quot; &quot;der maler&quot; ## [4503] &quot;das bett&quot; &quot;den einzigen&quot; ## [4505] &quot;des zimmers&quot; &quot;der staffelei&quot; ## [4507] &quot;dem schien&quot; &quot;der maler&quot; ## [4509] &quot;die betten&quot; &quot;der zu&quot; ## [4511] &quot;die erste&quot; &quot;die k.&quot; ## [4513] &quot;die beantwortung&quot; &quot;der maler&quot; ## [4515] &quot;den kopf&quot; &quot;der den&quot; ## [4517] &quot;die sache&quot; &quot;des gerichtes&quot; ## [4519] &quot;des kind&quot; &quot;die sache&quot; ## [4521] &quot;den kopf&quot; &quot;das gericht&quot; ## [4523] &quot;der maler&quot; &quot;das ist&quot; ## [4525] &quot;die hauptsache&quot; &quot;der maler&quot; ## [4527] &quot;der nur&quot; &quot;das zunächst&quot; ## [4529] &quot;das gericht&quot; &quot;den und&quot; ## [4531] &quot;das gericht&quot; &quot;der schuld&quot; ## [4533] &quot;des angeklagten&quot; &quot;den kann&quot; ## [4535] &quot;der maler&quot; &quot;die höhe&quot; ## [4537] &quot;das gericht&quot; &quot;der auf&quot; ## [4539] &quot;den sich&quot; &quot;den sie&quot; ## [4541] &quot;dem wirklichen&quot; &quot;den maler&quot; ## [4543] &quot;der begann&quot; &quot;der tür&quot; ## [4545] &quot;der maler&quot; &quot;dem herrn&quot; ## [4547] &quot;das mädchen&quot; &quot;den ,&quot; ## [4549] &quot;der maler&quot; &quot;der unverständlicher&quot; ## [4551] &quot;der zurufe&quot; &quot;der maler&quot; ## [4553] &quot;die bittend&quot; &quot;der mädchen&quot; ## [4555] &quot;die treppe&quot; &quot;die stufen&quot; ## [4557] &quot;der auf&quot; &quot;die stufen&quot; ## [4559] &quot;der maler&quot; &quot;der zurückkehrte&quot; ## [4561] &quot;dem maler&quot; &quot;der maler&quot; ## [4563] &quot;den ,&quot; &quot;dem kopf&quot; ## [4565] &quot;den maler&quot; &quot;der auf&quot; ## [4567] &quot;das habe&quot; &quot;die allgemeine&quot; ## [4569] &quot;des malers&quot; &quot;dem hinweis&quot; ## [4571] &quot;die mädchen&quot; &quot;dem sah&quot; ## [4573] &quot;der die&quot; &quot;den stufen&quot; ## [4575] &quot;den balken&quot; &quot;das gericht&quot; ## [4577] &quot;der maler&quot; &quot;die beine&quot; ## [4579] &quot;den fußspitzen&quot; &quot;den boden&quot; ## [4581] &quot;den sie&quot; &quot;das tun&quot; ## [4583] &quot;das gericht&quot; &quot;die man&quot; ## [4585] &quot;dem gericht&quot; &quot;der maler&quot; ## [4587] &quot;den zeigefinger&quot; &quot;dem öffentlichen&quot; ## [4589] &quot;den beratungszimmern&quot; &quot;den korridoren&quot; ## [4591] &quot;der zum&quot; &quot;der maler&quot; ## [4593] &quot;dem ,&quot; &quot;die richter&quot; ## [4595] &quot;der advokat&quot; &quot;die beziehungen&quot; ## [4597] &quot;des malers&quot; &quot;den eitlen&quot; ## [4599] &quot;der maler&quot; &quot;den kreis&quot; ## [4601] &quot;die k.&quot; &quot;der bank&quot; ## [4603] &quot;das äußerste&quot; &quot;der maler&quot; ## [4605] &quot;die wirkung&quot; &quot;die seine&quot; ## [4607] &quot;der ununterbrochene&quot; &quot;den herren&quot; ## [4609] &quot;der mich&quot; &quot;der künstlerische&quot; ## [4611] &quot;den richtern&quot; &quot;das vertrauen&quot; ## [4613] &quot;des malers&quot; &quot;das war&quot; ## [4615] &quot;der maler&quot; &quot;das eine&quot; ## [4617] &quot;die sich&quot; &quot;das malen&quot; ## [4619] &quot;der verschiedenen&quot; &quot;den .\\&quot;,&quot; ## [4621] &quot;der schublade&quot; &quot;die aufzeichnungen&quot; ## [4623] &quot;die ich&quot; &quot;dem zeige&quot; ## [4625] &quot;die ich&quot; &quot;der richter&quot; ## [4627] &quot;den ,&quot; &quot;die alten&quot; ## [4629] &quot;den sind&quot; &quot;das kann&quot; ## [4631] &quot;das ist&quot; &quot;der an&quot; ## [4633] &quot;der bank&quot; &quot;der maler&quot; ## [4635] &quot;die achseln&quot; &quot;der einen&quot; ## [4637] &quot;das ?\\&quot;,&quot; &quot;den der&quot; ## [4639] &quot;der maler&quot; &quot;des unternehmen&quot; ## [4641] &quot;die wiederholte&quot; &quot;der maler&quot; ## [4643] &quot;des prozesses&quot; &quot;die dadurch&quot; ## [4645] &quot;den maler&quot; &quot;die hilfe&quot; ## [4647] &quot;des malers&quot; &quot;die des&quot; ## [4649] &quot;der maler&quot; &quot;der befreiung&quot; ## [4651] &quot;die wirkliche&quot; &quot;die scheinbare&quot; ## [4653] &quot;die verschleppung&quot; &quot;die wirkliche&quot; ## [4655] &quot;das beste&quot; &quot;den geringsten&quot; ## [4657] &quot;der lösung&quot; &quot;die auf&quot; ## [4659] &quot;die wirkliche&quot; &quot;die unschuld&quot; ## [4661] &quot;des angeklagten&quot; &quot;der mich&quot; ## [4663] &quot;der maler&quot; &quot;der maler&quot; ## [4665] &quot;das gefühl&quot; &quot;den worten&quot; ## [4667] &quot;des malers&quot; &quot;dem gerichtsverfahren&quot; ## [4669] &quot;dem wich&quot; &quot;die bemerkung&quot; ## [4671] &quot;das gericht&quot; &quot;das öffentliche&quot; ## [4673] &quot;der unschuldige&quot; &quot;dem gericht&quot; ## [4675] &quot;dem aber&quot; &quot;die richter&quot; ## [4677] &quot;die wirkliche&quot; &quot;der zweite&quot; ## [4679] &quot;der maler&quot; &quot;die rede&quot; ## [4681] &quot;dem ,&quot; &quot;dem ,&quot; ## [4683] &quot;das dürfen&quot; &quot;der unschuldige&quot; ## [4685] &quot;die richter&quot; &quot;den können&quot; ## [4687] &quot;das gegenteil&quot; &quot;den war&quot; ## [4689] &quot;das nicht&quot; &quot;dem vater&quot; ## [4691] &quot;die richter&quot; &quot;die in&quot; ## [4693] &quot;die möglichkeit&quot; &quot;das bestätigt&quot; ## [4695] &quot;die meinung&quot; &quot;die ich&quot; ## [4697] &quot;dem gericht&quot; &quot;das ganze&quot; ## [4699] &quot;der maler&quot; &quot;den ,&quot; ## [4701] &quot;das genügt&quot; &quot;der haben&quot; ## [4703] &quot;der maler&quot; &quot;das festzustellen&quot; ## [4705] &quot;die abschließenden&quot; &quot;des gerichts&quot; ## [4707] &quot;den nicht&quot; &quot;den richtern&quot; ## [4709] &quot;den erhalten&quot; &quot;der mehrzahl&quot; ## [4711] &quot;dem muß&quot; &quot;der gemalt&quot; ## [4713] &quot;die solche&quot; &quot;den zum&quot; ## [4715] &quot;den ändern&quot; &quot;den nicht&quot; ## [4717] &quot;der maler&quot; &quot;das kann&quot; ## [4719] &quot;den «&quot; &quot;des malers&quot; ## [4721] &quot;die zeit&quot; &quot;der maler&quot; ## [4723] &quot;die wahrheit&quot; &quot;der gar&quot; ## [4725] &quot;das äußerste&quot; &quot;den maler&quot; ## [4727] &quot;den weise&quot; &quot;der wirklichen&quot; ## [4729] &quot;die scheinbare&quot; &quot;die verschleppung&quot; ## [4731] &quot;die allein&quot; &quot;der maler&quot; ## [4733] &quot;den ,&quot; &quot;den rock&quot; ## [4735] &quot;der bisher&quot; &quot;die erklärungen&quot; ## [4737] &quot;des malers&quot; &quot;dem aber&quot; ## [4739] &quot;die hitze&quot; &quot;den war&quot; ## [4741] &quot;der stirn&quot; &quot;der maler&quot; ## [4743] &quot;das fenster&quot; &quot;der maler&quot; ## [4745] &quot;die ganze&quot; &quot;der maler&quot; ## [4747] &quot;der er&quot; &quot;den nebel&quot; ## [4749] &quot;das gefühl&quot; &quot;der luft&quot; ## [4751] &quot;der hand&quot; &quot;das federbett&quot; ## [4753] &quot;das ist&quot; &quot;der maler&quot; ## [4755] &quot;den kann&quot; &quot;die wärme&quot; ## [4757] &quot;die balkenritzen&quot; &quot;der sogar&quot; ## [4759] &quot;die zweite&quot; &quot;den .\\&quot;,&quot; ## [4761] &quot;der maler&quot; &quot;das und&quot; ## [4763] &quot;das bett&quot; &quot;die kleine&quot; ## [4765] &quot;der wand&quot; &quot;der maler&quot; ## [4767] &quot;das bett&quot; &quot;der tür&quot; ## [4769] &quot;der richter&quot; &quot;den ich&quot; ## [4771] &quot;die tür&quot; &quot;dem tiefsten&quot; ## [4773] &quot;dem bett&quot; &quot;die tür&quot; ## [4775] &quot;den jede&quot; &quot;den richtern&quot; ## [4777] &quot;die flüche&quot; &quot;den schlüssel&quot; ## [4779] &quot;den .\\&quot;,&quot; &quot;der geringsten&quot; ## [4781] &quot;den angeln&quot; &quot;den rock&quot; ## [4783] &quot;den rock&quot; &quot;die knie&quot; ## [4785] &quot;die besprechung&quot; &quot;der anziehen&quot; ## [4787] &quot;den rock&quot; &quot;der mädchen&quot; ## [4789] &quot;den rock&quot; &quot;den ritzen&quot; ## [4791] &quot;das schauspiel&quot; &quot;die mädchen&quot; ## [4793] &quot;der maler&quot; &quot;die zwei&quot; ## [4795] &quot;die ausdrücke&quot; &quot;der vergessen&quot; ## [4797] &quot;die scheinbare&quot; &quot;die verschleppung&quot; ## [4799] &quot;der maler&quot; &quot;des ist&quot; ## [4801] &quot;der unterschied&quot; &quot;der ,&quot; ## [4803] &quot;die scheinbare&quot; &quot;die verschleppung&quot; ## [4805] &quot;die scheinbare&quot; &quot;der text&quot; ## [4807] &quot;den mir&quot; &quot;dem richter&quot; ## [4809] &quot;den ich&quot; &quot;die bestätigung&quot; ## [4811] &quot;die bestätigung&quot; &quot;das ist&quot; ## [4813] &quot;den blicken&quot; &quot;des malers&quot; ## [4815] &quot;die last&quot; &quot;das wäre&quot; ## [4817] &quot;der richter&quot; &quot;dem nicht&quot; ## [4819] &quot;der maler&quot; &quot;der mir&quot; ## [4821] &quot;die sache&quot; &quot;dem betreffenden&quot; ## [4823] &quot;den richtern&quot; &quot;die mich&quot; ## [4825] &quot;das wird&quot; &quot;das aber&quot; ## [4827] &quot;den ausschlag&quot; &quot;der richter&quot; ## [4829] &quot;dem richter&quot; &quot;der ihren&quot; ## [4831] &quot;den angeklagten&quot; &quot;die zeit&quot; ## [4833] &quot;der höchsten&quot; &quot;die leute&quot; ## [4835] &quot;dem freispruch&quot; &quot;der richter&quot; ## [4837] &quot;der bestätigung&quot; &quot;die bürgschaft&quot; ## [4839] &quot;dem gericht&quot; &quot;der maler&quot; ## [4841] &quot;der ,&quot; &quot;die untersten&quot; ## [4843] &quot;das recht&quot; &quot;das oberste&quot; ## [4845] &quot;das große&quot; &quot;der anklage&quot; ## [4847] &quot;das recht&quot; &quot;der anklage&quot; ## [4849] &quot;das heißt&quot; &quot;den ,&quot; ## [4851] &quot;den augenblick&quot; &quot;der anklage&quot; ## [4853] &quot;der höhere&quot; &quot;dem gericht&quot; ## [4855] &quot;den vorschriften&quot; &quot;die gerichtskanzleien&quot; ## [4857] &quot;der unterschied&quot; &quot;der wirklichen&quot; ## [4859] &quot;der scheinbaren&quot; &quot;die prozeßakten&quot; ## [4861] &quot;den ,&quot; &quot;den gänzlich&quot; ## [4863] &quot;dem verfahren&quot; &quot;die anklage&quot; ## [4865] &quot;der prozeß&quot; &quot;der freispruch&quot; ## [4867] &quot;dem akt&quot; &quot;die bestätigung&quot; ## [4869] &quot;der unschuld&quot; &quot;den freispruch&quot; ## [4871] &quot;die begründung&quot; &quot;des freispruchs&quot; ## [4873] &quot;den ist&quot; &quot;der ununterbrochene&quot; ## [4875] &quot;der gerichtskanzleien&quot; &quot;den höheren&quot; ## [4877] &quot;den niedrigeren&quot; &quot;den anschein&quot; ## [4879] &quot;der akt&quot; &quot;der freispruch&quot; ## [4881] &quot;das nicht&quot; &quot;den akt&quot; ## [4883] &quot;die hand&quot; &quot;die anklage&quot; ## [4885] &quot;die sofortige&quot; &quot;dem scheinbaren&quot; ## [4887] &quot;der neuen&quot; &quot;das ist&quot; ## [4889] &quot;der freigesprochene&quot; &quot;der zu&quot; ## [4891] &quot;das freie&quot; &quot;der prozeß&quot; ## [4893] &quot;der maler&quot; &quot;der prozeß&quot; ## [4895] &quot;der die&quot; &quot;der alle&quot; ## [4897] &quot;das letztere&quot; &quot;der maler&quot; ## [4899] &quot;dem eindruck&quot; &quot;den k.&quot; ## [4901] &quot;der ein&quot; &quot;des malers&quot; ## [4903] &quot;die erwirkung&quot; &quot;die des&quot; ## [4905] &quot;der maler&quot; &quot;die richter&quot; ## [4907] &quot;die zweite&quot; &quot;des angeklagten&quot; ## [4909] &quot;den ?\\&quot;,&quot; &quot;das ist&quot; ## [4911] &quot;der fall&quot; &quot;die richter&quot; ## [4913] &quot;den die&quot; &quot;der richter&quot; ## [4915] &quot;des falles&quot; &quot;den sein&quot; ## [4917] &quot;die bemühungen&quot; &quot;den zweiten&quot; ## [4919] &quot;den veränderten&quot; &quot;den angepaßt&quot; ## [4921] &quot;den und&quot; &quot;die vor&quot; ## [4923] &quot;dem ersten&quot; &quot;der nicht&quot; ## [4925] &quot;den kopf&quot; &quot;der maler&quot; ## [4927] &quot;dem zweiten&quot; &quot;die dritte&quot; ## [4929] &quot;dem dritten&quot; &quot;die vierte&quot; ## [4931] &quot;das liegt&quot; &quot;des scheinbaren&quot; ## [4933] &quot;der scheinbare&quot; &quot;der maler&quot; ## [4935] &quot;die verschleppung&quot; &quot;das wesen&quot; ## [4937] &quot;der verschleppung&quot; &quot;der maler&quot; ## [4939] &quot;das nachthemd&quot; &quot;der er&quot; ## [4941] &quot;die brust&quot; &quot;die seiten&quot; ## [4943] &quot;die verschleppung&quot; &quot;der maler&quot; ## [4945] &quot;die verschleppung&quot; &quot;der prozeß&quot; ## [4947] &quot;der angeklagte&quot; &quot;der helfer&quot; ## [4949] &quot;der helfer&quot; &quot;dem gericht&quot; ## [4951] &quot;der erreichung&quot; &quot;den prozeß&quot; ## [4953] &quot;den augen&quot; &quot;dem betreffenden&quot; ## [4955] &quot;dem bei&quot; &quot;dem richter&quot; ## [4957] &quot;die unmittelbaren&quot; &quot;der bestimmtheit&quot; ## [4959] &quot;der prozeß&quot; &quot;der prozeß&quot; ## [4961] &quot;der angeklagte&quot; &quot;dem scheinbaren&quot; ## [4963] &quot;die verschleppung&quot; &quot;den vorteil&quot; ## [4965] &quot;die zukunft&quot; &quot;des angeklagten&quot; ## [4967] &quot;dem schrecken&quot; &quot;der plötzlichen&quot; ## [4969] &quot;die anstrengungen&quot; &quot;der erreichung&quot; ## [4971] &quot;des scheinbaren&quot; &quot;den sind&quot; ## [4973] &quot;die verschleppung&quot; &quot;den angeklagten&quot; ## [4975] &quot;die man&quot; &quot;der angeklagte&quot; ## [4977] &quot;das ist&quot; &quot;der scheinbaren&quot; ## [4979] &quot;der prozeß&quot; &quot;den ,&quot; ## [4981] &quot;der angeklagte&quot; &quot;den ,&quot; ## [4983] &quot;den und&quot; &quot;der prozeß&quot; ## [4985] &quot;dem kleinen&quot; &quot;den er&quot; ## [4987] &quot;den ist&quot; &quot;den .\\&quot;,&quot; ## [4989] &quot;das bringt&quot; &quot;den angeklagten&quot; ## [4991] &quot;die sie&quot; &quot;die verhöre&quot; ## [4993] &quot;der keine&quot; &quot;die anordnungen&quot; ## [4995] &quot;der letzten&quot; &quot;den rock&quot; ## [4997] &quot;den arm&quot; &quot;den .\\&quot;,&quot; ## [4999] &quot;der tür&quot; &quot;der maler&quot; ## [5001] &quot;der auch&quot; &quot;den war&quot; ## [5003] &quot;die luft&quot; &quot;die sie&quot; ## [5005] &quot;dem von&quot; &quot;der anstrengung&quot; ## [5007] &quot;der er&quot; &quot;der kopf&quot; ## [5009] &quot;der maler&quot; &quot;den heimweg&quot; ## [5011] &quot;den haben&quot; &quot;das gemeinsame&quot; ## [5013] &quot;des angeklagten&quot; &quot;die wirkliche&quot; ## [5015] &quot;das erkannt&quot; &quot;den kern&quot; ## [5017] &quot;der sache&quot; &quot;der maler&quot; ## [5019] &quot;die hand&quot; &quot;den rock&quot; ## [5021] &quot;die frische&quot; &quot;die mädchen&quot; ## [5023] &quot;der schon&quot; &quot;dem maler&quot; ## [5025] &quot;den .\\&quot;,&quot; &quot;das .\\&quot;,&quot; ## [5027] &quot;den .\\&quot;,&quot; &quot;die vorteile&quot; ## [5029] &quot;der in&quot; &quot;den rock&quot; ## [5031] &quot;den mantel&quot; &quot;die schulter&quot; ## [5033] &quot;der jetzt&quot; &quot;die mädchen&quot; ## [5035] &quot;die schreienden&quot; &quot;die tür&quot; ## [5037] &quot;der maler&quot; &quot;der ihm&quot; ## [5039] &quot;die bank&quot; &quot;die tür&quot; ## [5041] &quot;der klinke&quot; &quot;die die&quot; ## [5043] &quot;dem gegendruck&quot; &quot;den mädchen&quot; ## [5045] &quot;den ?\\&quot;,&quot; &quot;der maler&quot; ## [5047] &quot;die tür&quot; &quot;dem bett&quot; ## [5049] &quot;den und&quot; &quot;die tür&quot; ## [5051] &quot;der maler&quot; &quot;das bett&quot; ## [5053] &quot;das ich&quot; &quot;der maler&quot; ## [5055] &quot;der vergeßlichkeit&quot; &quot;die entlohnung&quot; ## [5057] &quot;die hilfe&quot; &quot;den ,&quot; ## [5059] &quot;das bild&quot; &quot;dem atelier&quot; ## [5061] &quot;der maler&quot; &quot;dem bett&quot; ## [5063] &quot;der hervor&quot; &quot;die so&quot; ## [5065] &quot;der maler&quot; &quot;den augen&quot; ## [5067] &quot;der maler&quot; &quot;das bild&quot; ## [5069] &quot;die weit&quot; &quot;der entfernt&quot; ## [5071] &quot;den .\\&quot;,&quot; &quot;der maler&quot; ## [5073] &quot;den aufhob&quot; &quot;der maler&quot; ## [5075] &quot;der geringste&quot; &quot;dem ersten&quot; ## [5077] &quot;die bäume&quot; &quot;das gras&quot; ## [5079] &quot;der sonnenuntergang&quot; &quot;das motiv&quot; ## [5081] &quot;der maler&quot; &quot;die völlig&quot; ## [5083] &quot;der maler&quot; &quot;der zu&quot; ## [5085] &quot;die drei&quot; &quot;der ?\\&quot;,&quot; ## [5087] &quot;den wir&quot; &quot;der maler&quot; ## [5089] &quot;die bilder&quot; &quot;der mitgeben&quot; ## [5091] &quot;die ich&quot; &quot;der ab&quot; ## [5093] &quot;das düstere&quot; &quot;die beruflichen&quot; ## [5095] &quot;des bettelmalers&quot; &quot;der ein&quot; ## [5097] &quot;dem maler&quot; &quot;die rede&quot; ## [5099] &quot;der maler&quot; &quot;den ihnen&quot; ## [5101] &quot;der gleich&quot; &quot;das bett&quot; ## [5103] &quot;die tür&quot; &quot;das bett&quot; ## [5105] &quot;der maler&quot; &quot;das tut&quot; ## [5107] &quot;der ,&quot; &quot;der hier&quot; ## [5109] &quot;das federbett&quot; &quot;die offene&quot; ## [5111] &quot;den fuß&quot; &quot;der zurück&quot; ## [5113] &quot;das ?\\&quot;,&quot; &quot;den maler&quot; ## [5115] &quot;die gerichtskanzleien&quot; &quot;dem dachboden&quot; ## [5117] &quot;den gerichtskanzleien&quot; &quot;das gericht&quot; ## [5119] &quot;den hatte&quot; &quot;das verhalten&quot; ## [5121] &quot;der richter&quot; &quot;der .\\&quot;,&quot; ## [5123] &quot;dem eine&quot; &quot;der verglichen&quot; ## [5125] &quot;die luft&quot; &quot;den seiten&quot; ## [5127] &quot;des ganges&quot; &quot;der kanzlei&quot; ## [5129] &quot;die für&quot; &quot;die einrichtung&quot; ## [5131] &quot;der parteienverkehr&quot; &quot;das gesicht&quot; ## [5133] &quot;der bank&quot; &quot;des ganges&quot; ## [5135] &quot;das bett&quot; &quot;der maler&quot; ## [5137] &quot;den bildern&quot; &quot;dem goldknopf&quot; ## [5139] &quot;den diese&quot; &quot;den gewöhnlichen&quot; ## [5141] &quot;der maler&quot; &quot;den auftrag&quot; ## [5143] &quot;den bildern&quot; &quot;das taschentuch&quot; ## [5145] &quot;den mund&quot; &quot;die mädchen&quot; ## [5147] &quot;die also&quot; &quot;die zweite&quot; ## [5149] &quot;des ateliers&quot; &quot;den war&quot; ## [5151] &quot;den umweg&quot; &quot;der maler&quot; ## [5153] &quot;dem andrang&quot; &quot;der mädchen&quot; ## [5155] &quot;der gasse&quot; &quot;den ersten&quot; ## [5157] &quot;der ihm&quot; &quot;den weg&quot; ## [5159] &quot;den diener&quot; &quot;den ,&quot; ## [5161] &quot;die augen&quot; &quot;den auffiel&quot; ## [5163] &quot;der diener&quot; &quot;den kutschbock&quot; ## [5165] &quot;der bank&quot; &quot;die bilder&quot; ## [5167] &quot;den ,&quot; &quot;dem maler&quot; ## [5169] &quot;die unterste&quot; &quot;die allernächsten&quot; ## [5171] &quot;den blicken&quot; &quot;des direktor-stellvertreters&quot; ## [5173] &quot;des advokaten&quot; &quot;dem advokaten&quot; ## [5175] &quot;die überzeugung&quot; &quot;der notwendigkeit&quot; ## [5177] &quot;die entschließung&quot; &quot;dem tage&quot; ## [5179] &quot;dem er&quot; &quot;der tür&quot; ## [5181] &quot;des advokaten&quot; &quot;dem advokaten&quot; ## [5183] &quot;der brieflich&quot; &quot;die persönliche&quot; ## [5185] &quot;den .\\&quot;,&quot; &quot;dem wollte&quot; ## [5187] &quot;der anderen&quot; &quot;der kündigung&quot; ## [5189] &quot;der mit&quot; &quot;den ,&quot; ## [5191] &quot;der advokat&quot; &quot;die kündigung&quot; ## [5193] &quot;der nicht&quot; &quot;des advokaten&quot; ## [5195] &quot;der advokat&quot; &quot;der kündigung&quot; ## [5197] &quot;der advokat&quot; &quot;dem advokaten&quot; ## [5199] &quot;die verteidigung&quot; &quot;das erste&quot; ## [5201] &quot;der tür&quot; &quot;des advokaten&quot; ## [5203] &quot;die andere&quot; &quot;der mann&quot; ## [5205] &quot;der sonst&quot; &quot;den knopf&quot; ## [5207] &quot;der anderen&quot; &quot;dem guckfenster&quot; ## [5209] &quot;der tür&quot; &quot;des advokaten&quot; ## [5211] &quot;die tür&quot; &quot;die wohnung&quot; ## [5213] &quot;die tür&quot; &quot;der tür&quot; ## [5215] &quot;der anderen&quot; &quot;der schlüssel&quot; ## [5217] &quot;die tür&quot; &quot;den gang&quot; ## [5219] &quot;der zwischen&quot; &quot;den zimmern&quot; ## [5221] &quot;der warnungsruf&quot; &quot;des türöffners&quot; ## [5223] &quot;dem türöffner&quot; &quot;der hand&quot; ## [5225] &quot;der mann&quot; &quot;der advokat&quot; ## [5227] &quot;die mangelhafte&quot; &quot;des mannes&quot; ## [5229] &quot;der mann&quot; &quot;der kerze&quot; ## [5231] &quot;die beine&quot; &quot;die hände&quot; ## [5233] &quot;den hut&quot; &quot;den besitz&quot; ## [5235] &quot;dem mageren&quot; &quot;der und&quot; ## [5237] &quot;die eine&quot; &quot;das gesicht&quot; ## [5239] &quot;dem hut&quot; &quot;dem weg&quot; ## [5241] &quot;der kleine&quot; &quot;das ihr&quot; ## [5243] &quot;die antwort&quot; &quot;der fremde&quot; ## [5245] &quot;den interessen&quot; &quot;der anderen&quot; ## [5247] &quot;der tür&quot; &quot;des arbeitszimmers&quot; ## [5249] &quot;des advokaten&quot; &quot;dem kaufmann&quot; ## [5251] &quot;der folgsam&quot; &quot;den kaufmann&quot; ## [5253] &quot;das zimmer&quot; &quot;dem bild&quot; ## [5255] &quot;des richters&quot; &quot;den kaufmann&quot; ## [5257] &quot;den hosenträgern&quot; &quot;den ?\\&quot;,&quot; ## [5259] &quot;dem zeigefinger&quot; &quot;die höhe&quot; ## [5261] &quot;der kaufmann&quot; &quot;die kerze&quot; ## [5263] &quot;den kaufmann&quot; &quot;den eindruck&quot; ## [5265] &quot;den das&quot; &quot;der kaufmann&quot; ## [5267] &quot;den niedrigen&quot; &quot;der niedrigste&quot; ## [5269] &quot;der kaufmann&quot; &quot;die kerze&quot; ## [5271] &quot;der kaufmann&quot; &quot;den händen&quot; ## [5273] &quot;dem gang&quot; &quot;der kaufmann&quot; ## [5275] &quot;der küche&quot; &quot;dem advokaten&quot; ## [5277] &quot;das nicht&quot; &quot;der zurückgerufen&quot; ## [5279] &quot;der kaufmann&quot; &quot;die widersprechenden&quot; ## [5281] &quot;der küche&quot; &quot;der herd&quot; ## [5283] &quot;dem übrigen&quot; &quot;die küche&quot; ## [5285] &quot;die beim&quot; &quot;der auf&quot; ## [5287] &quot;den sessel&quot; &quot;den sich&quot; ## [5289] &quot;der kaufmann&quot; &quot;der mann&quot; ## [5291] &quot;die andere&quot; &quot;die suppe&quot; ## [5293] &quot;der kaufmann&quot; &quot;dem sessel&quot; ## [5295] &quot;den ihn&quot; &quot;die kerze&quot; ## [5297] &quot;den fingern&quot; &quot;den docht&quot; ## [5299] &quot;den rauch&quot; &quot;der hand&quot; ## [5301] &quot;der dem&quot; &quot;dem suppentopf&quot; ## [5303] &quot;den hände&quot; &quot;die augen&quot; ## [5305] &quot;den kaufmann&quot; &quot;die kerze&quot; ## [5307] &quot;den kaufmann&quot; &quot;die unaufmerksamkeit&quot; ## [5309] &quot;des advokaten&quot; &quot;dem advokaten&quot; ## [5311] &quot;der advokat&quot; &quot;den prozeß&quot; ## [5313] &quot;den hut&quot; &quot;den sachen&quot; ## [5315] &quot;der zurück&quot; &quot;der suppe&quot; ## [5317] &quot;den oder&quot; &quot;die suppe&quot; ## [5319] &quot;die fragliche&quot; &quot;die anwesenheit&quot; ## [5321] &quot;des kaufmanns&quot; &quot;die lust&quot; ## [5323] &quot;die schon&quot; &quot;dem gang&quot; ## [5325] &quot;der zurück&quot; &quot;die suppe&quot; ## [5327] &quot;die unterredung&quot; &quot;des advokaten&quot; ## [5329] &quot;der kaufmann&quot; &quot;das ?\\&quot;,&quot; ## [5331] &quot;die suppe&quot; &quot;die suppe&quot; ## [5333] &quot;dem essen&quot; &quot;das ,&quot; ## [5335] &quot;dem advokaten&quot; &quot;den ,&quot; ## [5337] &quot;die ausgesprochenen&quot; &quot;der tasse&quot; ## [5339] &quot;die suppe&quot; &quot;der tür&quot; ## [5341] &quot;der tasse&quot; &quot;der advokat&quot; ## [5343] &quot;den genügenden&quot; &quot;das ganze&quot; ## [5345] &quot;der kündigung&quot; &quot;den wurde&quot; ## [5347] &quot;der kaufmann&quot; &quot;das der&quot; ## [5349] &quot;des advokaten&quot; &quot;der kaufmann&quot; ## [5351] &quot;der kaufmann&quot; &quot;der advokat&quot; ## [5353] &quot;das geschäft&quot; &quot;den sie&quot; ## [5355] &quot;die genauen&quot; &quot;dem tod&quot; ## [5357] &quot;das ist&quot; &quot;der advokat&quot; ## [5359] &quot;der gerichte&quot; &quot;der kaufmann&quot; ## [5361] &quot;den anderen&quot; &quot;das gesagte&quot; ## [5363] &quot;die schulter&quot; &quot;den schenkel&quot; ## [5365] &quot;der kaufmann&quot; &quot;der kaufmann&quot; ## [5367] &quot;der kaufmann&quot; &quot;der kaufmann&quot; ## [5369] &quot;dem advokaten&quot; &quot;das sie&quot; ## [5371] &quot;dem advokaten&quot; &quot;der kaufmann&quot; ## [5373] &quot;das ist&quot; &quot;der kaufmann&quot; ## [5375] &quot;der noch&quot; &quot;das habe&quot; ## [5377] &quot;die zahl&quot; &quot;der kaufmann&quot; ## [5379] &quot;der kaufmann&quot; &quot;das nicht&quot; ## [5381] &quot;der kaufmann&quot; &quot;das ist&quot; ## [5383] &quot;die hoffnung&quot; &quot;den prozeß&quot; ## [5385] &quot;die büroräume&quot; &quot;die entziehung&quot; ## [5387] &quot;des geldes&quot; &quot;die entziehung&quot; ## [5389] &quot;der kaufmann&quot; &quot;der davon&quot; ## [5391] &quot;das bloße&quot; &quot;die schwere&quot; ## [5393] &quot;den kanzleien&quot; &quot;das ist&quot; ## [5395] &quot;die frühere&quot; &quot;des kaufmanns&quot; ## [5397] &quot;der kaufmann&quot; &quot;den tag&quot; ## [5399] &quot;den wie&quot; &quot;den auf&quot; ## [5401] &quot;der kaufmann&quot; &quot;den gerichtsdiener&quot; ## [5403] &quot;das wußten&quot; &quot;das wußten&quot; ## [5405] &quot;der kaufmann&quot; &quot;das sind&quot; ## [5407] &quot;der kaufmann&quot; &quot;die leute&quot; ## [5409] &quot;den es&quot; &quot;der viele&quot; ## [5411] &quot;die der&quot; &quot;den aberglauben&quot; ## [5413] &quot;den anderen&quot; &quot;dem gesicht&quot; ## [5415] &quot;des angeklagten&quot; &quot;der zeichnung&quot; ## [5417] &quot;der lippen&quot; &quot;den ausgang&quot; ## [5419] &quot;des prozesses&quot; &quot;den ,&quot; ## [5421] &quot;den .\\&quot;,&quot; &quot;den meisten&quot; ## [5423] &quot;die tatsachen&quot; &quot;der anblick&quot; ## [5425] &quot;das zeichen&quot; &quot;der kaufmann&quot; ## [5427] &quot;der kaufmann&quot; &quot;der und&quot; ## [5429] &quot;der «&quot; &quot;der kaufmann&quot; ## [5431] &quot;das wäre&quot; &quot;der glaube&quot; ## [5433] &quot;das gericht&quot; &quot;der fall&quot; ## [5435] &quot;das sorgfältigste&quot; &quot;die anderen&quot; ## [5437] &quot;den wartezimmern&quot; &quot;die abergläubischen&quot; ## [5439] &quot;die herren&quot; &quot;das warten&quot; ## [5441] &quot;der kaufmann&quot; &quot;das selbständige&quot; ## [5443] &quot;die sache&quot; &quot;das wäre&quot; ## [5445] &quot;das wohl&quot; &quot;den kaufmann&quot; ## [5447] &quot;den zu&quot; &quot;die hand&quot; ## [5449] &quot;den ,&quot; &quot;der kaufmann&quot; ## [5451] &quot;das selbstverständlichste&quot; &quot;der welt&quot; ## [5453] &quot;die angelegenheiten&quot; &quot;des kaufmanns&quot; ## [5455] &quot;den .\\&quot;,&quot; &quot;der kaufmann&quot; ## [5457] &quot;den kopf&quot; &quot;dem kaufmann&quot; ## [5459] &quot;den ,&quot; &quot;der suppe&quot; ## [5461] &quot;die zeit&quot; &quot;der kaufmann&quot; ## [5463] &quot;der ,&quot; &quot;den .\\&quot;,&quot; ## [5465] &quot;dem kopf&quot; &quot;den kaufmann&quot; ## [5467] &quot;der kaufmann&quot; &quot;den zwar&quot; ## [5469] &quot;der ,&quot; &quot;der zum&quot; ## [5471] &quot;der kaufmann&quot; &quot;das ist&quot; ## [5473] &quot;der ersten&quot; &quot;die eingabe&quot; ## [5475] &quot;der kaufmann&quot; &quot;das entgegenkommen&quot; ## [5477] &quot;das ich&quot; &quot;des gerichtes&quot; ## [5479] &quot;die zwar&quot; &quot;die aber&quot; ## [5481] &quot;des advokaten&quot; &quot;dem gericht&quot; ## [5483] &quot;die dem&quot; &quot;die arbeit&quot; ## [5485] &quot;des advokaten&quot; &quot;die eingabe&quot; ## [5487] &quot;die ich&quot; &quot;der kaufmann&quot; ## [5489] &quot;das nicht&quot; &quot;das ganze&quot; ## [5491] &quot;der wenigstens&quot; &quot;den regelrechten&quot; ## [5493] &quot;die meist&quot; &quot;den gleichen&quot; ## [5495] &quot;die antworten&quot; &quot;der woche&quot; ## [5497] &quot;der wo&quot; &quot;das war&quot; ## [5499] &quot;der telephonische&quot; &quot;den ,&quot; ## [5501] &quot;das geringste&quot; &quot;die erste&quot; ## [5503] &quot;der nächsten&quot; &quot;den würde&quot; ## [5505] &quot;den ab&quot; &quot;die festsetzung&quot; ## [5507] &quot;der verhandlung&quot; &quot;der kann&quot; ## [5509] &quot;die festsetzung&quot; &quot;der hauptverhandlung&quot; ## [5511] &quot;der durchgesetzt&quot; &quot;dem ich&quot; ## [5513] &quot;die winkeladvokaten&quot; &quot;das sind&quot; ## [5515] &quot;den ich&quot; &quot;die advokaten&quot; ## [5517] &quot;das ist&quot; &quot;der gerichtsgebrauch&quot; ## [5519] &quot;den winkeladvokaten&quot; &quot;die kleinen&quot; ## [5521] &quot;die großen&quot; &quot;die ich&quot; ## [5523] &quot;den kleinen&quot; &quot;den verachteten&quot; ## [5525] &quot;die großen&quot; &quot;die ?\\&quot;,&quot; ## [5527] &quot;der kaufmann&quot; &quot;der nicht&quot; ## [5529] &quot;dem er&quot; &quot;die großen&quot; ## [5531] &quot;dem sich&quot; &quot;das nicht&quot; ## [5533] &quot;den ,&quot; &quot;den sie&quot; ## [5535] &quot;die sache&quot; &quot;das niedrige&quot; ## [5537] &quot;die besprechungen&quot; &quot;den anderen&quot; ## [5539] &quot;das wäre&quot; &quot;der das&quot; ## [5541] &quot;die großen&quot; &quot;der kaufmann&quot; ## [5543] &quot;der ,&quot; &quot;der nicht&quot; ## [5545] &quot;die nacht&quot; &quot;den winkeladvokaten&quot; ## [5547] &quot;der sitzt&quot; &quot;die mit&quot; ## [5549] &quot;der tasse&quot; &quot;der tür&quot; ## [5551] &quot;der kleinsten&quot; &quot;den köpfen&quot; ## [5553] &quot;der kaufmann&quot; &quot;der ,&quot; ## [5555] &quot;den rücken&quot; &quot;der hand&quot; ## [5557] &quot;die er&quot; &quot;des kaufmanns&quot; ## [5559] &quot;der kaufmann&quot; &quot;dem kaufmann&quot; ## [5561] &quot;das nicht&quot; &quot;der mann&quot; ## [5563] &quot;die er&quot; &quot;dem kaufmann&quot; ## [5565] &quot;die kerze&quot; &quot;die er&quot; ## [5567] &quot;die ganze&quot; &quot;die hand&quot; ## [5569] &quot;das von&quot; &quot;der kerze&quot; ## [5571] &quot;den winkeladvokaten&quot; &quot;den winkeladvokaten&quot; ## [5573] &quot;der kaufmann&quot; &quot;die stirn&quot; ## [5575] &quot;den winkeladvokaten&quot; &quot;der kaufmann&quot; ## [5577] &quot;das weitere&quot; &quot;den ,&quot; ## [5579] &quot;den kaufmann&quot; &quot;den sprach&quot; ## [5581] &quot;der antwortete&quot; &quot;der kaufmann&quot; ## [5583] &quot;die unterredung&quot; &quot;dem advokaten&quot; ## [5585] &quot;den sie&quot; &quot;der wird&quot; ## [5587] &quot;der advokat&quot; &quot;das ,&quot; ## [5589] &quot;der zumindest&quot; &quot;den kopf&quot; ## [5591] &quot;dem sagte&quot; &quot;dem schritt&quot; ## [5593] &quot;den kaufmann&quot; &quot;der abwesende&quot; ## [5595] &quot;den kaufmann&quot; &quot;die unhöflichkeit&quot; ## [5597] &quot;der advokat&quot; &quot;den .\\&quot;,&quot; ## [5599] &quot;der meine&quot; &quot;dem aber&quot; ## [5601] &quot;den anfängen&quot; &quot;der advokat&quot; ## [5603] &quot;das anders&quot; &quot;den .\\&quot;,&quot; ## [5605] &quot;den kaufmann&quot; &quot;der advokat&quot; ## [5607] &quot;den ,&quot; &quot;das zu&quot; ## [5609] &quot;der zeit&quot; &quot;den .\\&quot;,&quot; ## [5611] &quot;der nacht&quot; &quot;der nacht&quot; ## [5613] &quot;der ,&quot; &quot;der advokat&quot; ## [5615] &quot;den hat&quot; &quot;der schwelle&quot; ## [5617] &quot;den niedrigen&quot; &quot;der von&quot; ## [5619] &quot;den bettpfosten&quot; &quot;des bettes&quot; ## [5621] &quot;der mauer&quot; &quot;den ,&quot; ## [5623] &quot;der sowie&quot; &quot;der kaufmann&quot; ## [5625] &quot;der erste&quot; &quot;den er&quot; ## [5627] &quot;dem kaufmann&quot; &quot;der richtige&quot; ## [5629] &quot;den anblick&quot; &quot;des kaufmanns&quot; ## [5631] &quot;die ihn&quot; &quot;die kündigung&quot; ## [5633] &quot;dem kaufmann&quot; &quot;der kaufmann&quot; ## [5635] &quot;der kaufmann&quot; &quot;die ihn&quot; ## [5637] &quot;der kaufmann&quot; &quot;der küche&quot; ## [5639] &quot;der rief&quot; &quot;den advokaten&quot; ## [5641] &quot;der kaufmann&quot; &quot;den weg&quot; ## [5643] &quot;den fäusten&quot; &quot;den zu&quot; ## [5645] &quot;den lief&quot; &quot;der aber&quot; ## [5647] &quot;das zimmer&quot; &quot;des advokaten&quot; ## [5649] &quot;die tür&quot; &quot;die mit&quot; ## [5651] &quot;dem fuß&quot; &quot;den türflügel&quot; ## [5653] &quot;die tür&quot; &quot;dem schlüssel&quot; ## [5655] &quot;der advokat&quot; &quot;das er&quot; ## [5657] &quot;das nachttischchen&quot; &quot;der er&quot; ## [5659] &quot;der weg.\\&quot;,&quot; &quot;der advokat&quot; ## [5661] &quot;das kommt&quot; &quot;der advokat&quot; ## [5663] &quot;die tür&quot; &quot;der advokat&quot; ## [5665] &quot;die absicht&quot; &quot;den zu&quot; ## [5667] &quot;der advokat&quot; &quot;der zudringlich&quot; ## [5669] &quot;der advokat&quot; &quot;dem dieser&quot; ## [5671] &quot;der zu&quot; &quot;die hand&quot; ## [5673] &quot;die dieser&quot; &quot;das nachttischchen&quot; ## [5675] &quot;die er&quot; &quot;dem nicht&quot; ## [5677] &quot;der advokat&quot; &quot;die ich&quot; ## [5679] &quot;der ich&quot; &quot;den würde&quot; ## [5681] &quot;die tür&quot; &quot;die meisten&quot; ## [5683] &quot;den ;&quot; &quot;das ganze&quot; ## [5685] &quot;den richtigen&quot; &quot;die angeklagten&quot; ## [5687] &quot;das allerdings&quot; &quot;der anklage&quot; ## [5689] &quot;des aussehens&quot; &quot;die meisten&quot; ## [5691] &quot;den ,&quot; &quot;der für&quot; ## [5693] &quot;den prozeß&quot; &quot;dem sind&quot; ## [5695] &quot;der größten&quot; &quot;die angeklagten&quot; ## [5697] &quot;den sie&quot; &quot;die angeklagten&quot; ## [5699] &quot;die schönsten&quot; &quot;die schuld&quot; ## [5701] &quot;die sie&quot; &quot;die richtige&quot; ## [5703] &quot;die sie&quot; &quot;den doch&quot; ## [5705] &quot;dem gegen&quot; &quot;das ihnen&quot; ## [5707] &quot;den schönen&quot; &quot;der advokat&quot; ## [5709] &quot;den letzten&quot; &quot;die bestätigung&quot; ## [5711] &quot;der advokat&quot; &quot;die nicht&quot; ## [5713] &quot;der hauptfrage&quot; &quot;der advokat&quot; ## [5715] &quot;die möglichkeit&quot; &quot;der hand&quot; ## [5717] &quot;die kerze&quot; &quot;den advokaten&quot; ## [5719] &quot;dem heutigen&quot; &quot;der advokat&quot; ## [5721] &quot;die kissen&quot; &quot;der straff&quot; ## [5723] &quot;der lauer&quot; &quot;der advokat&quot; ## [5725] &quot;der advokat&quot; &quot;dem nichts&quot; ## [5727] &quot;das wort&quot; &quot;die absicht&quot; ## [5729] &quot;der entschluß&quot; &quot;der advokat&quot; ## [5731] &quot;das federbett&quot; &quot;den bettrand&quot; ## [5733] &quot;die decke&quot; &quot;der anlaß&quot; ## [5735] &quot;der advokat&quot; &quot;dem federbett&quot; ## [5737] &quot;den oberkörper&quot; &quot;die beine&quot; ## [5739] &quot;die decke&quot; &quot;der zeit&quot; ## [5741] &quot;den .\\&quot;,&quot; &quot;das offen&quot; ## [5743] &quot;den des&quot; &quot;die er&quot; ## [5745] &quot;den hätte&quot; &quot;dem ,&quot; ## [5747] &quot;der letzten&quot; &quot;die überzeugung&quot; ## [5749] &quot;das nicht&quot; &quot;die sache&quot; ## [5751] &quot;den prozeß&quot; &quot;der advokat&quot; ## [5753] &quot;dem prozeß&quot; &quot;der prozeß&quot; ## [5755] &quot;dem advokaten&quot; &quot;die vertretung&quot; ## [5757] &quot;die last&quot; &quot;des prozesses&quot; ## [5759] &quot;das gegenteil&quot; &quot;des prozesses&quot; ## [5761] &quot;der zeit&quot; &quot;dem sie&quot; ## [5763] &quot;das gericht&quot; &quot;die ich&quot; ## [5765] &quot;dem sonst&quot; &quot;das kann&quot; ## [5767] &quot;der prozeß&quot; &quot;den leib&quot; ## [5769] &quot;den sessel&quot; &quot;die hände&quot; ## [5771] &quot;den rocktaschen&quot; &quot;der praxis&quot; ## [5773] &quot;der advokat&quot; &quot;der prozesse&quot; ## [5775] &quot;den und&quot; &quot;das widerlegt&quot; ## [5777] &quot;der advokat&quot; &quot;den anderen&quot; ## [5779] &quot;das gerichtswesen&quot; &quot;der advokat&quot; ## [5781] &quot;die standesehre&quot; &quot;die gewiß&quot; ## [5783] &quot;das ?\\&quot;,&quot; &quot;dem anschein&quot; ## [5785] &quot;der an&quot; &quot;dem verdienstentgang&quot; ## [5787] &quot;dem verlust&quot; &quot;dem war&quot; ## [5789] &quot;dem hielt&quot; &quot;den onkel&quot; ## [5791] &quot;der sah&quot; &quot;der für&quot; ## [5793] &quot;die freunde&quot; &quot;die wirkung&quot; ## [5795] &quot;das schweigen&quot; &quot;den bemerkt&quot; ## [5797] &quot;das war&quot; &quot;der änderung&quot; ## [5799] &quot;dem ich&quot; &quot;der art&quot; ## [5801] &quot;der ihrigen&quot; &quot;der immer&quot; ## [5803] &quot;die ich&quot; &quot;dem überlassen&quot; ## [5805] &quot;der aufgabe&quot; &quot;die ich&quot; ## [5807] &quot;der entschluß&quot; &quot;die natürlichen&quot; ## [5809] &quot;die mir&quot; &quot;der nähe&quot; ## [5811] &quot;die sich&quot; &quot;den brocken&quot; ## [5813] &quot;den ich&quot; &quot;dem wurde&quot; ## [5815] &quot;dem bereue&quot; &quot;den übernommenen&quot; ## [5817] &quot;die erfolge&quot; &quot;den unterschied&quot; ## [5819] &quot;den ,&quot; &quot;der zwischen&quot; ## [5821] &quot;der vertretung&quot; &quot;der vertretung&quot; ## [5823] &quot;der advokat&quot; &quot;den bis&quot; ## [5825] &quot;der andere&quot; &quot;die schultern&quot; ## [5827] &quot;den mehr&quot; &quot;dem tonfall&quot; ## [5829] &quot;des advokaten&quot; &quot;der würden&quot; ## [5831] &quot;die hinweise&quot; &quot;die fortschreitende&quot; ## [5833] &quot;die gebesserte&quot; &quot;der gerichtsbeamten&quot; ## [5835] &quot;die großen&quot; &quot;die sich&quot; ## [5837] &quot;der arbeit&quot; &quot;das bis&quot; ## [5839] &quot;den ,&quot; &quot;der mit&quot; ## [5841] &quot;das mußte&quot; &quot;den ,&quot; ## [5843] &quot;die vertretung&quot; &quot;der advokat&quot; ## [5845] &quot;den frage&quot; &quot;dem ,&quot; ## [5847] &quot;des weitere&quot; &quot;der advokat&quot; ## [5849] &quot;das ,&quot; &quot;die vermutung&quot; ## [5851] &quot;der falschen&quot; &quot;des ,&quot; ## [5853] &quot;den ,&quot; &quot;der ,&quot; ## [5855] &quot;den ,&quot; &quot;die tür&quot; ## [5857] &quot;den nachttisch&quot; &quot;der advokat&quot; ## [5859] &quot;den fall&quot; &quot;der advokat&quot; ## [5861] &quot;der ins&quot; &quot;das federbett&quot; ## [5863] &quot;der wand&quot; &quot;dem glockenzeichen&quot; ## [5865] &quot;des advokaten&quot; &quot;der sie&quot; ## [5867] &quot;der advokat&quot; &quot;die tür&quot; ## [5869] &quot;der advokat&quot; &quot;dem sie&quot; ## [5871] &quot;die sessellehne&quot; &quot;der mit&quot; ## [5873] &quot;den händen&quot; &quot;dem er&quot; ## [5875] &quot;die sie&quot; &quot;den anruf&quot; ## [5877] &quot;der tür&quot; &quot;die augenbrauen&quot; ## [5879] &quot;den kopf&quot; &quot;der befehl&quot; ## [5881] &quot;dem advokaten&quot; &quot;der wohnung&quot; ## [5883] &quot;den fußspitzen&quot; &quot;das gesicht&quot; ## [5885] &quot;die hände&quot; &quot;dem rücken&quot; ## [5887] &quot;die tür&quot; &quot;das hohe&quot; ## [5889] &quot;dem der&quot; &quot;die wand&quot; ## [5891] &quot;der schon&quot; &quot;die brust&quot; ## [5893] &quot;den rücken&quot; &quot;der advokat&quot; ## [5895] &quot;den advokaten&quot; &quot;die hände&quot; ## [5897] &quot;der advokat&quot; &quot;dem kommst&quot; ## [5899] &quot;dem der&quot; &quot;das bett&quot; ## [5901] &quot;der anblick&quot; &quot;des sprechers&quot; ## [5903] &quot;das zuhören&quot; &quot;der advokat&quot; ## [5905] &quot;die wand&quot; &quot;der advokat&quot; ## [5907] &quot;der advokat&quot; &quot;der advokat&quot; ## [5909] &quot;das gespräch&quot; &quot;der advokat&quot; ## [5911] &quot;die bitte&quot; &quot;dem ausruf&quot; ## [5913] &quot;der druck&quot; &quot;der liebe&quot; ## [5915] &quot;dem er&quot; &quot;die hände&quot; ## [5917] &quot;den .\\&quot;,&quot; &quot;der advokat&quot; ## [5919] &quot;der advokat&quot; &quot;dem sonst&quot; ## [5921] &quot;der advokat&quot; &quot;das vollständig&quot; ## [5923] &quot;den kopf&quot; &quot;den wollen&quot; ## [5925] &quot;den sessel&quot; &quot;der oder&quot; ## [5927] &quot;den fäusten&quot; &quot;der nähe&quot; ## [5929] &quot;des advokaten&quot; &quot;den ,&quot; ## [5931] &quot;das ist&quot; &quot;dem herrn&quot; ## [5933] &quot;dem noch&quot; &quot;den ,&quot; ## [5935] &quot;den alten&quot; &quot;den verdächtigen&quot; ## [5937] &quot;der ,&quot; &quot;den gewogen&quot; ## [5939] &quot;den .\\&quot;,&quot; &quot;der letzten&quot; ## [5941] &quot;der prozeß&quot; &quot;der ihn&quot; ## [5943] &quot;der advokat&quot; &quot;das zu&quot; ## [5945] &quot;der wenn&quot; &quot;den advokaten&quot; ## [5947] &quot;der so&quot; &quot;der so&quot; ## [5949] &quot;den advokaten&quot; &quot;des advokaten&quot; ## [5951] &quot;die stunden&quot; &quot;der fünfjahre&quot; ## [5953] &quot;der ich&quot; &quot;den «&quot; ## [5955] &quot;der advokat&quot; &quot;der .\\&quot;,&quot; ## [5957] &quot;der advokat&quot; &quot;das federbett&quot; ## [5959] &quot;der stille&quot; &quot;die jetzt&quot; ## [5961] &quot;dem sie&quot; &quot;den befreite&quot; ## [5963] &quot;den bettrand&quot; &quot;die mitteilungen&quot; ## [5965] &quot;des advokaten&quot; &quot;dem zweck&quot; ## [5967] &quot;dem advokaten&quot; &quot;die hand&quot; ## [5969] &quot;des advokaten&quot; &quot;die lippen&quot; ## [5971] &quot;den handkuß&quot; &quot;der advokat&quot; ## [5973] &quot;den advokaten&quot; &quot;der schöne&quot; ## [5975] &quot;das zwang&quot; &quot;der advokat&quot; ## [5977] &quot;den kopf&quot; &quot;des druckes&quot; ## [5979] &quot;den .\\&quot;,&quot; &quot;das gefühl&quot; ## [5981] &quot;das sich&quot; &quot;das sich&quot; ## [5983] &quot;das nur&quot; &quot;der advokat&quot; ## [5985] &quot;die hände&quot; &quot;der rieb&quot; ## [5987] &quot;den augen&quot; &quot;der advokat&quot; ## [5989] &quot;den zuseher&quot; &quot;die methode&quot; ## [5991] &quot;des advokaten&quot; &quot;der klient&quot; ## [5993] &quot;die ganze&quot; &quot;des prozesses&quot; ## [5995] &quot;das war&quot; &quot;das war&quot; ## [5997] &quot;der hund&quot; &quot;des advokaten&quot; ## [5999] &quot;das bett&quot; &quot;die anzeige&quot; ## [6001] &quot;des ganzen&quot; &quot;der advokat&quot; ## [6003] &quot;der arbeit&quot; &quot;dem dienstmädchenzimmer&quot; ## [6005] &quot;die lücke&quot; &quot;dem bett&quot; ## [6007] &quot;die schriften&quot; &quot;die du&quot; ## [6009] &quot;dem fensterbrett&quot; &quot;das hat&quot; ## [6011] &quot;das fenster&quot; &quot;dem las&quot; ## [6013] &quot;das zu&quot; &quot;der advokat&quot; ## [6015] &quot;die lippen&quot; &quot;die antworten&quot; ## [6017] &quot;die er&quot; &quot;den ganzen&quot; ## [6019] &quot;die gleiche&quot; &quot;den finger&quot; ## [6021] &quot;die zeilen&quot; &quot;das lesen&quot; ## [6023] &quot;die schriften&quot; &quot;die du&quot; ## [6025] &quot;der advokat&quot; &quot;das sind&quot; ## [6027] &quot;der kampf&quot; &quot;den ich&quot; ## [6029] &quot;das bedeutet&quot; &quot;die luke&quot; ## [6031] &quot;des von&quot; &quot;den knien&quot; ## [6033] &quot;den folgenden&quot; &quot;des advokaten&quot; ## [6035] &quot;der advokat&quot; &quot;das macht&quot; ## [6037] &quot;den .\\&quot;,&quot; &quot;der richter&quot; ## [6039] &quot;der über&quot; &quot;das möglich&quot; ## [6041] &quot;die fähigkeit&quot; &quot;die längst&quot; ## [6043] &quot;des richters&quot; &quot;den .\\&quot;,&quot; ## [6045] &quot;der advokat&quot; &quot;den sie&quot; ## [6047] &quot;dem laufenden&quot; &quot;den prozeß&quot; ## [6049] &quot;das glockenzeichen&quot; &quot;des prozesses&quot; ## [6051] &quot;der advokat&quot; &quot;das erstemal&quot; ## [6053] &quot;der advokat&quot; &quot;den augen&quot; ## [6055] &quot;der unter&quot; &quot;der langsam&quot; ## [6057] &quot;die knie&quot; &quot;des richters&quot; ## [6059] &quot;der advokat&quot; &quot;dem wort&quot; ## [6061] &quot;das wiederholt&quot; &quot;das vertrauen&quot; ## [6063] &quot;das er&quot; &quot;das endurteil&quot; ## [6065] &quot;das allerdings&quot; &quot;des notwendigen&quot; ## [6067] &quot;die äußerung&quot; &quot;die verschiedenen&quot; ## [6069] &quot;das verfahren&quot; &quot;den anfang&quot; ## [6071] &quot;des verfahrens&quot; &quot;des prozesses&quot; ## [6073] &quot;der ansicht&quot; &quot;der prozeß&quot; ## [6075] &quot;den fingern&quot; &quot;das fell&quot; ## [6077] &quot;des bettvorlegers&quot; &quot;die angst&quot; ## [6079] &quot;des ausspruchs&quot; &quot;des richters&quot; ## [6081] &quot;die eigene&quot; &quot;dem advokaten&quot; ## [6083] &quot;die worte&quot; &quot;des richters&quot; ## [6085] &quot;dem ton&quot; &quot;die höhe&quot; ## [6087] &quot;das fell&quot; &quot;dem advokaten&quot; ## [6089] &quot;den auftrag&quot; &quot;der bank&quot; ## [6091] &quot;der für&quot; &quot;den er&quot; ## [6093] &quot;den er&quot; &quot;der bank&quot; ## [6095] &quot;die er&quot; &quot;dem büro&quot; ## [6097] &quot;die bürozeit&quot; &quot;den nur&quot; ## [6099] &quot;dem notdürftigsten&quot; &quot;der direktor-stellvertreter&quot; ## [6101] &quot;der ja&quot; &quot;der lauer&quot; ## [6103] &quot;der arbeit&quot; &quot;die er&quot; ## [6105] &quot;den konnte&quot; &quot;der weise&quot; ## [6107] &quot;der gar&quot; &quot;der letzten&quot; ## [6109] &quot;die vermutung&quot; &quot;dem büro&quot; ## [6111] &quot;der wenigstens&quot; &quot;die meisten&quot; ## [6113] &quot;die ablehnung&quot; &quot;des auftrags&quot; ## [6115] &quot;der gefahr&quot; &quot;das gerade&quot; ## [6117] &quot;der reise&quot; &quot;den .\\&quot;,&quot; ## [6119] &quot;den kopfschmerzen&quot; &quot;den italienischen&quot; ## [6121] &quot;die verlockung&quot; &quot;das ,&quot; ## [6123] &quot;dem geschäft&quot; &quot;die erfüllung&quot; ## [6125] &quot;dem geschäftsfreund&quot; &quot;der wohl&quot; ## [6127] &quot;das nicht&quot; &quot;dem bereich&quot; ## [6129] &quot;der arbeit&quot; &quot;den ,&quot; ## [6131] &quot;die furcht&quot; &quot;den ,&quot; ## [6133] &quot;die er&quot; &quot;die ihn&quot; ## [6135] &quot;den .\\&quot;,&quot; &quot;des italienischen&quot; ## [6137] &quot;das entscheidende&quot; &quot;der bank&quot; ## [6139] &quot;den war&quot; &quot;den ,&quot; ## [6141] &quot;des vereins&quot; &quot;der städtischen&quot; ## [6143] &quot;der italiener&quot; &quot;die wahl&quot; ## [6145] &quot;den tag&quot; &quot;der ihm&quot; ## [6147] &quot;der besuch&quot; &quot;die halbe&quot; ## [6149] &quot;dem studium&quot; &quot;das fenster&quot; ## [6151] &quot;dem er&quot; &quot;der letzten&quot; ## [6153] &quot;der schreibtisch&quot; &quot;der trat&quot; ## [6155] &quot;der diener&quot; &quot;der herr&quot; ## [6157] &quot;der herr&quot; &quot;der herr&quot; ## [6159] &quot;die tasche&quot; &quot;der städtischen&quot; ## [6161] &quot;das er&quot; &quot;den fremden&quot; ## [6163] &quot;den arm&quot; &quot;das büro&quot; ## [6165] &quot;des direktor-stellvertreters&quot; &quot;das direktionszimmer&quot; ## [6167] &quot;das büro&quot; &quot;des direktor-stellvertreters&quot; ## [6169] &quot;der diener&quot; &quot;die zwei&quot; ## [6171] &quot;den tiefen&quot; &quot;der direktor&quot; ## [6173] &quot;die vorstellung&quot; &quot;der italiener&quot; ## [6175] &quot;die hand&quot; &quot;den einen&quot; ## [6177] &quot;die der&quot; &quot;der lachend&quot; ## [6179] &quot;des gespräch&quot; &quot;den italiener&quot; ## [6181] &quot;das waren&quot; &quot;die rede&quot; ## [6183] &quot;dem mund&quot; &quot;den kopf&quot; ## [6185] &quot;den aber&quot; &quot;der für&quot; ## [6187] &quot;den aber&quot; &quot;der direktor&quot; ## [6189] &quot;der italiener&quot; &quot;der direktor&quot; ## [6191] &quot;die möglichkeit&quot; &quot;dem italiener&quot; ## [6193] &quot;der bart&quot; &quot;die lippenbewegungen&quot; ## [6195] &quot;den italiener&quot; &quot;der gegenwart&quot; ## [6197] &quot;des direktors&quot; &quot;der ihn&quot; ## [6199] &quot;dem fauteuil&quot; &quot;den gelenken&quot; ## [6201] &quot;den irgend&quot; &quot;das k.&quot; ## [6203] &quot;die hände&quot; &quot;den augen&quot; ## [6205] &quot;der sonst&quot; &quot;den blicken&quot; ## [6207] &quot;dem hin&quot; &quot;der reden&quot; ## [6209] &quot;die frühere&quot; &quot;der zerstreutheit&quot; ## [6211] &quot;der italiener&quot; &quot;die uhr&quot; ## [6213] &quot;dem er&quot; &quot;der direktor&quot; ## [6215] &quot;der gewiß&quot; &quot;die not&quot; ## [6217] &quot;der er&quot; &quot;das gespräch&quot; ## [6219] &quot;den anschein&quot; &quot;der italiener&quot; ## [6221] &quot;die rede&quot; &quot;der italiener&quot; ## [6223] &quot;der auch&quot; &quot;die entscheidung&quot; ## [6225] &quot;den dom&quot; &quot;der mit&quot; ## [6227] &quot;den italiener&quot; &quot;die worte&quot; ## [6229] &quot;des direktors&quot; &quot;die stunde&quot; ## [6231] &quot;den ,&quot; &quot;den .\\&quot;,&quot; ## [6233] &quot;der italiener&quot; &quot;dem direktor&quot; ## [6235] &quot;dem direktor&quot; &quot;die hand&quot; ## [6237] &quot;den gefolgt&quot; &quot;den aber&quot; ## [6239] &quot;dem direktor&quot; &quot;der heute&quot; ## [6241] &quot;den vertraulich&quot; &quot;dem italiener&quot; ## [6243] &quot;den italiener&quot; &quot;das verständnis&quot; ## [6245] &quot;den italiener&quot; &quot;den zu&quot; ## [6247] &quot;den .\\&quot;,&quot; &quot;der sache&quot; ## [6249] &quot;den .\\&quot;,&quot; &quot;die zeit&quot; ## [6251] &quot;die ihm&quot; &quot;die er&quot; ## [6253] &quot;dem wörterbuch&quot; &quot;die post&quot; ## [6255] &quot;der tür&quot; &quot;der direktor-stellvertreter&quot; ## [6257] &quot;das wörterbuch&quot; &quot;der hand&quot; ## [6259] &quot;die tür&quot; &quot;des vorzimmers&quot; ## [6261] &quot;das alles&quot; &quot;die wörter&quot; ## [6263] &quot;die er&quot; &quot;den italiener&quot; ## [6265] &quot;der ihm&quot; &quot;das wörterbuch&quot; ## [6267] &quot;der festen&quot; &quot;dem italiener&quot; ## [6269] &quot;den kunstwerken&quot; &quot;das wörterbuch&quot; ## [6271] &quot;der hervor&quot; &quot;den ,&quot; ## [6273] &quot;den dom&quot; &quot;den dom&quot; ## [6275] &quot;den dom&quot; &quot;den dom&quot; ## [6277] &quot;das er&quot; &quot;den hörer&quot; ## [6279] &quot;dem fernen&quot; &quot;das es&quot; ## [6281] &quot;die gefahr&quot; &quot;das album&quot; ## [6283] &quot;das er&quot; &quot;den hatte&quot; ## [6285] &quot;das er&quot; &quot;der ganzen&quot; ## [6287] &quot;der regen&quot; &quot;den ,&quot; ## [6289] &quot;des langen&quot; &quot;den kalten&quot; ## [6291] &quot;der domplatz&quot; &quot;den häusern&quot; ## [6293] &quot;dem heutigen&quot; &quot;dem ein&quot; ## [6295] &quot;das ,&quot; &quot;den diener&quot; ## [6297] &quot;den .\\&quot;,&quot; &quot;der italiener&quot; ## [6299] &quot;den dom&quot; &quot;der italiener&quot; ## [6301] &quot;den .\\&quot;,&quot; &quot;der direktor&quot; ## [6303] &quot;die zeitangabe&quot; &quot;den haben&quot; ## [6305] &quot;der in&quot; &quot;den dom&quot; ## [6307] &quot;der fußspitze&quot; &quot;den kragen&quot; ## [6309] &quot;die höhe&quot; &quot;das album&quot; ## [6311] &quot;dem nahen&quot; &quot;den konnte&quot; ## [6313] &quot;der ferne&quot; &quot;dem hauptaltar&quot; ## [6315] &quot;den .\\&quot;,&quot; &quot;die kirchendiener&quot; ## [6317] &quot;das war&quot; &quot;der altarbilder&quot; ## [6319] &quot;die meistens&quot; &quot;der finsternis&quot; ## [6321] &quot;der seitenaltäre&quot; &quot;das gänzlich&quot; ## [6323] &quot;die finsternis&quot; &quot;der zollweise&quot; ## [6325] &quot;der lampe&quot; &quot;das altarbild&quot; ## [6327] &quot;das ewige&quot; &quot;das erste&quot; ## [6329] &quot;der am&quot; &quot;des bildes&quot; ## [6331] &quot;das er&quot; &quot;den kahlen&quot; ## [6333] &quot;den vor&quot; &quot;der sich&quot; ## [6335] &quot;der schon&quot; &quot;der gesehen&quot; ## [6337] &quot;den ritter&quot; &quot;den augen&quot; ## [6339] &quot;das grüne&quot; &quot;der lampe&quot; ## [6341] &quot;das licht&quot; &quot;den übrigen&quot; ## [6343] &quot;des bildes&quot; &quot;die lampe&quot; ## [6345] &quot;der zu&quot; &quot;den italiener&quot; ## [6347] &quot;der regen&quot; &quot;die große&quot; ## [6349] &quot;den dach&quot; &quot;die einander&quot; ## [6351] &quot;die außenwand&quot; &quot;der brüstung&quot; ## [6353] &quot;der übergang&quot; &quot;den säule&quot; ## [6355] &quot;das kleine&quot; &quot;die kanzel&quot; ## [6357] &quot;die bearbeitung&quot; &quot;des steines&quot; ## [6359] &quot;das tiefe&quot; &quot;dem laubwerk&quot; ## [6361] &quot;den stein&quot; &quot;dem dasein&quot; ## [6363] &quot;der nächsten&quot; &quot;der dort&quot; ## [6365] &quot;den ,&quot; &quot;der linken&quot; ## [6367] &quot;der mann&quot; &quot;der kirchendiener&quot; ## [6369] &quot;der rechten&quot; &quot;der kirchendiener&quot; ## [6371] &quot;der hand&quot; &quot;die geldtasche&quot; ## [6373] &quot;die nächste&quot; &quot;dem mann&quot; ## [6375] &quot;der hand&quot; &quot;die schultern&quot; ## [6377] &quot;das reiten&quot; &quot;den nachzuahmen&quot; ## [6379] &quot;dem alten&quot; &quot;das ganze&quot; ## [6381] &quot;des hauptaltars&quot; &quot;der alte&quot; ## [6383] &quot;das zeigen&quot; &quot;der spur&quot; ## [6385] &quot;des alten&quot; &quot;die erscheinung&quot; ## [6387] &quot;den fall&quot; &quot;der italiener&quot; ## [6389] &quot;das hauptschiff&quot; &quot;dem er&quot; ## [6391] &quot;das album&quot; &quot;die bänke&quot; ## [6393] &quot;des altarchors&quot; &quot;der ferne&quot; ## [6395] &quot;die für&quot; &quot;die aufnahme&quot; ## [6397] &quot;der prediger&quot; &quot;der brüstung&quot; ## [6399] &quot;dem begann&quot; &quot;die steinerne&quot; ## [6401] &quot;der kanzel&quot; &quot;den schmuck&quot; ## [6403] &quot;die höhe&quot; &quot;die brüstung&quot; ## [6405] &quot;das ganze&quot; &quot;des predigers&quot; ## [6407] &quot;die andere&quot; &quot;den ?\\&quot;,&quot; ## [6409] &quot;der leeren&quot; &quot;der treppe&quot; ## [6411] &quot;die an&quot; &quot;die säule&quot; ## [6413] &quot;der säule&quot; &quot;der kanzel&quot; ## [6415] &quot;der geistliche&quot; &quot;die hand&quot; ## [6417] &quot;der ,&quot; &quot;dem kopf&quot; ## [6419] &quot;der geistliche&quot; &quot;die kanzel&quot; ## [6421] &quot;der kirchendiener&quot; &quot;dem prediger&quot; ## [6423] &quot;der leeren&quot; &quot;das auch&quot; ## [6425] &quot;der orgel&quot; &quot;die blieb&quot; ## [6427] &quot;der finsternis&quot; &quot;der predigt&quot; ## [6429] &quot;den italiener&quot; &quot;den ?\\&quot;,&quot; ## [6431] &quot;die gemeinde&quot; &quot;der gewesen&quot; ## [6433] &quot;der nur&quot; &quot;die kirche&quot; ## [6435] &quot;den sollte&quot; &quot;der geistliche&quot; ## [6437] &quot;die lampe&quot; &quot;die irrtümlich&quot; ## [6439] &quot;den war&quot; &quot;der geistliche&quot; ## [6441] &quot;das licht&quot; &quot;der brüstung&quot; ## [6443] &quot;die er&quot; &quot;der kantigen&quot; ## [6445] &quot;den händen&quot; &quot;den kopf&quot; ## [6447] &quot;den ellbogen&quot; &quot;der vordersten&quot; ## [6449] &quot;den ort&quot; &quot;den kirchendiener&quot; ## [6451] &quot;die absicht&quot; &quot;die pflicht&quot; ## [6453] &quot;des geistlichen&quot; &quot;die umstände&quot; ## [6455] &quot;die anwesenheit&quot; &quot;die wirkung&quot; ## [6457] &quot;den fußspitzen&quot; &quot;der bank&quot; ## [6459] &quot;den breiten&quot; &quot;der steinerne&quot; ## [6461] &quot;den unter&quot; &quot;dem leisesten&quot; ## [6463] &quot;die wölbungen&quot; &quot;den leeren&quot; ## [6465] &quot;die größe&quot; &quot;des doms&quot; ## [6467] &quot;der grenze&quot; &quot;des für&quot; ## [6469] &quot;dem dort&quot; &quot;das gebiet&quot; ## [6471] &quot;der bänke&quot; &quot;dem freien&quot; ## [6473] &quot;der zwischen&quot; &quot;dem ausgang&quot; ## [6475] &quot;die stimme&quot; &quot;des geistlichen&quot; ## [6477] &quot;den zu&quot; &quot;die gemeinde&quot; ## [6479] &quot;die der&quot; &quot;den boden&quot; ## [6481] &quot;der drei&quot; &quot;die nicht&quot; ## [6483] &quot;den hatte&quot; &quot;der daß&quot; ## [6485] &quot;den hatte&quot; &quot;das geständnis&quot; ## [6487] &quot;den hatte&quot; &quot;der angerufene&quot; ## [6489] &quot;der geistliche&quot; &quot;den kopf&quot; ## [6491] &quot;der geistliche&quot; &quot;der kanzel&quot; ## [6493] &quot;des fingers&quot; &quot;die angelegenheit&quot; ## [6495] &quot;den schritten&quot; &quot;der kanzel&quot; ## [6497] &quot;den ersten&quot; &quot;dem geistlichen&quot; ## [6499] &quot;die entfernung&quot; &quot;die hand&quot; ## [6501] &quot;dem scharf&quot; &quot;der kanzel&quot; ## [6503] &quot;den kopfschon&quot; &quot;den geistlichen&quot; ## [6505] &quot;der geistliche&quot; &quot;der brüstung&quot; ## [6507] &quot;den .\\&quot;,&quot; &quot;der geistliche&quot; ## [6509] &quot;der ,&quot; &quot;den ich&quot; ## [6511] &quot;der geistliche&quot; &quot;der gefängniskaplan&quot; ## [6513] &quot;der geistliche&quot; &quot;den dom&quot; ## [6515] &quot;das nebensächliche&quot; &quot;der geistliche&quot; ## [6517] &quot;der hand&quot; &quot;der städtischen&quot; ## [6519] &quot;der hand&quot; &quot;der geistliche&quot; ## [6521] &quot;den boden&quot; &quot;der geistliche&quot; ## [6523] &quot;die eingabe&quot; &quot;das ende&quot; ## [6525] &quot;der geistliche&quot; &quot;den «&quot; ## [6527] &quot;den wird&quot; &quot;der geistliche&quot; ## [6529] &quot;den .\\&quot;,&quot; &quot;der andere&quot; ## [6531] &quot;das ist&quot; &quot;der geistliche&quot; ## [6533] &quot;die schuldigen&quot; &quot;den .\\&quot;,&quot; ## [6535] &quot;der geistliche&quot; &quot;die an&quot; ## [6537] &quot;dem verfahren&quot; &quot;den unbeteiligten&quot; ## [6539] &quot;die tatsachen&quot; &quot;der geistliche&quot; ## [6541] &quot;das urteil&quot; &quot;das verfahren&quot; ## [6543] &quot;den kopf&quot; &quot;der geistliche&quot; ## [6545] &quot;den kopf&quot; &quot;der geistliche&quot; ## [6547] &quot;die ich&quot; &quot;der geistliche&quot; ## [6549] &quot;die wahre&quot; &quot;die frauen&quot; ## [6551] &quot;die ich&quot; &quot;das fast&quot; ## [6553] &quot;dem untersuchungsrichter&quot; &quot;der ferne&quot; ## [6555] &quot;den gerichtstisch&quot; &quot;den angeklagten&quot; ## [6557] &quot;der geistliche&quot; &quot;den kopf&quot; ## [6559] &quot;die überdachung&quot; &quot;der kanzel&quot; ## [6561] &quot;das war&quot; &quot;das war&quot; ## [6563] &quot;der großen&quot; &quot;die dunkle&quot; ## [6565] &quot;der kirchendiener&quot; &quot;die kerzen&quot; ## [6567] &quot;dem hauptaltar&quot; &quot;der anderen&quot; ## [6569] &quot;den geistlichen&quot; &quot;der geistliche&quot; ## [6571] &quot;der jemanden&quot; &quot;der geistliche&quot; ## [6573] &quot;dem dunkel&quot; &quot;das unten&quot; ## [6575] &quot;den geistlichen&quot; &quot;der kleinen&quot; ## [6577] &quot;der geistliche&quot; &quot;die ihm&quot; ## [6579] &quot;den als&quot; &quot;den .\\&quot;,&quot; ## [6581] &quot;die gute&quot; &quot;des geistlichen&quot; ## [6583] &quot;den und&quot; &quot;der ihm&quot; ## [6585] &quot;der prozeß&quot; &quot;dem prozeß&quot; ## [6587] &quot;des prozesses&quot; &quot;der letzten&quot; ## [6589] &quot;der geistliche&quot; &quot;das gericht&quot; ## [6591] &quot;der geistliche&quot; &quot;die lampe&quot; ## [6593] &quot;der entfernung&quot; &quot;der treppe&quot; ## [6595] &quot;der geistliche&quot; &quot;die hand&quot; ## [6597] &quot;der geistliche&quot; &quot;die kleine&quot; ## [6599] &quot;der nähe&quot; &quot;der im&quot; ## [6601] &quot;die zum&quot; &quot;dem von&quot; ## [6603] &quot;den .\\&quot;,&quot; &quot;der geistliche&quot; ## [6605] &quot;dem gericht&quot; &quot;der geistliche&quot; ## [6607] &quot;den einleitenden&quot; &quot;dem gesetz&quot; ## [6609] &quot;das gesetz&quot; &quot;der türhüter&quot; ## [6611] &quot;den eintritt&quot; &quot;der mann&quot; ## [6613] &quot;der türhüter&quot; &quot;das tor&quot; ## [6615] &quot;der türhüter&quot; &quot;der mann&quot; ## [6617] &quot;das tor&quot; &quot;das innere&quot; ## [6619] &quot;der türhüter&quot; &quot;das merkt&quot; ## [6621] &quot;der unterste&quot; &quot;der andere&quot; ## [6623] &quot;den anblick&quot; &quot;des dritten&quot; ## [6625] &quot;der mann&quot; &quot;das gesetz&quot; ## [6627] &quot;dem und&quot; &quot;den türhüter&quot; ## [6629] &quot;den langen&quot; &quot;die erlaubnis&quot; ## [6631] &quot;der türhüter&quot; &quot;der tür&quot; ## [6633] &quot;den und&quot; &quot;den türhüter&quot; ## [6635] &quot;der türhüter&quot; &quot;der ,&quot; ## [6637] &quot;der mann&quot; &quot;der sich&quot; ## [6639] &quot;den türhüter&quot; &quot;der vielen&quot; ## [6641] &quot;der mann&quot; &quot;den türhüter&quot; ## [6643] &quot;die anderen&quot; &quot;das einzige&quot; ## [6645] &quot;den eintritt&quot; &quot;das gesetz&quot; ## [6647] &quot;den unglücklichen&quot; &quot;den ersten&quot; ## [6649] &quot;dem jahrelangen&quot; &quot;des türhüters&quot; ## [6651] &quot;die flöhe&quot; &quot;die flöhe&quot; ## [6653] &quot;den türhüter&quot; &quot;der ob&quot; ## [6655] &quot;die augen&quot; &quot;der unverlöschlich&quot; ## [6657] &quot;der türe&quot; &quot;des gesetzes&quot; ## [6659] &quot;die er&quot; &quot;den türhüter&quot; ## [6661] &quot;den körper&quot; &quot;der türhüter&quot; ## [6663] &quot;die größenunterschiede&quot; &quot;des mannes&quot; ## [6665] &quot;der türhüter&quot; &quot;dem gesetz&quot; ## [6667] &quot;der mann&quot; &quot;den vielen&quot; ## [6669] &quot;der türhüter&quot; &quot;der mann&quot; ## [6671] &quot;des gehör&quot; &quot;der türhüter&quot; ## [6673] &quot;den mann&quot; &quot;der geschichte&quot; ## [6675] &quot;der geistliche&quot; &quot;die fremde&quot; ## [6677] &quot;die geschichte&quot; &quot;der schrift&quot; ## [6679] &quot;der türhüter&quot; &quot;die erlösende&quot; ## [6681] &quot;dem manne&quot; &quot;der geistliche&quot; ## [6683] &quot;den abzuwehren&quot; &quot;den der&quot; ## [6685] &quot;der schrift&quot; &quot;die geschichte&quot; ## [6687] &quot;der geistliche&quot; &quot;die geschichte&quot; ## [6689] &quot;den einlaß&quot; &quot;des türhüters&quot; ## [6691] &quot;die eine&quot; &quot;den eintritt&quot; ## [6693] &quot;die andere&quot; &quot;den erklärungen&quot; ## [6695] &quot;der türhüter&quot; &quot;den mann&quot; ## [6697] &quot;die erste&quot; &quot;die zweite&quot; ## [6699] &quot;der türhüter&quot; &quot;dem er&quot; ## [6701] &quot;dem mann&quot; &quot;des einlasses&quot; ## [6703] &quot;den mann&quot; &quot;der schrift&quot; ## [6705] &quot;der türhüter&quot; &quot;die genauigkeit&quot; ## [6707] &quot;das tor&quot; &quot;der wichtigkeit&quot; ## [6709] &quot;den vorgesetzten&quot; &quot;der unterste&quot; ## [6711] &quot;der vielen&quot; &quot;der zu&quot; ## [6713] &quot;dem mann&quot; &quot;den türhüter&quot; ## [6715] &quot;die große&quot; &quot;der lange&quot; ## [6717] &quot;den türhüter&quot; &quot;die für&quot; ## [6719] &quot;den ,&quot; &quot;der einlaß&quot; ## [6721] &quot;die macht&quot; &quot;der anderen&quot; ## [6723] &quot;die art&quot; &quot;die erklärer&quot; ## [6725] &quot;der gleichen&quot; &quot;der nicht&quot; ## [6727] &quot;die bewachung&quot; &quot;des eingangs&quot; ## [6729] &quot;des türhüters&quot; &quot;der türhüter&quot; ## [6731] &quot;den ersten&quot; &quot;den spaß&quot; ## [6733] &quot;den mann&quot; &quot;dem ausdrücklich&quot; ## [6735] &quot;der tür&quot; &quot;die geduld&quot; ## [6737] &quot;der er&quot; &quot;die jahre&quot; ## [6739] &quot;die bitten&quot; &quot;des mannes&quot; ## [6741] &quot;die kleinen&quot; &quot;die annahme&quot; ## [6743] &quot;der geschenke&quot; &quot;die vornehmheit&quot; ## [6745] &quot;der er&quot; &quot;der mann&quot; ## [6747] &quot;den unglücklichen&quot; &quot;der den&quot; ## [6749] &quot;des mitleids&quot; &quot;der türhüter&quot; ## [6751] &quot;dem mann&quot; &quot;der türhüter&quot; ## [6753] &quot;den worten&quot; &quot;der erklärung&quot; ## [6755] &quot;die worte&quot; &quot;die allerdings&quot; ## [6757] &quot;die gestalt&quot; &quot;des türhüters&quot; ## [6759] &quot;die geschichte&quot; &quot;der mann&quot; ## [6761] &quot;der geistliche&quot; &quot;die meinungen&quot; ## [6763] &quot;die darüber&quot; &quot;die schrift&quot; ## [6765] &quot;die meinungen&quot; &quot;der verzweiflung&quot; ## [6767] &quot;der türhüter&quot; &quot;der getäuschte&quot; ## [6769] &quot;das ist&quot; &quot;die begründung&quot; ## [6771] &quot;der geistliche&quot; &quot;der einfalt&quot; ## [6773] &quot;des türhüters&quot; &quot;das innere&quot; ## [6775] &quot;des gesetzes&quot; &quot;den weg&quot; ## [6777] &quot;den er&quot; &quot;dem eingang&quot; ## [6779] &quot;der abgehen&quot; &quot;die vorstellungen&quot; ## [6781] &quot;die er&quot; &quot;dem innern&quot; ## [6783] &quot;den für&quot; &quot;das ,&quot; ## [6785] &quot;dem manne&quot; &quot;der mann&quot; ## [6787] &quot;den schrecklichen&quot; &quot;des innern&quot; ## [6789] &quot;der türhüter&quot; &quot;den dienst&quot; ## [6791] &quot;des gesetzes&quot; &quot;den ,&quot; ## [6793] &quot;das könne&quot; &quot;dem innern&quot; ## [6795] &quot;den sein&quot; &quot;den anblick&quot; ## [6797] &quot;des dritten&quot; &quot;dem aber&quot; ## [6799] &quot;der vielen&quot; &quot;der bemerkung&quot; ## [6801] &quot;die türhüter&quot; &quot;dem innern&quot; ## [6803] &quot;dem schließt&quot; &quot;das aussehen&quot; ## [6805] &quot;die bedeutung&quot; &quot;des innern&quot; ## [6807] &quot;den mann&quot; &quot;den ,&quot; ## [6809] &quot;den mann&quot; &quot;das dir&quot; ## [6811] &quot;der freie&quot; &quot;dem gebundenen&quot; ## [6813] &quot;der mann&quot; &quot;der eingang&quot; ## [6815] &quot;das gesetz&quot; &quot;den schemel&quot; ## [6817] &quot;die geschichte&quot; &quot;der türhüter&quot; ## [6819] &quot;den ,&quot; &quot;das innere&quot; ## [6821] &quot;dem ist&quot; &quot;des gesetzes&quot; ## [6823] &quot;den dieser&quot; &quot;der türhüter&quot; ## [6825] &quot;dem mann&quot; &quot;der doch&quot; ## [6827] &quot;das ende&quot; &quot;des dienstes&quot; ## [6829] &quot;das lebensende&quot; &quot;des mannes&quot; ## [6831] &quot;der wird&quot; &quot;dem der&quot; ## [6833] &quot;der türhüter&quot; &quot;das tor&quot; ## [6835] &quot;das heißt&quot; &quot;der lebensdauer&quot; ## [6837] &quot;des mannes&quot; &quot;den es&quot; ## [6839] &quot;der türhüter&quot; &quot;die meinungen&quot; ## [6841] &quot;der ,&quot; &quot;der türhüter&quot; ## [6843] &quot;der ankündigung&quot; &quot;das tor&quot; ## [6845] &quot;der seine&quot; &quot;der den&quot; ## [6847] &quot;das tor&quot; &quot;dem manne&quot; ## [6849] &quot;den glanz&quot; &quot;der aus&quot; ## [6851] &quot;dem eingang&quot; &quot;des gesetzes&quot; ## [6853] &quot;der türhüter&quot; &quot;dem rücken&quot; ## [6855] &quot;das ist&quot; &quot;der einzelne&quot; ## [6857] &quot;der erklärung&quot; &quot;des geistlichen&quot; ## [6859] &quot;der türhüter&quot; &quot;der türhüter&quot; ## [6861] &quot;der getäuscht&quot; &quot;der mann&quot; ## [6863] &quot;der türhüter&quot; &quot;der türhüter&quot; ## [6865] &quot;den mann&quot; &quot;der türhüter&quot; ## [6867] &quot;dem dienst&quot; &quot;den müßte&quot; ## [6869] &quot;die täuschung&quot; &quot;der sich&quot; ## [6871] &quot;der türhüter&quot; &quot;dem mann&quot; ## [6873] &quot;der geistliche&quot; &quot;die geschichte&quot; ## [6875] &quot;dem ein&quot; &quot;den türhüter&quot; ## [6877] &quot;des gesetzes&quot; &quot;dem menschlichen&quot; ## [6879] &quot;der türhüter&quot; &quot;dem manne&quot; ## [6881] &quot;den eingang&quot; &quot;des gesetzes&quot; ## [6883] &quot;den zu&quot; &quot;der welt&quot; ## [6885] &quot;der mann&quot; &quot;der türhüter&quot; ## [6887] &quot;der türhüter&quot; &quot;das aber&quot; ## [6889] &quot;der geistliche&quot; &quot;die lüge&quot; ## [6891] &quot;das abschließend&quot; &quot;der geschichte&quot; ## [6893] &quot;die sie&quot; &quot;die gesellschaft&quot; ## [6895] &quot;der gerichtsbeamten&quot; &quot;die einfache&quot; ## [6897] &quot;den ,&quot; &quot;der geistliche&quot; ## [6899] &quot;der jetzt&quot; &quot;dem geistlichen&quot; ## [6901] &quot;die lampe&quot; &quot;das silberne&quot; ## [6903] &quot;dem schein&quot; &quot;des silbers&quot; ## [6905] &quot;der ins&quot; &quot;den geistlichen&quot; ## [6907] &quot;der nähe&quot; &quot;des haupteinganges&quot; ## [6909] &quot;der geistliche&quot; &quot;den dom&quot; ## [6911] &quot;der geistliche&quot; &quot;die hand&quot; ## [6913] &quot;den «&quot; &quot;der geistliche&quot; ## [6915] &quot;die wand&quot; &quot;den .\\&quot;,&quot; ## [6917] &quot;der geistliche&quot; &quot;der geistliche&quot; ## [6919] &quot;der geistliche&quot; &quot;der geistliche&quot; ## [6921] &quot;das doch&quot; &quot;der geistliche&quot; ## [6923] &quot;der gefängniskaplan&quot; &quot;die bank&quot; ## [6925] &quot;der geistliche&quot; &quot;das gericht&quot; ## [6927] &quot;die zeit&quot; &quot;der stille&quot; ## [6929] &quot;den straßen&quot; &quot;der wohnungstür&quot; ## [6931] &quot;des ersten&quot; &quot;die gleiche&quot; ## [6933] &quot;der besuch&quot; &quot;der nähe&quot; ## [6935] &quot;der tür&quot; &quot;die finger&quot; ## [6937] &quot;der haltung&quot; &quot;die herren&quot; ## [6939] &quot;die herren&quot; &quot;dem zylinderhut&quot; ## [6941] &quot;der hand&quot; &quot;den anderen&quot; ## [6943] &quot;die dunkle&quot; &quot;der anderen&quot; ## [6945] &quot;die vorhänge&quot; &quot;des stockwerkes&quot; ## [6947] &quot;der hinter&quot; &quot;der und&quot; ## [6949] &quot;den händchen&quot; &quot;der .\\&quot;,&quot; ## [6951] &quot;den .\\&quot;,&quot; &quot;der eine&quot; ## [6953] &quot;den mundwinkeln&quot; &quot;den anderen&quot; ## [6955] &quot;der andere&quot; &quot;der mit&quot; ## [6957] &quot;dem widerspenstigsten&quot; &quot;den «&quot; ## [6959] &quot;der treppe&quot; &quot;die herren&quot; ## [6961] &quot;der gasse&quot; &quot;dem tor&quot; ## [6963] &quot;die schultern&quot; &quot;den seinen&quot; ## [6965] &quot;die arme&quot; &quot;den kann&quot; ## [6967] &quot;den laternen&quot; &quot;der ausgeführt&quot; ## [6969] &quot;den konnte&quot; &quot;der dämmerung&quot; ## [6971] &quot;der reinlichkeit&quot; &quot;die säubernde&quot; ## [6973] &quot;die in&quot; &quot;die ihre&quot; ## [6975] &quot;die die&quot; &quot;das bemerkte&quot; ## [6977] &quot;die andern&quot; &quot;die herren&quot; ## [6979] &quot;dem hängenden&quot; &quot;der kranke&quot; ## [6981] &quot;die herren&quot; &quot;den griff&quot; ## [6983] &quot;der stelle&quot; &quot;den «&quot; ## [6985] &quot;die fliegen&quot; &quot;die mit&quot; ## [6987] &quot;den beinchen&quot; &quot;der leimrute&quot; ## [6989] &quot;die herren&quot; &quot;den schwere&quot; ## [6991] &quot;die ähnlichkeit&quot; &quot;die wertlosigkeit&quot; ## [6993] &quot;des kam&quot; &quot;den herren&quot; ## [6995] &quot;der abwehr&quot; &quot;den letzten&quot; ## [6997] &quot;des lebens&quot; &quot;der freude&quot; ## [6999] &quot;die er&quot; &quot;den herren&quot; ## [7001] &quot;die wegrichtung&quot; &quot;dem weg&quot; ## [7003] &quot;den das&quot; &quot;die mahnung&quot; ## [7005] &quot;die sie&quot; &quot;das einzige&quot; ## [7007] &quot;das gleichmaß&quot; &quot;der schritte&quot; ## [7009] &quot;der beiden&quot; &quot;das einzige&quot; ## [7011] &quot;den ruhig&quot; &quot;den verstand&quot; ## [7013] &quot;den in&quot; &quot;die welt&quot; ## [7015] &quot;den zweck&quot; &quot;das war&quot; ## [7017] &quot;der einjährige&quot; &quot;des prozesses&quot; ## [7019] &quot;den wollte&quot; &quot;der beginnen&quot; ## [7021] &quot;das sagt&quot; &quot;das notwendige&quot; ## [7023] &quot;das fräulein&quot; &quot;der kleinen&quot; ## [7025] &quot;die k.&quot; &quot;die herren&quot; ## [7027] &quot;der sich&quot; &quot;das im&quot; ## [7029] &quot;der ,&quot; &quot;der eine&quot; ## [7031] &quot;dem anderen&quot; &quot;des mißverständlichen&quot; ## [7033] &quot;den oder&quot; &quot;der ferne&quot; ## [7035] &quot;die hand&quot; &quot;des säbels&quot; ## [7037] &quot;die nicht&quot; &quot;die herren&quot; ## [7039] &quot;der polizeimann&quot; &quot;den mund&quot; ## [7041] &quot;die herren&quot; &quot;der polizeimann&quot; ## [7043] &quot;dem polizeimann&quot; &quot;die herren&quot; ## [7045] &quot;der stadt&quot; &quot;die sich&quot; ## [7047] &quot;die felder&quot; &quot;der nähe&quot; ## [7049] &quot;die herren&quot; &quot;der stumm&quot; ## [7051] &quot;die zylinderhüte&quot; &quot;den taschentüchern&quot; ## [7053] &quot;den schweiß&quot; &quot;der stirn&quot; ## [7055] &quot;der mondschein&quot; &quot;die keinem&quot; ## [7057] &quot;die nächsten&quot; &quot;die herren&quot; ## [7059] &quot;die aufträge&quot; &quot;der eine&quot; ## [7061] &quot;den rock&quot; &quot;die weste&quot; ## [7063] &quot;das hemd&quot; &quot;der herr&quot; ## [7065] &quot;den schlag&quot; &quot;den rücken&quot; ## [7067] &quot;die sachen&quot; &quot;die man&quot; ## [7069] &quot;der immerhin&quot; &quot;den arm&quot; ## [7071] &quot;der andere&quot; &quot;den steinbruch&quot; ## [7073] &quot;den stelle&quot; &quot;den hatte&quot; ## [7075] &quot;der andere&quot; &quot;der bruchwand&quot; ## [7077] &quot;die herren&quot; &quot;die erde&quot; ## [7079] &quot;der ,&quot; &quot;den stein&quot; ## [7081] &quot;die sie&quot; &quot;das ihnen&quot; ## [7083] &quot;der eine&quot; &quot;den anderen&quot; ## [7085] &quot;das hinlegen&quot; &quot;die nicht&quot; ## [7087] &quot;die beste&quot; &quot;den bereits&quot; ## [7089] &quot;der eine&quot; &quot;die an&quot; ## [7091] &quot;die weste&quot; &quot;die schärfe&quot; ## [7093] &quot;der begannen&quot; &quot;die widerlichen&quot; ## [7095] &quot;das messer&quot; &quot;dem anderen&quot; ## [7097] &quot;der über&quot; &quot;das messer&quot; ## [7099] &quot;den noch&quot; &quot;den behörden&quot; ## [7101] &quot;die verantwortung&quot; &quot;der ,&quot; ## [7103] &quot;der ihm&quot; &quot;den rest&quot; ## [7105] &quot;der dazu&quot; &quot;das letzte&quot; ## [7107] &quot;des an&quot; &quot;den steinbruch&quot; ## [7109] &quot;den hauses&quot; &quot;die fensterflügel&quot; ## [7111] &quot;der ,&quot; &quot;der ferne&quot; ## [7113] &quot;die arme&quot; &quot;der teilnahm&quot; ## [7115] &quot;der helfen&quot; &quot;die man&quot; ## [7117] &quot;die logik&quot; &quot;der leben&quot; ## [7119] &quot;der richter&quot; &quot;den er&quot; ## [7121] &quot;das hohe&quot; &quot;dem er&quot; ## [7123] &quot;die hände&quot; &quot;die hände&quot; ## [7125] &quot;des einen&quot; &quot;der andere&quot; ## [7127] &quot;das messer&quot; &quot;den augen&quot; ## [7129] &quot;die herren&quot; &quot;die entscheidung&quot; ## [7131] &quot;die scham&quot; &quot;die abenteuer&quot; ## [7133] &quot;des autors&quot; &quot;die meisten&quot; ## [7135] &quot;der hier&quot; &quot;das eine&quot; ## [7137] &quot;der das&quot; &quot;die anderen&quot; ## [7139] &quot;den .\\&quot;,&quot; &quot;dem leben&quot; ## [7141] &quot;den unmündigen&quot; &quot;den des&quot; ## [7143] &quot;die seltsamsten&quot; &quot;der kleinen&quot; ## [7145] &quot;der bengel&quot; &quot;der steckt&quot; ## [7147] &quot;die alte&quot; &quot;die stirn&quot; ## [7149] &quot;der nie&quot; &quot;die gläser&quot; ## [7151] &quot;die der&quot; &quot;den :&quot; ## [7153] &quot;dem besen&quot; &quot;dem bett&quot; ## [7155] &quot;der atem&quot; &quot;die katze&quot; ## [7157] &quot;den weinranken&quot; &quot;dem blühenden&quot; ## [7159] &quot;den ,&quot; &quot;der flucht&quot; ## [7161] &quot;die speisekammer&quot; &quot;der gemacht&quot; ## [7163] &quot;das ?\\&quot;,&quot; &quot;die marmelade&quot; ## [7165] &quot;den stock&quot; &quot;der stock&quot; ## [7167] &quot;den .\\&quot;,&quot; &quot;die gefahr&quot; ## [7169] &quot;die alte&quot; &quot;der bursche&quot; ## [7171] &quot;den augenblick&quot; &quot;den hohen&quot; ## [7173] &quot;der kuckuck&quot; &quot;den jungen&quot; ## [7175] &quot;das niemals&quot; &quot;der auf&quot; ## [7177] &quot;den leim&quot; &quot;die größte&quot; ## [7179] &quot;den tag&quot; &quot;der mich&quot; ## [7181] &quot;der willen&quot; &quot;dem knaben&quot; ## [7183] &quot;die rute&quot; &quot;das herz&quot; ## [7185] &quot;das alte&quot; &quot;der weibgeborene&quot; ## [7187] &quot;die heilige&quot; &quot;der den&quot; ## [7189] &quot;der ich&quot; &quot;das kind&quot; ## [7191] &quot;dem kleinen&quot; &quot;das holz&quot; ## [7193] &quot;den nächsten&quot; &quot;die abenteuer&quot; ## [7195] &quot;des tages&quot; &quot;der arbeit&quot; ## [7197] &quot;der (&quot; &quot;der vielmehr&quot; ## [7199] &quot;der )&quot; &quot;der arbeit&quot; ## [7201] &quot;dem zusammenlesen&quot; &quot;des holzes&quot; ## [7203] &quot;der höheren&quot; &quot;der inquisitorischer&quot; ## [7205] &quot;der schule&quot; &quot;das heißt&quot; ## [7207] &quot;die alte&quot; &quot;der vollkommenen&quot; ## [7209] &quot;dem begriffen&quot; &quot;der wind&quot; ## [7211] &quot;den kopf&quot; &quot;die pumpe&quot; ## [7213] &quot;der hand&quot; &quot;den kragen&quot; ## [7215] &quot;den ich&quot; &quot;die jacke&quot; ## [7217] &quot;des kopfes&quot; &quot;die jacke&quot; ## [7219] &quot;der gebrannten&quot; &quot;dem felde&quot; ## [7221] &quot;dem staube&quot; &quot;das sollst&quot; ## [7223] &quot;der tür&quot; &quot;dem kragen&quot; ## [7225] &quot;die eine&quot; &quot;die andere&quot; ## [7227] &quot;das andere&quot; &quot;die ohren&quot; ## [7229] &quot;den .\\&quot;,&quot; &quot;den wären&quot; ## [7231] &quot;der weniger&quot; &quot;dem herzen&quot; ## [7233] &quot;des kleinen&quot; &quot;die richtete&quot; ## [7235] &quot;den augenblick&quot; &quot;die ihm&quot; ## [7237] &quot;die jetzt&quot; &quot;den mußte&quot; ## [7239] &quot;die wichtige&quot; &quot;den triller&quot; ## [7241] &quot;der leser&quot; &quot;der er&quot; ## [7243] &quot;den trick&quot; &quot;den mund&quot; ## [7245] &quot;die dorfstraße&quot; &quot;der ein&quot; ## [7247] &quot;die toms&quot; &quot;der sommerabend&quot; ## [7249] &quot;der stand&quot; &quot;dem armseligen&quot; ## [7251] &quot;den naturmenschen&quot; &quot;das neue&quot; ## [7253] &quot;der anstarrte&quot; &quot;die nase&quot; ## [7255] &quot;der andere&quot; &quot;der herausfordernd&quot; ## [7257] &quot;die augen&quot; &quot;das möchte&quot; ## [7259] &quot;das wirst&quot; &quot;der tom&quot; ## [7261] &quot;das geht&quot; &quot;das kann&quot; ## [7263] &quot;der sagen&quot; &quot;den kopf&quot; ## [7265] &quot;der eine&quot; &quot;der herum&quot; ## [7267] &quot;den sie&quot; &quot;der einen&quot; ## [7269] &quot;der herumschiebend&quot; &quot;dem gegner&quot; ## [7271] &quot;der sagen&quot; &quot;der kann&quot; ## [7273] &quot;dem kleinen&quot; &quot;der !\\&quot;,&quot; ## [7275] &quot;der ,&quot; &quot;der noch&quot; ## [7277] &quot;der wirft&quot; &quot;der über&quot; ## [7279] &quot;den zaun&quot; &quot;der waren&quot; ## [7281] &quot;das lügst&quot; &quot;das weißt&quot; ## [7283] &quot;dem fuß&quot; &quot;den sand&quot; ## [7285] &quot;der andere&quot; &quot;der feine&quot; ## [7287] &quot;der tasche&quot; &quot;die nase&quot; ## [7289] &quot;der hand&quot; &quot;der verbissen&quot; ## [7291] &quot;den haaren&quot; &quot;die nasen&quot; ## [7293] &quot;die situation&quot; &quot;dem kampfgewühl&quot; ## [7295] &quot;dem andern&quot; &quot;den fäusten&quot; ## [7297] &quot;der bengel&quot; &quot;der andere&quot; ## [7299] &quot;das nächste&quot; &quot;der fremde&quot; ## [7301] &quot;den staub&quot; &quot;den kleidern&quot; ## [7303] &quot;die nase&quot; &quot;das nächste&quot; ## [7305] &quot;den rücken&quot; &quot;der andere&quot; ## [7307] &quot;die schultern&quot; &quot;der geschwindigkeit&quot; ## [7309] &quot;den verräter&quot; &quot;der feind&quot; ## [7311] &quot;der herauszukommen&quot; &quot;der feind&quot; ## [7313] &quot;die fenster&quot; &quot;den und&quot; ## [7315] &quot;den neutralen&quot; &quot;den zu&quot; ## [7317] &quot;des feindes&quot; &quot;den feind&quot; ## [7319] &quot;dem er&quot; &quot;das fenster&quot; ## [7321] &quot;den zustand&quot; &quot;der sah&quot; ## [7323] &quot;des herz&quot; &quot;der hatte&quot; ## [7325] &quot;den lippen&quot; &quot;die lust&quot; ## [7327] &quot;die akazien&quot; &quot;die luft&quot; ## [7329] &quot;der nähe&quot; &quot;des hauses&quot; ## [7331] &quot;das gelobte&quot; &quot;der bildfläche&quot; ## [7333] &quot;die umzäunung&quot; &quot;der natur&quot; ## [7335] &quot;der unglückliche&quot; &quot;das leben&quot; ## [7337] &quot;den pinsel&quot; &quot;den topf&quot; ## [7339] &quot;die oberste&quot; &quot;die operation&quot; ## [7341] &quot;das kleine&quot; &quot;der unendlichen&quot; ## [7343] &quot;den strecke&quot; &quot;der tür&quot; ## [7345] &quot;der pumpe&quot; &quot;der unwürdigsten&quot; ## [7347] &quot;den werde&quot; &quot;die ,&quot; ## [7349] &quot;die reihe&quot; &quot;die pumpe&quot; ## [7351] &quot;dem aber&quot; &quot;den mußte&quot; ## [7353] &quot;den kopf&quot; &quot;den versuchen&quot; ## [7355] &quot;den !\\&quot;,&quot; &quot;den eimer&quot; ## [7357] &quot;der da&quot; &quot;dem fingerhut&quot; ## [7359] &quot;den kopf&quot; &quot;der &#39;ne&quot; ## [7361] &quot;das schöne&quot; &quot;der kugel&quot; ## [7363] &quot;die straße&quot; &quot;der hand&quot; ## [7365] &quot;die streiche&quot; &quot;die er&quot; ## [7367] &quot;den seine&quot; &quot;die würden&quot; ## [7369] &quot;der dastand&quot; &quot;der bloße&quot; ## [7371] &quot;der --&quot; &quot;die freiheit&quot; ## [7373] &quot;der in&quot; &quot;die tasche&quot; ## [7375] &quot;den gedanken&quot; &quot;den jungen&quot; ## [7377] &quot;der einfall&quot; &quot;der auf&quot; ## [7379] &quot;die arbeit&quot; &quot;der junge&quot; ## [7381] &quot;der sich&quot; &quot;die mitte&quot; ## [7383] &quot;der straße&quot; &quot;die stelle&quot; ## [7385] &quot;des ,&quot; &quot;der kommandobrücke&quot; ## [7387] &quot;die hauptroute&quot; &quot;des flusses&quot; ## [7389] &quot;den !\\&quot;,&quot; &quot;der beschrieb&quot; ## [7391] &quot;der arm&quot; &quot;der linke&quot; ## [7393] &quot;dem tau&quot; &quot;den pfeiler&quot; ## [7395] &quot;den dampf&quot; &quot;der ankunft&quot; ## [7397] &quot;des dampfbootes&quot; &quot;dem auge&quot; ## [7399] &quot;dem pinsel&quot; &quot;der kritik&quot; ## [7401] &quot;der mund&quot; &quot;dem apfel&quot; ## [7403] &quot;den burschen&quot; &quot;das denn&quot; ## [7405] &quot;das arbeit&quot; &quot;der es&quot; ## [7407] &quot;das da&quot; &quot;der pinsel&quot; ## [7409] &quot;den tag&quot; &quot;die sache&quot; ## [7411] &quot;der wirkung&quot; &quot;der ,&quot; ## [7413] &quot;der straße&quot; &quot;der _schwarze_&quot; ## [7415] &quot;das da&quot; &quot;den zaun&quot; ## [7417] &quot;den rest&quot; &quot;den ganzen&quot; ## [7419] &quot;den pinsel&quot; &quot;der dampfer&quot; ## [7421] &quot;der sonnenhitze&quot; &quot;der künstler&quot; ## [7423] &quot;des zaunes&quot; &quot;die beine&quot; ## [7425] &quot;der ,&quot; &quot;den .\\&quot;,&quot; ## [7427] &quot;den augenblick&quot; &quot;den ,&quot; ## [7429] &quot;der ihm&quot; &quot;die ratte&quot; ## [7431] &quot;die luft&quot; &quot;der nachmittag&quot; ## [7433] &quot;dem armen&quot; &quot;der tom&quot; ## [7435] &quot;den .\\&quot;,&quot; &quot;den angeführten&quot; ## [7437] &quot;das gewiß&quot; &quot;den getan&quot; ## [7439] &quot;der jemals&quot; &quot;den kopf&quot; ## [7441] &quot;den griff&quot; &quot;der zaun&quot; ## [7443] &quot;der zaun&quot; &quot;des dorfes&quot; ## [7445] &quot;die welt&quot; &quot;der klein&quot; ## [7447] &quot;dem verfasser&quot; &quot;den haben&quot; ## [7449] &quot;der in&quot; &quot;der tretmühle&quot; ## [7451] &quot;der den&quot; &quot;der ,&quot; ## [7453] &quot;die einen&quot; &quot;den sie&quot; ## [7455] &quot;den ,&quot; &quot;den sie&quot; ## [7457] &quot;den raum&quot; &quot;die balsamische&quot; ## [7459] &quot;die vollkommene&quot; &quot;der bienen&quot; ## [7461] &quot;die katze&quot; &quot;die brille&quot; ## [7463] &quot;der flüchtig&quot; &quot;den und&quot; ## [7465] &quot;der ?\\&quot;,&quot; &quot;den gewesen&quot; ## [7467] &quot;den ;&quot; &quot;der ganze&quot; ## [7469] &quot;den obendrein&quot; &quot;das hätt&quot; ## [7471] &quot;das kompliment&quot; &quot;dem sie&quot; ## [7473] &quot;der .&quot; &quot;der hier&quot; ## [7475] &quot;der ich&quot; &quot;den glanz&quot; ## [7477] &quot;die speisekammer&quot; &quot;dem salbungsvollen&quot; ## [7479] &quot;den genuß&quot; &quot;den bibelstelle&quot; ## [7481] &quot;die außentreppe&quot; &quot;die auf&quot; ## [7483] &quot;den führte&quot; &quot;den ,&quot; ## [7485] &quot;die luft&quot; &quot;der .\\&quot;,&quot; ## [7487] &quot;der sieben&quot; &quot;den zaun&quot; ## [7489] &quot;die zu&quot; &quot;dem gebiet&quot; ## [7491] &quot;dem öffentlichen&quot; &quot;des dorfes&quot; ## [7493] &quot;der anführer&quot; &quot;der einen&quot; ## [7495] &quot;die andere&quot; &quot;den großen&quot; ## [7497] &quot;das schickt&quot; &quot;den großen&quot; ## [7499] &quot;die operationen&quot; &quot;die unterführer&quot; ## [7501] &quot;den die&quot; &quot;die gefangenen&quot; ## [7503] &quot;die bestimmungen&quot; &quot;das nächste&quot; ## [7505] &quot;der tag&quot; &quot;die armeen&quot; ## [7507] &quot;dem hause&quot; &quot;des jeff&quot; ## [7509] &quot;der ruhmreiche&quot; &quot;der glücklichste&quot; ## [7511] &quot;der welt&quot; &quot;den ,&quot; ## [7513] &quot;der man&quot; &quot;den .\\&quot;,&quot; ## [7515] &quot;den augen&quot; &quot;das kleine&quot; ## [7517] &quot;dem hause&quot; &quot;den zaun&quot; ## [7519] &quot;der tür&quot; &quot;die türschwelle&quot; ## [7521] &quot;dem moment&quot; &quot;den zaun&quot; ## [7523] &quot;der blume&quot; &quot;die straße&quot; ## [7525] &quot;der nase&quot; &quot;dem er&quot; ## [7527] &quot;den kopf&quot; &quot;der blume&quot; ## [7529] &quot;die nächste&quot; &quot;die blume&quot; ## [7531] &quot;der auch&quot; &quot;dem bauche&quot; ## [7533] &quot;der anatomie&quot; &quot;die nacht&quot; ## [7535] &quot;die kleine&quot; &quot;der sehen&quot; ## [7537] &quot;dem gedanken&quot; &quot;den und&quot; ## [7539] &quot;den kopf&quot; &quot;des ganzen&quot; ## [7541] &quot;der nase&quot; &quot;die finger&quot; ## [7543] &quot;den ganzen&quot; &quot;die küche&quot; ## [7545] &quot;der zuckerdose&quot; &quot;die diesem&quot; ## [7547] &quot;die zuckerdose&quot; &quot;den boden&quot; ## [7549] &quot;der hereinkomme&quot; &quot;der welt&quot; ## [7551] &quot;die pfoten&quot; &quot;die alte&quot; ## [7553] &quot;den scherben&quot; &quot;den rand&quot; ## [7555] &quot;dem fußboden&quot; &quot;das mitleid&quot; ## [7557] &quot;dem kerbholz&quot; &quot;des gesagt&quot; ## [7559] &quot;das könne&quot; &quot;die disziplin&quot; ## [7561] &quot;den .\\&quot;,&quot; &quot;den .\\&quot;,&quot; ## [7563] &quot;den knien&quot; &quot;den gleichgültigen&quot; ## [7565] &quot;der tot&quot; &quot;des wort&quot; ## [7567] &quot;den und&quot; &quot;das wort&quot; ## [7569] &quot;den ?\\&quot;,&quot; &quot;der sah&quot; ## [7571] &quot;den haaren&quot; &quot;den ihre&quot; ## [7573] &quot;der mißhandeln&quot; &quot;den für&quot; ## [7575] &quot;die höhe&quot; &quot;der spitze&quot; ## [7577] &quot;die welt&quot; &quot;der aufheitern&quot; ## [7579] &quot;der außenwelt&quot; &quot;dem lande&quot; ## [7581] &quot;die orte&quot; &quot;den ,&quot; ## [7583] &quot;die mit&quot; &quot;dem flusse&quot; ## [7585] &quot;die traurige&quot; &quot;das süße&quot; ## [7587] &quot;der selbstbemitleidung&quot; &quot;die arme&quot; ## [7589] &quot;der zu&quot; &quot;der würde&quot; ## [7591] &quot;der übrigen&quot; &quot;den ?\\&quot;,&quot; ## [7593] &quot;der ausmalte&quot; &quot;die finsternis&quot; ## [7595] &quot;der zehn&quot; &quot;die straße&quot; ## [7597] &quot;die angebetete&quot; &quot;des ohr&quot; ## [7599] &quot;des zweiten&quot; &quot;den zaun&quot; ## [7601] &quot;das buschwerk&quot; &quot;dem fenster&quot; ## [7603] &quot;die erde&quot; &quot;der ,&quot; ## [7605] &quot;die hände&quot; &quot;der brust&quot; ## [7607] &quot;den händen&quot; &quot;der kalten&quot; ## [7609] &quot;die ihm&quot; &quot;den todesschweiß&quot; ## [7611] &quot;der stirn&quot; &quot;das sich&quot; ## [7613] &quot;der todeskampf&quot; &quot;des ,&quot; ## [7615] &quot;das fenster&quot; &quot;die stille&quot; ## [7617] &quot;die überreste&quot; &quot;des märtyrers&quot; ## [7619] &quot;die luft&quot; &quot;das klirren&quot; ## [7621] &quot;den zaun&quot; &quot;der dunkelheit&quot; ## [7623] &quot;das gehörig&quot; &quot;die sonne&quot; ## [7625] &quot;das dorf&quot; &quot;dem frühstück&quot; ## [7627] &quot;den kräftigsten&quot; &quot;den ,&quot; ## [7629] &quot;des mosaischen&quot; &quot;den und&quot; ## [7631] &quot;die natürlich&quot; &quot;die er&quot; ## [7633] &quot;der bergpredigt&quot; &quot;den konnte&quot; ## [7635] &quot;das ganze&quot; &quot;den nebel&quot; ## [7637] &quot;den .&quot; &quot;die --&quot; ## [7639] &quot;die da&quot; &quot;die da&quot; ## [7641] &quot;die da&quot; &quot;die da&quot; ## [7643] &quot;das himmelsreich&quot; &quot;die da&quot; ## [7645] &quot;das fällt&quot; &quot;dem doppelten&quot; ## [7647] &quot;der neugier&quot; &quot;der erwartung&quot; ## [7649] &quot;des gewinnes&quot; &quot;des entzückens&quot; ## [7651] &quot;die glieder&quot; &quot;den war&quot; ## [7653] &quot;das messer&quot; &quot;den burschen&quot; ## [7655] &quot;des ,&quot; &quot;die behauptung&quot; ## [7657] &quot;den ist&quot; &quot;das eine&quot; ## [7659] &quot;die tischkante&quot; &quot;den ,&quot; ## [7661] &quot;den eimer&quot; &quot;die seife&quot; ## [7663] &quot;die ärmel&quot; &quot;das wasser&quot; ## [7665] &quot;die küche&quot; &quot;der tür&quot; ## [7667] &quot;das gesicht&quot; &quot;dem tuch&quot; ## [7669] &quot;das tuch&quot; &quot;der eimer&quot; ## [7671] &quot;der gefüllt&quot; &quot;der in&quot; ## [7673] &quot;die küche&quot; &quot;dem tuch&quot; ## [7675] &quot;dem tuche&quot; &quot;der auftauchte&quot; ## [7677] &quot;das reine&quot; &quot;den nacken&quot; ## [7679] &quot;die mache&quot; &quot;den kopf&quot; ## [7681] &quot;den er&quot; &quot;der allgemein&quot; ## [7683] &quot;die ,&quot; &quot;der \\\\\\&quot;&quot; ## [7685] &quot;den stand&quot; &quot;das mädchen&quot; ## [7687] &quot;dem er&quot; &quot;den hemdkragen&quot; ## [7689] &quot;der war&quot; &quot;die stiefel&quot; ## [7691] &quot;die geduld&quot; &quot;die drei&quot; ## [7693] &quot;der gingen&quot; &quot;der tom&quot; ## [7695] &quot;die zeit&quot; &quot;der sonntagsschule&quot; ## [7697] &quot;der gottesdienst&quot; &quot;der kinder&quot; ## [7699] &quot;das dritte&quot; &quot;den .\\&quot;,&quot; ## [7701] &quot;die hochlehnigen&quot; &quot;das gebäude&quot; ## [7703] &quot;der tür&quot; &quot;den an&quot; ## [7705] &quot;das geschäft&quot; &quot;die anderen&quot; ## [7707] &quot;den weg&quot; &quot;dem er&quot; ## [7709] &quot;der verschiedenen&quot; &quot;die kirche&quot; ## [7711] &quot;der knaben&quot; &quot;dem ersten&quot; ## [7713] &quot;der lehrer&quot; &quot;der vorderen&quot; ## [7715] &quot;den haaren&quot; &quot;der knabe&quot; ## [7717] &quot;der lektion&quot; &quot;der erhielt&quot; ## [7719] &quot;der mit&quot; &quot;der solcher&quot; ## [7721] &quot;den ;&quot; &quot;der superintendent&quot; ## [7723] &quot;den fleiß&quot; &quot;das werk&quot; ## [7725] &quot;der fünf&quot; &quot;die geistige&quot; ## [7727] &quot;dem tage&quot; &quot;die schule&quot; ## [7729] &quot;der superintendent&quot; &quot;den knaben&quot; ## [7731] &quot;das nannte&quot; &quot;die gesetzteren&quot; ## [7733] &quot;die mühe&quot; &quot;die erlangung&quot; ## [7735] &quot;der sieger&quot; &quot;die brust&quot; ## [7737] &quot;den schülers&quot; &quot;dem ruhm&quot; ## [7739] &quot;die ein&quot; &quot;der geistliche&quot; ## [7741] &quot;der versammlung&quot; &quot;der hand&quot; ## [7743] &quot;den vierten&quot; &quot;die blätter&quot; ## [7745] &quot;die notenblätter&quot; &quot;der hand&quot; ## [7747] &quot;der im&quot; &quot;den psalterbuch&quot; ## [7749] &quot;der notenblätter&quot; &quot;der superintendent&quot; ## [7751] &quot;den mundwinkeln&quot; &quot;die ihn&quot; ## [7753] &quot;den kopf&quot; &quot;den ganzen&quot; ## [7755] &quot;die so&quot; &quot;den hatte&quot; ## [7757] &quot;dem sie&quot; &quot;der ,&quot; ## [7759] &quot;das zum&quot; &quot;den vögeln&quot; ## [7761] &quot;den rest&quot; &quot;der rede&quot; ## [7763] &quot;das letzte&quot; &quot;der rede&quot; ## [7765] &quot;die wiederaufnahme&quot; &quot;des kampfes&quot; ## [7767] &quot;den grundlagen&quot; &quot;der folgsamkeit&quot; ## [7769] &quot;dem schwächerwerden&quot; &quot;das allgemeine&quot; ## [7771] &quot;der schluß&quot; &quot;der rede&quot; ## [7773] &quot;die unaufmerksamkeit&quot; &quot;den durch&quot; ## [7775] &quot;das erscheinen&quot; &quot;der frau&quot; ## [7777] &quot;des letzteren&quot; &quot;die dame&quot; ## [7779] &quot;der hand&quot; &quot;den blick&quot; ## [7781] &quot;der seine&quot; &quot;den haaren&quot; ## [7783] &quot;das glücksgefühl&quot; &quot;dem sein&quot; ## [7785] &quot;den besuchern&quot; &quot;den die&quot; ## [7787] &quot;der schule&quot; &quot;der mittelalterliche&quot; ## [7789] &quot;der mann&quot; &quot;der oberste&quot; ## [7791] &quot;des kreises&quot; &quot;die erhabenste&quot; ## [7793] &quot;die diese&quot; &quot;der bis&quot; ## [7795] &quot;der wohl&quot; &quot;der davor&quot; ## [7797] &quot;die ganze&quot; &quot;das staatshaus&quot; ## [7799] &quot;dem man&quot; &quot;die scheue&quot; ## [7801] &quot;dem absoluten&quot; &quot;den starr&quot; ## [7803] &quot;das also&quot; &quot;der große&quot; ## [7805] &quot;der bruder&quot; &quot;dem großen&quot; ## [7807] &quot;die schule&quot; &quot;die hand&quot; ## [7809] &quot;die hand&quot; &quot;der bücherverwalter&quot; ## [7811] &quot;den bücherbrettern&quot; &quot;den vorgesetzten&quot; ## [7813] &quot;die jungen&quot; &quot;die sie&quot; ## [7815] &quot;die jungen&quot; &quot;den beiderlei&quot; ## [7817] &quot;die fortwährend&quot; &quot;den mußten&quot; ## [7819] &quot;die kleinen&quot; &quot;die knaben&quot; ## [7821] &quot;die luft&quot; &quot;dem saß&quot; ## [7823] &quot;der große&quot; &quot;die ganze&quot; ## [7825] &quot;das war&quot; &quot;die gelegenheit&quot; ## [7827] &quot;der zu&quot; &quot;die welt&quot; ## [7829] &quot;das wirkte&quot; &quot;den nächsten&quot; ## [7831] &quot;die nötigen&quot; &quot;den anderen&quot; ## [7833] &quot;die unerhörte&quot; &quot;den ausposaunt&quot; ## [7835] &quot;die staunenswerteste&quot; &quot;des jahrzehnts&quot; ## [7837] &quot;die erregung&quot; &quot;den neuen&quot; ## [7839] &quot;den auf&quot; &quot;die höhe&quot; ## [7841] &quot;des kreisrichters&quot; &quot;die schule&quot; ## [7843] &quot;der aus&quot; &quot;die jungen&quot; ## [7845] &quot;die bank&quot; &quot;die am&quot; ## [7847] &quot;dem sie&quot; &quot;die schätze&quot; ## [7849] &quot;der anstreich-gerechtsame&quot; &quot;der preis&quot; ## [7851] &quot;der superintendent&quot; &quot;den auftreiben&quot; ## [7853] &quot;der rechte&quot; &quot;das wohl&quot; ## [7855] &quot;das licht&quot; &quot;der sonne&quot; ## [7857] &quot;der .\\&quot;,&quot; &quot;die tränen&quot; ## [7859] &quot;den richter&quot; &quot;der schweiß&quot; ## [7861] &quot;die stirn&quot; &quot;der größe&quot; ## [7863] &quot;des mannes&quot; &quot;der richter&quot; ## [7865] &quot;die hand&quot; &quot;der junge&quot; ## [7867] &quot;dem herrn&quot; &quot;die mühe&quot; ## [7869] &quot;die es&quot; &quot;der welt&quot; ## [7871] &quot;das alles&quot; &quot;der herrlichen&quot; ## [7873] &quot;die mich&quot; &quot;dem guten&quot; ## [7875] &quot;der mich&quot; &quot;die namen&quot; ## [7877] &quot;die namen&quot; &quot;der beiden&quot; ## [7879] &quot;die augen&quot; &quot;die einfachste&quot; ## [7881] &quot;der richter&quot; &quot;dem herrn&quot; ## [7883] &quot;die dame&quot; &quot;die namen&quot; ## [7885] &quot;der zwei&quot; &quot;den schleier&quot; ## [7887] &quot;der nächstenliebe&quot; &quot;das ,&quot; ## [7889] &quot;die kleine&quot; &quot;der kirche&quot; ## [7891] &quot;das volk&quot; &quot;die sonntagsschulkinder&quot; ## [7893] &quot;der kanzel&quot; &quot;dem sommer&quot; ## [7895] &quot;das volk&quot; &quot;die kirche&quot; ## [7897] &quot;der alte&quot; &quot;der bessere&quot; ## [7899] &quot;der mayor&quot; &quot;der ortsrichter&quot; ## [7901] &quot;die witwe&quot; &quot;das einzige&quot; ## [7903] &quot;das gastfreieste&quot; &quot;das st.\\&quot;,&quot; ## [7905] &quot;die schönheit&quot; &quot;des dorfes&quot; ## [7907] &quot;die jungen&quot; &quot;des dorfes&quot; ## [7909] &quot;den ,&quot; &quot;das letzte&quot; ## [7911] &quot;der musterknabe&quot; &quot;der hand&quot; ## [7913] &quot;der liebling&quot; &quot;das junge&quot; ## [7915] &quot;den .\\&quot;,&quot; &quot;der tasche&quot; ## [7917] &quot;den jungen&quot; &quot;der eins&quot; ## [7919] &quot;die versammlung&quot; &quot;die glocke&quot; ## [7921] &quot;die kirche&quot; &quot;das kichern&quot; ## [7923] &quot;dem chor&quot; &quot;der chor&quot; ## [7925] &quot;des ganzen&quot; &quot;der _nicht_&quot; ## [7927] &quot;die einzelheiten&quot; &quot;den lande&quot; ## [7929] &quot;der geistliche&quot; &quot;das lied&quot; ## [7931] &quot;dem ton&quot; &quot;des letzten&quot; ## [7933] &quot;die ladies&quot; &quot;der in&quot; ## [7935] &quot;den schoß&quot; &quot;die augen&quot; ## [7937] &quot;die köpfe&quot; &quot;dem liede&quot; ## [7939] &quot;der reverend&quot; &quot;dem er&quot; ## [7941] &quot;dem heiligen&quot; &quot;die überall&quot; ## [7943] &quot;den ist&quot; &quot;den großen&quot; ## [7945] &quot;des zeitungs-überflusses&quot; &quot;die predigt&quot; ## [7947] &quot;der kirche&quot; &quot;den kindern&quot; ## [7949] &quot;der kirche&quot; &quot;den anderen&quot; ## [7951] &quot;des dorfes&quot; &quot;dem dorfe&quot; ## [7953] &quot;dem lande&quot; &quot;dem staat&quot; ## [7955] &quot;den behörden&quot; &quot;der einzelnen&quot; ## [7957] &quot;den vereinigten&quot; &quot;dem kongreß&quot; ## [7959] &quot;dem präsidenten&quot; &quot;den staatsdienern&quot; ## [7961] &quot;den armen&quot; &quot;den unter&quot; ## [7963] &quot;dem joch&quot; &quot;den millionen&quot; ## [7965] &quot;des orients&quot; &quot;den glücklichen&quot; ## [7967] &quot;die nicht&quot; &quot;den armen&quot; ## [7969] &quot;der bitte&quot; &quot;den fallen&quot; ## [7971] &quot;die versammlung&quot; &quot;der knabe&quot; ## [7973] &quot;das nicht&quot; &quot;den sermon&quot; ## [7975] &quot;des geistlichen&quot; &quot;das empfand&quot; ## [7977] &quot;dem althergebrachten&quot; &quot;der predigt&quot; ## [7979] &quot;den sitz&quot; &quot;des kirchenstuhls&quot; ## [7981] &quot;das fortwährende&quot; &quot;die glieder&quot; ## [7983] &quot;den hinterbeinen&quot; &quot;den körper&quot; ## [7985] &quot;der predigt&quot; &quot;das ,&quot; ## [7987] &quot;die fliege&quot; &quot;der geistliche&quot; ## [7989] &quot;den ersten&quot; &quot;der war&quot; ## [7991] &quot;der versammlung&quot; &quot;der erwähnung&quot; ## [7993] &quot;die seiten&quot; &quot;der predigt&quot; ## [7995] &quot;dem gottesdienst&quot; &quot;die predigt&quot; ## [7997] &quot;der geistliche&quot; &quot;der liegen&quot; ## [7999] &quot;den und&quot; &quot;dem kleinen&quot; ## [8001] &quot;die herrlichkeit&quot; &quot;den unsichtbaren&quot; ## [8003] &quot;der löwe&quot; &quot;der schlußbetrachtung&quot; ## [8005] &quot;der in&quot; &quot;den .\\&quot;,&quot; ## [8007] &quot;den er&quot; &quot;das erste&quot; ## [8009] &quot;das tier&quot; &quot;den finger&quot; ## [8011] &quot;das tier&quot; &quot;der verwundete&quot; ## [8013] &quot;das tier&quot; &quot;dem rücken&quot; ## [8015] &quot;den beinen&quot; &quot;den stuhl&quot; ## [8017] &quot;das tier&quot; &quot;des weges&quot; ## [8019] &quot;der sommerhitze&quot; &quot;die gefangenschaft&quot; ## [8021] &quot;das tier&quot; &quot;der im&quot; ## [8023] &quot;die lefzen&quot; &quot;das tier&quot; ## [8025] &quot;den pfoten&quot; &quot;den feind&quot; ## [8027] &quot;des pudels&quot; &quot;die höhe&quot; ## [8029] &quot;das tier&quot; &quot;der hilflos&quot; ## [8031] &quot;dem rücken&quot; &quot;die nächstsitzenden&quot; ## [8033] &quot;den hinter&quot; &quot;der hund&quot; ## [8035] &quot;der zu&quot; &quot;dem tier&quot; ## [8037] &quot;dem er&quot; &quot;den vorderpfoten&quot; ## [8039] &quot;den zähnen&quot; &quot;den kopf&quot; ## [8041] &quot;die ohren&quot; &quot;der langweilig&quot; ## [8043] &quot;das bot&quot; &quot;die schnauze&quot; ## [8045] &quot;der erde&quot; &quot;das satt&quot; ## [8047] &quot;das tier&quot; &quot;der ein&quot; ## [8049] &quot;der schrei&quot; &quot;der pudel&quot; ## [8051] &quot;das geschrei&quot; &quot;der pudel&quot; ## [8053] &quot;dem altar&quot; &quot;der tür&quot; ## [8055] &quot;die höhe&quot; &quot;der zum&quot; ## [8057] &quot;der seine&quot; &quot;den schoß&quot; ## [8059] &quot;dem fenster&quot; &quot;die stimme&quot; ## [8061] &quot;des unglücklichen&quot; &quot;der ferne&quot; ## [8063] &quot;die ganze&quot; &quot;die predigt&quot; ## [8065] &quot;der aufgenommen&quot; &quot;der aufmerksamkeit&quot; ## [8067] &quot;die heiligste&quot; &quot;der arme&quot; ## [8069] &quot;die versammlung&quot; &quot;der gottesdienst&quot; ## [8071] &quot;der segen&quot; &quot;die absicht&quot; ## [8073] &quot;den hund&quot; &quot;der montagmorgen&quot; ## [8075] &quot;der montagmorgen&quot; &quot;den und&quot; ## [8077] &quot;die woche&quot; &quot;den feiertage&quot; ## [8079] &quot;der wunsch&quot; &quot;das war&quot; ## [8081] &quot;die sache&quot; &quot;den und&quot; ## [8083] &quot;den diese&quot; &quot;der schwächer&quot; ## [8085] &quot;den .\\&quot;,&quot; &quot;das war&quot; ## [8087] &quot;den zahn&quot; &quot;das würde&quot; ## [8089] &quot;die sache&quot; &quot;dem zahn&quot; ## [8091] &quot;den doktor&quot; &quot;den gehört&quot; ## [8093] &quot;das zwei&quot; &quot;der drei&quot; ## [8095] &quot;der bettdecke&quot; &quot;die nötigen&quot; ## [8097] &quot;den .\\&quot;,&quot; &quot;der stoß&quot; ## [8099] &quot;der anfangen&quot; &quot;das schon&quot; ## [8101] &quot;das zu&quot; &quot;die mit&quot; ## [8103] &quot;dem einen&quot; &quot;dem neuen&quot; ## [8105] &quot;das gestern&quot; &quot;der gefahren&quot; ## [8107] &quot;dem rannte&quot; &quot;die treppe&quot; ## [8109] &quot;die lippen&quot; &quot;das mit&quot; ## [8111] &quot;die alte&quot; &quot;des gleichzeitig&quot; ## [8113] &quot;das erleichterte&quot; &quot;dem unsinn&quot; ## [8115] &quot;das stöhnen&quot; &quot;der schmerz&quot; ## [8117] &quot;der zehe&quot; &quot;der an&quot; ## [8119] &quot;der zahn&quot; &quot;den und&quot; ## [8121] &quot;dem ofen&quot; &quot;der schule&quot; ## [8123] &quot;der lärm&quot; &quot;der schule&quot; ## [8125] &quot;die zahnärztlichen&quot; &quot;die alte&quot; ## [8127] &quot;das eine&quot; &quot;der schnur&quot; ## [8129] &quot;das andere&quot; &quot;den bettpfosten&quot; ## [8131] &quot;die kohle&quot; &quot;der zahn&quot; ## [8133] &quot;des unglück&quot; &quot;dem frühstück&quot; ## [8135] &quot;der gegenstand&quot; &quot;des neides&quot; ## [8137] &quot;die lücke&quot; &quot;das seinen&quot; ## [8139] &quot;der bisher&quot; &quot;der mittelpunkt&quot; ## [8141] &quot;der verehrung&quot; &quot;das herz&quot; ## [8143] &quot;die er&quot; &quot;die anderen&quot; ## [8145] &quot;dem jugendlichen&quot; &quot;des dorfes&quot; ## [8147] &quot;dem sohn&quot; &quot;des dorf-trunkenboldes&quot; ## [8149] &quot;des ortes&quot; &quot;der erwachsener&quot; ## [8151] &quot;der mußten&quot; &quot;dem herunterhängenden&quot; ## [8153] &quot;die hacken&quot; &quot;die hinteren&quot; ## [8155] &quot;der höhe&quot; &quot;des knies&quot; ## [8157] &quot;der hosenboden&quot; &quot;der zur&quot; ## [8159] &quot;der erste&quot; &quot;der barfuß&quot; ## [8161] &quot;der letzte&quot; &quot;der im&quot; ## [8163] &quot;der in&quot; &quot;das dumme&quot; ## [8165] &quot;der bequemte&quot; &quot;der zu&quot; ## [8167] &quot;der anzuziehen&quot; &quot;das leben&quot; ## [8169] &quot;die wohlerzogenen&quot; &quot;den romantischen&quot; ## [8171] &quot;den sofort&quot; &quot;die ?\\&quot;,&quot; ## [8173] &quot;dem schlachthaus&quot; &quot;den blauen&quot; ## [8175] &quot;der toten&quot; &quot;das gesagt&quot; ## [8177] &quot;dem jim&quot; &quot;dem ben&quot; ## [8179] &quot;die haben&quot; &quot;den neger&quot; ## [8181] &quot;der _nicht_&quot; &quot;dem gesicht&quot; ## [8183] &quot;dem baum&quot; &quot;das heißt&quot; ## [8185] &quot;der will&quot; &quot;den wald&quot; ## [8187] &quot;das gesicht&quot; &quot;den baum&quot; ## [8189] &quot;den und&quot; &quot;die hand&quot; ## [8191] &quot;das wasser&quot; &quot;die warz&quot; ## [8193] &quot;das kann&quot; &quot;das mit&quot; ## [8195] &quot;dem faulen&quot; &quot;die hand&quot; ## [8197] &quot;die bohne&quot; &quot;die warze&quot; ## [8199] &quot;das auf&quot; &quot;die eine&quot; ## [8201] &quot;der bohne&quot; &quot;die und&quot; ## [8203] &quot;die eine&quot; &quot;der bohne&quot; ## [8205] &quot;das blut&quot; &quot;die andere&quot; ## [8207] &quot;das blut&quot; &quot;die warze&quot; ## [8209] &quot;das ist&quot; &quot;der ist&quot; ## [8211] &quot;die katze&quot; &quot;den kirchhof&quot; ## [8213] &quot;der auch&quot; &quot;der drei&quot; ## [8215] &quot;den wind&quot; &quot;der hörst&quot; ## [8217] &quot;den kerl&quot; &quot;die katze&quot; ## [8219] &quot;der katze&quot; &quot;das heilt&quot; ## [8221] &quot;das läßt&quot; &quot;die alte&quot; ## [8223] &quot;die sieht&quot; &quot;das glaub&quot; ## [8225] &quot;der nacht&quot; &quot;dem er&quot; ## [8227] &quot;den arm&quot; &quot;das ist&quot; ## [8229] &quot;das _weiß_&quot; &quot;die dich&quot; ## [8231] &quot;das vaterunser&quot; &quot;das mit&quot; ## [8233] &quot;der katze&quot; &quot;den diese&quot; ## [8235] &quot;den alten&quot; &quot;der ist&quot; ## [8237] &quot;die teufel&quot; &quot;das ist&quot; ## [8239] &quot;das wenigste&quot; &quot;der alte&quot; ## [8241] &quot;der teufel&quot; &quot;die katz&quot; ## [8243] &quot;das ?\\&quot;,&quot; &quot;das ?\\&quot;,&quot; ## [8245] &quot;die ?\\&quot;,&quot; &quot;dem wald&quot; ## [8247] &quot;die erste&quot; &quot;die ich&quot; ## [8249] &quot;den mund&quot; &quot;die wanze&quot; ## [8251] &quot;der schachtel&quot; &quot;die vorher&quot; ## [8253] &quot;das gefängnis&quot; &quot;der ,&quot; ## [8255] &quot;die beiden&quot; &quot;der höchlichst&quot; ## [8257] &quot;den mit&quot; &quot;das kleine&quot; ## [8259] &quot;der sich&quot; &quot;der lehrer&quot; ## [8261] &quot;die höhe&quot; &quot;die situation&quot; ## [8263] &quot;der mal&quot; &quot;der mädchen-seite&quot; ## [8265] &quot;der _einzigste_&quot; &quot;des lehrers&quot; ## [8267] &quot;der arbeitenden&quot; &quot;die schüler&quot; ## [8269] &quot;den verstand&quot; &quot;der lehrer&quot; ## [8271] &quot;das ist&quot; &quot;die staunenerregendste&quot; ## [8273] &quot;die ich&quot; &quot;die rute&quot; ## [8275] &quot;die jacke&quot; &quot;des lehrers&quot; ## [8277] &quot;die rute&quot; &quot;den _mädchen_&quot; ## [8279] &quot;das zur&quot; &quot;das kichern&quot; ## [8281] &quot;das schulzimmer&quot; &quot;die wundervolle&quot; ## [8283] &quot;die mit&quot; &quot;dem ende&quot; ## [8285] &quot;der bank&quot; &quot;der ,&quot; ## [8287] &quot;das mädchen&quot; &quot;dem es&quot; ## [8289] &quot;den kopf&quot; &quot;das zimmer&quot; ## [8291] &quot;die arme&quot; &quot;das lange&quot; ## [8293] &quot;die allgemeine&quot; &quot;das gewöhnliche&quot; ## [8295] &quot;der die&quot; &quot;das mädchen&quot; ## [8297] &quot;die zeit&quot; &quot;den kopf&quot; ## [8299] &quot;der herumsah&quot; &quot;der zu&quot; ## [8301] &quot;das mädchen&quot; &quot;des einverständnisses&quot; ## [8303] &quot;der bursche&quot; &quot;der hand&quot; ## [8305] &quot;das mädel&quot; &quot;das mädel&quot; ## [8307] &quot;der aber&quot; &quot;dem schornstein&quot; ## [8309] &quot;das interesse&quot; &quot;der kleinen&quot; ## [8311] &quot;dem werk&quot; &quot;der künstler&quot; ## [8313] &quot;das haus&quot; &quot;die kleine&quot; ## [8315] &quot;den mit&quot; &quot;dem monstrum&quot; ## [8317] &quot;das mädchen&quot; &quot;die tafel&quot; ## [8319] &quot;das mädchen&quot; &quot;der nicht&quot; ## [8321] &quot;die worte&quot; &quot;den :&quot; ## [8323] &quot;das schulzimmer&quot; &quot;der ganzen&quot; ## [8325] &quot;der lehrer&quot; &quot;die schule&quot; ## [8327] &quot;der beruhigt&quot; &quot;der sturm&quot; ## [8329] &quot;der geographiestunde&quot; &quot;das chaos&quot; ## [8331] &quot;der hereinbrach&quot; &quot;die zinn-medaille&quot; ## [8333] &quot;die er&quot; &quot;der abgeben&quot; ## [8335] &quot;das buch&quot; &quot;die ferne&quot; ## [8337] &quot;die luft&quot; &quot;der schläfrigste&quot; ## [8339] &quot;das halb&quot; &quot;der fünfundzwanzig&quot; ## [8341] &quot;der ,&quot; &quot;die da&quot; ## [8343] &quot;dem gesumse&quot; &quot;der bienen&quot; ## [8345] &quot;des haupt&quot; &quot;den schimmernden&quot; ## [8347] &quot;der luft&quot; &quot;die aus&quot; ## [8349] &quot;der ferne&quot; &quot;die farbe&quot; ## [8351] &quot;des purpurs&quot; &quot;der großen&quot; ## [8353] &quot;die schliefen&quot; &quot;der wenigstens&quot; ## [8355] &quot;den totzuschlagen&quot; &quot;die tasche&quot; ## [8357] &quot;die zündholzschachtel&quot; &quot;die wanze&quot; ## [8359] &quot;die bank&quot; &quot;das unvernünftige&quot; ## [8361] &quot;des dankes&quot; &quot;dem griffel&quot; ## [8363] &quot;den zeitvertreib&quot; &quot;die beiden&quot; ## [8365] &quot;die woche&quot; &quot;den exerzitien&quot; ## [8367] &quot;des gefangenen&quot; &quot;der neue&quot; ## [8369] &quot;der ins&quot; &quot;der wanze&quot; ## [8371] &quot;den tisch&quot; &quot;dem griffel&quot; ## [8373] &quot;die wanze&quot; &quot;den äquator&quot; ## [8375] &quot;der zu&quot; &quot;der beiden&quot; ## [8377] &quot;der wanze&quot; &quot;der andere&quot; ## [8379] &quot;der köpfe&quot; &quot;der gedrängt&quot; ## [8381] &quot;den tisch&quot; &quot;der geist&quot; ## [8383] &quot;das glück&quot; &quot;den .\\&quot;,&quot; ## [8385] &quot;die wanze&quot; &quot;das ,&quot; ## [8387] &quot;die jungen&quot; &quot;den sieg&quot; ## [8389] &quot;den fingern&quot; &quot;die wanze&quot; ## [8391] &quot;die versuchung&quot; &quot;das ärgerte&quot; ## [8393] &quot;das !\\&quot;,&quot; &quot;der ein&quot; ## [8395] &quot;das gibt&#39;s&quot; &quot;die wanze&quot; ## [8397] &quot;die wanze&quot; &quot;der schulter&quot; ## [8399] &quot;der nächsten&quot; &quot;der staub&quot; ## [8401] &quot;die ganze&quot; &quot;die beiden&quot; ## [8403] &quot;die plötzliche&quot; &quot;die sich&quot; ## [8405] &quot;die klasse&quot; &quot;der lehrer&quot; ## [8407] &quot;den zehen&quot; &quot;der auseinandersetzung&quot; ## [8409] &quot;die schule&quot; &quot;die ecke&quot; ## [8411] &quot;die anderen&quot; &quot;die seitengasse&quot; ## [8413] &quot;das andere&quot; &quot;des gäßchens&quot; ## [8415] &quot;der ,&quot; &quot;der bei&quot; ## [8417] &quot;der schule&quot; &quot;die hand&quot; ## [8419] &quot;das interesse&quot; &quot;der kunst&quot; ## [8421] &quot;den begann&quot; &quot;das heißt&quot; ## [8423] &quot;die man&quot; &quot;den kopf&quot; ## [8425] &quot;das mein&quot; &quot;die knie&quot; ## [8427] &quot;die bank&quot; &quot;der viermal&quot; ## [8429] &quot;die kirche&quot; &quot;dem zirkus&quot; ## [8431] &quot;den zirkus&quot; &quot;den .\\&quot;,&quot; ## [8433] &quot;das ist&quot; &quot;die sind&quot; ## [8435] &quot;das ?\\&quot;,&quot; &quot;das nett&quot; ## [8437] &quot;der kann&quot; &quot;das .\\&quot;,&quot; ## [8439] &quot;das halt&quot; &quot;die leute&quot; ## [8441] &quot;das immerfort&quot; &quot;der ,&quot; ## [8443] &quot;der &#39;nen&quot; &quot;die tafel&quot; ## [8445] &quot;die alte&quot; &quot;das gesicht&quot; ## [8447] &quot;den ,&quot; &quot;den kopf&quot; ## [8449] &quot;dem gesicht&quot; &quot;den kuß&quot; ## [8451] &quot;der schürze&quot; &quot;den händen&quot; ## [8453] &quot;die hände&quot; &quot;der .\\&quot;,&quot; ## [8455] &quot;die roten&quot; &quot;der &#39;nen&quot; ## [8457] &quot;der in&quot; &quot;die schule&quot; ## [8459] &quot;der wenn&quot; &quot;der schule&quot; ## [8461] &quot;die anderen&quot; &quot;das .\\&quot;,&quot; ## [8463] &quot;die erstaunten&quot; &quot;die erste&quot; ## [8465] &quot;der du&quot; &quot;das mädchen&quot; ## [8467] &quot;den .\\&quot;,&quot; &quot;das gesicht&quot; ## [8469] &quot;der wand&quot; &quot;der an&quot; ## [8471] &quot;der tür&quot; &quot;das unrecht&quot; ## [8473] &quot;das gesicht&quot; &quot;dem ton&quot; ## [8475] &quot;den abgebrochenen&quot; &quot;die augen&quot; ## [8477] &quot;den haben&quot; &quot;der hand&quot; ## [8479] &quot;der tür&quot; &quot;dem tage&quot; ## [8481] &quot;den spielplatz&quot; &quot;der stille&quot; ## [8483] &quot;der an&quot; &quot;die schüler&quot; ## [8485] &quot;der zur&quot; &quot;den eine&quot; ## [8487] &quot;den ,&quot; &quot;die ihren&quot; ## [8489] &quot;die gassen&quot; &quot;der schule&quot; ## [8491] &quot;dem gipfel&quot; &quot;den ,&quot; ## [8493] &quot;das schulhaus&quot; &quot;das innere&quot; ## [8495] &quot;der keiner&quot; &quot;das weite&quot; ## [8497] &quot;die schwere&quot; &quot;die vögel&quot; ## [8499] &quot;die ganze&quot; &quot;das schweigen&quot; ## [8501] &quot;das gefühl&quot; &quot;des alleinseins&quot; ## [8503] &quot;der kleine&quot; &quot;den vollkommen&quot; ## [8505] &quot;die ellbogen&quot; &quot;die knie&quot; ## [8507] &quot;das kinn&quot; &quot;der hand&quot; ## [8509] &quot;das ganze&quot; &quot;der wind&quot; ## [8511] &quot;den blättern&quot; &quot;dem grab&quot; ## [8513] &quot;den --&quot; &quot;dem leben&quot; ## [8515] &quot;die beste&quot; &quot;der welt&quot; ## [8517] &quot;der leichte&quot; &quot;der jugend&quot; ## [8519] &quot;der in&quot; &quot;der ,&quot; ## [8521] &quot;des großen&quot; &quot;der zurückkäme&quot; ## [8523] &quot;der gedanke&quot; &quot;den ,&quot; ## [8525] &quot;der ,&quot; &quot;der war&quot; ## [8527] &quot;der sich&quot; &quot;den kühnsten&quot; ## [8529] &quot;der romantik&quot; &quot;den und&quot; ## [8531] &quot;der noch&quot; &quot;den indianern&quot; ## [8533] &quot;den wilden&quot; &quot;den verlassenen&quot; ## [8535] &quot;den kriegspfad&quot; &quot;die sonntagsschule&quot; ## [8537] &quot;den !\\&quot;,&quot; &quot;das war&#39;s&quot; ## [8539] &quot;die welt&quot; &quot;die menschen&quot; ## [8541] &quot;die schäumende&quot; &quot;dem ,&quot; ## [8543] &quot;der gräßlichen&quot; &quot;dem höhepunkt&quot; ## [8545] &quot;dem alten&quot; &quot;den hut&quot; ## [8547] &quot;den federn&quot; &quot;die schwarze&quot; ## [8549] &quot;den totenschädeln&quot; &quot;den gekreuzten&quot; ## [8551] &quot;dem entsetzen&quot; &quot;die guten&quot; ## [8553] &quot;der kirche&quot; &quot;der pirat&quot; ## [8555] &quot;der schwarze&quot; &quot;des spanischen&quot; ## [8557] &quot;den vorbereitungen&quot; &quot;der nähe&quot; ## [8559] &quot;den boden&quot; &quot;des holz&quot; ## [8561] &quot;die erde&quot; &quot;den und&quot; ## [8563] &quot;den .\\&quot;,&quot; &quot;den kopf&quot; ## [8565] &quot;die glaskugel&quot; &quot;die wahrheit&quot; ## [8567] &quot;den war&quot; &quot;den er&quot; ## [8569] &quot;den stets&quot; &quot;die grube&quot; ## [8571] &quot;den gleichen&quot; &quot;der öffnete&quot; ## [8573] &quot;die man&quot; &quot;das auf&quot; ## [8575] &quot;den platz&quot; &quot;des begräbnisses&quot; ## [8577] &quot;den können&quot; &quot;den zauber&quot; ## [8579] &quot;der ,&quot; &quot;den mund&quot; ## [8581] &quot;der sand&quot; &quot;der .&quot; ## [8583] &quot;die nutzlosigkeit&quot; &quot;die eben&quot; ## [8585] &quot;der gehabt&quot; &quot;den .\\&quot;,&quot; ## [8587] &quot;den ,&quot; &quot;die kugel&quot; ## [8589] &quot;der tasche&quot; &quot;der ,&quot; ## [8591] &quot;den bruder&quot; &quot;der näher&quot; ## [8593] &quot;der weiter&quot; &quot;den versuch&quot; ## [8595] &quot;der letzte&quot; &quot;die beiden&quot; ## [8597] &quot;der .\\&quot;,&quot; &quot;der ton&quot; ## [8599] &quot;den wald&quot; &quot;dem hohlen&quot; ## [8601] &quot;dem hemd&quot; &quot;die trompete&quot; ## [8603] &quot;den zehen&quot; &quot;den sherwood-wald&quot; ## [8605] &quot;dem buch&quot; &quot;dem gedächtnis&quot; ## [8607] &quot;der tat&quot; &quot;die herrschaft&quot; ## [8609] &quot;des streiten&quot; &quot;die erde&quot; ## [8611] &quot;die meisten&quot; &quot;das ist&quot; ## [8613] &quot;das steht&quot; &quot;den armen&quot; ## [8615] &quot;der aufrappelnd&quot; &quot;das ist&quot; ## [8617] &quot;dem buch&quot; &quot;der much&quot; ## [8619] &quot;des müllers&quot; &quot;der ich&quot; ## [8621] &quot;der sheriff&quot; &quot;den ,&quot; ## [8623] &quot;den durchgefochten&quot; &quot;der joe&quot; ## [8625] &quot;der verräterischen&quot; &quot;die erlaubnis&quot; ## [8627] &quot;dem blut&quot; &quot;den davonfließen&quot; ## [8629] &quot;der jetzt&quot; &quot;der geächteter&quot; ## [8631] &quot;die schwache&quot; &quot;der stimme&quot; ## [8633] &quot;den armen&quot; &quot;die höhe&quot; ## [8635] &quot;der an&quot; &quot;die moderne&quot; ## [8637] &quot;der vereinigten&quot; &quot;den tom&quot; ## [8639] &quot;der tag&quot; &quot;den müsse&quot; ## [8641] &quot;das war&quot; &quot;die dunkelheit&quot; ## [8643] &quot;der stille&quot; &quot;das ticken&quot; ## [8645] &quot;der uhr&quot; &quot;den regte&quot; ## [8647] &quot;der ton&quot; &quot;das eintönige&quot; ## [8649] &quot;das keine&quot; &quot;der ließ&quot; ## [8651] &quot;das unheimliche&quot; &quot;des totenkäfers&quot; ## [8653] &quot;des tage&quot; &quot;das langgezogene&quot; ## [8655] &quot;des die&quot; &quot;die ewigkeit&quot; ## [8657] &quot;die uhr&quot; &quot;das aufreißen&quot; ## [8659] &quot;die höhe&quot; &quot;der wütende&quot; ## [8661] &quot;der teufel&quot; &quot;die verfluchte&quot; ## [8663] &quot;der anprall&quot; &quot;die rückwand&quot; ## [8665] &quot;dem fenster&quot; &quot;der zweimal&quot; ## [8667] &quot;das dach&quot; &quot;des holzschuppens&quot; ## [8669] &quot;die jungen&quot; &quot;den in&quot; ## [8671] &quot;der dunkelheit&quot; &quot;das nasse&quot; ## [8673] &quot;des kirchhofes&quot; &quot;der althergebrachten&quot; ## [8675] &quot;des westens&quot; &quot;der sich&quot; ## [8677] &quot;den ganzen&quot; &quot;die meisten&quot; ## [8679] &quot;der älteren&quot; &quot;den hügeln&quot; ## [8681] &quot;das und&quot; &quot;den bäumen&quot; ## [8683] &quot;die sich&quot; &quot;die störung&quot; ## [8685] &quot;die beiden&quot; &quot;die trostlose&quot; ## [8687] &quot;den das&quot; &quot;das sie&quot; ## [8689] &quot;den schutz&quot; &quot;der drängten&quot; ## [8691] &quot;das ,&quot; &quot;das husten&quot; ## [8693] &quot;der einzige&quot; &quot;der die&quot; ## [8695] &quot;der stimme&quot; &quot;die toten&quot; ## [8697] &quot;den werden&quot; &quot;der nächsten&quot; ## [8699] &quot;die frage&quot; &quot;der :&quot; ## [8701] &quot;der :&quot; &quot;dem ,&quot; ## [8703] &quot;die leute&quot; &quot;die unterhaltung&quot; ## [8705] &quot;der .\\&quot;,&quot; &quot;den am&quot; ## [8707] &quot;die beiden&quot; &quot;den herzens&quot; ## [8709] &quot;der .&quot; &quot;der !\\&quot;,&quot; ## [8711] &quot;den ?\\&quot;,&quot; &quot;die sehen&quot; ## [8713] &quot;der dunkelheit&quot; &quot;die katzen&quot; ## [8715] &quot;den sie&quot; &quot;die köpfe&quot; ## [8717] &quot;des kirchhofes&quot; &quot;das ?\\&quot;,&quot; ## [8719] &quot;der dunkelheit&quot; &quot;die umgebung&quot; ## [8721] &quot;den uns&quot; &quot;das sind&quot; ## [8723] &quot;die eine&quot; &quot;dem alten&quot; ## [8725] &quot;das gewiß&quot; &quot;den --&quot; ## [8727] &quot;der näher&quot; &quot;der heiß&quot; ## [8729] &quot;der nähe&quot; &quot;die zweite&quot; ## [8731] &quot;die von&quot; &quot;dem tuscheln&quot; ## [8733] &quot;die drei&quot; &quot;den kaum&quot; ## [8735] &quot;der beiden&quot; &quot;die dritte&quot; ## [8737] &quot;der anderen&quot; &quot;die laterne&quot; ## [8739] &quot;die höhe&quot; &quot;des jungen&quot; ## [8741] &quot;der und&quot; &quot;das grab&quot; ## [8743] &quot;der doktor&quot; &quot;die laterne&quot; ## [8745] &quot;das kopfende&quot; &quot;des grabes&quot; ## [8747] &quot;dem rücken&quot; &quot;der ulmen&quot; ## [8749] &quot;der .\\&quot;,&quot; &quot;die beiden&quot; ## [8751] &quot;der mond&quot; &quot;der dumpfe&quot; ## [8753] &quot;der schaufeln&quot; &quot;die ihre&quot; ## [8755] &quot;den .\\&quot;,&quot; &quot;den sargdeckel&quot; ## [8757] &quot;die männer&quot; &quot;den sarg&quot; ## [8759] &quot;den deckel&quot; &quot;die leiche&quot; ## [8761] &quot;die erde&quot; &quot;der mond&quot; ## [8763] &quot;den wolken&quot; &quot;die scheußliche&quot; ## [8765] &quot;der schubkarren&quot; &quot;der körper&quot; ## [8767] &quot;den .\\&quot;,&quot; &quot;das überhängende&quot; ## [8769] &quot;des strickes&quot; &quot;der das&quot; ## [8771] &quot;der indianer-joe&quot; &quot;das heißen&quot; ## [8773] &quot;der doktor&quot; &quot;das letzte&quot; ## [8775] &quot;der indianer-joe&quot; &quot;dem doktor&quot; ## [8777] &quot;der rasch&quot; &quot;den war&quot; ## [8779] &quot;den noch&quot; &quot;der abrechnen&quot; ## [8781] &quot;dem doktor&quot; &quot;der faust&quot; ## [8783] &quot;der nase&quot; &quot;den raufbold&quot; ## [8785] &quot;den .\\&quot;,&quot; &quot;den ,&quot; ## [8787] &quot;den worten&quot; &quot;den doktor&quot; ## [8789] &quot;den füßen&quot; &quot;dem grab&quot; ## [8791] &quot;der indianer-joe&quot; &quot;der auf&quot; ## [8793] &quot;den beinen&quot; &quot;die kämpfenden&quot; ## [8795] &quot;dem doktor&quot; &quot;den schweren&quot; ## [8797] &quot;den --&quot; &quot;das messer&quot; ## [8799] &quot;des jungen&quot; &quot;der doktor&quot; ## [8801] &quot;die wolken&quot; &quot;das schreckliche&quot; ## [8803] &quot;die beiden&quot; &quot;der dunkelheit&quot; ## [8805] &quot;den .\\&quot;,&quot; &quot;der mond&quot; ## [8807] &quot;der hervorkam&quot; &quot;den beiden&quot; ## [8809] &quot;den und&quot; &quot;der doktor&quot; ## [8811] &quot;der stich&quot; &quot;die leiche&quot; ## [8813] &quot;das verräterische&quot; &quot;den geöffneten&quot; ## [8815] &quot;das messer&quot; &quot;die leiche&quot; ## [8817] &quot;das ?\\&quot;,&quot; &quot;der stimme&quot; ## [8819] &quot;dem sargdeckel&quot; &quot;der auf&quot; ## [8821] &quot;den füßen&quot; &quot;das messer&quot; ## [8823] &quot;den leib&quot; &quot;der wut&quot; ## [8825] &quot;der arme&quot; &quot;die knie&quot; ## [8827] &quot;den kaltherzigen&quot; &quot;der und&quot; ## [8829] &quot;die hände&quot; &quot;das ist&quot; ## [8831] &quot;dem prügeln&quot; &quot;das messer&quot; ## [8833] &quot;der drei&quot; &quot;der mond&quot; ## [8835] &quot;den ermordeten&quot; &quot;den eingebundenen&quot; ## [8837] &quot;des toten&quot; &quot;den aufgebrochenen&quot; ## [8839] &quot;das leere&quot; &quot;der wie&quot; ## [8841] &quot;die beiden&quot; &quot;dem dorfe&quot; ## [8843] &quot;die schulter&quot; &quot;der baumstumpf&quot; ## [8845] &quot;der an&quot; &quot;der dunkelheit&quot; ## [8847] &quot;des dorfes&quot; &quot;das bellen&quot; ## [8849] &quot;der erwachten&quot; &quot;der alten&quot; ## [8851] &quot;des herz&quot; &quot;das ziel&quot; ## [8853] &quot;die äußersten&quot; &quot;die offene&quot; ## [8855] &quot;den schützenden&quot; &quot;dem kommen&quot; ## [8857] &quot;den davon&quot; &quot;der später&quot; ## [8859] &quot;das hab&quot; &quot;der ist&quot; ## [8861] &quot;den ekligen&quot; &quot;der hieb&quot; ## [8863] &quot;den rest&quot; &quot;das immer&quot; ## [8865] &quot;den mund&quot; &quot;den mund&quot; ## [8867] &quot;den ,&quot; &quot;der schwören&quot; ## [8869] &quot;das müssen&quot; &quot;den mund&quot; ## [8871] &quot;das beste&quot; &quot;die hand&quot; ## [8873] &quot;das ist&quot; &quot;die einem&quot; ## [8875] &quot;die idee&quot; &quot;die stunde&quot; ## [8877] &quot;die umstände&quot; &quot;die umgebung&quot; ## [8879] &quot;die im&quot; &quot;der tasche&quot; ## [8881] &quot;das mondlicht&quot; &quot;den schwerfälligen&quot; ## [8883] &quot;dem er&quot; &quot;die zunge&quot; ## [8885] &quot;die zähne&quot; &quot;den haarstrichen&quot; ## [8887] &quot;der freiließ&quot; &quot;den mund&quot; ## [8889] &quot;das fleisch&quot; &quot;der könnte&quot; ## [8891] &quot;das ?\\&quot;,&quot; &quot;den --&quot; ## [8893] &quot;den ballen&quot; &quot;des daumens&quot; ## [8895] &quot;dem er&quot; &quot;den kleinen&quot; ## [8897] &quot;der benutzte&quot; &quot;der eid&quot; ## [8899] &quot;die schindel&quot; &quot;die ihre&quot; ## [8901] &quot;den fesseln&quot; &quot;der schlüssel&quot; ## [8903] &quot;der erde&quot; &quot;des verfallenen&quot; ## [8905] &quot;des ,&quot; &quot;das davor&quot; ## [8907] &quot;das !\\&quot;,&quot; &quot;dem .\\&quot;,&quot; ## [8909] &quot;der stelle&quot; &quot;der mauer&quot; ## [8911] &quot;die burschen&quot; &quot;der unwillkürlich&quot; ## [8913] &quot;dem schreck&quot; &quot;die ritze&quot; ## [8915] &quot;der !\\&quot;,&quot; &quot;das ist&quot; ## [8917] &quot;der hund&quot; &quot;der hund&quot; ## [8919] &quot;der .\\&quot;,&quot; &quot;die herzen&quot; ## [8921] &quot;der burschen&quot; &quot;der in&quot; ## [8923] &quot;die hosen&quot; &quot;das ist&quot; ## [8925] &quot;das auge&quot; &quot;die lücke&quot; ## [8927] &quot;der ton&quot; &quot;der hund_&quot; ## [8929] &quot;der .\\&quot;,&quot; &quot;der teufel&quot; ## [8931] &quot;das kommt&quot; &quot;der lehrer&quot; ## [8933] &quot;die sonntagsschule&quot; &quot;den _rücken_&quot; ## [8935] &quot;das ist&quot; &quot;das heulen&quot; ## [8937] &quot;die ohren&quot; &quot;das ?\\&quot;,&quot; ## [8939] &quot;der ,&quot; &quot;das ?\\&quot;,&quot; ## [8941] &quot;den schweinen&quot; &quot;die abenteuerlust&quot; ## [8943] &quot;den seelen&quot; &quot;der beiden&quot; ## [8945] &quot;der die&quot; &quot;den versuch&quot; ## [8947] &quot;dem vorbehalt&quot; &quot;das schnarchen&quot; ## [8949] &quot;den fußspitzen&quot; &quot;dem anderen&quot; ## [8951] &quot;dem schnarchenden&quot; &quot;der mit&quot; ## [8953] &quot;der mann&quot; &quot;das mondlicht&quot; ## [8955] &quot;die herzen&quot; &quot;der burschen&quot; ## [8957] &quot;den --&quot; &quot;der mann&quot; ## [8959] &quot;die geborstene&quot; &quot;den ,&quot; ## [8961] &quot;das lange&quot; &quot;der und&quot; ## [8963] &quot;die nachtluft&quot; &quot;den fremden&quot; ## [8965] &quot;der stelle&quot; &quot;dem kopf&quot; ## [8967] &quot;die schnauze&quot; &quot;das dach&quot; ## [8969] &quot;das beweist&quot; &quot;den küchenherd&quot; ## [8971] &quot;der ganz&quot; &quot;die neger&quot; ## [8973] &quot;die wissen&quot; &quot;der .\\&quot;,&quot; ## [8975] &quot;die nacht&quot; &quot;der brave&quot; ## [8977] &quot;das licht&quot; &quot;die luft&quot; ## [8979] &quot;der gedanke&quot; &quot;die treppe&quot; ## [8981] &quot;die familie&quot; &quot;den tisch&quot; ## [8983] &quot;des sünders&quot; &quot;die tiefste&quot; ## [8985] &quot;dem frühstück&quot; &quot;die seite&quot; ## [8987] &quot;der hoffnung&quot; &quot;den ;&quot; ## [8989] &quot;die grube&quot; &quot;den mut&quot; ## [8991] &quot;der und&quot; &quot;der ,&quot; ## [8993] &quot;dem gefühl&quot; &quot;den zu&quot; ## [8995] &quot;die gegenwart&quot; &quot;des letzteren&quot; ## [8997] &quot;die hintertür&quot; &quot;des schwänzens&quot; ## [8999] &quot;der miene&quot; &quot;die ellbogen&quot; ## [9001] &quot;den tisch&quot; &quot;das kinn&quot; ## [9003] &quot;die hände&quot; &quot;die wand&quot; ## [9005] &quot;dem starren&quot; &quot;des leidens&quot; ## [9007] &quot;das den&quot; &quot;den kann&quot; ## [9009] &quot;den gegenstand&quot; &quot;das papier&quot; ## [9011] &quot;der wundervolle&quot; &quot;das gefäß&quot; ## [9013] &quot;das ganze&quot; &quot;die schreckliche&quot; ## [9015] &quot;die nachricht&quot; &quot;der schullehrer&quot; ## [9017] &quot;der leiche&quot; &quot;den und&quot; ## [9019] &quot;das des&quot; &quot;den --&quot; ## [9021] &quot;der gegend&quot; &quot;des verbrechens&quot; ## [9023] &quot;der zwei&quot; &quot;das waschen&quot; ## [9025] &quot;der ort&quot; &quot;dem ,&quot; ## [9027] &quot;der \\\\\\&quot;&quot; &quot;das volk&quot; ## [9029] &quot;den worden&quot; &quot;der sheriff&quot; ## [9031] &quot;die beste&quot; &quot;den sheriff&quot; ## [9033] &quot;der nacht&quot; &quot;der ganze&quot; ## [9035] &quot;dem kirchhof&quot; &quot;der prozession&quot; ## [9037] &quot;dem zwang&quot; &quot;dem gräßlichen&quot; ## [9039] &quot;die menge&quot; &quot;den ganzen&quot; ## [9041] &quot;das einverständnis&quot; &quot;der und&quot; ## [9043] &quot;den schrecklichen&quot; &quot;das da&quot; ## [9045] &quot;das waren&quot; &quot;die bemerkungen&quot; ## [9047] &quot;die fielen&quot; &quot;der geistliche&quot; ## [9049] &quot;des indianer-joes&quot; &quot;die menge&quot; ## [9051] &quot;die in&quot; &quot;den zweigen&quot; ## [9053] &quot;der bäume&quot; &quot;den geringsten&quot; ## [9055] &quot;der umstehenden&quot; &quot;den !\\&quot;,&quot; ## [9057] &quot;die menge&quot; &quot;der sheriff&quot; ## [9059] &quot;des armen&quot; &quot;die furcht&quot; ## [9061] &quot;die ihn&quot; &quot;dem ermordeten&quot; ## [9063] &quot;das gesicht&quot; &quot;den händen&quot; ## [9065] &quot;die hände&quot; &quot;das euer&quot; ## [9067] &quot;die erde&quot; &quot;der gebärde&quot; ## [9069] &quot;den huckleberry&quot; &quot;den kaltherzigen&quot; ## [9071] &quot;den augenblick&quot; &quot;dem er&quot; ## [9073] &quot;des armen&quot; &quot;dem satan&quot; ## [9075] &quot;der an&quot; &quot;die burschen&quot; ## [9077] &quot;die den&quot; &quot;den dadurch&quot; ## [9079] &quot;dem teufel&quot; &quot;der gegenstand&quot; ## [9081] &quot;des unheimlichsten&quot; &quot;den ,&quot; ## [9083] &quot;die bezauberten&quot; &quot;den .\\&quot;,&quot; ## [9085] &quot;die gelegenheit&quot; &quot;der hoffnung&quot; ## [9087] &quot;den .\\&quot;,&quot; &quot;den körper&quot; ## [9089] &quot;des ermordeten&quot; &quot;den ,&quot; ## [9091] &quot;das schaudernde&quot; &quot;die wunde&quot; ## [9093] &quot;die knaben&quot; &quot;den verdacht&quot; ## [9095] &quot;die wahre&quot; &quot;der leute&quot; ## [9097] &quot;die halbe&quot; &quot;die augen&quot; ## [9099] &quot;dem herzen&quot; &quot;der letzten&quot; ## [9101] &quot;das immer&quot; &quot;der .\\&quot;,&quot; ## [9103] &quot;den augen&quot; &quot;die spannung&quot; ## [9105] &quot;der schreckliche&quot; &quot;der affäre&quot; ## [9107] &quot;die backen&quot; &quot;des öfteren&quot; ## [9109] &quot;die bandage&quot; &quot;den ellbogen&quot; ## [9111] &quot;der alles&quot; &quot;die zahnschmerzen&quot; ## [9113] &quot;den und&quot; &quot;den ganz&quot; ## [9115] &quot;den nicht&quot; &quot;der auffrischen&quot; ## [9117] &quot;den beschauer&quot; &quot;den führer&quot; ## [9119] &quot;den zeugen&quot; &quot;das war&quot; ## [9121] &quot;die entschiedene&quot; &quot;dem wege&quot; ## [9123] &quot;den tag&quot; &quot;der doch&quot; ## [9125] &quot;den zweiten&quot; &quot;dem kleinen&quot; ## [9127] &quot;den ,&quot; &quot;der \\\\\\&quot;&quot; ## [9129] &quot;das gefängnis&quot; &quot;des dorfes&quot; ## [9131] &quot;die dörfler&quot; &quot;der leichenberaubung&quot; ## [9133] &quot;den prozeß&quot; &quot;der lust&quot; ## [9135] &quot;die sache&quot; &quot;der rauferei&quot; ## [9137] &quot;die vorhergegangene&quot; &quot;das weiseste&quot; ## [9139] &quot;die angelegenheit&quot; &quot;der gründe&quot; ## [9141] &quot;die toms&quot; &quot;des interesses&quot; ## [9143] &quot;den wind&quot; &quot;dem gedanken&quot; ## [9145] &quot;der glanz&quot; &quot;des lebens&quot; ## [9147] &quot;den leuten&quot; &quot;die auf&quot; ## [9149] &quot;den .\\&quot;,&quot; &quot;der branche&quot; ## [9151] &quot;der ihr&quot; &quot;die hände&quot; ## [9153] &quot;des gedruckten&quot; &quot;den größten&quot; ## [9155] &quot;dem nötigen&quot; &quot;das zubettgehen&quot; ## [9157] &quot;das maß&quot; &quot;der nötigen&quot; ## [9159] &quot;die gemütsverfassung&quot; &quot;die art&quot; ## [9161] &quot;der kleidung&quot; &quot;die gesundheits-journale&quot; ## [9163] &quot;des laufenden&quot; &quot;das widerriefen&quot; ## [9165] &quot;der tag&quot; &quot;den quacksalber-medizinen&quot; ## [9167] &quot;den tod&quot; &quot;die hölle&quot; ## [9169] &quot;der genesung&quot; &quot;der balsam&quot; ## [9171] &quot;des herrn&quot; &quot;die leidende&quot; ## [9173] &quot;die wasserbehandlung&quot; &quot;den kam&quot; ## [9175] &quot;den morgen&quot; &quot;der unter&quot; ## [9177] &quot;dem zum&quot; &quot;der junge&quot; ## [9179] &quot;der ,&quot; &quot;der ,&quot; ## [9181] &quot;der und&quot; &quot;der hinzu&quot; ## [9183] &quot;der junge&quot; &quot;das wasser&quot; ## [9185] &quot;den haferschleimpflastern&quot; &quot;den .\\&quot;,&quot; ## [9187] &quot;der alten&quot; &quot;den preis&quot; ## [9189] &quot;den .\\&quot;,&quot; &quot;die wasserkur&quot; ## [9191] &quot;den und&quot; &quot;den schmerzentöter&quot; ## [9193] &quot;die wirkung&quot; &quot;der frieden&quot; ## [9195] &quot;die ,&quot; &quot;der bursche&quot; ## [9197] &quot;des ,&quot; &quot;des schmerzentöters&quot; ## [9199] &quot;die flasche&quot; &quot;die medizin&quot; ## [9201] &quot;der junge&quot; &quot;der bei&quot; ## [9203] &quot;des weges&quot; &quot;den teelöffel&quot; ## [9205] &quot;den ;&quot; &quot;den schmerzenztöter&quot; ## [9207] &quot;die luft&quot; &quot;die hinterbeine&quot; ## [9209] &quot;den kopf&quot; &quot;die schultern&quot; ## [9211] &quot;der grenzenloses&quot; &quot;die reste&quot; ## [9213] &quot;der blumentöpfe&quot; &quot;die alte&quot; ## [9215] &quot;der erde&quot; &quot;des himmels&quot; ## [9217] &quot;der katze&quot; &quot;der junge&quot; ## [9219] &quot;der tat&quot; &quot;dem ton&quot; ## [9221] &quot;das heißt&quot; &quot;die alte&quot; ## [9223] &quot;der griff&quot; &quot;des teelöffels&quot; ## [9225] &quot;der tischdecke&quot; &quot;die höhe&quot; ## [9227] &quot;die augen&quot; &quot;dem gewöhnlichen&quot; ## [9229] &quot;die höhe&quot; &quot;den kopf&quot; ## [9231] &quot;das arme&quot; &quot;das hier&quot; ## [9233] &quot;die gedärme&quot; &quot;das setzte&quot; ## [9235] &quot;die sache&quot; &quot;den ein&quot; ## [9237] &quot;die hand&quot; &quot;der ärgerst&quot; ## [9239] &quot;den ,&quot; &quot;den tag&quot; ## [9241] &quot;des schulhofes&quot; &quot;den zu&quot; ## [9243] &quot;die straße&quot; &quot;der herzlose&quot; ## [9245] &quot;den köder&quot; &quot;der rock&quot; ## [9247] &quot;die inhaberin&quot; &quot;die rechte&quot; ## [9249] &quot;den zaun&quot; &quot;dem kopf&quot; ## [9251] &quot;dem gar&quot; &quot;die mütze&quot; ## [9253] &quot;den schulhof&quot; &quot;die nase&quot; ## [9255] &quot;das näschen&quot; &quot;den ,&quot; ## [9257] &quot;den sie&quot; &quot;das rechte&quot; ## [9259] &quot;den ,&quot; &quot;die folgen&quot; ## [9261] &quot;die schulglocke&quot; &quot;dem gedanken&quot; ## [9263] &quot;der den&quot; &quot;die kalte&quot; ## [9265] &quot;dem ärmel&quot; &quot;die weite&quot; ## [9267] &quot;das gleiche&quot; &quot;den er&quot; ## [9269] &quot;dem er&quot; &quot;die fühllose&quot; ## [9271] &quot;den und&quot; &quot;dem die&quot; ## [9273] &quot;den burschen&quot; &quot;der beizustehen&quot; ## [9275] &quot;der zu&quot; &quot;der tod&quot; ## [9277] &quot;den .\\&quot;,&quot; &quot;den ,&quot; ## [9279] &quot;den hütte&quot; &quot;dem er&quot; ## [9281] &quot;den abenteuern&quot; &quot;den .\\&quot;,&quot; ## [9283] &quot;der mississippi&quot; &quot;die kleinigkeit&quot; ## [9285] &quot;der spitze&quot; &quot;die wählten&quot; ## [9287] &quot;der heimatlichen&quot; &quot;die jackson-insel&quot; ## [9289] &quot;der gegenstand&quot; &quot;die sie&quot; ## [9291] &quot;den .\\&quot;,&quot; &quot;der sandbank&quot; ## [9293] &quot;des dorfes&quot; &quot;das heißt&quot; ## [9295] &quot;der zu&quot; &quot;das sie&quot; ## [9297] &quot;der sollte&quot; &quot;den er&quot; ## [9299] &quot;der nachmittag&quot; &quot;den genuß&quot; ## [9301] &quot;das gerücht&quot; &quot;das dorf&quot; ## [9303] &quot;den mund&quot; &quot;den platz&quot; ## [9305] &quot;der zusammenkunft&quot; &quot;der gewaltige&quot; ## [9307] &quot;die stille&quot; &quot;der ,&quot; ## [9309] &quot;des spanischen&quot; &quot;der bluthändige&quot; ## [9311] &quot;der schrecken&quot; &quot;der meere&quot; ## [9313] &quot;die losung&quot; &quot;die betrübende&quot; ## [9315] &quot;den abhang&quot; &quot;dem experiment&quot; ## [9317] &quot;der und&quot; &quot;die küste&quot; ## [9319] &quot;des ufervorsprungs&quot; &quot;der anregung&quot; ## [9321] &quot;die doch&quot; &quot;der ,&quot; ## [9323] &quot;der meere&quot; &quot;dem hierherschleppen&quot; ## [9325] &quot;der bluthändige&quot; &quot;der piraten&quot; ## [9327] &quot;der kaute&quot; &quot;der ,&quot; ## [9329] &quot;des spanischen&quot; &quot;das war&quot; ## [9331] &quot;der zeit&quot; &quot;den besitz&quot; ## [9333] &quot;den finger&quot; &quot;die lippen&quot; ## [9335] &quot;der feind&quot; &quot;die schiffer&quot; ## [9337] &quot;der zu&quot; &quot;das war&quot; ## [9339] &quot;der mitte&quot; &quot;den wind&quot; ## [9341] &quot;der mitte&quot; &quot;des stromes&quot; ## [9343] &quot;der form&quot; &quot;den und&quot; ## [9345] &quot;den wind&quot; &quot;die vortopmarssegel&quot; ## [9347] &quot;das floß&quot; &quot;der mitte&quot; ## [9349] &quot;des stromes&quot; &quot;die jungen&quot; ## [9351] &quot;dem ohr&quot; &quot;der fluß&quot; ## [9353] &quot;der nächsten&quot; &quot;den wurde&quot; ## [9355] &quot;das floß&quot; &quot;dem dorf&quot; ## [9357] &quot;der drei&quot; &quot;der breiten&quot; ## [9359] &quot;des lichtbeschienenen&quot; &quot;dem unerhörten&quot; ## [9361] &quot;das sich&quot; &quot;der ,&quot; ## [9363] &quot;die arme&quot; &quot;den letzten&quot; ## [9365] &quot;den schauplatz&quot; &quot;den werfend&quot; ## [9367] &quot;dem wunsche&quot; &quot;der wilden&quot; ## [9369] &quot;den lippen&quot; &quot;dem gesichtskreise&quot; ## [9371] &quot;des dorfes&quot; &quot;den letzten&quot; ## [9373] &quot;den .\\&quot;,&quot; &quot;die anderen&quot; ## [9375] &quot;der strömung&quot; &quot;dem bereich&quot; ## [9377] &quot;der insel&quot; &quot;den .\\&quot;,&quot; ## [9379] &quot;die gefahr&quot; &quot;den .\\&quot;,&quot; ## [9381] &quot;das floß&quot; &quot;der sandbank&quot; ## [9383] &quot;der spitze&quot; &quot;der insel&quot; ## [9385] &quot;dem kleinen&quot; &quot;das spannten&quot; ## [9387] &quot;den büschen&quot; &quot;des waldes&quot; ## [9389] &quot;die hälfte&quot; &quot;des mitgebrachten&quot; ## [9391] &quot;des zu&quot; &quot;den hütten&quot; ## [9393] &quot;der menschen&quot; &quot;der in&quot; ## [9395] &quot;die zivilisation&quot; &quot;das flackernde&quot; ## [9397] &quot;die baumsäulen&quot; &quot;das laubwerk&quot; ## [9399] &quot;das gewirr&quot; &quot;der schlinggewächse&quot; ## [9401] &quot;die letzte&quot; &quot;den weg&quot; ## [9403] &quot;die burschen&quot; &quot;dem grase&quot; ## [9405] &quot;den können&quot; &quot;das prasselnde&quot; ## [9407] &quot;den die&quot; &quot;die würden&quot; ## [9409] &quot;den die&quot; &quot;der härtesten&quot; ## [9411] &quot;die er&quot; &quot;den kann&quot; ## [9413] &quot;den kopf&quot; &quot;den kopf&quot; ## [9415] &quot;das weiß&quot; &quot;der ,&quot; ## [9417] &quot;die haben&quot; &quot;dem schiff&quot; ## [9419] &quot;die frauen&quot; &quot;die _frauen_&quot; ## [9421] &quot;die frauen&quot; &quot;die aller-allerschönsten&quot; ## [9423] &quot;der .\\&quot;,&quot; &quot;der mit&quot; ## [9425] &quot;die piraten&quot; &quot;der .&quot; ## [9427] &quot;die anderen&quot; &quot;den trösteten&quot; ## [9429] &quot;die schönen&quot; &quot;der früh&quot; ## [9431] &quot;den ,&quot; &quot;den ;&quot; ## [9433] &quot;den anfang&quot; &quot;die unterhaltung&quot; ## [9435] &quot;die augenlider&quot; &quot;der kleinen&quot; ## [9437] &quot;die pfeife&quot; &quot;den fingern&quot; ## [9439] &quot;des ,&quot; &quot;den schlaf&quot; ## [9441] &quot;des gerechten&quot; &quot;des müden&quot; ## [9443] &quot;der ,&quot; &quot;des meeres&quot; ## [9445] &quot;der ,&quot; &quot;des spanischen&quot; ## [9447] &quot;der ,&quot; &quot;den sie&quot; ## [9449] &quot;des schlafes&quot; &quot;der sich&quot; ## [9451] &quot;das gewissen&quot; &quot;die unbestimmte&quot; ## [9453] &quot;die gestohlenen&quot; &quot;die rechte&quot; ## [9455] &quot;den ,&quot; &quot;dem sie&quot; ## [9457] &quot;des gestohlenen&quot; &quot;der äpfel&quot; ## [9459] &quot;die sie&quot; &quot;dem kerbholz&quot; ## [9461] &quot;das gewissen&quot; &quot;die unumstößliche&quot; ## [9463] &quot;das forttragen&quot; &quot;den nur&quot; ## [9465] &quot;den könne&quot; &quot;der bibel&quot; ## [9467] &quot;dem geschäft&quot; &quot;den ,&quot; ## [9469] &quot;der durch&quot; &quot;das verbrechen&quot; ## [9471] &quot;des diebstahls&quot; &quot;den sollten&quot; ## [9473] &quot;die augen&quot; &quot;den in&quot; ## [9475] &quot;der tiefen&quot; &quot;den stille&quot; ## [9477] &quot;des waldes&quot; &quot;das große&quot; ## [9479] &quot;der natur&quot; &quot;die feuerstelle&quot; ## [9481] &quot;die luft&quot; &quot;des waldes&quot; ## [9483] &quot;das hämmern&quot; &quot;der kühl-trübe&quot; ## [9485] &quot;des morgens&quot; &quot;die stimmen&quot; ## [9487] &quot;das leben&quot; &quot;der der&quot; ## [9489] &quot;den schlaf&quot; &quot;den und&quot; ## [9491] &quot;die arbeit&quot; &quot;den natur&quot; ## [9493] &quot;dem staunenden&quot; &quot;des körpers&quot; ## [9495] &quot;die luft&quot; &quot;der weiterkriechend&quot; ## [9497] &quot;die raupe&quot; &quot;dem sie&quot; ## [9499] &quot;der eine&quot; &quot;dem sie&quot; ## [9501] &quot;den auf&quot; &quot;die fünfmal&quot; ## [9503] &quot;die höhe&quot; &quot;der allein&quot; ## [9505] &quot;dem brennenden&quot; &quot;die flügel&quot; ## [9507] &quot;den allein&quot; &quot;die leichtgläubigkeit&quot; ## [9509] &quot;die furcht&quot; &quot;die ganze&quot; ## [9511] &quot;das dichte&quot; &quot;die anderen&quot; ## [9513] &quot;der drei&quot; &quot;dem seichten&quot; ## [9515] &quot;der sandbank&quot; &quot;den nicht&quot; ## [9517] &quot;das geringste&quot; &quot;dem kleinen&quot; ## [9519] &quot;das in&quot; &quot;der ferne&quot; ## [9521] &quot;der majestätischen&quot; &quot;der eine&quot; ## [9523] &quot;das floß&quot; &quot;den war&quot; ## [9525] &quot;die brücke&quot; &quot;der zivilisation&quot; ## [9527] &quot;das lagerfeuer&quot; &quot;der angezündet&quot; ## [9529] &quot;der nähe&quot; &quot;der blättern&quot; ## [9531] &quot;den stelle&quot; &quot;der sandbank&quot; ## [9533] &quot;den ,&quot; &quot;die fische&quot; ## [9535] &quot;die zutat&quot; &quot;dem frühstück&quot; ## [9537] &quot;den wald&quot; &quot;die füße&quot; ## [9539] &quot;den königen&quot; &quot;des waldes&quot; ## [9541] &quot;die von&quot; &quot;den eine&quot; ## [9543] &quot;die ihnen&quot; &quot;die insel&quot; ## [9545] &quot;die küste&quot; &quot;den nahmen&quot; ## [9547] &quot;der fische&quot; &quot;der und&quot; ## [9549] &quot;das gespräch&quot; &quot;die stille&quot; ## [9551] &quot;die über&quot; &quot;dem walde&quot; ## [9553] &quot;die empfindung&quot; &quot;der verlassenheit&quot; ## [9555] &quot;die gemüter&quot; &quot;das heimweh&quot; ## [9557] &quot;der bluthändige&quot; &quot;den die&quot; ## [9559] &quot;der ferne&quot; &quot;das ticken&quot; ## [9561] &quot;das man&quot; &quot;der geheimnisvolle&quot; ## [9563] &quot;der wahrnehmung&quot; &quot;die jungen&quot; ## [9565] &quot;die höhe&quot; &quot;der an&quot; ## [9567] &quot;der in&quot; &quot;der stellung&quot; ## [9569] &quot;das ,&quot; &quot;die ihnen&quot; ## [9571] &quot;die tiefe&quot; &quot;der dem&quot; ## [9573] &quot;die büsche&quot; &quot;der sandbank&quot; ## [9575] &quot;die wasserfläche&quot; &quot;das kleine&quot; ## [9577] &quot;des dorfes&quot; &quot;dem strome&quot; ## [9579] &quot;das verdeck&quot; &quot;den dampfer&quot; ## [9581] &quot;der ließen&quot; &quot;der strömung&quot; ## [9583] &quot;die jungen&quot; &quot;die leute&quot; ## [9585] &quot;den fluß&quot; &quot;die höhe&quot; ## [9587] &quot;den lauschenden&quot; &quot;die gespitzten&quot; ## [9589] &quot;dem ,&quot; &quot;dem wasser&quot; ## [9591] &quot;der raus&quot; &quot;das hab&quot; ## [9593] &quot;das brot&quot; &quot;das ist&quot; ## [9595] &quot;der weiß&quot; &quot;das .\\&quot;,&quot; ## [9597] &quot;die anderen&quot; &quot;das ,&quot; ## [9599] &quot;das ist&quot; &quot;die jungen&quot; ## [9601] &quot;den .\\&quot;,&quot; &quot;der triumph&quot; ## [9603] &quot;den vermißt&quot; &quot;den beweint&quot; ## [9605] &quot;den vergossen&quot; &quot;die herzen&quot; ## [9607] &quot;das beste&quot; &quot;die vermißten&quot; ## [9609] &quot;den zum&quot; &quot;des ganzen&quot; ## [9611] &quot;der neid&quot; &quot;dem piratenspielen&quot; ## [9613] &quot;den rechten&quot; &quot;die dämmerung&quot; ## [9615] &quot;das dampfboot&quot; &quot;die boote&quot; ## [9617] &quot;den .\\&quot;,&quot; &quot;die piraten&quot; ## [9619] &quot;den überschwang&quot; &quot;das wunderbare&quot; ## [9621] &quot;das sie&quot; &quot;der ,&quot; ## [9623] &quot;das dorf&quot; &quot;die bilder&quot; ## [9625] &quot;die sie&quot; &quot;der allgemeinen&quot; ## [9627] &quot;die schatten&quot; &quot;der nacht&quot; ## [9629] &quot;der rausch&quot; &quot;den ,&quot; ## [9631] &quot;der sich&quot; &quot;der zwei&quot; ## [9633] &quot;die anderen&quot; &quot;die rückkehr&quot; ## [9635] &quot;der wankelmütige&quot; &quot;der affäre&quot; ## [9637] &quot;den augenblick&quot; &quot;die empörung&quot; ## [9639] &quot;die nacht&quot; &quot;der nächste&quot; ## [9641] &quot;den ellbogen&quot; &quot;die beiden&quot; ## [9643] &quot;die knie&quot; &quot;das gras&quot; ## [9645] &quot;den flackernden&quot; &quot;des lagerfeuers&quot; ## [9647] &quot;die ihm&quot; &quot;die besten&quot; ## [9649] &quot;der zum&quot; &quot;des von&quot; ## [9651] &quot;das andere&quot; &quot;den hut&quot; ## [9653] &quot;die als&quot; &quot;den zehen&quot; ## [9655] &quot;den bäumen&quot; &quot;der richtung&quot; ## [9657] &quot;der sandbank&quot; &quot;der sandbank&quot; ## [9659] &quot;der illinois-küste&quot; &quot;die flut&quot; ## [9661] &quot;des körpers&quot; &quot;die strömung&quot; ## [9663] &quot;die letzten&quot; &quot;die küste&quot; ## [9665] &quot;die hand&quot; &quot;die tasche&quot; ## [9667] &quot;den kleidern&quot; &quot;den wald&quot; ## [9669] &quot;der küste&quot; &quot;dem dorfe&quot; ## [9671] &quot;das dampfboot&quot; &quot;der bäume&quot; ## [9673] &quot;des hohen&quot; &quot;den funkelnden&quot; ## [9675] &quot;der vier&quot; &quot;das boot&quot; ## [9677] &quot;des dampfbootes&quot; &quot;die bank&quot; ## [9679] &quot;die blecherne&quot; &quot;die spitze&quot; ## [9681] &quot;des bootes&quot; &quot;die reise&quot; ## [9683] &quot;die letzte&quot; &quot;die das&quot; ## [9685] &quot;das fahrzeug&quot; &quot;dem ufer&quot; ## [9687] &quot;den bekannten&quot; &quot;dem haus&quot; ## [9689] &quot;das wohnzimmerfenster&quot; &quot;der tür&quot; ## [9691] &quot;den drücker&quot; &quot;die tür&quot; ## [9693] &quot;den knien&quot; &quot;den kopf&quot; ## [9695] &quot;das licht&quot; &quot;die tür&quot; ## [9697] &quot;die gespenstergeschichten&quot; &quot;der an&quot; ## [9699] &quot;der gutherzigste&quot; &quot;der jemals&quot; ## [9701] &quot;dem unfug&quot; &quot;die milch&quot; ## [9703] &quot;das herz&quot; &quot;den strengen&quot; ## [9705] &quot;den augen&quot; &quot;der alten&quot; ## [9707] &quot;der herr&quot; &quot;der herr&quot; ## [9709] &quot;der name&quot; &quot;des herrn&quot; ## [9711] &quot;der nase&quot; &quot;der .\\&quot;,&quot; ## [9713] &quot;die katze&quot; &quot;das tier&quot; ## [9715] &quot;das haus&quot; &quot;dem fingerhut&quot; ## [9717] &quot;den kopf&quot; &quot;die letzten&quot; ## [9719] &quot;die ich&quot; &quot;die alte&quot; ## [9721] &quot;dem bett&quot; &quot;der theatereffekt&quot; ## [9723] &quot;die burschen&quot; &quot;das kleine&quot; ## [9725] &quot;die ausreißer&quot; &quot;das dorf&quot; ## [9727] &quot;die weisen&quot; &quot;das zusammengereimt&quot; ## [9729] &quot;die strolche&quot; &quot;den bald&quot; ## [9731] &quot;der nächsten&quot; &quot;das floß&quot; ## [9733] &quot;den worden&quot; &quot;der sechs&quot; ## [9735] &quot;des dorfes&quot; &quot;der missouriküste&quot; ## [9737] &quot;die hoffnung&quot; &quot;der hunger&quot; ## [9739] &quot;der nacht&quot; &quot;die suche&quot; ## [9741] &quot;den leichen&quot; &quot;das unglück&quot; ## [9743] &quot;der mitte&quot; &quot;des stromes&quot; ## [9745] &quot;die jungen&quot; &quot;den sich&quot; ## [9747] &quot;das war&quot; &quot;den sein&quot; ## [9749] &quot;den ,&quot; &quot;der trauergottesdienst&quot; ## [9751] &quot;den .\\&quot;,&quot; &quot;die beiden&quot; ## [9753] &quot;dem sie&quot; &quot;der und&quot; ## [9755] &quot;den stimme&quot; &quot;der ,&quot; ## [9757] &quot;dem sie&quot; &quot;den seufzer&quot; ## [9759] &quot;der junge&quot; &quot;die höhe&quot; ## [9761] &quot;das licht&quot; &quot;der hand&quot; ## [9763] &quot;den leuchter&quot; &quot;der glückliche&quot; ## [9765] &quot;die rinde&quot; &quot;der in&quot; ## [9767] &quot;die tasche&quot; &quot;die welken&quot; ## [9769] &quot;die tür&quot; &quot;der zum&quot; ## [9771] &quot;des schiffes&quot; &quot;der sich&quot; ## [9773] &quot;das kleine&quot; &quot;der draußen&quot; ## [9775] &quot;dem strom&quot; &quot;die landungsstelle&quot; ## [9777] &quot;der anderen&quot; &quot;das boot&quot; ## [9779] &quot;den würden&quot; &quot;das hätte&quot; ## [9781] &quot;den können&quot; &quot;den wald&quot; ## [9783] &quot;der und&quot; &quot;der seiner&quot; ## [9785] &quot;die nacht&quot; &quot;der insel&quot; ## [9787] &quot;der ,&quot; &quot;die sonne&quot; ## [9789] &quot;den fluß&quot; &quot;des lagers&quot; ## [9791] &quot;die sachen&quot; &quot;das geschreibsel&quot; ## [9793] &quot;der da&quot; &quot;die jungen&quot; ## [9795] &quot;den ,&quot; &quot;die anderen&quot; ## [9797] &quot;dem mittagessen&quot; &quot;die ganze&quot; ## [9799] &quot;der sandbank&quot; &quot;den sand&quot; ## [9801] &quot;den ,&quot; &quot;die knie&quot; ## [9803] &quot;den händen&quot; &quot;den abend&quot; ## [9805] &quot;dem frühstück&quot; &quot;der herum&quot; ## [9807] &quot;die kleider&quot; &quot;die strömung&quot; ## [9809] &quot;die beine&quot; &quot;den spaß&quot; ## [9811] &quot;den sie&quot; &quot;der flachen&quot; ## [9813] &quot;dem sie&quot; &quot;der den&quot; ## [9815] &quot;den spritzern&quot; &quot;der stärkste&quot; ## [9817] &quot;der auf&quot; &quot;dem sie&quot; ## [9819] &quot;den trockenen&quot; &quot;der zum&quot; ## [9821] &quot;das spiel&quot; &quot;den sand&quot; ## [9823] &quot;den knöcheln&quot; &quot;den schutz&quot; ## [9825] &quot;den sei&quot; &quot;der ins&quot; ## [9827] &quot;den hatte&quot; &quot;die anderen&quot; ## [9829] &quot;die breite&quot; &quot;das dorf&quot; ## [9831] &quot;der sonne&quot; &quot;der zehe&quot; ## [9833] &quot;den sand&quot; &quot;dem ;&quot; ## [9835] &quot;dem er&quot; &quot;die anderen&quot; ## [9837] &quot;der schubste&quot; &quot;die tränen&quot; ## [9839] &quot;dem überlaufen&quot; &quot;das er&quot; ## [9841] &quot;den konnte&quot; &quot;der insel&quot; ## [9843] &quot;der silber&quot; &quot;der bald&quot; ## [9845] &quot;der zwei&quot; &quot;das wird&quot; ## [9847] &quot;den ,&quot; &quot;die famose&quot; ## [9849] &quot;der mir&quot; &quot;das heulende&quot; ## [9851] &quot;das hast&quot; &quot;den .&quot; ## [9853] &quot;den wir&quot; &quot;dem war&quot; ## [9855] &quot;den augen&quot; &quot;den vorbereitungen&quot; ## [9857] &quot;des abschieds&quot; &quot;das illinoisufer&quot; ## [9859] &quot;das herz&quot; &quot;den blick&quot; ## [9861] &quot;die augen&quot; &quot;den .\\&quot;,&quot; ## [9863] &quot;der aufzusammeln&quot; &quot;den stehen&quot; ## [9865] &quot;das bewußtsein&quot; &quot;den nach&quot; ## [9867] &quot;die pointe&quot; &quot;der sache&quot; ## [9869] &quot;das früher&quot; &quot;den sie&quot; ## [9871] &quot;die ausreißer&quot; &quot;der auf&quot; ## [9873] &quot;der bewunderung&quot; &quot;die idee&quot; ## [9875] &quot;die beiden&quot; &quot;die haben&quot; ## [9877] &quot;die ellbogen&quot; &quot;der rauch&quot; ## [9879] &quot;das alles&quot; &quot;dem ,&quot; ## [9881] &quot;den tag&quot; &quot;den tag&quot; ## [9883] &quot;die pfeife&quot; &quot;der johnny&quot; ## [9885] &quot;das ,&quot; &quot;die jungens&quot; ## [9887] &quot;das mein&quot; &quot;den pfeifen&quot; ## [9889] &quot;die die&quot; &quot;den !\\&quot;,&quot; ## [9891] &quot;das ist&quot; &quot;das gespräch&quot; ## [9893] &quot;das stillschweigen&quot; &quot;das ausspucken&quot; ## [9895] &quot;des mundes&quot; &quot;den beiden&quot; ## [9897] &quot;den springbrunnen&quot; &quot;die behälter&quot; ## [9899] &quot;der zunge&quot; &quot;den ;&quot; ## [9901] &quot;den hals&quot; &quot;den .\\&quot;,&quot; ## [9903] &quot;der springbrunnen&quot; &quot;der pumpen&quot; ## [9905] &quot;den lippen&quot; &quot;der seite&quot; ## [9907] &quot;der andern&quot; &quot;der und&quot; ## [9909] &quot;den zu&quot; &quot;den gehabt&quot; ## [9911] &quot;der mahlzeit&quot; &quot;der stopfte&quot; ## [9913] &quot;die ihrigen&quot; &quot;die jungen&quot; ## [9915] &quot;der luft&quot; &quot;das hatte&quot; ## [9917] &quot;die jungen&quot; &quot;der und&quot; ## [9919] &quot;die freundliche&quot; &quot;des feuers&quot; ## [9921] &quot;die matte&quot; &quot;der reglosen&quot; ## [9923] &quot;des lichtschimmers&quot; &quot;der schwärze&quot; ## [9925] &quot;der finsternis&quot; &quot;der blitzstrahl&quot; ## [9927] &quot;der auf&quot; &quot;die umgebung&quot; ## [9929] &quot;der schwand&quot; &quot;der einer&quot; ## [9931] &quot;die bäume&quot; &quot;des waldes&quot; ## [9933] &quot;die knaben&quot; &quot;den eine&quot; ## [9935] &quot;dem gedanken&quot; &quot;der geist&quot; ## [9937] &quot;der nacht&quot; &quot;die nacht&quot; ## [9939] &quot;den tag&quot; &quot;den einzelnen&quot; ## [9941] &quot;der um&quot; &quot;dem zeigte&quot; ## [9943] &quot;der ferne&quot; &quot;den blättern&quot; ## [9945] &quot;die aufgehäufte&quot; &quot;den feuerherd&quot; ## [9947] &quot;der schein&quot; &quot;den wald&quot; ## [9949] &quot;der die&quot; &quot;den häuptern&quot; ## [9951] &quot;der kinder&quot; &quot;der vollkommenen&quot; ## [9953] &quot;die darauf&quot; &quot;die blätter&quot; ## [9955] &quot;die wipfel&quot; &quot;den laut&quot; ## [9957] &quot;der blitz&quot; &quot;dem anderen&quot; ## [9959] &quot;der donnerschlag&quot; &quot;dem anderen&quot; ## [9961] &quot;der regen&quot; &quot;der ,&quot; ## [9963] &quot;der tobende&quot; &quot;die erde&quot; ## [9965] &quot;die jungen&quot; &quot;der zu&quot; ## [9967] &quot;der heulende&quot; &quot;die dröhnenden&quot; ## [9969] &quot;der durch&quot; &quot;dem zelt&quot; ## [9971] &quot;das alte&quot; &quot;die anderen&quot; ## [9973] &quot;der sturm&quot; &quot;das segel&quot; ## [9975] &quot;den flügeln&quot; &quot;des windes&quot; ## [9977] &quot;die knaben&quot; &quot;den händen&quot; ## [9979] &quot;den schutz&quot; &quot;die am&quot; ## [9981] &quot;der kampf&quot; &quot;dem unaufhörlichen&quot; ## [9983] &quot;das den&quot; &quot;die sich&quot; ## [9985] &quot;den bäume&quot; &quot;der wogende&quot; ## [9987] &quot;das treibende&quot; &quot;die steilen&quot; ## [9989] &quot;der anderen&quot; &quot;die regenwolken&quot; ## [9991] &quot;der gewalt&quot; &quot;das unterholz&quot; ## [9993] &quot;die furchtbaren&quot; &quot;dem ,&quot; ## [9995] &quot;der sturm&quot; &quot;die die&quot; ## [9997] &quot;den baumwipfeln&quot; &quot;des lebewesen&quot; ## [9999] &quot;der kampf&quot; &quot;die naturkräfte&quot; ## [10001] &quot;die jungen&quot; &quot;den sie&quot; ## [10003] &quot;die große&quot; &quot;die beschützerin&quot; ## [10005] &quot;der katastrophe&quot; &quot;das feuer&quot; ## [10007] &quot;den regen&quot; &quot;das war&quot; ## [10009] &quot;das feuer&quot; &quot;dem baum&quot; ## [10011] &quot;dem es&quot; &quot;der so&quot; ## [10013] &quot;des umgestürzten&quot; &quot;der ordentlich&quot; ## [10015] &quot;der ganzen&quot; &quot;die sonne&quot; ## [10017] &quot;die knaben&quot; &quot;die müdigkeit&quot; ## [10019] &quot;der .\\&quot;,&quot; &quot;den sie&quot; ## [10021] &quot;der sonne&quot; &quot;die anzeichen&quot; ## [10023] &quot;die piraten&quot; &quot;den teufel&quot; ## [10025] &quot;der sonst&quot; &quot;das großartige&quot; ## [10027] &quot;der anhielt&quot; &quot;das piratenspielen&quot; ## [10029] &quot;der idee&quot; &quot;den zebras&quot; ## [10031] &quot;die wälder&quot; &quot;der los&quot; ## [10033] &quot;der tausendweise&quot; &quot;der .\\&quot;,&quot; ## [10035] &quot;der im&quot; &quot;das friedensbrot&quot; ## [10037] &quot;der brechen&quot; &quot;den zu&quot; ## [10039] &quot;dem sie&quot; &quot;den wilden&quot; ## [10041] &quot;die pfeifen&quot; &quot;den waren&quot; ## [10043] &quot;der zu&quot; &quot;dem essen&quot; ## [10045] &quot;dem ort&quot; &quot;die einwohner&quot; ## [10047] &quot;der freie&quot; &quot;die kinder&quot; ## [10049] &quot;den verlassenen&quot; &quot;den könnte&quot; ## [10051] &quot;die ganze&quot; &quot;die tränen&quot; ## [10053] &quot;die backen&quot; &quot;den von&quot; ## [10055] &quot;den zaun&quot; &quot;das tat&quot; ## [10057] &quot;der letzten&quot; &quot;der ereignisse&quot; ## [10059] &quot;der sprecher&quot; &quot;die stelle&quot; ## [10061] &quot;die vermißten&quot; &quot;den hatten&quot; ## [10063] &quot;die toten&quot; &quot;der weniger&quot; ## [10065] &quot;der tat&quot; &quot;die letzten&quot; ## [10067] &quot;die betreffenden&quot; &quot;den von&quot; ## [10069] &quot;der niemals&quot; &quot;den war&quot; ## [10071] &quot;die meisten&quot; &quot;der jungen&quot; ## [10073] &quot;das sagen&quot; &quot;das verringerte&quot; ## [10075] &quot;die auszeichnung&quot; &quot;die gesellschaft&quot; ## [10077] &quot;die verlorenen&quot; &quot;den austauschend&quot; ## [10079] &quot;die sonntagsschule&quot; &quot;die glocke&quot; ## [10081] &quot;der traurige&quot; &quot;der sinnenden&quot; ## [10083] &quot;die auf&quot; &quot;der natur&quot; ## [10085] &quot;die dorfbewohner&quot; &quot;der vorhalle&quot; ## [10087] &quot;das traurige&quot; &quot;das feierliche&quot; ## [10089] &quot;der kleider&quot; &quot;dem sie&quot; ## [10091] &quot;die stille&quot; &quot;die kirche&quot; ## [10093] &quot;die harpersche&quot; &quot;die ganze&quot; ## [10095] &quot;der geistliche&quot; &quot;die leidtragenden&quot; ## [10097] &quot;der ersten&quot; &quot;der trat&quot; ## [10099] &quot;der geistliche&quot; &quot;die hände&quot; ## [10101] &quot;des lied&quot; &quot;der text&quot; ## [10103] &quot;der trost&quot; &quot;das leben&quot; ## [10105] &quot;der geistliche&quot; &quot;der von&quot; ## [10107] &quot;der sanftmut&quot; &quot;dem ehrenhaften&quot; ## [10109] &quot;den vielversprechenden&quot; &quot;der verlorenen&quot; ## [10111] &quot;dem gedanken&quot; &quot;das bisher&quot; ## [10113] &quot;den armen&quot; &quot;der geistliche&quot; ## [10115] &quot;des ereignis&quot; &quot;dem leben&quot; ## [10117] &quot;der verschwundenen&quot; &quot;das ihre&quot; ## [10119] &quot;das volk&quot; &quot;die den&quot; ## [10121] &quot;die gemeinde&quot; &quot;die ergreifende&quot; ## [10123] &quot;den schluchzens&quot; &quot;der geistliche&quot; ## [10125] &quot;dem chor&quot; &quot;das aber&quot; ## [10127] &quot;die tür&quot; &quot;der kirche&quot; ## [10129] &quot;der geistliche&quot; &quot;die strömenden&quot; ## [10131] &quot;das andere&quot; &quot;dem seinigen&quot; ## [10133] &quot;die gemeinde&quot; &quot;die drei&quot; ## [10135] &quot;den gang&quot; &quot;der lumpen&quot; ## [10137] &quot;dem unbenutzten&quot; &quot;die harpers&quot; ## [10139] &quot;die wiederauferstandenen&quot; &quot;der arme&quot; ## [10141] &quot;den augen&quot; &quot;den sollte&quot; ## [10143] &quot;der geistliche&quot; &quot;den herren&quot; ## [10145] &quot;den mächtigen&quot; &quot;der ehren&quot; ## [10147] &quot;der inbrunst&quot; &quot;der seeräuber&quot; ## [10149] &quot;die neidische&quot; &quot;der stolzeste&quot; ## [10151] &quot;die gemeinde&quot; &quot;das war&quot; ## [10153] &quot;der gedanke&quot; &quot;der nacht&quot; ## [10155] &quot;den sonntag&quot; &quot;der sechs&quot; ## [10157] &quot;des dorfes&quot; &quot;dem chor&quot; ## [10159] &quot;die unterhaltung&quot; &quot;den zu&quot; ## [10161] &quot;das hättst&quot; &quot;dem tom&quot; ## [10163] &quot;die mühe&quot; &quot;der mittwochnacht&quot; ## [10165] &quot;der holzkiste&quot; &quot;der wind&quot; ## [10167] &quot;der wind&quot; &quot;der wind&quot; ## [10169] &quot;die finger&quot; &quot;die stirn&quot; ## [10171] &quot;der !\\&quot;,&quot; &quot;das licht&quot; ## [10173] &quot;die tür&quot; &quot;die tür&quot; ## [10175] &quot;die tür&quot; &quot;die überkluge&quot; ## [10177] &quot;das &#39;rum&quot; &quot;der tag&quot; ## [10179] &quot;der so&quot; &quot;der !\\&quot;,&quot; ## [10181] &quot;den rahm&quot; &quot;den sie&quot; ## [10183] &quot;der geist&quot; &quot;das hattst&quot; ## [10185] &quot;das zanken&quot; &quot;dem ,&quot; ## [10187] &quot;der ,&quot; &quot;der fluß&quot; ## [10189] &quot;den sei&quot; &quot;die alte&quot; ## [10191] &quot;die arme&quot; &quot;dem stuhl&quot; ## [10193] &quot;des wort&quot; &quot;das du&quot; ## [10195] &quot;den ,&quot; &quot;das auf&quot; ## [10197] &quot;den tisch&quot; &quot;den leuchter&quot; ## [10199] &quot;den jungen&quot; &quot;der schwärzeste&quot; ## [10201] &quot;der verräter&quot; &quot;den mund&quot; ## [10203] &quot;den ich&quot; &quot;den würdst&quot; ## [10205] &quot;dem lieben&quot; &quot;die ,&quot; ## [10207] &quot;die guten&quot; &quot;den rauhen&quot; ## [10209] &quot;den des&quot; &quot;den ,&quot; ## [10211] &quot;die lange&quot; &quot;die kinder&quot; ## [10213] &quot;die alte&quot; &quot;den gedanken&quot; ## [10215] &quot;der ihn&quot; &quot;das haus&quot; ## [10217] &quot;den !\\&quot;,&quot; &quot;der fühlt&quot; ## [10219] &quot;der mittelpunkt&quot; &quot;der öffentlichen&quot; ## [10221] &quot;der tat&quot; &quot;die blicke&quot; ## [10223] &quot;die bemerkungen&quot; &quot;den und&quot; ## [10225] &quot;der trommler&quot; &quot;der spitze&quot; ## [10227] &quot;der der&quot; &quot;der eine&quot; ## [10229] &quot;die stadt&quot; &quot;den ruf&quot; ## [10231] &quot;des nicht&quot; &quot;der schule&quot; ## [10233] &quot;die kinder&quot; &quot;die beiden&quot; ## [10235] &quot;den ganz&quot; &quot;den .\\&quot;,&quot; ## [10237] &quot;die geschichten&quot; &quot;den abschweifungen&quot; ## [10239] &quot;die ihrige&quot; &quot;der höchste&quot; ## [10241] &quot;des ruhmes&quot; &quot;den ruhm&quot; ## [10243] &quot;der ,&quot; &quot;den \\\\\\&quot;&quot; ## [10245] &quot;den backen&quot; &quot;den augen&quot; ## [10247] &quot;das schmeichelte&quot; &quot;der lasterhaften&quot; ## [10249] &quot;der einzulenken&quot; &quot;den augen&quot; ## [10251] &quot;den schmerz&quot; &quot;der zu&quot; ## [10253] &quot;der gruppe&quot; &quot;dem picknick&quot; ## [10255] &quot;das ist&quot; &quot;der kommen&quot; ## [10257] &quot;den ich&quot; &quot;das ist&quot; ## [10259] &quot;die ferien&quot; &quot;das wird&quot; ## [10261] &quot;den ?\\&quot;,&quot; &quot;die meine&quot; ## [10263] &quot;der sein&quot; &quot;der so&quot; ## [10265] &quot;dem schrecklichen&quot; &quot;der insel&quot; ## [10267] &quot;der blitz&quot; &quot;die große&quot; ## [10269] &quot;der gruppe&quot; &quot;die tränen&quot; ## [10271] &quot;die augen&quot; &quot;das vergnügen&quot; ## [10273] &quot;der art&quot; &quot;die glocke&quot; ## [10275] &quot;den augen&quot; &quot;der ecke&quot; ## [10277] &quot;der selbstzufriedenheit&quot; &quot;den und&quot; ## [10279] &quot;das herz&quot; &quot;die hosen&quot; ## [10281] &quot;dem buch&quot; &quot;die gelegenheit&quot; ## [10283] &quot;die ihm&quot; &quot;die ihm&quot; ## [10285] &quot;dem sie&quot; &quot;die möglichst&quot; ## [10287] &quot;der suchte&quot; &quot;der hinterseite&quot; ## [10289] &quot;des schulhauses&quot; &quot;dem verhaßten&quot; ## [10291] &quot;den .\\&quot;,&quot; &quot;der überhaupt&quot; ## [10293] &quot;den lebenden&quot; &quot;den ,&quot; ## [10295] &quot;den .\\&quot;,&quot; &quot;die er&quot; ## [10297] &quot;die zeit&quot; &quot;das mädel&quot; ## [10299] &quot;der teufel&quot; &quot;den ?\\&quot;,&quot; ## [10301] &quot;das versprechen&quot; &quot;der schule&quot; ## [10303] &quot;der andere&quot; &quot;den zähnen&quot; ## [10305] &quot;der andere&quot; &quot;der denkt&quot; ## [10307] &quot;der luft&quot; &quot;der kampf&quot; ## [10309] &quot;das interesse&quot; &quot;dem gehör&quot; ## [10311] &quot;die sache&quot; &quot;der arme&quot; ## [10313] &quot;die geduld&quot; &quot;der junge&quot; ## [10315] &quot;den ganzen&quot; &quot;der zu&quot; ## [10317] &quot;die wahrheit&quot; &quot;das mädel&quot; ## [10319] &quot;die augen&quot; &quot;die gelegenheit&quot; ## [10321] &quot;der lektion&quot; &quot;den nachmittag&quot; ## [10323] &quot;die seite&quot; &quot;der absicht&quot; ## [10325] &quot;den halben&quot; &quot;den .\\&quot;,&quot; ## [10327] &quot;der gedanke&quot; &quot;der brennend&quot; ## [10329] &quot;der sache&quot; &quot;dem beschmutzten&quot; ## [10331] &quot;der patsche&quot; &quot;das erste&quot; ## [10333] &quot;das tante&quot; &quot;den ort&quot; ## [10335] &quot;die haut&quot; &quot;die ohren&quot; ## [10337] &quot;den unsinn&quot; &quot;der nacht&quot; ## [10339] &quot;den soll&quot; &quot;der sich&quot; ## [10341] &quot;das war&quot; &quot;der sache&quot; ## [10343] &quot;den kopf&quot; &quot;den weiten&quot; ## [10345] &quot;dem traum&quot; &quot;das war&#39;s&quot; ## [10347] &quot;die dankbarste&quot; &quot;der welt&quot; ## [10349] &quot;das macht&quot; &quot;die sache&quot; ## [10351] &quot;die wahrheit&quot; &quot;den kummer&quot; ## [10353] &quot;das allein&quot; &quot;die ganze&quot; ## [10355] &quot;die idee&quot; &quot;der kirche&quot; ## [10357] &quot;das selbst&quot; &quot;die rinde&quot; ## [10359] &quot;der in&quot; &quot;die tasche&quot; ## [10361] &quot;den mund&quot; &quot;die rinde&quot; ## [10363] &quot;den seien&quot; &quot;das strenge&quot; ## [10365] &quot;die worte&quot; &quot;die alte&quot; ## [10367] &quot;das zittern&quot; &quot;der .\\&quot;,&quot; ## [10369] &quot;die ruine&quot; &quot;der jacke&quot; ## [10371] &quot;der tom&quot; &quot;die piraten&quot; ## [10373] &quot;der inne&quot; &quot;der herr&quot; ## [10375] &quot;der herr&quot; &quot;das zu&quot; ## [10377] &quot;die jacke&quot; &quot;der fort&quot; ## [10379] &quot;die hand&quot; &quot;dem kleidungsstück&quot; ## [10381] &quot;dem gedanken&quot; &quot;die tasche&quot; ## [10383] &quot;der jacke&quot; &quot;dem jungen&quot; ## [10385] &quot;das seinen&quot; &quot;der aufrichtete&quot; ## [10387] &quot;der leichtherzig&quot; &quot;das glück&quot; ## [10389] &quot;der überlegung&quot; &quot;der so&quot; ## [10391] &quot;der gut&quot; &quot;das mädchen&quot; ## [10393] &quot;der mit&quot; &quot;den kopf&quot; ## [10395] &quot;der rechte&quot; &quot;den schulhof&quot; ## [10397] &quot;der traurige&quot; &quot;die schule&quot; ## [10399] &quot;das besudelte&quot; &quot;des benehmen&quot; ## [10401] &quot;der lehrer&quot; &quot;den ,&quot; ## [10403] &quot;den ,&quot; &quot;den solle&quot; ## [10405] &quot;der klassen&quot; &quot;das buch&quot; ## [10407] &quot;der schule&quot; &quot;der nicht&quot; ## [10409] &quot;den inhalt&quot; &quot;des buches&quot; ## [10411] &quot;den .\\&quot;,&quot; &quot;das nahe&quot; ## [10413] &quot;der tür&quot; &quot;der schlüssel&quot; ## [10415] &quot;das buch&quot; &quot;der hand&quot; ## [10417] &quot;das titelblatt&quot; &quot;die blätter&quot; ## [10419] &quot;den .\\&quot;,&quot; &quot;dem augenblick&quot; ## [10421] &quot;der abbildung&quot; &quot;das buch&quot; ## [10423] &quot;das unglück&quot; &quot;das bild&quot; ## [10425] &quot;das buch&quot; &quot;den schlüssel&quot; ## [10427] &quot;den in&quot; &quot;der schule&quot; ## [10429] &quot;der tür&quot; &quot;der schule&quot; ## [10431] &quot;das ist&quot; &quot;der alte&quot; ## [10433] &quot;das buch&quot; &quot;der reihe&quot; ## [10435] &quot;die erste&quot; &quot;die mädel&quot; ## [10437] &quot;den !\\&quot;,&quot; &quot;der zu&quot; ## [10439] &quot;der gesellschaft&quot; &quot;der jungen&quot; ## [10441] &quot;der lehrer&quot; &quot;die schule&quot; ## [10443] &quot;die mädchenseite&quot; &quot;die diesen&quot; ## [10445] &quot;den die&quot; &quot;die weitere&quot; ## [10447] &quot;den könne&quot; &quot;das leugnen&quot; ## [10449] &quot;die sache&quot; &quot;die situation&quot; ## [10451] &quot;die versuchung&quot; &quot;dem bild&quot; ## [10453] &quot;die tinte&quot; &quot;das buch&quot; ## [10455] &quot;der form&quot; &quot;der lehrer&quot; ## [10457] &quot;die luft&quot; &quot;dem gemurmel&quot; ## [10459] &quot;der lernenden&quot; &quot;der liegen&quot; ## [10461] &quot;die meisten&quot; &quot;den kindern&quot; ## [10463] &quot;den ,&quot; &quot;der wie&quot; ## [10465] &quot;die unmittelbarkeit&quot; &quot;der gefahr&quot; ## [10467] &quot;das buch&quot; &quot;der tür&quot; ## [10469] &quot;die gelegenheit&quot; &quot;der lehrer&quot; ## [10471] &quot;das buch&quot; &quot;die gelegenheit&quot; ## [10473] &quot;der lehrer&quot; &quot;das verbrechen&quot; ## [10475] &quot;des auge&quot; &quot;den unschuldigsten&quot; ## [10477] &quot;der lehrer&quot; &quot;das stillschweigen&quot; ## [10479] &quot;der lehrer&quot; &quot;dem anderen&quot; ## [10481] &quot;der langsamen&quot; &quot;der lehrer&quot; ## [10483] &quot;die bänke&quot; &quot;der knaben&quot; ## [10485] &quot;den mädchen&quot; &quot;das nächste&quot; ## [10487] &quot;dem gefühl&quot; &quot;der machtlosigkeit&quot; ## [10489] &quot;die füße&quot; &quot;die ganze&quot; ## [10491] &quot;die aus&quot; &quot;den augen&quot; ## [10493] &quot;der armen&quot; &quot;den glanz&quot; ## [10495] &quot;die saftigsten&quot; &quot;die mr.\\&quot;,&quot; ## [10497] &quot;die grausame&quot; &quot;der strafe&quot; ## [10499] &quot;den arrest&quot; &quot;das verlangen&quot; ## [10501] &quot;die ferien&quot; &quot;der lehrer&quot; ## [10503] &quot;der besten&quot; &quot;den kleinen&quot; ## [10505] &quot;die größten&quot; &quot;die jungen&quot; ## [10507] &quot;den schädel&quot; &quot;der große&quot; ## [10509] &quot;die in&quot; &quot;den ,&quot; ## [10511] &quot;das kleinste&quot; &quot;die folge&quot; ## [10513] &quot;die kleinsten&quot; &quot;dem lehrer&quot; ## [10515] &quot;die vergeltung&quot; &quot;der rachetat&quot; ## [10517] &quot;die jungen&quot; &quot;den kampfplatz&quot; ## [10519] &quot;der einen&quot; &quot;den erfolg&quot; ## [10521] &quot;dem anstreicherlehrling&quot; &quot;der und&quot; ## [10523] &quot;der hatte&quot; &quot;der lehrer&quot; ## [10525] &quot;des lehrers&quot; &quot;der ausführung&quot; ## [10527] &quot;des planes&quot; &quot;der lehrer&quot; ## [10529] &quot;der anstreicherlehrling&quot; &quot;des lehrers&quot; ## [10531] &quot;die rechte&quot; &quot;die sache&quot; ## [10533] &quot;die zeit&quot; &quot;das interessante&quot; ## [10535] &quot;des abends&quot; &quot;das schulhaus&quot; ## [10537] &quot;den und&quot; &quot;der lehrer&quot; ## [10539] &quot;die schwarze&quot; &quot;der seite&quot; ## [10541] &quot;den durch&quot; &quot;die würdenträger&quot; ## [10543] &quot;des ortes&quot; &quot;die eltern&quot; ## [10545] &quot;der kleinen&quot; &quot;den reihen&quot; ## [10547] &quot;der erwachsenen&quot; &quot;der die&quot; ## [10549] &quot;die an&quot; &quot;den übungen&quot; ## [10551] &quot;des abends&quot; &quot;des mißbehagens&quot; ## [10553] &quot;der großmama&quot; &quot;die blumen&quot; ## [10555] &quot;der rest&quot; &quot;des saales&quot; ## [10557] &quot;die prüfung&quot; &quot;den peinlich&quot; ## [10559] &quot;der ordnung&quot; &quot;den knicks&quot; ## [10561] &quot;dem pathos&quot; &quot;das unverwüstliche&quot; ## [10563] &quot;der tod&quot; &quot;den ,&quot; ## [10565] &quot;den zu&quot; &quot;der mitte&quot; ## [10567] &quot;die knie&quot; &quot;des hauses&quot; ## [10569] &quot;des hauses&quot; &quot;der lehrer&quot; ## [10571] &quot;die stirn&quot; &quot;das vervollständigte&quot; ## [10573] &quot;des beifalls&quot; &quot;der .\\&quot;,&quot; ## [10575] &quot;der knabe&quot; &quot;dem deck&quot; ## [10577] &quot;der kam&quot; &quot;den leseübungen&quot; ## [10579] &quot;die kleine&quot; &quot;der hauptschlager&quot; ## [10581] &quot;des abends&quot; &quot;die ,&quot; ## [10583] &quot;der jungen&quot; &quot;der reihe&quot; ## [10585] &quot;der plattform&quot; &quot;des ausdrucks&quot; ## [10587] &quot;der satzzeichen&quot; &quot;die themata&quot; ## [10589] &quot;die bei&quot; &quot;den kreuzzügen&quot; ## [10591] &quot;den waren&quot; &quot;die religion&quot; ## [10593] &quot;der geschichte&quot; &quot;das land&quot; ## [10595] &quot;der träume&quot; &quot;die vorteile&quot; ## [10597] &quot;der kultur&quot; &quot;der politischen&quot; ## [10599] &quot;des herzens&quot; &quot;der zug&quot; ## [10601] &quot;der ,&quot; &quot;die manier&quot; ## [10603] &quot;der zu&quot; &quot;die unleidlichen&quot; ## [10605] &quot;der ,&quot; &quot;der abschloß&quot; ## [10607] &quot;der gegenstand&quot; &quot;die krampfhaftesten&quot; ## [10609] &quot;der verfasserin&quot; &quot;den .\\&quot;,&quot; ## [10611] &quot;die offenbare&quot; &quot;des schulunterrichts&quot; ## [10613] &quot;die welt&quot; &quot;des ,&quot; ## [10615] &quot;die jungen&quot; &quot;den ,&quot; ## [10617] &quot;die sermone&quot; &quot;der verlogensten&quot; ## [10619] &quot;die längsten&quot; &quot;der erste&quot; ## [10621] &quot;der vorgelesenen&quot; &quot;das leben&quot; ## [10623] &quot;der leser&quot; &quot;der jugendliche&quot; ## [10625] &quot;die zu&quot; &quot;den freudenfeste&quot; ## [10627] &quot;des lebens&quot; &quot;die einbildungskraft&quot; ## [10629] &quot;der der&quot; &quot;des glückes&quot; ## [10631] &quot;der festlichkeiten&quot; &quot;die siegerin&quot; ## [10633] &quot;der gehüllt&quot; &quot;der tänze&quot; ## [10635] &quot;das glänzendste&quot; &quot;der leichteste&quot; ## [10637] &quot;der ganzen&quot; &quot;den träumen&quot; ## [10639] &quot;die zeit&quot; &quot;die ersehnte&quot; ## [10641] &quot;die ersehnte&quot; &quot;der sie&quot; ## [10643] &quot;des neue&quot; &quot;das letzte&quot; ## [10645] &quot;den hülle&quot; &quot;die einst&quot; ## [10647] &quot;der ballsaal&quot; &quot;dem bewußtsein&quot; ## [10649] &quot;den die&quot; &quot;der seele&quot; ## [10651] &quot;der vorlesung&quot; &quot;dem die&quot; ## [10653] &quot;den moralischen&quot; &quot;der applaus&quot; ## [10655] &quot;die interessante&quot; &quot;die von&quot; ## [10657] &quot;den genügen&quot; &quot;den ich&quot; ## [10659] &quot;die trauer&quot; &quot;den wälder&quot; ## [10661] &quot;die ströme&quot; &quot;dem rauschen&quot; ## [10663] &quot;der flut&quot; &quot;den brennenden&quot; ## [10665] &quot;dem land&quot; &quot;den die&quot; ## [10667] &quot;die nie&quot; &quot;die nächste&quot; ## [10669] &quot;die nacht&quot; &quot;der dumpfe&quot; ## [10671] &quot;des rollenden&quot; &quot;die dunklen&quot; ## [10673] &quot;die gewalt&quot; &quot;die sich&quot; ## [10675] &quot;der berühmte&quot; &quot;die ungestümen&quot; ## [10677] &quot;den ,&quot; &quot;die schreckliche&quot; ## [10679] &quot;der ,&quot; &quot;die freundin&quot; ## [10681] &quot;der hand&quot; &quot;die in&quot; ## [10683] &quot;die romantische&quot; &quot;der jugend&quot; ## [10685] &quot;der schönheit&quot; &quot;den magischen&quot; ## [10687] &quot;der mich&quot; &quot;dem gewande&quot; ## [10689] &quot;des dezember&quot; &quot;die kämpfenden&quot; ## [10691] &quot;die zwei&quot; &quot;den nichtkirchlichgesinnten&quot; ## [10693] &quot;den sermon&quot; &quot;die arbeit&quot; ## [10695] &quot;den ersten&quot; &quot;der aufsatz&quot; ## [10697] &quot;die ausgezeichnetste&quot; &quot;des abends&quot; ## [10699] &quot;der bürgermeister&quot; &quot;dem er&quot; ## [10701] &quot;der siegerin&quot; &quot;den preis&quot; ## [10703] &quot;das beredsamste&quot; &quot;das er&quot; ## [10705] &quot;den ,&quot; &quot;die zahl&quot; ## [10707] &quot;der arbeiten&quot; &quot;das wort&quot; ## [10709] &quot;des lebens&quot; &quot;die übliche&quot; ## [10711] &quot;der lehrer&quot; &quot;die grenze&quot; ## [10713] &quot;der möglichkeit&quot; &quot;dem publikum&quot; ## [10715] &quot;die wandtafel&quot; &quot;die geographieklasse&quot; ## [10717] &quot;den saal&quot; &quot;die uhr&quot; ## [10719] &quot;die linien&quot; &quot;das kichern&quot; ## [10721] &quot;den ohren&quot; &quot;die arbeit&quot; ## [10723] &quot;der allgemeinen&quot; &quot;das kichern&quot; ## [10725] &quot;der .\\&quot;,&quot; &quot;die gerade&quot; ## [10727] &quot;den kopf&quot; &quot;den ,&quot; ## [10729] &quot;dem sie&quot; &quot;dem seil&quot; ## [10731] &quot;die leere&quot; &quot;das kichern&quot; ## [10733] &quot;die katze&quot; &quot;des geistesabwesenden&quot; ## [10735] &quot;die perücke&quot; &quot;die dachstube&quot; ## [10737] &quot;des lehrers&quot; &quot;den der&quot; ## [10739] &quot;das hob&quot; &quot;die versammlung&quot; ## [10741] &quot;die jungen&quot; &quot;die ferien&quot; ## [10743] &quot;die oben&quot; &quot;des westens&quot; ## [10745] &quot;der schulmädelmanier&quot; &quot;dem neuen&quot; ## [10747] &quot;den der&quot; &quot;der enthaltsamkeit&quot; ## [10749] &quot;die glänzende&quot; &quot;des rauchens&quot; ## [10751] &quot;des vereins&quot; &quot;das versprechen&quot; ## [10753] &quot;das sicherste&quot; &quot;der welt&quot; ## [10755] &quot;das glühende&quot; &quot;der wunsch&quot; ## [10757] &quot;die aussicht&quot; &quot;dem wiederaustritt&quot; ## [10759] &quot;dem orden&quot; &quot;der vierte&quot; ## [10761] &quot;der 4.\\&quot;,&quot; &quot;der tag&quot; ## [10763] &quot;der unabhängigkeitserklärung&quot; &quot;der vereinigten&quot; ## [10765] &quot;den getragen&quot; &quot;dem alten&quot; ## [10767] &quot;dem friedensrichter&quot; &quot;den ,&quot; ## [10769] &quot;der augenscheinlich&quot; &quot;dem totenbett&quot; ## [10771] &quot;des richters&quot; &quot;den eingenommen&quot; ## [10773] &quot;dem spiegel&quot; &quot;der richter&quot; ## [10775] &quot;der nächsten&quot; &quot;der richter&quot; ## [10777] &quot;das begräbnis&quot; &quot;die kadetten&quot; ## [10779] &quot;die geeignet&quot; &quot;das bisherige&quot; ## [10781] &quot;der ein&quot; &quot;das war&quot; ## [10783] &quot;das gute&quot; &quot;die bloße&quot; ## [10785] &quot;den wunsch&quot; &quot;die sache&quot; ## [10787] &quot;die überraschende&quot; &quot;die ersehnten&quot; ## [10789] &quot;der auf&quot; &quot;die erste&quot; ## [10791] &quot;der bande&quot; &quot;der berühmte&quot; ## [10793] &quot;der größte&quot; &quot;der welt&quot; ## [10795] &quot;der vereinigten&quot; &quot;die jungen&quot; ## [10797] &quot;die aus&quot; &quot;den ,&quot; ## [10799] &quot;das zirkusspielen&quot; &quot;der und&quot; ## [10801] &quot;das dorf&quot; &quot;der zurück&quot; ## [10803] &quot;der ferien&quot; &quot;das leben&quot; ## [10805] &quot;das schreckliche&quot; &quot;des mordes&quot; ## [10807] &quot;die masern&quot; &quot;die welt&quot; ## [10809] &quot;der auf&quot; &quot;den füßen&quot; ## [10811] &quot;das dorf&quot; &quot;den ,&quot; ## [10813] &quot;den \\\\\\&quot;&quot; &quot;die erwachsenen&quot; ## [10815] &quot;die buben&quot; &quot;der hoffnung&quot; ## [10817] &quot;das in&quot; &quot;der bibel&quot; ## [10819] &quot;den schauspiel&quot; &quot;die armen&quot; ## [10821] &quot;der ihm&quot; &quot;den masern&quot; ## [10823] &quot;der einzelne&quot; &quot;dem er&quot; ## [10825] &quot;das seinige&quot; &quot;der überzeugung&quot; ## [10827] &quot;dem ganzen&quot; &quot;der nacht&quot; ## [10829] &quot;der den&quot; &quot;den blitzen&quot; ## [10831] &quot;den kopf&quot; &quot;die bettdecke&quot; ## [10833] &quot;die geduld&quot; &quot;der himmlischen&quot; ## [10835] &quot;die folge&quot; &quot;das schien&quot; ## [10837] &quot;der sturm&quot; &quot;der erste&quot; ## [10839] &quot;der losbrechen&quot; &quot;der doktor&quot; ## [10841] &quot;der da&quot; &quot;die drei&quot; ## [10843] &quot;die er&quot; &quot;der aufstand&quot; ## [10845] &quot;den war&quot; &quot;die gassen&quot; ## [10847] &quot;der eine&quot; &quot;den richter&quot; ## [10849] &quot;das opfer&quot; &quot;den .\\&quot;,&quot; ## [10851] &quot;die brütende&quot; &quot;der mordprozeß&quot; ## [10853] &quot;der alleinige&quot; &quot;des gesprächs&quot; ## [10855] &quot;des mörders&quot; &quot;die glieder&quot; ## [10857] &quot;den mord&quot; &quot;dem aber&quot; ## [10859] &quot;des geklatsches&quot; &quot;die last&quot; ## [10861] &quot;den keine&quot; &quot;das raus&quot; ## [10863] &quot;der halbindianer-teufel&quot; &quot;den hals&quot; ## [10865] &quot;die schrecklichsten&quot; &quot;der gehört&quot; ## [10867] &quot;das tun&quot; &quot;der wenigstens&quot; ## [10869] &quot;die meisten&quot; &quot;die prediger&quot; ## [10871] &quot;der .\\&quot;,&quot; &quot;das täten&quot; ## [10873] &quot;der blutgierigste&quot; &quot;das sagen&quot; ## [10875] &quot;das täten&quot; &quot;die jungen&quot; ## [10877] &quot;das zwielicht&quot; &quot;den sie&quot; ## [10879] &quot;der nachbarschaft&quot; &quot;des kleinen&quot; ## [10881] &quot;des ,&quot; &quot;der unbestimmten&quot; ## [10883] &quot;den .\\&quot;,&quot; &quot;der engel&quot; ## [10885] &quot;die jungens&quot; &quot;dem gitterfenster&quot; ## [10887] &quot;dem fußboden&quot; &quot;den alten&quot; ## [10889] &quot;der patsche&quot; &quot;der tom&quot; ## [10891] &quot;der huck&quot; &quot;die einzige&quot; ## [10893] &quot;den anderen&quot; &quot;die stangen&quot; ## [10895] &quot;den noch&quot; &quot;das gerichtsgebäude&quot; ## [10897] &quot;dem wege&quot; &quot;der ging&quot; ## [10899] &quot;der hin&quot; &quot;die ohren&quot; ## [10901] &quot;die schlinge&quot; &quot;den armen&quot; ## [10903] &quot;des zweiten&quot; &quot;das dorfgespräch&quot; ## [10905] &quot;des indianer-joe&quot; &quot;den zu&quot; ## [10907] &quot;den spruch&quot; &quot;der geschworenen&quot; ## [10909] &quot;der geringste&quot; &quot;den ,&quot; ## [10911] &quot;das ganze&quot; &quot;dem aufregenden&quot; ## [10913] &quot;die geschworenen&quot; &quot;den ,&quot; ## [10915] &quot;die neugierigen&quot; &quot;der indianer-joe&quot; ## [10917] &quot;der gleichgültig&quot; &quot;der richter&quot; ## [10919] &quot;der sheriff&quot; &quot;den beginn&quot; ## [10921] &quot;der sitzung&quot; &quot;das gewöhnliche&quot; ## [10923] &quot;den gerichtspersonen&quot; &quot;die ebenso&quot; ## [10925] &quot;des mordes&quot; &quot;der staatsanwalt&quot; ## [10927] &quot;der herr&quot; &quot;das wort&quot; ## [10929] &quot;der gefangene&quot; &quot;die augen&quot; ## [10931] &quot;der ,&quot; &quot;der nächste&quot; ## [10933] &quot;die auffindung&quot; &quot;des messers&quot; ## [10935] &quot;der staatsanwalt&quot; &quot;der herr&quot; ## [10937] &quot;das wort&quot; &quot;der verteidiger&quot; ## [10939] &quot;das messer&quot; &quot;der herr&quot; ## [10941] &quot;das wort&quot; &quot;die gesichter&quot; ## [10943] &quot;der zuhörer&quot; &quot;das leben&quot; ## [10945] &quot;den versuch&quot; &quot;den mordplatz&quot; ## [10947] &quot;den platz&quot; &quot;der gravierenden&quot; ## [10949] &quot;den so&quot; &quot;den .\\&quot;,&quot; ## [10951] &quot;die verblüffung&quot; &quot;des hauses&quot; ## [10953] &quot;des vorsitzenden&quot; &quot;der staatsanwalt&quot; ## [10955] &quot;den eid&quot; &quot;den zweifel&quot; ## [10957] &quot;das schreckliche&quot; &quot;dem unglücklichen&quot; ## [10959] &quot;die sachlage&quot; &quot;den zweifel&quot; ## [10961] &quot;dem armen&quot; &quot;das gesicht&quot; ## [10963] &quot;den händen&quot; &quot;den saal&quot; ## [10965] &quot;der verteidiger&quot; &quot;der gegenwärtigen&quot; ## [10967] &quot;dem einflusse&quot; &quot;den ,&quot; ## [10969] &quot;den rausches&quot; &quot;des auge&quot; ## [10971] &quot;der zeugenloge&quot; &quot;der junge&quot; ## [10973] &quot;die eidesformel&quot; &quot;des indianer-joe&quot; ## [10975] &quot;die zunge&quot; &quot;den dienst&quot; ## [10977] &quot;die worte&quot; &quot;der junge&quot; ## [10979] &quot;des saales&quot; &quot;dem kirchhof&quot; ## [10981] &quot;dem kirchhof&quot; &quot;des indianer-joe&quot; ## [10983] &quot;der nähe&quot; &quot;der nicht&quot; ## [10985] &quot;den ulmen&quot; &quot;die am&quot; ## [10987] &quot;des grabes&quot; &quot;der indianer-joe&quot; ## [10989] &quot;den namen&quot; &quot;die wahrheit&quot; ## [10991] &quot;den das&quot; &quot;der katze&quot; ## [10993] &quot;der laut&quot; &quot;des auge&quot; ## [10995] &quot;die zuhörer&quot; &quot;der spannung&quot; ## [10997] &quot;der erzählung&quot; &quot;die erregung&quot; ## [10999] &quot;den höchsten&quot; &quot;der doktor&quot; ## [11001] &quot;dem brett&quot; &quot;der indianer-joe&quot; ## [11003] &quot;dem messer&quot; &quot;der blitz&quot; ## [11005] &quot;der indianer-joe&quot; &quot;den !\\&quot;,&quot; ## [11007] &quot;der ein&quot; &quot;der held&quot; ## [11009] &quot;der liebling&quot; &quot;der alten&quot; ## [11011] &quot;der neid&quot; &quot;der jugend&quot; ## [11013] &quot;den ehren&quot; &quot;der druckerschwärze&quot; ## [11015] &quot;das blättchen&quot; &quot;des dorfes&quot; ## [11017] &quot;die in&quot; &quot;den zukünftigen&quot; ## [11019] &quot;die gedankenlose&quot; &quot;die welt&quot; ## [11021] &quot;des glanzes&quot; &quot;des frohlockens&quot; ## [11023] &quot;des schreckens&quot; &quot;der indianer-joe&quot; ## [11025] &quot;den jungen&quot; &quot;der nacht&quot; ## [11027] &quot;der arme&quot; &quot;der verzweiflung&quot; ## [11029] &quot;der nacht&quot; &quot;der gerichtsverhandlung&quot; ## [11031] &quot;dem verteidiger&quot; &quot;der sache&quot; ## [11033] &quot;den möchte&quot; &quot;des indianers&quot; ## [11035] &quot;der qual&quot; &quot;der arme&quot; ## [11037] &quot;das versprechen&quot; &quot;des schweigens&quot; ## [11039] &quot;das ?\\&quot;,&quot; &quot;des verteidigers&quot; ## [11041] &quot;die schreckliche&quot; &quot;die doch&quot; ## [11043] &quot;den bindendsten&quot; &quot;den in&quot; ## [11045] &quot;die menschliche&quot; &quot;den tag&quot; ## [11047] &quot;das geheimnis&quot; &quot;der indianer-joe&quot; ## [11049] &quot;den werden&quot; &quot;der zitterte&quot; ## [11051] &quot;den werden&quot; &quot;das land&quot; ## [11053] &quot;den .\\&quot;,&quot; &quot;den wunder&quot; ## [11055] &quot;den kopf&quot; &quot;den überraschenden&quot; ## [11057] &quot;den angehörige&quot; &quot;das heißt&quot; ## [11059] &quot;den schlüssel&quot; &quot;der hängen&quot; ## [11061] &quot;dem der&quot; &quot;die tage&quot; ## [11063] &quot;der nahm&quot; &quot;des normal&quot; ## [11065] &quot;den rasenden&quot; &quot;den weg&quot; ## [11067] &quot;der war&quot; &quot;den ,&quot; ## [11069] &quot;das zerstreuung&quot; &quot;der art&quot; ## [11071] &quot;die _nicht_&quot; &quot;das nicht&quot; ## [11073] &quot;den wurzeln&quot; &quot;der schatten&quot; ## [11075] &quot;dem fußboden&quot; &quot;die vergraben&#39;s&quot; ## [11077] &quot;der hinkommen&quot; &quot;die zeichen&quot; ## [11079] &quot;der sind&quot; &quot;der und&quot; ## [11081] &quot;das gar&quot; &quot;die zeichen&quot; ## [11083] &quot;der auf&quot; &quot;der unter&quot; ## [11085] &quot;der &#39;ne&quot; &quot;der jackson-insel&quot; ## [11087] &quot;das alte&quot; &quot;dem stillhaus-hügel&quot; ## [11089] &quot;den ganzen&quot; &quot;der &#39;ne&quot; ## [11091] &quot;der die&quot; &quot;die diamanten&quot; ## [11093] &quot;die andern&quot; &quot;das so&quot; ## [11095] &quot;die ?\\&quot;,&quot; &quot;den abgestorbenen&quot; ## [11097] &quot;dem hügel&quot; &quot;den weg&quot; ## [11099] &quot;der ,&quot; &quot;den ,&quot; ## [11101] &quot;den tag&quot; &quot;den zirkus&quot; ## [11103] &quot;der herkommt&quot; &quot;den !\\&quot;,&quot; ## [11105] &quot;das ist&quot; &quot;das ist&quot; ## [11107] &quot;die sich&quot; &quot;das ist&quot; ## [11109] &quot;das mädchen&quot; &quot;das ich&quot; ## [11111] &quot;die einen&quot; &quot;die anderen&quot; ## [11113] &quot;die rechte&quot; &quot;die arbeit&quot; ## [11115] &quot;der gruben&quot; &quot;den schweiß&quot; ## [11117] &quot;den alten&quot; &quot;dem haus&quot; ## [11119] &quot;der witwe&quot; &quot;die witwe&quot; ## [11121] &quot;das land&quot; &quot;das war&quot; ## [11123] &quot;die arbeit&quot; &quot;der :&quot; ## [11125] &quot;der an&quot; &quot;die hexen&quot; ## [11127] &quot;der schatten&quot; &quot;die arbeit&quot; ## [11129] &quot;der teufel&quot; &quot;das werkzeug&quot; ## [11131] &quot;den büschen&quot; &quot;die jungen&quot; ## [11133] &quot;der da&quot; &quot;den laub&quot; ## [11135] &quot;das klagende&quot; &quot;des tönte&quot; ## [11137] &quot;die jungen&quot; &quot;die stelle&quot; ## [11139] &quot;der schatten&quot; &quot;das interesse&quot; ## [11141] &quot;das loch&quot; &quot;der holzstrunk&quot; ## [11143] &quot;der verfehlt&quot; &quot;den schatten&quot; ## [11145] &quot;die zeit&quot; &quot;der früher&quot; ## [11147] &quot;die schaufel&quot; &quot;das ist&#39;s&quot; ## [11149] &quot;das ist&#39;s&quot; &quot;die rechte&quot; ## [11151] &quot;das ding&quot; &quot;die um&quot; ## [11153] &quot;der muß&quot; &quot;den kopf&quot; ## [11155] &quot;das ist&#39;s&quot; &quot;das beinhaus&quot; ## [11157] &quot;das ist&#39;s&quot; &quot;die sind&quot; ## [11159] &quot;die schulter&quot; &quot;den zähnen&quot; ## [11161] &quot;das ist&quot; &quot;die nähe&quot; ## [11163] &quot;der bei&quot; &quot;den ist&quot; ## [11165] &quot;den hügel&quot; &quot;das beinhaus&quot; ## [11167] &quot;die umzäunung&quot; &quot;die tür&quot; ## [11169] &quot;das dach&quot; &quot;der schornstein&quot; ## [11171] &quot;die jungen&quot; &quot;den eine&quot; ## [11173] &quot;der erwartung&quot; &quot;den fenstern&quot; ## [11175] &quot;das unheimliche&quot; &quot;den wald&quot; ## [11177] &quot;des nächsten&quot; &quot;die jungen&quot; ## [11179] &quot;dem abgestorbenen&quot; &quot;die tage&quot; ## [11181] &quot;der woche&quot; &quot;der freitag&quot; ## [11183] &quot;das weiß&quot; &quot;der dummkopf&quot; ## [11185] &quot;der erste&quot; &quot;der das&quot; ## [11187] &quot;das hab&quot; &quot;der ?\\&quot;,&quot; ## [11189] &quot;der freitag&quot; &quot;der luft&quot; ## [11191] &quot;das für&quot; &quot;das war&quot; ## [11193] &quot;den größten&quot; &quot;die je&quot; ## [11195] &quot;der besten&quot; &quot;den letzten&quot; ## [11197] &quot;der edelste&quot; &quot;der je&quot; ## [11199] &quot;den war&quot; &quot;das stück&quot; ## [11201] &quot;den ganzen&quot; &quot;das beinhaus&quot; ## [11203] &quot;die aussichten&quot; &quot;des nächsten&quot; ## [11205] &quot;die sonne&quot; &quot;die langen&quot; ## [11207] &quot;der bäume&quot; &quot;den .\\&quot;,&quot; ## [11209] &quot;die jungen&quot; &quot;des bewußten&quot; ## [11211] &quot;der bäume&quot; &quot;dem sie&quot; ## [11213] &quot;die jungen&quot; &quot;die schultern&quot; ## [11215] &quot;das beinhaus&quot; &quot;dem toten&quot; ## [11217] &quot;das hier&quot; &quot;der brütenden&quot; ## [11219] &quot;des in&quot; &quot;der verlassenheit&quot; ## [11221] &quot;des ortes&quot; &quot;den mut&quot; ## [11223] &quot;den pulsen&quot; &quot;die ohren&quot; ## [11225] &quot;das geringste&quot; &quot;die muskeln&quot; ## [11227] &quot;den sie&quot; &quot;die szenerie&quot; ## [11229] &quot;die treppe&quot; &quot;den rückzug&quot; ## [11231] &quot;den ,&quot; &quot;des verfalls&quot; ## [11233] &quot;den sie&quot; &quot;den wandschrank&quot; ## [11235] &quot;die hoffnung&quot; &quot;der ganz&quot; ## [11237] &quot;der hinunter&quot; &quot;die tür&quot; ## [11239] &quot;die jungen&quot; &quot;den fußboden&quot; ## [11241] &quot;der ,&quot; &quot;dem fußboden&quot; ## [11243] &quot;der alte&quot; &quot;der ein&quot; ## [11245] &quot;den anderen&quot; &quot;der ,&quot; ## [11247] &quot;den gesichtszügen&quot; &quot;der spanier&quot; ## [11249] &quot;dem räuberhut&quot; &quot;dem sie&quot; ## [11251] &quot;der ,&quot; &quot;die erde&quot; ## [11253] &quot;das gesicht&quot; &quot;den rücken&quot; ## [11255] &quot;die wand&quot; &quot;der sprecher&quot; ## [11257] &quot;der taubstumme&quot; &quot;der jungen&quot; ## [11259] &quot;die jungen&quot; &quot;der indianer-joe&quot; ## [11261] &quot;der letzte&quot; &quot;das ist&quot; ## [11263] &quot;der nähe&quot; &quot;dem mißglückten&quot; ## [11265] &quot;der nähe&quot; &quot;den freitag&quot; ## [11267] &quot;die beiden&quot; &quot;der stromaufwärts&quot; ## [11269] &quot;die gelegenheit&quot; &quot;das ,&quot; ## [11271] &quot;das war&quot; &quot;die reihe&quot; ## [11273] &quot;der und&quot; &quot;der andere&quot; ## [11275] &quot;der wächter&quot; &quot;die jungen&quot; ## [11277] &quot;der erste&quot; &quot;den er&quot; ## [11279] &quot;dem holzboden&quot; &quot;der niederkauerte&quot; ## [11281] &quot;die jungen&quot; &quot;die schrecklichen&quot; ## [11283] &quot;die zeit&quot; &quot;die ewigkeit&quot; ## [11285] &quot;der gedanke&quot; &quot;die sonne&quot; ## [11287] &quot;der eine&quot; &quot;der ,&quot; ## [11289] &quot;dem fuße&quot; &quot;dem bißchen&quot; ## [11291] &quot;der nacht&quot; &quot;dem streich&quot; ## [11293] &quot;der andere&quot; &quot;den raum&quot; ## [11295] &quot;der ,&quot; &quot;der herdsteine&quot; ## [11297] &quot;der vielversprechend&quot; &quot;den sack&quot; ## [11299] &quot;der in&quot; &quot;der ecke&quot; ## [11301] &quot;die erde&quot; &quot;die jungen&quot; ## [11303] &quot;den augen&quot; &quot;der glanz&quot; ## [11305] &quot;den glücklichsten&quot; &quot;den augenblick&quot; ## [11307] &quot;der an&quot; &quot;der andere&quot; ## [11309] &quot;der hand&quot; &quot;der heraus&quot; ## [11311] &quot;die beiden&quot; &quot;die handvoll&quot; ## [11313] &quot;die jungen&quot; &quot;der ecke&quot; ## [11315] &quot;der anderen&quot; &quot;der jungen&quot; ## [11317] &quot;die hacke&quot; &quot;den kopf&quot; ## [11319] &quot;die kiste&quot; &quot;der und&quot; ## [11321] &quot;der zahn&quot; &quot;der zeit&quot; ## [11323] &quot;der kerl&quot; &quot;den schatz&quot; ## [11325] &quot;der fremde&quot; &quot;der indianer&quot; ## [11327] &quot;die stirn&quot; &quot;den augen&quot; ## [11329] &quot;der brut&quot; &quot;der vergraben&quot; ## [11331] &quot;den .&quot; &quot;die hacke&quot; ## [11333] &quot;die jungen&quot; &quot;den fast&quot; ## [11335] &quot;die burschen&quot; &quot;der vergraben&quot; ## [11337] &quot;die erde&quot; &quot;das mit&quot; ## [11339] &quot;dem kreuz&quot; &quot;der andere&quot; ## [11341] &quot;das handwerkszeug&quot; &quot;den jungen&quot; ## [11343] &quot;der atem&quot; &quot;die hand&quot; ## [11345] &quot;die treppe&quot; &quot;die jungen&quot; ## [11347] &quot;den schrank&quot; &quot;die kräfte&quot; ## [11349] &quot;die schritte&quot; &quot;die verzweifelte&quot; ## [11351] &quot;die gesunkenen&quot; &quot;der auf&quot; ## [11353] &quot;das krachen&quot; &quot;den holzes&quot; ## [11355] &quot;der unten&quot; &quot;den trümmern&quot; ## [11357] &quot;der treppe&quot; &quot;der andere&quot; ## [11359] &quot;das alles&quot; &quot;die kerls&quot; ## [11361] &quot;die die&quot; &quot;dem anderen&quot; ## [11363] &quot;das letzte&quot; &quot;der nötigen&quot; ## [11365] &quot;dem haus&quot; &quot;dem flusse&quot; ## [11367] &quot;den ,&quot; &quot;den boden&quot; ## [11369] &quot;den hals&quot; &quot;den hügel&quot; ## [11371] &quot;den heimweg&quot; &quot;die dummheit&quot; ## [11373] &quot;das würde&quot; &quot;das unglück&quot; ## [11375] &quot;den !\\&quot;,&quot; &quot;den spanier&quot; ## [11377] &quot;das terrain&quot; &quot;der annahme&quot; ## [11379] &quot;das abenteuer&quot; &quot;des tages&quot; ## [11381] &quot;den schatz&quot; &quot;den ,&quot; ## [11383] &quot;den fingern&quot; &quot;der schlaf&quot; ## [11385] &quot;das erwachen&quot; &quot;der schrecklichen&quot; ## [11387] &quot;die einzelheiten&quot; &quot;der in&quot; ## [11389] &quot;das große&quot; &quot;die menge&quot; ## [11391] &quot;die er&quot; &quot;des besitz&quot; ## [11393] &quot;den könne&quot; &quot;die einzelheiten&quot; ## [11395] &quot;die seele&quot; &quot;dem gedanken&quot; ## [11397] &quot;den .\\&quot;,&quot; &quot;dem rande&quot; ## [11399] &quot;den gegenstand&quot; &quot;den verdammten&quot; ## [11401] &quot;den !\\&quot;,&quot; &quot;die geschichte&quot; ## [11403] &quot;die treppe&quot; &quot;die ganze&quot; ## [11405] &quot;dem verdammten&quot; &quot;der henker&quot; ## [11407] &quot;den !\\&quot;,&quot; &quot;der zu&quot; ## [11409] &quot;das ist&#39;s&quot; &quot;die nummer&quot; ## [11411] &quot;das ist&#39;s&quot; &quot;das ist&quot; ## [11413] &quot;die nummer&quot; &quot;das ist&#39;s&quot; ## [11415] &quot;das ist&quot; &quot;den .\\&quot;,&quot; ## [11417] &quot;den .\\&quot;,&quot; &quot;der sohn&quot; ## [11419] &quot;des wirtes&quot; &quot;der herauskommen&quot; ## [11421] &quot;den gedanken&quot; &quot;dem zimmer&quot; ## [11423] &quot;der letzten&quot; &quot;das hab&quot; ## [11425] &quot;die nummer&quot; &quot;die wir&quot; ## [11427] &quot;die hintertür&quot; &quot;den gang&quot; ## [11429] &quot;der alten&quot; &quot;die du&quot; ## [11431] &quot;der ersten&quot; &quot;der rechte&quot; ## [11433] &quot;der nachbarschaft&quot; &quot;des gasthofes&quot; ## [11435] &quot;den bewußten&quot; &quot;der andere&quot; ## [11437] &quot;die vordere&quot; &quot;den gang&quot; ## [11439] &quot;der dem&quot; &quot;die tür&quot; ## [11441] &quot;die nacht&quot; &quot;den ;&quot; ## [11443] &quot;der verabredung&quot; &quot;der himmel&quot; ## [11445] &quot;der herauskommen&quot; &quot;die schlüssel&quot; ## [11447] &quot;die nacht&quot; &quot;die jungen&quot; ## [11449] &quot;die donnerstagnacht&quot; &quot;der alten&quot; ## [11451] &quot;dem haus&quot; &quot;die laterne&quot; ## [11453] &quot;die wache&quot; &quot;das gasthaus&quot; ## [11455] &quot;die einzigen&quot; &quot;den .\\&quot;,&quot; ## [11457] &quot;die tiefe&quot; &quot;das tuch&quot; ## [11459] &quot;die beiden&quot; &quot;der finsternis&quot; ## [11461] &quot;dem wirtshaus&quot; &quot;den gang&quot; ## [11463] &quot;die gleich&quot; &quot;der laterne&quot; ## [11465] &quot;den schienen&quot; &quot;den war&quot; ## [11467] &quot;den gang&quot; &quot;den augenblick&quot; ## [11469] &quot;das ihn&quot; &quot;das leben&quot; ## [11471] &quot;die jungen&quot; &quot;den nicht&quot; ## [11473] &quot;den schatten&quot; &quot;des schlachthauses&quot; ## [11475] &quot;des dorfes&quot; &quot;der sturm&quot; ## [11477] &quot;der .\\&quot;,&quot; &quot;der atmen&quot; ## [11479] &quot;die schienen&quot; &quot;den griff&quot; ## [11481] &quot;die tür&quot; &quot;das tuch&quot; ## [11483] &quot;des großen&quot; &quot;die hand&quot; ## [11485] &quot;des indianer-joe&quot; &quot;dem boden&quot; ## [11487] &quot;das alte&quot; &quot;dem auge&quot; ## [11489] &quot;die arme&quot; &quot;das tuch&quot; ## [11491] &quot;das tuch&quot; &quot;die kiste&quot; ## [11493] &quot;der die&quot; &quot;der erde&quot; ## [11495] &quot;die bude&quot; &quot;die temperenzler-gasthäuser&quot; ## [11497] &quot;die kiste&quot; &quot;die sache&quot; ## [11499] &quot;der probieren&quot; &quot;die kiste&quot; ## [11501] &quot;die ganze&quot; &quot;das andere&quot; ## [11503] &quot;den ganzen&quot; &quot;den .\\&quot;,&quot; ## [11505] &quot;den henker&quot; &quot;das erste&quot; ## [11507] &quot;der nacht&quot; &quot;des ,&quot; ## [11509] &quot;der schatz&quot; &quot;den augenblick&quot; ## [11511] &quot;den mit&quot; &quot;den ,&quot; ## [11513] &quot;der tag&quot; &quot;der weise&quot; ## [11515] &quot;die erlaubnis&quot; &quot;den nächsten&quot; ## [11517] &quot;das lang&quot; &quot;das entzücken&quot; ## [11519] &quot;der kinder&quot; &quot;den die&quot; ## [11521] &quot;das gesamte&quot; &quot;der morgen&quot; ## [11523] &quot;der elf&quot; &quot;die gewohnheit&quot; ## [11525] &quot;der erwachsenen&quot; &quot;die kinder&quot; ## [11527] &quot;den fittichen&quot; &quot;der so&quot; ## [11529] &quot;das alte&quot; &quot;die gelegenheit&quot; ## [11531] &quot;den .\\&quot;,&quot; &quot;der ganze&quot; ## [11533] &quot;der lustigen&quot; &quot;das letzte&quot; ## [11535] &quot;den mädchen&quot; &quot;das näher&quot; ## [11537] &quot;der überfahrt&quot; &quot;den hügel&quot; ## [11539] &quot;die hat&quot; &quot;das wird&quot; ## [11541] &quot;den !\\&quot;,&quot; &quot;das mädchen&quot; ## [11543] &quot;die sache&quot; &quot;die glänzende&quot; ## [11545] &quot;der witwe&quot; &quot;der köder&quot; ## [11547] &quot;das und&quot; &quot;die oberhand&quot; ## [11549] &quot;dem programm&quot; &quot;die nacht&quot; ## [11551] &quot;das zeichen&quot; &quot;der gedanke&quot; ## [11553] &quot;das projekt&quot; &quot;der witwe&quot; ## [11555] &quot;das zeichen&quot; &quot;der letzten&quot; ## [11557] &quot;die aussicht&quot; &quot;das sichere&quot; ## [11559] &quot;des abends&quot; &quot;die unbestimmte&quot; ## [11561] &quot;den schatz&quot; &quot;dem felde&quot; ## [11563] &quot;der sind&quot; &quot;der stärkeren&quot; ## [11565] &quot;des ganzen&quot; &quot;das geld&quot; ## [11567] &quot;des dorfes&quot; &quot;das dampfboot&quot; ## [11569] &quot;die gesellschaft&quot; &quot;die entlegensten&quot; ## [11571] &quot;des waldes&quot; &quot;die unzugänglichsten&quot; ## [11573] &quot;der .\\&quot;,&quot; &quot;den ,&quot; ## [11575] &quot;den gewissenhaft&quot; &quot;die vernichtung&quot; ## [11577] &quot;der guten&quot; &quot;dem frühstück&quot; ## [11579] &quot;den zusammengerafft&quot; &quot;den hügel&quot; ## [11581] &quot;die mündung&quot; &quot;der höhle&quot; ## [11583] &quot;der form&quot; &quot;des buchstabens&quot; ## [11585] &quot;die massive&quot; &quot;der natur&quot; ## [11587] &quot;die von&quot; &quot;die grünen&quot; ## [11589] &quot;der sonne&quot; &quot;den laubmassen&quot; ## [11591] &quot;der überwältigende&quot; &quot;das umhertollen&quot; ## [11593] &quot;der .\\&quot;,&quot; &quot;den augenblick&quot; ## [11595] &quot;den ,&quot; &quot;der sie&quot; ## [11597] &quot;die kerze&quot; &quot;den geschlagen&quot; ## [11599] &quot;der ausgeblasen&quot; &quot;der zug&quot; ## [11601] &quot;die höhle&quot; &quot;der flackernde&quot; ## [11603] &quot;der lichter&quot; &quot;die mächtigen&quot; ## [11605] &quot;der weg&quot; &quot;der zehn&quot; ## [11607] &quot;den seiten&quot; &quot;die douglashöhle&quot; ## [11609] &quot;des labyrinth&quot; &quot;die überall&quot; ## [11611] &quot;der liefen&quot; &quot;der zu&quot; ## [11613] &quot;das ende&quot; &quot;der höhle&quot; ## [11615] &quot;den ;&quot; &quot;den mittelpunkt&quot; ## [11617] &quot;der erde&quot; &quot;die höhle&quot; ## [11619] &quot;das war&quot; &quot;die meisten&quot; ## [11621] &quot;der jungen&quot; &quot;der höhle&quot; ## [11623] &quot;den hauptgang&quot; &quot;die nebengänge&quot; ## [11625] &quot;die unheimlichen&quot; &quot;der zu&quot; ## [11627] &quot;der zu&quot; &quot;den herrlichkeiten&quot; ## [11629] &quot;des tages&quot; &quot;die zeit&quot; ## [11631] &quot;die schiffsglocke&quot; &quot;die abenteuer&quot; ## [11633] &quot;des tages&quot; &quot;das dampfboot&quot; ## [11635] &quot;die versäumte&quot; &quot;dem kapitän&quot; ## [11637] &quot;die lichter&quot; &quot;des dampfbootes&quot; ## [11639] &quot;der landungsstelle&quot; &quot;das volk&quot; ## [11641] &quot;den ,&quot; &quot;das sein&quot; ## [11643] &quot;die nacht&quot; &quot;das wagengerassel&quot; ## [11645] &quot;die lichter&quot; &quot;der lärm&quot; ## [11647] &quot;der fußgänger&quot; &quot;das dorf&quot; ## [11649] &quot;den kleinen&quot; &quot;dem schweigen&quot; ## [11651] &quot;den gespenstern&quot; &quot;das licht&quot; ## [11653] &quot;die sache&quot; &quot;die gangtür&quot; ## [11655] &quot;der mauer&quot; &quot;dem arm&quot; ## [11657] &quot;das mußte&quot; &quot;die kiste&quot; ## [11659] &quot;den schatz&quot; &quot;die leute&quot; ## [11661] &quot;der kiste&quot; &quot;den .\\&quot;,&quot; ## [11663] &quot;dem schutze&quot; &quot;der finsternis&quot; ## [11665] &quot;die fersen&quot; &quot;den männern&quot; ## [11667] &quot;den .\\&quot;,&quot; &quot;die flußstraße&quot; ## [11669] &quot;den weg&quot; &quot;der nach&quot; ## [11671] &quot;des alten&quot; &quot;des hügels&quot; ## [11673] &quot;den hügel&quot; &quot;den weg&quot; ## [11675] &quot;den großen&quot; &quot;der finsternis&quot; ## [11677] &quot;den .\\&quot;,&quot; &quot;die entfernung&quot; ## [11679] &quot;der ein&quot; &quot;der ;&quot; ## [11681] &quot;das klopfen&quot; &quot;des eigenen&quot; ## [11683] &quot;der schrei&quot; &quot;das herz&quot; ## [11685] &quot;die kehle&quot; &quot;dem zaun&quot; ## [11687] &quot;der um&quot; &quot;den grund&quot; ## [11689] &quot;den der&quot; &quot;der zu&quot; ## [11691] &quot;den .\\&quot;,&quot; &quot;die des&quot; ## [11693] &quot;der teufel&quot; &quot;des fremden&quot; ## [11695] &quot;des fremden&quot; &quot;dem beinhaus&quot; ## [11697] &quot;die ,&quot; &quot;die witwe&quot; ## [11699] &quot;die absicht&quot; &quot;den !\\&quot;,&quot; ## [11701] &quot;den ihn&quot; &quot;den kopf&quot; ## [11703] &quot;den worten&quot; &quot;des fremden&quot; ## [11705] &quot;den nächsten&quot; &quot;der busch&quot; ## [11707] &quot;der richter&quot; &quot;der mich&quot; ## [11709] &quot;der millionste&quot; &quot;das ganze&quot; ## [11711] &quot;den ,&quot; &quot;die muß&quot; ## [11713] &quot;der _fratze_&quot; &quot;die nase&quot; ## [11715] &quot;die ohren&quot; &quot;den .\\&quot;,&quot; ## [11717] &quot;das geschäft&quot; &quot;die lichter&quot; ## [11719] &quot;das mörderischste&quot; &quot;den atem&quot; ## [11721] &quot;die füße&quot; &quot;die andere&quot; ## [11723] &quot;den atem&quot; &quot;die beine&quot; ## [11725] &quot;die arme&quot; &quot;das haus&quot; ## [11727] &quot;des wallisers&quot; &quot;die tür&quot; ## [11729] &quot;die köpfe&quot; &quot;des alten&quot; ## [11731] &quot;dem sich&quot; &quot;des himmels&quot; ## [11733] &quot;die witwe&quot; &quot;der er&quot; ## [11735] &quot;der alte&quot; &quot;der alte&quot; ## [11737] &quot;dem hügel&quot; &quot;den zehen&quot; ## [11739] &quot;den sumachwald&quot; &quot;die büchse&quot; ## [11741] &quot;der hand&quot; &quot;den hügel&quot; ## [11743] &quot;den hügel&quot; &quot;des wallisers&quot; ## [11745] &quot;die inwohner&quot; &quot;der aufregenden&quot; ## [11747] &quot;der nacht&quot; &quot;dem sich&quot; ## [11749] &quot;die tür&quot; &quot;die ohren&quot; ## [11751] &quot;des kleinen&quot; &quot;die angenehmsten&quot; ## [11753] &quot;die er&quot; &quot;die schlußworte&quot; ## [11755] &quot;die tür&quot; &quot;der alte&quot; ## [11757] &quot;der sonne&quot; &quot;dem tüchtig&quot; ## [11759] &quot;die jungen&quot; &quot;der hierher&quot; ## [11761] &quot;die schüsse&quot; &quot;den teufeln&quot; ## [11763] &quot;der --&quot; &quot;den ,&quot; ## [11765] &quot;den zehen&quot; &quot;der rechte&quot; ## [11767] &quot;die pistole&quot; &quot;die schufte&quot; ## [11769] &quot;die kerle&quot; &quot;den wald&quot; ## [11771] &quot;der &#39;nen&quot; &quot;die kugeln&quot; ## [11773] &quot;die konstabler&quot; &quot;die flußufer&quot; ## [11775] &quot;der sheriff&quot; &quot;die wälder&quot; ## [11777] &quot;den auch&quot; &quot;der eine&quot; ## [11779] &quot;der taubstumme&quot; &quot;der hier&quot; ## [11781] &quot;der andere&quot; &quot;der ,&quot; ## [11783] &quot;die kerle&quot; &quot;den wäldern&quot; ## [11785] &quot;dem garten&quot; &quot;der witwe&quot; ## [11787] &quot;dem sheriff&quot; &quot;den die&quot; ## [11789] &quot;des alten&quot; &quot;das zimmer&quot; ## [11791] &quot;der sie&quot; &quot;den lohn&quot; ## [11793] &quot;das haben&quot; &quot;der alte&quot; ## [11795] &quot;der strolche&quot; &quot;der von&quot; ## [11797] &quot;die welt&quot; &quot;den würde&quot; ## [11799] &quot;der alte&quot; &quot;der sagt&#39;s&quot; ## [11801] &quot;den wäre&quot; &quot;dem gedanken&quot; ## [11803] &quot;der so&quot; &quot;die straße&quot; ## [11805] &quot;die alte&quot; &quot;dem augenblick&quot; ## [11807] &quot;die beiden&quot; &quot;der eine&quot; ## [11809] &quot;der andere&quot; &quot;den der&quot; ## [11811] &quot;den ihre&quot; &quot;der größere&quot; ## [11813] &quot;der taubstumme&quot; &quot;den weißen&quot; ## [11815] &quot;dem pflaster&quot; &quot;dem auge&quot; ## [11817] &quot;der andere&quot; &quot;die lumpen&quot; ## [11819] &quot;der zigarren&quot; &quot;der witwe&quot; ## [11821] &quot;den zerlumpten&quot; &quot;die witwe&quot; ## [11823] &quot;der spanier&quot; &quot;der witwe&quot; ## [11825] &quot;die nasenlöcher&quot; &quot;den ;&quot; ## [11827] &quot;das sagte&quot; &quot;der taubstumme&quot; ## [11829] &quot;der einen&quot; &quot;die größtmöglichste&quot; ## [11831] &quot;den alten&quot; &quot;der spanier&quot; ## [11833] &quot;das auge&quot; &quot;des alten&quot; ## [11835] &quot;der walliser&quot; &quot;der welt&quot; ## [11837] &quot;das du&quot; &quot;des alten&quot; ## [11839] &quot;der indianer-joe&quot; &quot;der walliser&quot; ## [11841] &quot;das ist&quot; &quot;des frühstücks&quot; ## [11843] &quot;die unterhaltung&quot; &quot;der alte&quot; ## [11845] &quot;das letzte&quot; &quot;die kampfstelle&quot; ## [11847] &quot;die hätten&quot; &quot;den ,&quot; ## [11849] &quot;die worte&quot; &quot;dem er&quot; ## [11851] &quot;der walliser&quot; &quot;der antwort&quot; ## [11853] &quot;den --&quot; &quot;den --&quot; ## [11855] &quot;der ,&quot; &quot;der walliser&quot; ## [11857] &quot;der scharf&quot; &quot;das _dich_&quot; ## [11859] &quot;den hätten&quot; &quot;der in&quot; ## [11861] &quot;der klemme&quot; &quot;die forschenden&quot; ## [11863] &quot;der arme&quot; &quot;der alte&quot; ## [11865] &quot;der tasche&quot; &quot;der ,&quot; ## [11867] &quot;der balanze&quot; &quot;der &#39;reinkommen&quot; ## [11869] &quot;dem gespräch&quot; &quot;der witwe&quot; ## [11871] &quot;den verdacht&quot; &quot;das er&quot; ## [11873] &quot;das doch&quot; &quot;die erwähnung&quot; ## [11875] &quot;der auffindung&quot; &quot;des bündels&quot; ## [11877] &quot;der schatz&quot; &quot;die kerle&quot; ## [11879] &quot;den wohl&quot; &quot;den ,&quot; ## [11881] &quot;der furcht&quot; &quot;das geld&quot; ## [11883] &quot;das frühstück&quot; &quot;die tür&quot; ## [11885] &quot;den letzten&quot; &quot;den .\\&quot;,&quot; ## [11887] &quot;der walliser&quot; &quot;die witwe&quot; ## [11889] &quot;den hügel&quot; &quot;den schauplatz&quot; ## [11891] &quot;die sache&quot; &quot;den besuchern&quot; ## [11893] &quot;die geschichte&quot; &quot;der nacht&quot; ## [11895] &quot;die witwe&quot; &quot;dem sie&quot; ## [11897] &quot;die hauptsache&quot; &quot;der walliser&quot; ## [11899] &quot;die köpfe&quot; &quot;das ganze&quot; ## [11901] &quot;der sache&quot; &quot;dem alle&quot; ## [11903] &quot;die witwe&quot; &quot;dem lärm&quot; ## [11905] &quot;die schufte&quot; &quot;den doch&quot; ## [11907] &quot;den sich&quot; &quot;die ganze&quot; ## [11909] &quot;die geschichte&quot; &quot;den wieder&quot; ## [11911] &quot;der erzählt&quot; &quot;den .\\&quot;,&quot; ## [11913] &quot;der schulferien&quot; &quot;die sonntagsschule&quot; ## [11915] &quot;dem war&quot; &quot;der kirche&quot; ## [11917] &quot;das aufregende&quot; &quot;den landstreichern&quot; ## [11919] &quot;den worden&quot; &quot;die predigt&quot; ## [11921] &quot;die frau&quot; &quot;des richters&quot; ## [11923] &quot;die mit&quot; &quot;der großen&quot; ## [11925] &quot;den gang&quot; &quot;den ganzen&quot; ## [11927] &quot;dem augenblick&quot; &quot;der mal&quot; ## [11929] &quot;die nacht&quot; &quot;die kirche&quot; ## [11931] &quot;der mal&quot; &quot;den kopf&quot; ## [11933] &quot;die leute&quot; &quot;den ,&quot; ## [11935] &quot;der wurden&quot; &quot;die jungen&quot; ## [11937] &quot;der heimfahrt&quot; &quot;der höhle&quot; ## [11939] &quot;die hände&quot; &quot;die schrecklichen&quot; ## [11941] &quot;die glocken&quot; &quot;die ganze&quot; ## [11943] &quot;die geschichte&quot; &quot;die einbrecher&quot; ## [11945] &quot;den gesattelt&quot; &quot;das dampfboot&quot; ## [11947] &quot;der allgemeine&quot; &quot;den ,&quot; ## [11949] &quot;den fluß&quot; &quot;dem wege&quot; ## [11951] &quot;den ganzen&quot; &quot;das dorf&quot; ## [11953] &quot;der sie&quot; &quot;das war&quot; ## [11955] &quot;der ganzen&quot; &quot;die frauen&quot; ## [11957] &quot;der morgen&quot; &quot;der höhle&quot; ## [11959] &quot;der alte&quot; &quot;das für&quot; ## [11961] &quot;den war&quot; &quot;die ärzte&quot; ## [11963] &quot;der höhle&quot; &quot;die witwe&quot; ## [11965] &quot;dem patienten&quot; &quot;der keins&quot; ## [11967] &quot;den sei&quot; &quot;der walliser&quot; ## [11969] &quot;die witwe&quot; &quot;des herren&quot; ## [11971] &quot;die von&quot; &quot;die meisten&quot; ## [11973] &quot;die höhle&quot; &quot;der winkel&quot; ## [11975] &quot;den sei&quot; &quot;den irrgängen&quot; ## [11977] &quot;die tiefsten&quot; &quot;dem gewöhnlich&quot; ## [11979] &quot;die namen&quot; &quot;den ,&quot; ## [11981] &quot;das band&quot; &quot;das letzte&quot; ## [11983] &quot;das sie&quot; &quot;das letzte&quot; ## [11985] &quot;dem kleinen&quot; &quot;der schreckliche&quot; ## [11987] &quot;der höhle&quot; &quot;die traurigste&quot; ## [11989] &quot;den kindern&quot; &quot;das licht&quot; ## [11991] &quot;den .\\&quot;,&quot; &quot;den dahin&quot; ## [11993] &quot;das dorf&quot; &quot;die leute&quot; ## [11995] &quot;die eben&quot; &quot;der besitzer&quot; ## [11997] &quot;des temperenzler-wirtshauses&quot; &quot;das schlimmste&quot; ## [11999] &quot;dem temperenzler-wirtshaus&quot; &quot;den sei&quot; ## [12001] &quot;die witwe&quot; &quot;die höhe&quot; ## [12003] &quot;die augen&quot; &quot;den .\\&quot;,&quot; ## [12005] &quot;das sagen&quot; &quot;die witwe&quot; ## [12007] &quot;den ;&quot; &quot;das geld&quot; ## [12009] &quot;der schatz&quot; &quot;die frau&quot; ## [12011] &quot;den kopf&quot; &quot;der dadurch&quot; ## [12013] &quot;die witwe&quot; &quot;der --&quot; ## [12015] &quot;den !\\&quot;,&quot; &quot;den tom&quot; ## [12017] &quot;den wollte&quot; &quot;die noch&quot; ## [12019] &quot;der auch&quot; &quot;die suche&quot; ## [12021] &quot;der zu&quot; &quot;der übrigen&quot; ## [12023] &quot;die finsteren&quot; &quot;die bekannten&quot; ## [12025] &quot;der der&quot; &quot;den bezeichnungen&quot; ## [12027] &quot;der .\\&quot;,&quot; &quot;das lustige&quot; ## [12029] &quot;das allmählich&quot; &quot;dem sie&quot; ## [12031] &quot;die halb&quot; &quot;die wände&quot; ## [12033] &quot;der höhle&quot; &quot;den ,&quot; ## [12035] &quot;der keine&quot; &quot;den wasserfall&quot; ## [12037] &quot;die tiefe&quot; &quot;den eingeklemmt&quot; ## [12039] &quot;die begierde&quot; &quot;den entdecker&quot; ## [12041] &quot;der ein&quot; &quot;die suche&quot; ## [12043] &quot;den tiefsten&quot; &quot;den der&quot; ## [12045] &quot;die oberwelt&quot; &quot;den sie&quot; ## [12047] &quot;der tropfsteine&quot; &quot;der länge&quot; ## [12049] &quot;dem umfange&quot; &quot;die höhle&quot; ## [12051] &quot;den kristalls&quot; &quot;der mitte&quot; ## [12053] &quot;den von&quot; &quot;das resultat&quot; ## [12055] &quot;der wassertropfen&quot; &quot;der wölbung&quot; ## [12057] &quot;der hängend&quot; &quot;die lichter&quot; ## [12059] &quot;die tiere&quot; &quot;die flammen&quot; ## [12061] &quot;der kerzen&quot; &quot;die gefahr&quot; ## [12063] &quot;die hier&quot; &quot;der hand&quot; ## [12065] &quot;den ersten&quot; &quot;den gang&quot; ## [12067] &quot;der höhle&quot; &quot;die tiere&quot; ## [12069] &quot;die kinder&quot; &quot;die flüchtlinge&quot; ## [12071] &quot;den neuen&quot; &quot;der gefährlichen&quot; ## [12073] &quot;des unbekannten&quot; &quot;die tiefe&quot; ## [12075] &quot;der umgebung&quot; &quot;die gemüter&quot; ## [12077] &quot;der kinder&quot; &quot;die andern&quot; ## [12079] &quot;der südlich&quot; &quot;der westlich&quot; ## [12081] &quot;der was&quot; &quot;den weg&quot; ## [12083] &quot;den ,&quot; &quot;den .\\&quot;,&quot; ## [12085] &quot;die fledermäuse&quot; &quot;die uns&quot; ## [12087] &quot;die kerzen&quot; &quot;den uns&quot; ## [12089] &quot;das kind&quot; &quot;die furchtbare&quot; ## [12091] &quot;der neuen&quot; &quot;den zeichen&quot; ## [12093] &quot;der da&quot; &quot;den schon&quot; ## [12095] &quot;dem mißlungenen&quot; &quot;den sich&quot; ## [12097] &quot;den gang&quot; &quot;der verzweifelten&quot; ## [12099] &quot;den ,&quot; &quot;die worte&quot; ## [12101] &quot;die tränen&quot; &quot;die fledermäuse&quot; ## [12103] &quot;der schall&quot; &quot;die hohlen&quot; ## [12105] &quot;der ferne&quot; &quot;der wie&quot; ## [12107] &quot;der ,&quot; &quot;das höhnische&quot; ## [12109] &quot;die kinder&quot; &quot;den weg&quot; ## [12111] &quot;den !&quot; &quot;der zurück&quot; ## [12113] &quot;den weg&quot; &quot;den ;&quot; ## [12115] &quot;der !\\&quot;,&quot; &quot;der kommen&quot; ## [12117] &quot;den anderen&quot; &quot;der und&quot; ## [12119] &quot;des weinen&quot; &quot;dem gedanken&quot; ## [12121] &quot;der den&quot; &quot;das ferne&quot; ## [12123] &quot;der mut&quot; &quot;der hoffnung&quot; ## [12125] &quot;der reden&quot; &quot;der in&quot; ## [12127] &quot;dem zufall&quot; &quot;der natur&quot; ## [12129] &quot;die gewohnheit&quot; &quot;des mißlingens&quot; ## [12131] &quot;die schwingen&quot; &quot;der .\\&quot;,&quot; ## [12133] &quot;der vier&quot; &quot;der tasche&quot; ## [12135] &quot;die kinder&quot; &quot;der gedanke&quot; ## [12137] &quot;der auf&quot; &quot;den tod&quot; ## [12139] &quot;der den&quot; &quot;den ,&quot; ## [12141] &quot;dem tageslicht&quot; &quot;das hirn&quot; ## [12143] &quot;den ,&quot; &quot;den worte&quot; ## [12145] &quot;die erschöpfung&quot; &quot;dem einfluß&quot; ## [12147] &quot;den und&quot; &quot;den ,&quot; ## [12149] &quot;den lippen&quot; &quot;der aufgewacht&quot; ## [12151] &quot;der stark&quot; &quot;den den&quot; ## [12153] &quot;den !\\&quot;,&quot; &quot;den auf&quot; ## [12155] &quot;der höhle&quot; &quot;den .\\&quot;,&quot; ## [12157] &quot;den sie&quot; &quot;der an&quot; ## [12159] &quot;der zeit&quot; &quot;das nicht&quot; ## [12161] &quot;der wand&quot; &quot;der wurde&quot; ## [12163] &quot;der tasche&quot; &quot;das ?\\&quot;,&quot; ## [12165] &quot;die erwachsenen&quot; &quot;dem hochzeitskuchen&quot; ## [12167] &quot;den satz&quot; &quot;den kuchen&quot; ## [12169] &quot;der mahlzeit&quot; &quot;die andern&quot; ## [12171] &quot;die kinder&quot; &quot;den still&quot; ## [12173] &quot;der sonntagmorgen&quot; &quot;die kinder&quot; ## [12175] &quot;die augen&quot; &quot;das kerzenrestchen&quot; ## [12177] &quot;die flamme&quot; &quot;der ,&quot; ## [12179] &quot;dem docht&quot; &quot;der schrecken&quot; ## [12181] &quot;dem bewußtsein&quot; &quot;der bewußt&quot; ## [12183] &quot;den .\\&quot;,&quot; &quot;der bemerkung&quot; ## [12185] &quot;die suche&quot; &quot;der dunkelheit&quot; ## [12187] &quot;das ferne&quot; &quot;die stunden&quot; ## [12189] &quot;der stellte&quot; &quot;der hunger&quot; ## [12191] &quot;den .\\&quot;,&quot; &quot;die armseligen&quot; ## [12193] &quot;das verlangen&quot; &quot;den atem&quot; ## [12195] &quot;der hand&quot; &quot;der entsprechenden&quot; ## [12197] &quot;den gang&quot; &quot;der ;&quot; ## [12199] &quot;der war&quot; &quot;der ton&quot; ## [12201] &quot;die freude&quot; &quot;der gefangenen&quot; ## [12203] &quot;das vorwärtskommen&quot; &quot;der und&quot; ## [12205] &quot;den .\\&quot;,&quot; &quot;die retter&quot; ## [12207] &quot;den .\\&quot;,&quot; &quot;die rufe&quot; ## [12209] &quot;die kinder&quot; &quot;die zeit&quot; ## [12211] &quot;der und&quot; &quot;die last&quot; ## [12213] &quot;der verzweiflung&quot; &quot;der tasche&quot; ## [12215] &quot;dem sich&quot; &quot;die leine&quot; ## [12217] &quot;der gang&quot; &quot;den platz&quot; ## [12219] &quot;die knie&quot; &quot;der hand&quot; ## [12221] &quot;die ecke&quot; &quot;des felsens&quot; ## [12223] &quot;der hand&quot; &quot;der dazu&quot; ## [12225] &quot;der des&quot; &quot;den ,&quot; ## [12227] &quot;den hals&quot; &quot;das echo&quot; ## [12229] &quot;der schreck&quot; &quot;den muskel&quot; ## [12231] &quot;der veranlassen&quot; &quot;der gefahr&quot; ## [12233] &quot;dem indianer-joe&quot; &quot;dem ,&quot; ## [12235] &quot;den immer&quot; &quot;der quelle&quot; ## [12237] &quot;dem hunger&quot; &quot;der donnerstag&quot; ## [12239] &quot;der samstag&quot; &quot;die suche&quot; ## [12241] &quot;der drachenleine&quot; &quot;die schreckliche&quot; ## [12243] &quot;dem gefühl&quot; &quot;der kehle&quot; ## [12245] &quot;die suchenden&quot; &quot;den oder&quot; ## [12247] &quot;der höhle&quot; &quot;die drachenleine&quot; ## [12249] &quot;den und&quot; &quot;des kommenden&quot; ## [12251] &quot;der dämmerung&quot; &quot;das dorf&quot; ## [12253] &quot;die verlorenen&quot; &quot;der waren&quot; ## [12255] &quot;den worden&quot; &quot;den ;&quot; ## [12257] &quot;dem zum&quot; &quot;der höhle&quot; ## [12259] &quot;die meisten&quot; &quot;den hatten&quot; ## [12261] &quot;die kinder&quot; &quot;den müßten&quot; ## [12263] &quot;den kopf&quot; &quot;der in&quot; ## [12265] &quot;die kissen&quot; &quot;den .\\&quot;,&quot; ## [12267] &quot;das dorf&quot; &quot;den dienstag-abend&quot; ## [12269] &quot;des glockengeläut&quot; &quot;die straßen&quot; ## [12271] &quot;die schrien&quot; &quot;den !\\&quot;,&quot; ## [12273] &quot;den !\\&quot;,&quot; &quot;den spektakel&quot; ## [12275] &quot;das volk&quot; &quot;die dem&quot; ## [12277] &quot;die kinder&quot; &quot;den bürgern&quot; ## [12279] &quot;der zug&quot; &quot;die straßen&quot; ## [12281] &quot;das dorf&quot; &quot;der zu&quot; ## [12283] &quot;die größte&quot; &quot;die das&quot; ## [12285] &quot;der ersten&quot; &quot;die geretteten&quot; ## [12287] &quot;der hinaus&quot; &quot;der glücksnachricht&quot; ## [12289] &quot;der höhle&quot; &quot;den mann&quot; ## [12291] &quot;dem sofa&quot; &quot;die geschichte&quot; ## [12293] &quot;der beschreibung&quot; &quot;der wie&quot; ## [12295] &quot;die leine&quot; &quot;die ufer&quot; ## [12297] &quot;des mississippi&quot; &quot;den lichtschimmer&quot; ## [12299] &quot;den gang&quot; &quot;die nachricht&quot; ## [12301] &quot;den tagesschein&quot; &quot;das loch&quot; ## [12303] &quot;die leute&quot; &quot;die ganze&quot; ## [12305] &quot;der höhle&quot; &quot;der drei&quot; ## [12307] &quot;den nach&quot; &quot;den ruhen&quot; ## [12309] &quot;der höhle&quot; &quot;das bett&quot; ## [12311] &quot;den .\\&quot;,&quot; &quot;der auf&quot; ## [12313] &quot;den beinen&quot; &quot;den kranken&quot; ## [12315] &quot;dem freund&quot; &quot;die witwe&quot; ## [12317] &quot;das cardiff&quot; &quot;der körper&quot; ## [12319] &quot;des einen&quot; &quot;des ,&quot; ## [12321] &quot;den \\\\\\&quot;&quot; &quot;der landungsstelle&quot; ## [12323] &quot;des dampfbootes&quot; &quot;den worden&quot; ## [12325] &quot;der flucht&quot; &quot;den .\\&quot;,&quot; ## [12327] &quot;der inzwischen&quot; &quot;der so&quot; ## [12329] &quot;die ,&quot; &quot;der richter&quot; ## [12331] &quot;die höhle&quot; &quot;der richter&quot; ## [12333] &quot;der höhle&quot; &quot;die eichentür&quot; ## [12335] &quot;die schlüssel&quot; &quot;die wand&quot; ## [12337] &quot;dem jungen&quot; &quot;das wasser&quot; ## [12339] &quot;der höhle&quot; &quot;der indianer-joe&quot; ## [12341] &quot;die neuigkeit&quot; &quot;der douglas-höhle&quot; ## [12343] &quot;das vollgestopfte&quot; &quot;dem richter&quot; ## [12345] &quot;die tür&quot; &quot;der ungewissen&quot; ## [12347] &quot;des ortes&quot; &quot;der indianer-joe&quot; ## [12349] &quot;der erde&quot; &quot;das gesicht&quot; ## [12351] &quot;der tür&quot; &quot;den anblick&quot; ## [12353] &quot;der hellen&quot; &quot;der schuft&quot; ## [12355] &quot;dem empfand&quot; &quot;des gefühl&quot; ## [12357] &quot;der freiheit&quot; &quot;das ihm&quot; ## [12359] &quot;den blutmenschen&quot; &quot;die klinge&quot; ## [12361] &quot;den eichenen&quot; &quot;der tür&quot; ## [12363] &quot;der felsen&quot; &quot;der härte&quot; ## [12365] &quot;der indianer&quot; &quot;den balken&quot; ## [12367] &quot;das .\\&quot;,&quot; &quot;die arbeit&quot; ## [12369] &quot;die fürchterliche&quot; &quot;den nischen&quot; ## [12371] &quot;des eingangs&quot; &quot;den ,&quot; ## [12373] &quot;die von&quot; &quot;der gefangene&quot; ## [12375] &quot;die flügel&quot; &quot;der arme&quot; ## [12377] &quot;der nähe&quot; &quot;den herausgebildet&quot; ## [12379] &quot;der decke&quot; &quot;die spitze&quot; ## [12381] &quot;die von&quot; &quot;den tropfen&quot; ## [12383] &quot;den !\\&quot;,&quot; &quot;die pyramiden&quot; ## [12385] &quot;der kreuzigung&quot; &quot;der eroberer&quot; ## [12387] &quot;das blutbad&quot; &quot;die jetzigen&quot; ## [12389] &quot;den ,&quot; &quot;die dämmerung&quot; ## [12391] &quot;der sage&quot; &quot;die nacht&quot; ## [12393] &quot;der vergessenheit&quot; &quot;den .\\&quot;,&quot; ## [12395] &quot;den sollte&quot; &quot;dem dieser&quot; ## [12397] &quot;den stein&quot; &quot;der reisende&quot; ## [12399] &quot;der die&quot; &quot;der der&quot; ## [12401] &quot;den langsam&quot; &quot;den tropfen&quot; ## [12403] &quot;der becher&quot; &quot;des indianer-joe&quot; ## [12405] &quot;den sehenswürdigkeiten&quot; &quot;der höhle&quot; ## [12407] &quot;den .\\&quot;,&quot; &quot;der indianer&quot; ## [12409] &quot;der mündung&quot; &quot;der höhle&quot; ## [12411] &quot;das volk&quot; &quot;dem dorfe&quot; ## [12413] &quot;der runde&quot; &quot;die kinder&quot; ## [12415] &quot;dem begräbnis&quot; &quot;den .\\&quot;,&quot; ## [12417] &quot;die beerdigung&quot; &quot;der petition&quot; ## [12419] &quot;den gouverneur&quot; &quot;des indianer-joes&quot; ## [12421] &quot;dem gouverneur&quot; &quot;den ohren&quot; ## [12423] &quot;der indianer&quot; &quot;der von&quot; ## [12425] &quot;des dorfes&quot; &quot;das ?\\&quot;,&quot; ## [12427] &quot;der teufel&quot; &quot;den ,&quot; ## [12429] &quot;die ihre&quot; &quot;dem begräbnis&quot; ## [12431] &quot;den walliser&quot; &quot;die witwe&quot; ## [12433] &quot;das geld&quot; &quot;dem schatz&quot; ## [12435] &quot;dem schnapswirt&quot; &quot;den sonntag&quot; ## [12437] &quot;der nacht&quot; &quot;dem joe&quot; ## [12439] &quot;der joe&quot; &quot;der bisher&quot; ## [12441] &quot;des wallisers&quot; &quot;der sache&quot; ## [12443] &quot;die hauptfrage&quot; &quot;den schnaps&quot; ## [12445] &quot;die finger&quot; &quot;den fall&quot; ## [12447] &quot;das geld&quot; &quot;den verdutzt&quot; ## [12449] &quot;der &#39;ne&quot; &quot;dem geld&quot; ## [12451] &quot;der höhle&quot; &quot;das geld&quot; ## [12453] &quot;der höhle&quot; &quot;das ernst&quot; ## [12455] &quot;der scherz&quot; &quot;den können&quot; ## [12457] &quot;den weg&quot; &quot;die geringste&quot; ## [12459] &quot;der welt&quot; &quot;das geld&quot; ## [12461] &quot;den ,&quot; &quot;der höhle&quot; ## [12463] &quot;der auf&quot; &quot;den beinen&quot; ## [12465] &quot;dem gewöhnlichen&quot; &quot;den wolln&quot; ## [12467] &quot;den niemand&quot; &quot;das boot&quot; ## [12469] &quot;der zurückrudern&quot; &quot;der drei&quot; ## [12471] &quot;den neuartigen&quot; &quot;die sie&quot; ## [12473] &quot;die jungen&quot; &quot;der gerade&quot; ## [12475] &quot;den weg&quot; &quot;der höhlenbucht&quot; ## [12477] &quot;die weiße&quot; &quot;das ist&quot; ## [12479] &quot;den .\\&quot;,&quot; &quot;das loch&quot; ## [12481] &quot;dem ich&quot; &quot;den kannst&quot; ## [12483] &quot;die verborgenste&quot; &quot;den mund&quot; ## [12485] &quot;das da&quot; &quot;der joe&quot; ## [12487] &quot;der &#39;s&quot; &quot;das will&quot; ## [12489] &quot;der straße&quot; &quot;das ist&quot; ## [12491] &quot;die rechte&quot; &quot;die kerls&quot; ## [12493] &quot;die höhle&quot; &quot;das geld&quot; ## [12495] &quot;die frauen&quot; &quot;die uhren&quot; ## [12497] &quot;den hut&quot; &quot;das in&quot; ## [12499] &quot;die weiber&quot; &quot;der zwei&quot; ## [12501] &quot;der höhle&quot; &quot;der los&quot; ## [12503] &quot;den .\\&quot;,&quot; &quot;das ist&quot; ## [12505] &quot;das andere&quot; &quot;die höhle&quot; ## [12507] &quot;des ganges&quot; &quot;den weg&quot; ## [12509] &quot;die quelle&quot; &quot;der .\\&quot;,&quot; ## [12511] &quot;den noch&quot; &quot;der wand&quot; ## [12513] &quot;den rest&quot; &quot;des kerzendochtes&quot; ## [12515] &quot;das letzte&quot; &quot;der flamme&quot; ## [12517] &quot;die jungen&quot; &quot;die stille&quot; ## [12519] &quot;des ortes&quot; &quot;den sie&quot; ## [12521] &quot;dem ,&quot; &quot;dem tom&quot; ## [12523] &quot;die lichter&quot; &quot;der dreißig&quot; ## [12525] &quot;die kerze&quot; &quot;die höhe&quot; ## [12527] &quot;den felsvorsprung&quot; &quot;dem großen&quot; ## [12529] &quot;dem kreuz&quot; &quot;den indianer-joe&quot; ## [12531] &quot;das geheimnisvolle&quot; &quot;der stimme&quot; ## [12533] &quot;den schatz&quot; &quot;der platz&quot; ## [12535] &quot;der ist&quot; &quot;der mündung&quot; ## [12537] &quot;der höhle&quot; &quot;den geistern&quot; ## [12539] &quot;der mal&quot; &quot;die lehmwand&quot; ## [12541] &quot;der kleinen&quot; &quot;der sich&quot; ## [12543] &quot;der bewußte&quot; &quot;die jungen&quot; ## [12545] &quot;dem der&quot; &quot;des felsens&quot; ## [12547] &quot;den sie&quot; &quot;der sich&quot; ## [12549] &quot;die sauber&quot; &quot;den .\\&quot;,&quot; ## [12551] &quot;die jungen&quot; &quot;der und&quot; ## [12553] &quot;der --&quot; &quot;dem kreuz&quot; ## [12555] &quot;dem kreuz&quot; &quot;der sitzt&quot; ## [12557] &quot;der und&quot; &quot;der und&quot; ## [12559] &quot;der .\\&quot;,&quot; &quot;der einen&quot; ## [12561] &quot;des felsens&quot; &quot;der anderen&quot; ## [12563] &quot;das geld&quot; &quot;dem felsen&quot; ## [12565] &quot;das ?\\&quot;,&quot; &quot;die unter&quot; ## [12567] &quot;den felsen&quot; &quot;das ende&quot; ## [12569] &quot;der spalte&quot; &quot;des spalts&quot; ## [12571] &quot;die geldkiste&quot; &quot;das heruntertropfende&quot; ## [12573] &quot;den händen&quot; &quot;die kiste&quot; ## [12575] &quot;die wog&quot; &quot;die kleinen&quot; ## [12577] &quot;das geld&quot; &quot;die wir&quot; ## [12579] &quot;dem mächtig&quot; &quot;den die&quot; ## [12581] &quot;die sonne&quot; &quot;den weg&quot; ## [12583] &quot;die küste&quot; &quot;dem boden&quot; ## [12585] &quot;des holzschuppens&quot; &quot;der witwe&quot; ## [12587] &quot;das zeug&quot; &quot;der da&quot; ## [12589] &quot;dem karren&quot; &quot;die zwei&quot; ## [12591] &quot;die jungen&quot; &quot;das haus&quot; ## [12593] &quot;des wallisers&quot; &quot;den sie&quot; ## [12595] &quot;der auf&quot; &quot;den weg&quot; ## [12597] &quot;der walliser&quot; &quot;den karren&quot; ## [12599] &quot;der altes&quot; &quot;die menschliche&quot; ## [12601] &quot;die jungen&quot; &quot;die große&quot; ## [12603] &quot;den :&quot; &quot;der alte&quot; ## [12605] &quot;der witwe&quot; &quot;die frage&quot; ## [12607] &quot;der witwe&quot; &quot;die karre&quot; ## [12609] &quot;das zimmer&quot; &quot;der pfarrer&quot; ## [12611] &quot;der redakteur&quot; &quot;den kopf&quot; ## [12613] &quot;den wie&quot; &quot;die beiden&quot; ## [12615] &quot;der nicht&quot; &quot;die witwe&quot; ## [12617] &quot;den ,&quot; &quot;der andere&quot; ## [12619] &quot;den euch&quot; &quot;den passen&quot; ## [12621] &quot;den ,&quot; &quot;die fenster&quot; ## [12623] &quot;den ganzen&quot; &quot;der zurecht&quot; ## [12625] &quot;das da&quot; &quot;die ganze&quot; ## [12627] &quot;die witwe&quot; &quot;den walliser&quot; ## [12629] &quot;der alte&quot; &quot;der gesellschaft&quot; ## [12631] &quot;die witwe&quot; &quot;den huck&quot; ## [12633] &quot;den ,&quot; &quot;die räuber&quot; ## [12635] &quot;das ist&quot; &quot;der gemein&quot; ## [12637] &quot;das bist&quot; &quot;den räubern&quot; ## [12639] &quot;den .\\&quot;,&quot; &quot;die witwe&quot; ## [12641] &quot;den ohren&quot; &quot;der tür&quot; ## [12643] &quot;die gäste&quot; &quot;die kinder&quot; ## [12645] &quot;der witwe&quot; &quot;die geschichte&quot; ## [12647] &quot;die überraschung&quot; &quot;die witwe&quot; ## [12649] &quot;der zwang&quot; &quot;der neuen&quot; ## [12651] &quot;der und&quot; &quot;des gesitteten&quot; ## [12653] &quot;die witwe&quot; &quot;die gute&quot; ## [12655] &quot;der gesellschaft&quot; &quot;das schweigen&quot; ## [12657] &quot;die gesellschaft&quot; &quot;der stumm&quot; ## [12659] &quot;dem jungen&quot; &quot;den säcken&quot; ## [12661] &quot;das geld&quot; &quot;den tisch&quot; ## [12663] &quot;des entzückens&quot; &quot;die erzählung&quot; ## [12665] &quot;das geld&quot; &quot;die summe&quot; ## [12667] &quot;das war&quot; &quot;der anwesenden&quot; ## [12669] &quot;die über&quot; &quot;das in&quot; ## [12671] &quot;der leser&quot; &quot;dem armen&quot; ## [12673] &quot;der verstand&quot; &quot;dem einfluß&quot; ## [12675] &quot;den erregung&quot; &quot;des ,&quot; ## [12677] &quot;der nachbarschaft&quot; &quot;die grundmauern&quot; ## [12679] &quot;der --&quot; &quot;den sie&quot; ## [12681] &quot;den war&quot; &quot;die fähigkeit&quot; ## [12683] &quot;der zu&quot; &quot;die lupe&quot; ## [12685] &quot;das käseblättchen&quot; &quot;die beiden&quot; ## [12687] &quot;die witwe&quot; &quot;der richter&quot; ## [12689] &quot;der von&quot; &quot;das einfach&quot; ## [12691] &quot;den wochentag&quot; &quot;des jahres&quot; ## [12693] &quot;die hälfte&quot; &quot;der sonntage&quot; ## [12695] &quot;der geistliche&quot; &quot;das ,&quot; ## [12697] &quot;den ,&quot; &quot;den schulbesuch&quot; ## [12699] &quot;der höhle&quot; &quot;der schule&quot; ## [12701] &quot;die heldenhafte&quot; &quot;die tom&quot; ## [12703] &quot;die eigenen&quot; &quot;den hatte&quot; ## [12705] &quot;der überzeugung&quot; &quot;die wert&quot; ## [12707] &quot;den ,&quot; &quot;der lief&quot; ## [12709] &quot;dem fuß&quot; &quot;der richter&quot; ## [12711] &quot;der großen&quot; &quot;der so&quot; ## [12713] &quot;die nationale&quot; &quot;die beste&quot; ## [12715] &quot;des landes&quot; &quot;den solle&quot; ## [12717] &quot;der auch&quot; &quot;den umstand&quot; ## [12719] &quot;dem schutze&quot; &quot;der witwe&quot; ## [12721] &quot;die gesellschaft&quot; &quot;den wurden&quot; ## [12723] &quot;die dienerschaft&quot; &quot;der witwe&quot; ## [12725] &quot;dem sich&quot; &quot;den er&quot; ## [12727] &quot;die kirche&quot; &quot;die eigene&quot; ## [12729] &quot;den und&quot; &quot;den .\\&quot;,&quot; ## [12731] &quot;den hindurch&quot; &quot;die witwe&quot; ## [12733] &quot;das ganze&quot; &quot;den fluß&quot; ## [12735] &quot;die hinter&quot; &quot;dem jetzt&quot; ## [12737] &quot;den flüchtling&quot; &quot;die pfeife&quot; ## [12739] &quot;die ihm&quot; &quot;den goldenen&quot; ## [12741] &quot;der freiheit&quot; &quot;der durch&quot; ## [12743] &quot;die witwe&quot; &quot;den tag&quot; ## [12745] &quot;der tragen&quot; &quot;die mich&quot; ## [12747] &quot;die kirche&quot; &quot;die witwe&quot; ## [12749] &quot;das halt&quot; &quot;der teufel&quot; ## [12751] &quot;das muß&quot; &quot;der .\\&quot;,&quot; ## [12753] &quot;der ,&quot; &quot;den .\\&quot;,&quot; ## [12755] &quot;den will&quot; &quot;des und&quot; ## [12757] &quot;des fragen&quot; &quot;den tag&quot; ## [12759] &quot;den heuboden&quot; &quot;die alte&quot; ## [12761] &quot;das weiß&quot; &quot;der henker&quot; ## [12763] &quot;den ganzen&quot; &quot;das elend&quot; ## [12765] &quot;das geld&quot; &quot;der witwe&quot; ## [12767] &quot;das nicht&quot; &quot;dem verdammten&quot; ## [12769] &quot;den wald&quot; &quot;den fluß&quot; ## [12771] &quot;die berge&quot; &quot;das reichsein&quot; ## [12773] &quot;den .\\&quot;,&quot; &quot;der zu&quot; ## [12775] &quot;das ist&quot; &quot;den meisten&quot; ## [12777] &quot;den die&quot; &quot;den sie&quot; ## [12779] &quot;den dabei&quot; &quot;der --&quot; ## [12781] &quot;der so&quot; &quot;die witwe&quot; ## [12783] &quot;den kann&quot; &quot;die schlimmsten&quot; ## [12785] &quot;der krepieren&quot; &quot;den ?\\&quot;,&quot; ## [12787] &quot;die jungen&quot; &quot;die einschwörung&quot; ## [12789] &quot;die einschwörung&quot; &quot;das ?\\&quot;,&quot; ## [12791] &quot;den sollte&quot; &quot;den zu&quot; ## [12793] &quot;der was&quot; &quot;das muß&quot; ## [12795] &quot;den man&quot; &quot;den kann&quot; ## [12797] &quot;das beste&quot; &quot;das laß&quot; ## [12799] &quot;die witwe&quot; &quot;dem schmutz&quot; ## [12801] &quot;die geschichte&quot; &quot;den ;&quot; ## [12803] &quot;die eines&quot; &quot;den .\\&quot;,&quot; ## [12805] &quot;der heirat&quot; &quot;die meisten&quot; ## [12807] &quot;der in&quot; &quot;den personen&quot; ## [12809] &quot;die geschichte&quot; &quot;der jugend&quot; ## [12811] &quot;der aufzunehmen&quot; &quot;den sind&quot; # romantexte %&gt;% # str_match_all(np) Izvleci FVG: nomphrase = &quot;stand.*\\\\W(\\\\w+){1,3}\\\\szur\\\\s.+ung&quot; nomphrase = &quot;stand.* (zur .+ung)&quot; romantexte %&gt;% dplyr::select(sentence) %&gt;% str_extract_all(nomphrase) %&gt;% head(10) ## [[1]] ## [1] &quot;stand mit seinem grinsen zur verfügung&quot; ## [2] &quot;stande war , und es war für einen angeklagten beruhigend , sich vorzustellen , wie wenig geldmittel diesem gericht zur verfügung&quot; ## [3] &quot;stand langsam auf , sah fräulein montag an , dann über den tisch hin , dann aus dem fenster  das gegenüberliegende haus stand in der sonne  und ging zur tür .\\&quot;, \\&quot;fräulein montag folgte ihm ein paar schritte , als vertraue sie ihm nicht ganz .\\&quot;, \\&quot;vor der tür mußten aber beide zurück weichen , denn sie öffnete sich , und der hauptmann lanz trat ein .\\&quot;, \\&quot;k. sah ihn zum erstenmal aus der nähe .\\&quot;, \\&quot;er war ein großer , etwa vierzigjähriger mann mit braung&quot; ## [4] &quot;stand des direktors zur stärkung&quot; "],["suffixe-und-stemming.html", "Kapitel 14 Suffixe und Stemming 14.1 Packages 14.2 Dateien einlesen 14.3 Lemmatisierung 14.4 Stemming 14.5 Wortbildungsanalyse", " Kapitel 14 Suffixe und Stemming 14.1 Packages library(tidyverse) library(tidytext) library(SnowballC) library(readtext) library(rmarkdown) library(scales) library(udpipe) library(vecsets) 14.2 Dateien einlesen novels_txt = readtext(&quot;data/books/*.txt&quot;, docvarsfrom = &quot;filenames&quot;, encoding = &quot;UTF-8&quot;) %&gt;% rename(title = docvar1) novels_txt ## readtext object consisting of 2 documents and 1 docvar. ## # Description: df [2 x 3] ## doc_id text title ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 prozess.txt &quot;\\&quot;Der Prozes\\&quot;...&quot; prozess ## 2 tom.txt &quot;\\&quot;Tom Sawyer\\&quot;...&quot; tom Wir wandeln die Datei in eine Tabelle um. novels = as.data.frame(novels_txt) 14.3 Lemmatisierung Unser Ziel ist die Extrahierung von Wortbildungsmorphemen. Daher führen wir mit dem Program udpipe zuerst eine Analyse der Wortformen durch, die auch eine Lemmatisierung der Wortformen einschließt. Durch die Lemmatisierung können wir auf die Grundformen von Wörtern zurückgreifen und Flexionsmorpheme ausschließen. library(udpipe) destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ model &lt;- udpipe_download_model(language = &quot;german&quot;) demodel &lt;- udpipe_load_model(model$file_model) } else { file_model = destfile demodel &lt;- udpipe_load_model(file_model) } Die Annotation der Wortformen kann mehrere Minuten dauern, falls es sich um längere Texte handelt. x = udpipe_annotate(demodel, novels_txt$text, trace = TRUE) ## 2021-11-28 20:35:27 Annotating text fragment 1/2 ## 2021-11-28 20:37:34 Annotating text fragment 2/2 x = as.data.frame(x) Wir filtern Interpunktionszeichen heraus, die für unser Ziel nicht relevant sind. Die Spalte upos enthält die dafür relevante Kategorie (PUNCT). In einem weiteren Schritt fügen wir mit mutate eine neue Spalte (word) hinzu, welche die tokens der Texte enthält, aber kleingeschrieben gewerden sollen, was mit tolower() erreicht werden kann. udpipe = x %&gt;% filter(upos != &quot;PUNCT&quot;) %&gt;% mutate(word = tolower(token)) Für die Entfernung von Ziffern und Symbolen aus der Tabelle verwenden wir einen regulären Ausdruck (regex). Außerdem sollen alle Lemmas mit Kleinbuchstaben beginnen. novels_words = udpipe %&gt;% filter(str_detect(lemma, &quot;[:alpha:]&quot;)) %&gt;% # keine Ziffern oder Interpunktionszeichen oder Symbole mutate(lemma = tolower(lemma)) Da wir vor allem an Wörtern interessiert sind, die aus mehr als einem Morphem bestehen, filtern wir u.a. Funktionswörter heraus, und zwar mit der Funktion anti_join() und einer Stoppwortliste aus dem Programm stopwords. Da die Stoppwortliste im Format einer Liste vorliegt, müssen wir sie in eine Tabelle umwandeln, und zwar mit der Funktion as_tibble(). Der Name der Tabellenspalte muss mit dem Namen der entsprechende Spalte in novels_words (also: word) übereinstimmen, damit wir die beiden Tabellen entsprechend vereinen können. Den Namen von Tabellenspalten verändern wir mit rename(). Außerdem wollen wir gleichzeitig auch einige Wörter herausfiltern, die nicht zu den Romantexten gehören: englische Wörter, die Namen der Autoren, eventuell noch nicht entfernte Ziffern, Interpunktionszeichen und Symbole. Zur Vereinigung der Wortformen in einen Vektor bzw. Tabellenspalte verwenden wir die concatenate-Funktion c(). In einem weiteren Schritt sollen die Kategorien der doc_id bessere Namen erhalten: die allgemeineren Namen doc1 und doc2 ersetzen wir mit den eindeutigeren Namen prozess und tom. stoplist_de = c(stopwords::stopwords(language = &quot;german&quot;), &quot;franz&quot;,&quot;kafka&quot;,&quot;mark&quot;,&quot;twain&quot;, &quot;by&quot;,&quot;aligned&quot;,&quot;Aligned&quot;,&quot;&quot;,&quot;bilingual-texts.com&quot;,&quot;fully&quot;,&quot;reviewed&quot;) %&gt;% as_tibble() %&gt;% rename(word = value) novels_words = novels_words %&gt;% mutate(doc_id = str_replace(doc_id, &quot;doc1&quot;, &quot;prozess&quot;), doc_id = str_replace(doc_id, &quot;doc2&quot;, &quot;tom&quot;)) %&gt;% anti_join(stoplist_de, novels_words, by = &quot;word&quot;) # möglichst keine Funktionswörter head(novels_words, 10) %&gt;% paged_table() tail(novels_words, 10) %&gt;% paged_table() 14.4 Stemming Beim Stemming werden die Stämme von Wortformen extrahiert. In flexionsarmen Sprachen (z.B. Englisch) sind die Ergebnisse gewöhnlich nützlicher als in morphologisch reichen Sprachen (z.B. Deutsch, Slowenisch). Hier verwenden wir die Stemming-Funktion wordStem() des Programms SnowballC, um potentielle Suffixe und Suffixoide komplexer Wörter zu extrahieren. Das Ziel ist eine morphologische Vergleichsanalyse, und zwar von Wortbildungsmorphemen in den Romaen. Mit mutate() und der wordStem()-Funktion fügen wir der Tabelle eine weitere Spalte hinzu, der wir den Namen stamm geben. novels_words = novels_words %&gt;% mutate(stamm = wordStem(lemma, language = &quot;de&quot;)) head(novels_words) %&gt;% paged_table() Nun stehen uns die Lemma- und Stammformen zur Verfügung. Der Unterschied zwischen den jeweiligen Formen sollte (meist) Wortbildungsmorpheme (Suffixe) ergeben. Um Unterschiede zwischen den in den Spalten lemma und stamm gespeicherten Wortformen zu bestimmen, wollen wir ein spezielles Programm verwenden: library(vectsets). Dann folgen einige Korrekturen mit str_remove(), str_remove_all(), str_replace() und str_replace_all(), damit in der Spalte diffs möglichst nur Wortbildungssuffixe vorkommen. Mit str_remove() beseitigen wir ein Zeichen einmal, mit str_remove_all() so oft, wie es in einer Tabellenspalte vorkommt. Mit str_replace() wandeln wir ein Zeichen einmal in ein anderes um, mit str_replace_all() so oft, wie es in einer Tabellenspalte vorkommt. library(vecsets) novels_full_words = novels_words %&gt;% mutate(diffs = as.character(mapply(vsetdiff, strsplit(lemma, split = &quot;&quot;), strsplit(stamm, split = &quot;&quot;)))) %&gt;% mutate(diffs = str_remove(diffs, &quot;c\\\\(&quot;), diffs = str_remove(diffs, &quot;\\\\)&quot;), diffs = str_remove_all(diffs, &#39;\\\\&quot;&#39;), diffs = str_remove_all(diffs, &quot;, &quot;), diffs = str_replace(diffs, &quot;character\\\\(0&quot;, &quot;&quot;), diffs = str_replace(diffs, &quot;ß&quot;, &quot;&quot;), diffs = str_replace_all(diffs, &quot;ä&quot;, &quot;&quot;), diffs = str_replace_all(diffs, &quot;ö&quot;, &quot;&quot;), diffs = str_replace_all(diffs, &quot;ü&quot;, &quot;&quot;)) Das Ergebnis ist nicht perfekt, aber für bestimmte Wortbildungssuffixe brauchbar. novels_full_words %&gt;% dplyr::select(doc_id, lemma, stamm, diffs) %&gt;% head(10) %&gt;% paged_table() Wir speichern die Tabelle für spätere Analysen. Möglich sind verschiedene Formate, z.B. rds-Dateien, die man mit R/Rstudio öffnen kann, und csv-Dateien, die man mit beliebigen Programmen öffnen kann. Aber wir speichern die Tabelle hier nur als Excel-Datei ab, weil die Tabellenzeilen nicht zu lang sind. # write_rds(novels_full_words, &quot;data/novels_full_words.rds&quot;) # write_csv(novels_full_words, &quot;data/novels_full_words.csv&quot;) writexl::write_xlsx(novels_full_words, &quot;data/novels_full_words.xlsx&quot;) 14.5 Wortbildungsanalyse Um am nächsten Tag nicht alle vorherigen Schritte noch einmal machen zu müssen, können wir an dieser Stelle die zuvor gespeicherte Tabelle öffnen. novels_full_words = readxl::read_xlsx(&quot;data/novels_full_words.xlsx&quot;) Wir beginnen unsere Wortbildungsanalyse mit dem Abzählen von verschiedenen Endungen, die von unserem Programm identifiziert wurden. Wir wählen mit dplyr::select() nur ein paar Tabellenspalten aus, damit wir die Übersicht behalten. Die Ergebnisse sollen nach dem Romantitel gruppiert werden, was man mit group_by() bewerkstelligt. Mit filter() werden leere Zeilen in der Tabellenspalte diffs herausgefiltert. Dann zählen wir die verschiedenen Kategorien in der Tabellenspalte, und zwar mit count(). Zuletzt verändern wir mit pivot_wider() das Tabellenformat, so dass die Romantitel als Spaltennamen erscheinen und die Endungen als Tabellenzeilen. Die Spalten prozess und tom enthalten nun die Häufigkeitswerte für die einzelnen Endungen. novels_full_words %&gt;% dplyr::select(doc_id, lemma, stamm, diffs) %&gt;% group_by(doc_id) %&gt;% filter(diffs != &quot;&quot;) %&gt;% count(diffs) %&gt;% pivot_wider(names_from = doc_id, values_from = n) %&gt;% paged_table() Wir erweitern unsere Häufigkeitstabelle mit Prozentzahlen und geben ihr einen Namen (novels_diffs). novels_diffs = novels_full_words %&gt;% dplyr::select(doc_id, lemma, stamm, diffs) %&gt;% group_by(doc_id) %&gt;% filter(diffs != &quot;&quot;) %&gt;% count(diffs) %&gt;% pivot_wider(names_from = doc_id, values_from = n) %&gt;% mutate(prozess_total = sum(prozess, na.rm = TRUE), tom_total = sum(tom, na.rm = TRUE)) %&gt;% mutate(prozess_pct = prozess/prozess_total, tom_pct = tom/tom_total,) %&gt;% dplyr::select(-prozess_total, -tom_total) head(novels_diffs) %&gt;% paged_table() Noch eine graphische Darstellung der Häufigkeitswerte, für die wir die Tabelle umformen, und zwar mit pivot_longer() und verkürzen (durch Filtervorgänge): wir wollen nur Endungen mit einer Häufigkeit von mehr als 0,5% (0.005) beibehalten. Mit fct_lump() kann man die Anzahl der Kategorien reduzieren (die Restkategorie heißt hier Other). Mit fct_reorder() sorgen wir dafür, dass die häufigeren Endungen im Diagramm oben erscheinen. Die Funktion facet_wrap() ermöglicht die getrennte Darstellung der Romane. library(scales) novels_diffs %&gt;% pivot_longer(cols = prozess_pct:tom_pct, names_to = &quot;title&quot;, values_to = &quot;prozent&quot;) %&gt;% filter(!is.na(prozent)) %&gt;% filter(prozent &gt; 0.005) %&gt;% mutate(diffs = fct_lump(diffs, 10)) %&gt;% mutate(diffs = fct_reorder(diffs, prozent)) %&gt;% ggplot(aes(prozent, diffs, fill = title)) + geom_col() + theme(legend.position = &quot;none&quot;) + scale_x_continuous(labels = percent) + labs(x = &quot;&quot;, y = &quot;Endungen&quot;) + facet_wrap(~ title, scales = &quot;free&quot;) 14.5.1 Suffix -lich Vergleichen wir mal die Häufigkeit der Endung -lich in den Romanen! Da dieses Wortbildungssuffix mit adjektivischen Stämmen verknüpft wird, filtern die entsprechende Wortklasse heraus. (lich_tab = novels_full_words %&gt;% group_by(doc_id) %&gt;% filter(upos == &quot;ADJ&quot;) %&gt;% count(diffs == &quot;lich&quot;) %&gt;% rename(lich = `diffs == &quot;lich&quot;`) %&gt;% filter(!is.na(lich)) %&gt;% pivot_wider(names_from = doc_id, values_from = n) ) ## # A tibble: 2 x 3 ## lich prozess tom ## &lt;lgl&gt; &lt;int&gt; &lt;int&gt; ## 1 FALSE 1403 1184 ## 2 TRUE 386 213 Ist der Unterschied zwischen den Romanen statistisch signifikant? Das überprüfen wir mit dem Chi-Quadrat-Test. Die erste Spalte enthält keine Zahlen, daher müssen wir sie beim Testen entfernen, und zwar mit [, -1]: alle Zeilen übernehmen, aber die este Tabellenspalte nicht. chisq.test(lich_tab[,-1]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: lich_tab[, -1] ## X-squared = 20.172, df = 1, p-value = 7.077e-06 Der Chi-Quadrat-Test hat lediglich einen signifikanten Unterschied zwischen den beiden Stichproben prozess und tom bestätigt, sagt uns aber nicht, in welcher Stichprobe, das Suffix -lich verhältnismäßig häufiger vorkommt. Bei dieser Beurteilung helfen uns Prozentzahlen. lichtab2 = novels_full_words %&gt;% group_by(doc_id) %&gt;% filter(upos == &quot;ADJ&quot;) %&gt;% count(diffs == &quot;lich&quot;) %&gt;% rename(lich = `diffs == &quot;lich&quot;`) %&gt;% filter(!is.na(lich)) %&gt;% pivot_wider(names_from = doc_id, values_from = n) %&gt;% mutate(prozess_total = sum(prozess, na.rm = TRUE), tom_total = sum(tom, na.rm = TRUE)) %&gt;% mutate(prozess_pct = prozess/prozess_total, tom_pct = tom/tom_total,) %&gt;% dplyr::select(-prozess_total, -tom_total) lichtab2 %&gt;% paged_table() Etwa 21,5% der als Adjektiv identifizierten Lemmas im Roman prozess enden mit dem Suffix -lich, im Roman tom sawyer sind es etwa 15,2%. Der Unterschied ist auch in der graphischen Darstellung zu sehen. lichtab2 %&gt;% pivot_longer(prozess_pct:tom_pct, names_to = &quot;title&quot;, values_to = &quot;pct&quot;) %&gt;% ggplot(aes(title, pct, fill = lich)) + geom_col() Das Suffix -lich gehört zu den produktiven Wortbildungsmitteln im Deutschen. Warum sind im prozess mehr davon zu finden als im anderen Roman? Zur Klärung dieser Frage müssten wir zuerst mehr über die semantischen Eigenschaften und Verknüpfungsmöglichkeiten (oder -einschränkungen) mit verschiedenen Wortstämmen erfahren. novels_full_words %&gt;% dplyr::select(doc_id, lemma, word, upos, diffs) %&gt;% group_by(doc_id, lemma, word) %&gt;% filter(upos == &quot;ADJ&quot;) %&gt;% filter(diffs == &quot;lich&quot;) %&gt;% paged_table() 14.5.2 Mehrere ADJ Suffixe Vergleichen wir die Häufigkeit von mehreren adjektivischen Suffixen in unserem Romankorpus! novels_full_words %&gt;% dplyr::select(doc_id, lemma, word, upos, diffs) %&gt;% # Auswahl von hier relevanten Spalten group_by(doc_id, lemma, word) %&gt;% # Gruppierung nach diesen Merkmalen (Spalten) filter(upos == &quot;ADJ&quot;) %&gt;% # Auswahl der Wortklasse filter(diffs == &quot;lich&quot; | diffs == &quot;erlich&quot; | diffs == &quot;isch&quot; | diffs == &quot;ig&quot;) %&gt;% # Suffixauswahl paged_table() Von den insgesamt 1370 als (suffigiertes) Adjektiv identifizierten Wortformen (tokens) kommen 847 im prozess und 523 in tom sawyer vor. Der Anteil der Zustandsbeschreibungen mit Hilfe von suffigierten Adjektiven scheint im ersten Werk größer zu sein als im zuletzt genannten (was wir aber an dieser Stelle nicht mit einem Chi-Quadrat-Test überprüfen wollen). adj_tab = novels_full_words %&gt;% dplyr::select(doc_id, lemma, upos, diffs) %&gt;% group_by(doc_id) %&gt;% filter(upos == &quot;ADJ&quot;) %&gt;% filter(diffs == &quot;lich&quot; | diffs == &quot;erlich&quot; | diffs == &quot;isch&quot; | diffs == &quot;ig&quot;) %&gt;% count(diffs) %&gt;% pivot_wider(names_from = doc_id, values_from = n) %&gt;% mutate(prozess_total = sum(prozess, na.rm = TRUE), tom_total = sum(tom, na.rm = TRUE)) %&gt;% mutate(prozess_pct = prozess/prozess_total, tom_pct = tom/tom_total) adj_tab %&gt;% paged_table() library(scales) adj_tab %&gt;% pivot_longer(prozess_pct:tom_pct, names_to = &quot;title&quot;, values_to = &quot;pct&quot;) %&gt;% mutate(diffs = fct_reorder(diffs, pct)) %&gt;% ggplot(aes(pct, diffs, fill = title)) + geom_col(position = &quot;dodge&quot;) + scale_x_continuous(labels = percent) + theme(legend.position = &quot;top&quot;) 14.5.3 Nicht verwendete Tabelle novels_full_words %&gt;% dplyr::select(doc_id, lemma, stamm, diffs) %&gt;% group_by(doc_id) %&gt;% filter(diffs != &quot;&quot;) %&gt;% add_count(doc_id, name = &quot;total&quot;) %&gt;% add_count(diffs) %&gt;% mutate(pct = n/total) %&gt;% pivot_wider(names_from = doc_id, values_from = n, names_repair = &quot;unique&quot;) %&gt;% unnest(c(prozess, tom)) %&gt;% paged_table() "],["buchstaben-in-romanen.html", "Kapitel 15 Buchstaben in Romanen 15.1 Packages 15.2 Datensatz lesen 15.3 Buchstaben extrahieren 15.4 Buchstaben zählen 15.5 Vokale 15.6 Konsonanten 15.7 Vokal-Konsonant-Verhältnis 15.8 Anzahl der Silben 15.9 Mittlere Wortlänge 15.10 Testen von Mittelwertunterschieden 15.11 Quanteda-Funktionen 15.12 Konsonantenverbindungen 15.13 Datensatz-Variante", " Kapitel 15 Buchstaben in Romanen 15.1 Packages library(tidyverse) library(tidytext) library(scales) library(readtext) library(rmarkdown) # library(qdap) # syllable_count and syllable_sum # library(quanteda) # nsyllable(tokens(txt)) 15.2 Datensatz lesen Die readtext()-Funktion erlaubt Einlesen von mehreren Dateien auf einfache Art und Weise. Mit docvarsfrom erhalten wird eine neue Spalte in der Tabelle, die wir mit der Funktion rename() umbenennen. Mit encoding = UTF-8 teilen wir dem Programm mit, wie der Text kodiert ist (Code Page). novels_txt = readtext(&quot;data/books/*.txt&quot;, docvarsfrom = &quot;filenames&quot;, encoding = &quot;UTF-8&quot;) %&gt;% rename(title = docvar1) novels_txt ## readtext object consisting of 2 documents and 1 docvar. ## # Description: df [2 x 3] ## doc_id text title ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 prozess.txt &quot;\\&quot;Der Prozes\\&quot;...&quot; prozess ## 2 tom.txt &quot;\\&quot;Tom Sawyer\\&quot;...&quot; tom 15.3 Buchstaben extrahieren 15.3.1 aus Liste Der reguläre Ausdruck [a-zA-Z] extrahiert nur Buchstaben des englischen Alphabets, [:alpha:] extrahiert dagegen auch nicht-englische Buchstaben, z.B. deutsche oder slowenische Sonderzeichen. Zahlen und andere spezielle Zeichen (z.B. Interpunktion) werden auf diese Weise nicht extrahiert. Regex {1} (= default) extrahiert Einzelbuchstaben. Bei Verwendung von {2} werden jeweils zwei aufeinander folgende Buchstaben extrahiert. Die Funktion tolower() sorgt dafür, dass Großbuchstaben in Kleinbuchstaben umgewandelt werden. Falls zwischen großen und kleinen Buchstaben unterschieden werden soll, entfernen wir diese Funktion aus dem Programmkode. letters = tolower(novels_txt$text) %&gt;% str_extract_all(pattern = &quot;[:alpha:]{1}&quot;) letters[[1]][1:10] ## [1] &quot;d&quot; &quot;e&quot; &quot;r&quot; &quot;p&quot; &quot;r&quot; &quot;o&quot; &quot;z&quot; &quot;e&quot; &quot;s&quot; &quot;s&quot; letters[[2]][1:9] ## [1] &quot;t&quot; &quot;o&quot; &quot;m&quot; &quot;s&quot; &quot;a&quot; &quot;w&quot; &quot;y&quot; &quot;e&quot; &quot;r&quot; 15.3.2 aus Datensatz Tabellen und Graphiken erstellen ist leichter, wenn wir die Texte in Datensätze umwandeln, und zwar mit der Funktion as.data.frame(). novels = as.data.frame(novels_txt) Mit der Funktion unnest_tokens() können wir auch Buchstaben isolieren und anschließend auszählen. library(tidytext) novels_character &lt;- novels %&gt;% unnest_tokens(character, text, token = &quot;characters&quot;, to_lower = TRUE, drop = T) head(novels_character) ## doc_id title character ## 1 prozess.txt prozess d ## 2 prozess.txt prozess e ## 3 prozess.txt prozess r ## 4 prozess.txt prozess p ## 5 prozess.txt prozess r ## 6 prozess.txt prozess o 15.4 Buchstaben zählen Mit count() können wir die Häufigkeit einer Variable (hier: der Buchstaben) auszählen. novels_character %&gt;% count(character, sort = TRUE) %&gt;% head(3) ## character n ## 1 e 114769 ## 2 n 70151 ## 3 i 52767 Der tidytext-Tokenizer hat nicht nur Buchstaben, sondern auch Zahlen extrahiert. Da wir nur an der Häufigkeit von Buchstaben interessiert sind, filtern wir die Zahlen und andere Zeichen heraus. Dazu verwenden wir die Funktionen filter() und zusätzlich str_detect(), da wir für diese Aufgabe einen regulären Ausdruck nutzen wollen. novels_character %&gt;% filter(str_detect(character, &quot;[:alpha:]&quot;)) %&gt;% count(character, sort = T) %&gt;% head(3) ## character n ## 1 e 114769 ## 2 n 70151 ## 3 i 52767 Ein paar Zeichen, die nicht zum deutschen Alphabet gehören und mit dem vorherigen Programm-Schritt nicht herausfiltern konnten, werden im nächsten Schritt ebenfalls herausgefiltert. Wir speichern das Ergebnis als neue Tabelle mit dem Namen char_freq. char_freq = novels_character %&gt;% filter(str_detect(character, &quot;[:alpha:]&quot;)) %&gt;% filter(!str_detect(character, &quot;é|á&quot;)) %&gt;% count(character, sort = T) char_freq %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 10)) Insgesamt haben wir 30 Buchstaben des deutschen Alphabets in den Romanen unterschieden. Aus wie vielen Buchstaben des deutschen Alphabets bestehen die Romane? Die Summe erhalten wir mit der Funktion summarise() - fast 700 Tausend. char_freq %&gt;% summarise(total = sum(n)) ## total ## 1 694556 Es ist nun wirklich Zeit, mal ein Bild zu malen! Dazu verwenden wir das Programm (library) ggplot2, das im Programmbündel tidyverse enthalten ist. Das Diagramm zeigt sehr deutlich, dass gewaltige Häufigkeitsunterschiede im deutschen Alphabet bestehen. char_freq %&gt;% mutate(character = fct_reorder(character, n)) %&gt;% # Sortieren nach Frequenz ggplot(aes(n, character, fill = character)) + geom_col() + theme(legend.position = &quot;none&quot;) Eine bessere Vorstellung von den Zahlenverhältnissen erhalten wir, wenn wir die mehrstelligen Zahlenwerte in Prozente umwandeln. library(scales) char_freq %&gt;% mutate(Prozent = n / sum(n)) %&gt;% # Umwandlung in Prozente ungroup() %&gt;% mutate(character = fct_reorder(character, Prozent)) %&gt;% # Sortieren nach Prozenten ggplot(aes(Prozent, character, fill = character)) + geom_col() + theme(legend.position = &quot;none&quot;) + scale_x_continuous(labels = percent_format( decimal.mark = &quot;,&quot;, accuracy = 1)) # Prozent-Format Getrennte tabellarische Darstellung für die Texte: novels_character %&gt;% group_by(doc_id) %&gt;% count(character, sort = TRUE) %&gt;% pivot_wider(names_from = doc_id, values_from = n) %&gt;% paged_table() Getrennte graphische Darstellung für die Texte: library(scales) novels_character %&gt;% group_by(doc_id) %&gt;% count(character, sort = TRUE) %&gt;% mutate(Prozent = n / sum(n)) %&gt;% # Umwandlung in Prozente ungroup() %&gt;% mutate(character = fct_reorder(character, Prozent)) %&gt;% # Sortieren nach Prozenten filter(Prozent &gt; 0.0001) %&gt;% ggplot(aes(Prozent, character, fill = character)) + geom_col() + theme(legend.position = &quot;none&quot;) + facet_wrap(~ doc_id, scales = &quot;free&quot;) scale_x_continuous(labels = percent) # Prozent-Format ## &lt;ScaleContinuousPosition&gt; ## Range: ## Limits: 0 -- 1 15.5 Vokale Betrachten wir zunächst nur die Buchstaben, die Vokale symbolisieren! Zu diesem Zweck bilden wir eine Vokalliste. Zwischen den Vokalen setzen wir das oder-Zeichen ein: den logischen Operator |. vokale = &quot;a|e|i|o|u|ä|ö|ü|y&quot; Die Vokalliste vokale verwenden wir mit den Funktionen filter() und str_detect(). library(scales) char_freq %&gt;% filter(str_detect(character, vokale)) %&gt;% mutate(Prozent = n / sum(n)) %&gt;% # Umwandlung in Prozente ungroup() %&gt;% mutate(character = fct_reorder(character, Prozent)) %&gt;% # Sortieren nach Prozenten ggplot(aes(Prozent, character, fill = character)) + geom_col() + theme(legend.position = &quot;none&quot;) + labs(y = &quot;Vokale&quot;, x = &quot;Häufigkeit in Romanen&quot;) + scale_x_continuous(labels = percent_format(accuracy = 1), breaks = seq(0, 0.50, 0.05)) # Prozent-Format Am häufigsten kommt der Buchstabe e in den Romanen vor (fast 45%-iger Anteil unter den Vokalen!), am seltensten y, welches im Wesentlichen in Fremd- und Lehnwörtern auftritt. 15.6 Konsonanten Welche Buchstaben, die Konsonanten symbolisieren, kommen am häufigsten vor? Zum Filtern verwenden wir wiederum die Vokalliste, dieses Mal allerdings mit Negationszeichen ! library(scales) char_freq %&gt;% filter(!str_detect(character, vokale)) %&gt;% # Negationszeichen, daher Konsonanten beibehalten mutate(Prozent = n / sum(n)) %&gt;% # Umwandlung in Prozente ungroup() %&gt;% mutate(character = fct_reorder(character, Prozent)) %&gt;% # Sortieren nach Prozenten ggplot(aes(Prozent, character, fill = character)) + geom_col() + theme(legend.position = &quot;none&quot;) + labs(y = &quot;Konsonanten&quot;, x = &quot;Häufigkeit in Romanen&quot;) + scale_x_continuous(labels = percent_format(accuracy = 1), breaks = seq(0, 0.50, 0.02)) # Prozent-Format und Einheiten Der Buchstabe n kommt in den Romanen am häufigsten vor, gefolgt von den Buchstaben: r, s, t, h, d. Selten sind die Buchstaben: x, q, p, ß, v. 15.7 Vokal-Konsonant-Verhältnis Welches Zahlenverhältnis besteht zwischen den Vokalen und Konsonanten? 21 konsonantische Buchstaben und 9 vokalische Buchstaben. Pro Silbe sind in den deutschen Texten 1 Vokal und ungefähr 2 Konsonanten zu erwarten, also Silbenstrukturen wie z.B. KVK, KKV, VKK. bs_ratio = char_freq %&gt;% mutate(buchstabe = ifelse(str_detect(character, vokale), &quot;Vokal&quot;, &quot;Konsonant&quot;)) %&gt;% count(buchstabe) %&gt;% mutate(Prozent = n / sum(n)) bs_ratio ## buchstabe n Prozent ## 1 Konsonant 21 0.7 ## 2 Vokal 9 0.3 Der höhere Anteil der Konsonanten entspricht der größeren Konsonantenmenge. ggplot(bs_ratio, aes(x = &quot;&quot;, y = Prozent, fill = buchstabe)) + geom_col(color = &quot;black&quot;, size = 2) + coord_polar(theta = &quot;y&quot;, start = -0 * pi / 180) + # scale_fill_discrete(labels = c(&quot;Konsonanten&quot;, &quot;Vokale&quot;)) + scale_fill_manual(labels = c(&quot;Konsonanten&quot;, &quot;Vokale&quot;), values = c(&quot;#9E9AC8&quot;, &quot;#6A51A3&quot;)) + theme(legend.position = &quot;top&quot;, axis.text.y = element_blank(), axis.ticks = element_blank()) + labs(y = &quot;&quot;, x = &quot;Anteil % in Romanen&quot;) + scale_x_discrete(NULL, expand = c(0, 0)) + scale_y_continuous(labels = percent_format(accuracy = 1), breaks = seq(0, 1, 0.1)) # Prozent-Format und Einheiten Diese Zahlenwerte und -verhältnisse bilden einen möglichen Ausgangspunkt für intra- oder interlinguale Vergleiche. 15.8 Anzahl der Silben Wie viele Silben kommen in den Romanen schätzungsweise vor und wie viele Buchstaben pro Silbe? Die genaue Bestimmung der Silbenanzahl für eine bestimmte Sprache kann aufgrund zahlreicher Besonderheiten ziemlich kompliziert sein. Die Anzahl der Silben schätzen wir daher mit einer Funktion des Programms nsyllable (Alternatives Programm: qdap). Da wir die Silbenzählfunktion nur ein einziges Mal bemühen, rufen wir sie in der unten sichtbaren Form auf: nsyllable::nsyllable(buchstabenfolge). novels_words = novels %&gt;% unnest_tokens(word, text, token = &quot;words&quot;, to_lower = TRUE, drop = T) %&gt;% mutate(syllables = nsyllable::nsyllable(as.character(word), language = &quot;en&quot;)) %&gt;% mutate(letters = nchar(word)) novels_words %&gt;% head(100) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 6)) Insgesamt (d.h. kumulativ gesehen) fast 139 Tausend Silben in den Romanen. Diese Zahl bietet einen möglichen Ausgangspunkt für Textvergleiche. novels_words %&gt;% count(syllables) %&gt;% summarise(Silben = sum(n)) ## Silben ## 1 138811 Die meisten Wortformen in den Romanen bestehen aus einer Silbe (fast 60%) oder zwei Silben (fast 30%). Das ist typisch für deutsche Texte. Kurze Funktionswörter (meist eine Silbe) kommen wesentlich häufiger vor als andere Wortklassen (Substantive, Verben, Adjektive, Adverbien). novels_words %&gt;% count(syllables) %&gt;% mutate(Prozent = n / sum(n)) %&gt;% ggplot(aes(syllables, Prozent, fill = factor(syllables))) + geom_col() + theme(legend.position = &quot;none&quot;) + labs(x = &quot;Silben&quot;) + scale_y_continuous(labels = percent, breaks = seq(0, 0.75, 0.1)) # Prozent-Format und Einheiten ## Warning: Removed 1 rows containing missing values (position_stack). Berücksichtig man lediglich distinktive Wortformen (also keine Wortwiederholungen), dann ergibt sich die folgende Verteilung, in der die Zweisilber (mehr als 30%) und Dreisilber (fast 30%) den größten Anteil haben. novels_words %&gt;% distinct(word, .keep_all = T) %&gt;% count(syllables) %&gt;% mutate(Prozent = n / sum(n)) %&gt;% ggplot(aes(syllables, Prozent, fill = factor(syllables))) + geom_col() + theme(legend.position = &quot;none&quot;) + labs(x = &quot;Silben&quot;) + scale_y_continuous(labels = percent, breaks = seq(0, 0.75, 0.1)) # Prozent-Format und Einheiten ## Warning: Removed 1 rows containing missing values (position_stack). 15.9 Mittlere Wortlänge Wir können die Wortlänge in geschriebenen Texten auf zumindest zwei grundlegende Arten messen: - die Anzahl der Silben pro Wort(form), - die Anzahl der Buchstaben pro Wort(form). Die durchschnittliche Anzahl der Silben und Buchstaben pro Wort (distinkte Wortformen !) in den Romanen ist in der folgenden Tabelle zu sehen: - neben den Mittelwerten (Avg_Silben, Avg_Buchstaben) - auch die Standardabweichungen vom entsprechenden Mittelwert (Stdev_Silben, Stdev_Buchstaben). Die Mittelwerte oder arithmetischen Mittel können mit der Programmfunktion mean() berechnet werden, die Standardabweichungen mit der Funktion sd(). Die Standardabweichungen sind notwendig zur Feststellung nicht-zufälliger Unterschiede zwischen den Stichproben (d.h. den Romanen). Bei der Berechnung der Mittelwerte und Standardabweichungen geben wir dem Programm auch die Instruktion, etwaige leere Datenzeilen (NA) herauszufiltern, und zwar mit Hilfe von na.rm = TRUE. Wird dies unterlassen, kann dies dazu führen, dass ein Mittelwert bzw. Standardabweichung nicht berechnet werden kann. In der folgenden Tabelle werden nur distinktive Wortformen (Types) berücksichtigt, d.h. als ob jede Wortform nur einmal pro Roman vorkommt. novels_words %&gt;% group_by(title) %&gt;% distinct(word, .keep_all = T) %&gt;% add_count(word) %&gt;% summarise(Avg_Silben = mean(syllables, na.rm = TRUE), Stdev_Silben = sd(syllables, na.rm = TRUE), Avg_Buchstaben = mean(letters, na.rm = TRUE), Stdev_Buchstaben = sd(letters, na.rm = TRUE)) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) Die durchschnittliche Anzahl der Silben und Buchstaben pro Wortform (Token), bei Berücksichtigung von Wortwiederholungen in den Romanen, ist in der folgenden Tabelle zu sehen. novels_words %&gt;% group_by(title) %&gt;% summarise(Avg_Silben = mean(syllables, na.rm = TRUE), Stdev_Silben = sd(syllables, na.rm = TRUE), Avg_Buchstaben = mean(letters, na.rm = TRUE), Stdev_Buchstaben = sd(letters, na.rm = TRUE)) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) 15.10 Testen von Mittelwertunterschieden 15.10.1 t-Test Sind die berechneten Unterschiede zwischen den Mittelwerten relevant bzw. nicht-zufällig? Um diese Frage zu klären, kann man einen statistischen Test bemühen. Da wir lediglich zwei Samples (zwei Romanen) vergleichen wollen, kann uns ein parametrischer Test wie z.B. der t-Test Klarheit verschaffen. Wir verwenden die Programmfunktion t.test(). Der t-Test bestätigt, dass Der Prozess im Durchschnitt etwas längere Wörter aufweist (2,59 Silben pro Wort gegenüber 2,44 Silben pro Wort in Tom Sawyer) - wenn Anzahl distinktiver Wortformen verwendet. syls = novels_words %&gt;% group_by(title) %&gt;% distinct(word, .keep_all = T) %&gt;% add_count(word) %&gt;% drop_na() %&gt;% dplyr::select(title, word, syllables) %&gt;% pivot_wider(names_from = title, values_from = syllables) t.test(syls$prozess, syls$tom) # significant ## ## Welch Two Sample t-test ## ## data: syls$prozess and syls$tom ## t = 9.5409, df = 16477, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## 0.1261795 0.1914303 ## sample estimates: ## mean of x mean of y ## 2.598953 2.440148 Wenn die Wiederholung von Wortformen berücksichtigt wird, bestätigt der t-Test ebenfalls einen signifikanten Unterschied zwischen den beiden Texten. Die durchschnittliche Anzahl der Wortsilben ist niedriger, da kürzere Wortformen (solche von Konjunktionen, Präpositionen, Artikeln und anderen Funktionswörtern) häufig vorkommen. Schnelle Form des t-Tests: t.test(syllables ~ title, data = novels_words) ## ## Welch Two Sample t-test ## ## data: syllables by title ## t = 11.395, df = 137402, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means between group prozess and group tom is not equal to 0 ## 95 percent confidence interval: ## 0.04309115 0.06099339 ## sample estimates: ## mean in group prozess mean in group tom ## 1.613350 1.561307 Dasselbe Ergebnis, aber aufwendiger zu programmieren, um den Datensatz in die entsprechende Form zu bringen: prozess_syl &lt;- novels_words %&gt;% filter(title == &quot;prozess&quot;) %&gt;% dplyr::select(syllables) %&gt;% rename(prozess = syllables) tom_syl &lt;- novels_words %&gt;% filter(title == &quot;tom&quot;) %&gt;% dplyr::select(syllables) %&gt;% rename(prozess = syllables) t.test(prozess_syl, tom_syl) # significant ## ## Welch Two Sample t-test ## ## data: prozess_syl and tom_syl ## t = 11.395, df = 137402, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## 0.04309115 0.06099339 ## sample estimates: ## mean of x mean of y ## 1.613350 1.561307 Der nächste t-Test bestätigt ebenfalls, dass Der Prozess im Durchschnitt längere Wörter aufweist (8,79 Buchstaben pro Wort gegenüber 8.36 Buchstaben pro Wort in Tom Sawyer.) Berücksichtigt wurden distinkte Wortformen (keine wiederholten Wortformen). lets = novels_words %&gt;% group_by(title) %&gt;% distinct(word, .keep_all = T) %&gt;% add_count(word) %&gt;% drop_na() %&gt;% dplyr::select(title, word, letters) %&gt;% pivot_wider(names_from = title, values_from = letters) t.test(lets$prozess, lets$tom) # significant ## ## Welch Two Sample t-test ## ## data: lets$prozess and lets$tom ## t = 8.993, df = 16472, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## 0.3306128 0.5148998 ## sample estimates: ## mean of x mean of y ## 8.785878 8.363122 Wenn die Wiederholung von Wortformen berücksichtigt wird, bestätigt der t-Test wiederum einen signifikanten Unterschied zwischen den beiden Texten. Die durchschnittliche Anzahl der Buchstaben pro Wort ist niedriger, da kürzere Wortformen (solche von Konjunktionen, Präpositionen, Artikeln und anderen Funktionswörtern) häufig vorkommen. Schnelle Form des t-Tests: t.test(letters ~ title, data = novels_words) ## ## Welch Two Sample t-test ## ## data: letters by title ## t = 5.0257, df = 138808, p-value = 5.022e-07 ## alternative hypothesis: true difference in means between group prozess and group tom is not equal to 0 ## 95 percent confidence interval: ## 0.04486967 0.10224210 ## sample estimates: ## mean in group prozess mean in group tom ## 5.048860 4.975304 Dasselbe Ergebnis, aber aufwendiger zu programmieren, um den Datensatz in die entsprechende Form zu bringen: prozess_let &lt;- novels_words %&gt;% filter(title == &quot;prozess&quot;) %&gt;% dplyr::select(letters) %&gt;% rename(prozess = letters) tom_let &lt;- novels_words %&gt;% filter(title == &quot;tom&quot;) %&gt;% dplyr::select(letters) %&gt;% rename(prozess = letters) t.test(prozess_let, tom_let) # significant ## ## Welch Two Sample t-test ## ## data: prozess_let and tom_let ## t = 5.0257, df = 138808, p-value = 5.022e-07 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## 0.04486967 0.10224210 ## sample estimates: ## mean of x mean of y ## 5.048860 4.975304 15.10.2 Lineare Regression Hat man mehr als zwei Stichproben zu vergleichen, kann man eine lineare Regression durchführen, die auch das Testen von mehreren Einflussgrößen (Prädiktoren) erlaubt. Hier folgt eine Demonstration anhand des bereits gehabten Datensatzes mit zwei Stichproben (Romanen). Die Ordinate im Koordinatensystem (Intercept, also der y-Abschnitt mit x = 0) ist bei zwei Stichproben gleich dem Mittelwert der ersten Stichprobe (title = prozess), d.h. 1,613350. Der geschätzte Mittelwert (Estimate) der zweiten Stichprobe (title = tom) ist um den Wert 0,052042 niedriger, d.h. 1,613350 - 0,052042 = 1,561308 (Dezimalkommas statt Dezimalpunkte!). Der R-Quadrat-Wert (R-squared) ist allerdings sehr klein, d.h. dass der Prädiktor title (Roman) nur einen Bruchteil der festgestellten Mittelwertvarianz (Veränderungen der Mittelwerte) zu erklären vermag. Möglicherweise gibt es andere Prädiktoren, die die Mittelwertvarianz besser erklären. m &lt;- lm(syllables ~ title, data = novels_words) summary(m) ## ## Call: ## lm(formula = syllables ~ title, data = novels_words) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.6133 -0.6133 -0.5613 0.4387 6.3867 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.613350 0.003183 506.85 &lt;2e-16 *** ## titletom -0.052042 0.004577 -11.37 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.8479 on 137403 degrees of freedom ## (1406 observations deleted due to missingness) ## Multiple R-squared: 0.00094, Adjusted R-squared: 0.0009327 ## F-statistic: 129.3 on 1 and 137403 DF, p-value: &lt; 2.2e-16 anova(m) ## Analysis of Variance Table ## ## Response: syllables ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## title 1 93 92.937 129.28 &lt; 2.2e-16 *** ## Residuals 137403 98778 0.719 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Graphische Darstellung: der Mittelwertunterschied ist gering (nur 0,05 Silben), aber aufgrund der großen Stichproben statistisch signifikant. Der Faktor title erklärt nur einen verschwinded kleinen Bruchteil der Mittelwertunterschiede. library(effects) ## Loading required package: carData ## lattice theme set by effectsTheme() ## See ?effectsTheme for details. allEffects(m) ## model: syllables ~ title ## ## title effect ## title ## prozess tom ## 1.613350 1.561307 plot(allEffects(m)) Ergebnisse in Tabellenform: summary(lm(syllables ~ title, data = novels_words)) %&gt;% tidy() %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) Boxplot mit Jitterplot anhand des vollen Datensatzes: der Mittelwert ist hier der Median median() (d.h. ein Wert, der genau in der Mitte jeder Stichprobe liegt), das arithmetische Mittel / der Durchschnitt wird hier mit einem roten Quadrat symbolisiert. Der Median liegt in beiden Stichproben beim Wert 1, also weit unter dem jeweiligen Durchschnittswert. Dies zeigt, dass die Wortlängen nicht normalverteilt sind. Der Jitterplot veranschaulicht, dass der Prozess über mehr Wortformen mit 6, 7 oder 8 Silben verfügt. novels_words %&gt;% group_by(title) %&gt;% ggplot(aes(title, syllables, fill = title, group = title)) + geom_jitter(width = 0.4, alpha = 0.5, color = &quot;gray70&quot;) + geom_boxplot(notch = FALSE, width = 0.8) + stat_summary(fun.y=&quot;mean&quot;, color = &quot;red&quot;, shape = 15)+ expand_limits(y = -1) + scale_y_continuous(breaks = seq(-1, 8, 1)) + theme(legend.position = &quot;none&quot;) + labs(y = &quot;Mittlere Wortlänge (in Silben)&quot;, x = &quot;Roman&quot;) ## Warning: `fun.y` is deprecated. Use `fun` instead. ## Warning: Removed 1406 rows containing non-finite values (stat_boxplot). ## Warning: Removed 1406 rows containing non-finite values (stat_summary). ## Warning: Removed 1406 rows containing missing values (geom_point). ## Warning: Removed 2 rows containing missing values (geom_segment). Boxplot anhand der zusammengefassten Daten (Durchschnitt, Standardabweichung): df = novels_words %&gt;% group_by(title) %&gt;% summarise(Avg_Silben = mean(syllables, na.rm = TRUE), Stdev_Silben = sd(syllables, na.rm = TRUE), Avg_Buchstaben = mean(letters, na.rm = TRUE), Stdev_Buchstaben = sd(letters, na.rm = TRUE)) df %&gt;% ggplot(aes(title, Avg_Silben, fill = title, group = title)) + geom_pointrange(aes(ymin = Avg_Silben - Stdev_Silben, ymax = Avg_Silben + Stdev_Silben), stat=&quot;identity&quot;) + theme(legend.position = &quot;none&quot;) + labs(y = &quot;Mittlere Wortlänge (in Silben)&quot;) df %&gt;% ggplot(aes(title, fill = title, group = title)) + geom_boxplot(aes(lower = Avg_Silben - Stdev_Silben, upper = Avg_Silben + Stdev_Silben, middle = Avg_Silben, ymin = Avg_Silben - 3*Stdev_Silben, ymax = Avg_Silben + 3*Stdev_Silben), stat=&quot;identity&quot;) + theme(legend.position = &quot;none&quot;) + labs(y = &quot;Mittlere Wortlänge (in Silben)&quot;) 15.11 Quanteda-Funktionen Eine alternative Berechnung der Anzahl der Buchstaben pro Wort mit quanteda (ohne t-Test). Die Durchschnittswerte, die uns quanteda liefert, sind etwas höher als die tidyverse-Werte. Aber auch hier ist der Mittelwert für den Prozess höher als für Tom Sawyer. library(quanteda) library(quanteda.textstats) corp = corpus(novels_txt) stats = textstat_summary(corp) stats %&gt;% paged_table() stats %&gt;% group_by(document) %&gt;% transmute(buchstaben = (chars-puncts)/tokens) %&gt;% paged_table() Die Durchschnittswerte unterscheiden sich in den Berechnungen (tidyverse vs. quanteda), was mit der verschiedenen Art der Tokenisierung und der Aussonderung von nicht relevanten Tokens und leeren Datenzeilen (NA) zu tun hat. 15.12 Konsonantenverbindungen Welche Konsonantenverbindungen (Buchstabenverbindungen) kommen häufiger vor in den Texten? Wir zerlegen die Texte im Korpus in kleinere Einheiten (mittels tokens()), aber dieses Mal in alphanumerische Zeichen (Buchstaben). Anschließend wenden wir char_ngrams()-Funktion an, mit der man Verknüpfungen von Zeichen feststellen kann. tok_ch = tokens(corp, what = &quot;character&quot;, remove_punct = TRUE, remove_symbols = T, remove_numbers = T, remove_url = T, remove_separators = T) ngrams_ch = char_ngrams(as.character(tok_ch), n = c(2,3,4), concatenator = &quot;&quot;) Wir wandeln die ngram-Liste in einen Datensatz um (mittels tibble()), was das Zählen mit einer tidyverse-Funktion ermöglicht. ngrams_char = ngrams_ch %&gt;% as_tibble() %&gt;% rename(cluster = value) ngrams_char %&gt;% count(cluster, sort = TRUE) %&gt;% head(10) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 10)) to be continued  15.13 Datensatz-Variante novels_words_char &lt;- novels %&gt;% unnest_tokens(word, text, token = &quot;words&quot;, to_lower = TRUE, drop = T) %&gt;% mutate(Silben = nsyllable::nsyllable(as.character(word), language = &quot;en&quot;)) %&gt;% unnest_tokens(character, word, token = &quot;characters&quot;, to_lower = TRUE, drop = F) %&gt;% mutate(buchstabe = ifelse(str_detect(character, vokale), &quot;Vokal&quot;, &quot;Konsonant&quot;)) head(novels_words_char) %&gt;% head(10) %&gt;% rmarkdown::paged_table() "],["lesbarkeitsindices.html", "Kapitel 16 Lesbarkeitsindices 16.1 Zur theoretischen Begründung 16.2 Programme 16.3 Texte lesen 16.4 Flesch Reading Ease - deutsche Version 16.5 Romane (deutsche oder ins Deutsche übersetzte) 16.6 Zeitungen 16.7 Statistische Tests: News 16.8 Datensätze vereinen 16.9 Zeitungen im Vergleich 16.10 Alle Texte im Vergleich 16.11 Flesch-Kincade Grade Level (USA, GB) 16.12 Wiener Sachtextformel", " Kapitel 16 Lesbarkeitsindices (Reading ease indices) 16.1 Zur theoretischen Begründung Lesbarkeitsformeln sind in der Forschung weitgehend etabliert. Viele, die sich mit Lesbarkeitsformeln befassen, stellen sich dennoch die Frage, wieso man bei Berücksichtigung nur sehr weniger Kriterien Aufschluss über die Lesbarkeit von Texten erhalten kann. Man hat ja doch leicht den Eindruck, dass Wort- und Satzlänge keine besonders triftigen Kriterien sein sollten. Schaut man sich aber an, mit welchen anderen Kriterien diese beiden genannten  und andere  verknüpft sind, kann man erkennen, dass zwar nur zwei Texteigenschaften direkt gemessen werden, damit aber indirekt eine ganze Reihe andere ebenfalls berücksichtigt werden.  https://de.wikipedia.org/wiki/Lesbarkeitsindex 16.2 Programme library(tidyverse) library(tidytext) library(quanteda) library(readtext) library(nsyllable) 16.3 Texte lesen stringsAsFactor = F prozess = read_lines(&quot;novels/book05.txt&quot;) enfants = read_lines(&quot;novels/book12.txt&quot;) romane = readtext(&quot;novels/*.txt&quot;) coronavirus2020 &lt;- readtext(&quot;news/*.json&quot;, text_field = &quot;text&quot;, encoding = &quot;LATIN1&quot;) 16.4 Flesch Reading Ease - deutsche Version knitr::include_graphics( &quot;pictures/Lesbarkeitsindex Flesch Ease deutsch.png&quot;) flres_de = readxl::read_xlsx(&quot;data/Flesch-Reading-Ease-Score-deutsch.xlsx&quot;) flres_de %&gt;% mutate(`Verständlich für` = replace_na(`Verständlich für`,&quot; &quot;)) %&gt;% rmarkdown::paged_table() 16.5 Romane (deutsche oder ins Deutsche übersetzte) lesbarkeitsindex_romane = as_tibble(romane) %&gt;% mutate(sentences = nsentence(text), words = ntoken(text, remove_punct = TRUE), syllables = nsyllable(text), flesch_ease_de = 180 - (words/sentences) - 58.5*(syllables/words)) lesbarkeitsindex_romane %&gt;% select(doc_id, syllables, sentences, words, flesch_ease_de) %&gt;% arrange(flesch_ease_de) %&gt;% rmarkdown::paged_table() # write_excel_csv2(lesbarkeitsindex_romane, &quot;data/lesbarkeitsindex_romane.csv&quot;) lesbarkeitsindex_romane = lesbarkeitsindex_romane %&gt;% mutate(book_name = str_sub(text, 1, 12)) # extract string in position 1-12 # reading score chart ggplot(lesbarkeitsindex_romane, aes(x = syllables/words, y = flesch_ease_de, color = book_name, name = book_name, size = sentences)) + geom_count(alpha = 0.5) + # scale_x_log10() + geom_smooth(se = FALSE, color = &quot;red&quot;, method = &quot;lm&quot;, size = 0.5, linetype = &quot;dashed&quot;) + scale_y_continuous(breaks = c(60,65,70,75,80,85)) + scale_x_continuous(breaks = c(1.3,1.4,1.5,1.6)) + scale_size_area(max_size = 12, guide = FALSE) + theme_minimal(base_size = 14) + labs(color = &quot;Roman&quot;, x = &quot;# Silben pro Wort&quot;, y = &quot;Lesbarkeitsindex&quot;) book &lt;- book[str_sub(book, 1, 12) == review/text:] # extract string in position 1-12 book &lt;- str_sub(book, start = 14) # extract substring starting in position 14 library(plotly) p &lt;- lesbarkeitsindex_romane %&gt;% ggplot(aes(syllables/words, flesch_ease_de, color = book_name, name = book_name, size = sentences)) + geom_count() + geom_smooth(se = FALSE, color = &quot;red&quot;, method = &quot;lm&quot;, size = 0.5, linetype = &quot;dashed&quot;) + scale_y_continuous(breaks = c(60,65,70,75,80,85)) + scale_x_continuous(breaks = c(1.3,1.4,1.5,1.6)) + scale_size_area(max_size = 12, guide = FALSE) + theme_minimal(base_size = 14) + labs(color = &quot;Roman&quot;, x = &quot;# Silben pro Wort&quot;, y = &quot;Lesbarkeitsindex&quot;) ggplotly(p, height = 500) 16.6 Zeitungen lesbarkeitsindex_news = as_tibble(coronavirus2020) %&gt;% mutate(syllables = nsyllable(text), sentences = nsentence(text), words = ntoken(text, remove_punct = TRUE), flesch_ease_de = 180 - (words/sentences) - 58.5*(syllables/words)) lesbarkeitsindex_news %&gt;% select(doc_id, syllables, sentences, words, flesch_ease_de) %&gt;% arrange(flesch_ease_de) %&gt;% rmarkdown::paged_table() # write_excel_csv2(lesbarkeitsindex_news, # &quot;data/lesbarkeitsindex_news_coronavirus_2020.csv&quot;) # reading score chart ggplot(lesbarkeitsindex_news, aes(x = syllables/words, y = flesch_ease_de, color = lubridate::month(date), size = sentences)) + geom_count(alpha = 0.5) + geom_jitter() + # scale_x_log10() + geom_smooth(se = FALSE, color = &quot;red&quot;, method = &quot;lm&quot;, size = 0.5, linetype = &quot;dashed&quot;) + scale_y_continuous(breaks = c(20,30,40,50,60,70,80,90,100)) + scale_x_continuous(limits = c(1,2.5), breaks = c(1.0,1.25,1.5,1.75,2.0,2.25,2.5)) + scale_size_area(max_size = 12, guide = &quot;none&quot;) + theme_minimal(base_size = 14) + labs(color = &quot;month 2020&quot;, x = &quot;# Syllables per word&quot;, y = &quot;Reading level&quot;) lesbarkeitsindex_news = lesbarkeitsindex_news %&gt;% mutate(news_name = str_sub(doc_id, 1, 7)) # reading score chart ggplot(lesbarkeitsindex_news, aes(x = syllables/words, y = flesch_ease_de, color = news_name, name = news_name, size = sentences)) + geom_count(alpha = 0.5) + geom_jitter() + scale_y_continuous(breaks = c(20,30,40,50,60,70,80,90,100)) + scale_x_continuous(limits = c(1,2.5), breaks = c(1,1.5,2.0,2.5)) + facet_wrap(~ news_name) + geom_smooth(se = FALSE, color = 1, method = &quot;lm&quot;, size = 0.5, linetype = &quot;dashed&quot;) + scale_size_area(max_size = 12, guide = &quot;none&quot;) + theme_light(base_size = 14) + labs(color = &quot;Zeitung&quot;, x = &quot;# Silben pro Wort&quot;, y = &quot;Lesbarkeitsindex&quot;) library(plotly) q = lesbarkeitsindex_news %&gt;% ggplot(aes(syllables/words, flesch_ease_de, color = lubridate::month(date), name = news_name, size = sentences)) + geom_point() + facet_wrap(~ news_name) + geom_jitter() + geom_smooth(se = FALSE, color = &quot;black&quot;, method = &quot;lm&quot;, size = 0.5, linetype = &quot;dashed&quot;) + scale_y_continuous(breaks = c(20,30,40,50,60,70,80,90,100)) + scale_x_continuous(limits = c(1,2.5), breaks = c(1,1.5,2.0,2.5)) + scale_size_area(max_size = 12, guide = &quot;none&quot;) + theme_light(base_size = 14) + labs(color = &quot;month 2020&quot;, x = &quot;# Silben pro Wort&quot;, y = &quot;Lesbarkeitsindex&quot;) ggplotly(q, height = 500) 16.7 Statistische Tests: News Können wir statistisch signifikante Unterschiede zwischen den Lesbarkeitsindices nachweisen? Mit dem t-Test können wir immer nur zwei Stichproben miteinander vergleichn. lesbarkeitsindex_news %&gt;% filter(news_name != &quot;welt_co&quot; &amp; news_name != &quot;stern_g&quot; &amp; news_name != &quot;focus_c&quot;) %&gt;% t.test(flesch_ease_de ~ news_name, data = ., paired = F, var.equal = T) ## ## Two Sample t-test ## ## data: flesch_ease_de by news_name ## t = -10.532, df = 4924, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means between group faz_cor and group spiegel is not equal to 0 ## 95 percent confidence interval: ## -3.313378 -2.273477 ## sample estimates: ## mean in group faz_cor mean in group spiegel ## 50.62753 53.42096 lesbarkeitsindex_news %&gt;% filter(news_name != &quot;spiegel&quot; &amp; news_name != &quot;stern_g&quot; &amp; news_name != &quot;focus_c&quot;) %&gt;% t.test(flesch_ease_de ~ news_name, data = ., paired = F, var.equal = T) ## ## Two Sample t-test ## ## data: flesch_ease_de by news_name ## t = -13.358, df = 4215, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means between group faz_cor and group welt_co is not equal to 0 ## 95 percent confidence interval: ## -4.819682 -3.586028 ## sample estimates: ## mean in group faz_cor mean in group welt_co ## 50.62753 54.83038 lesbarkeitsindex_news %&gt;% filter(news_name != &quot;faz_cor&quot; &amp; news_name != &quot;stern_g&quot; &amp; news_name != &quot;focus_c&quot;) %&gt;% t.test(flesch_ease_de ~ news_name, data = ., paired = F, var.equal = T) ## ## Two Sample t-test ## ## data: flesch_ease_de by news_name ## t = -6.1477, df = 5941, p-value = 8.374e-10 ## alternative hypothesis: true difference in means between group spiegel and group welt_co is not equal to 0 ## 95 percent confidence interval: ## -1.8588644 -0.9599905 ## sample estimates: ## mean in group spiegel mean in group welt_co ## 53.42096 54.83038 Eine lineare Regression ermöglicht den Vergleich von mehreren Stichproben und mehreren Variablen (Faktoren, Prädiktoren). lesbarkeitsindex_news %&gt;% lm(flesch_ease_de ~ news_name, data = .) %&gt;% summary() ## ## Call: ## lm(formula = flesch_ease_de ~ news_name, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -68.487 -5.290 -0.583 5.397 53.357 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 50.6275 0.2255 224.481 &lt;2e-16 *** ## news_namefocus_c -0.6147 2.3402 -0.263 0.793 ## news_namespiegel 2.7934 0.2745 10.178 &lt;2e-16 *** ## news_namestern_g 11.2601 0.4856 23.187 &lt;2e-16 *** ## news_namewelt_co 4.2029 0.2863 14.680 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 9.021 on 7993 degrees of freedom ## Multiple R-squared: 0.06919, Adjusted R-squared: 0.06872 ## F-statistic: 148.5 on 4 and 7993 DF, p-value: &lt; 2.2e-16 16.8 Datensätze vereinen lesbarkeitsindex = lesbarkeitsindex_romane %&gt;% mutate(book_name = &quot;romane&quot;) %&gt;% rename(news_name = book_name) %&gt;% bind_rows(lesbarkeitsindex_news[,c(1:2,7:11)]) (les_mean = mean(lesbarkeitsindex$flesch_ease_de)) ## [1] 53.81142 (les_sd = sd(lesbarkeitsindex$flesch_ease_de)) ## [1] 9.375399 (syl_mean = mean(lesbarkeitsindex$syllables/lesbarkeitsindex$words)) ## [1] 1.875349 library(plotly) p &lt;- lesbarkeitsindex %&gt;% ggplot(aes(syllables/words, flesch_ease_de, color = news_name, name = news_name, size = sentences)) + geom_count() + geom_smooth(se = FALSE, color = &quot;red&quot;, method = &quot;lm&quot;, size = 0.5, linetype = &quot;dashed&quot;) + geom_vline(xintercept = syl_mean, lty = 2) + geom_hline(yintercept = les_mean, lty = 2) + geom_hline(yintercept = les_mean + 2*les_sd, lty = 3) + geom_hline(yintercept = les_mean - 2*les_sd, lty = 3) + scale_y_continuous( breaks = c(0,10,20,30,40,50,60,70,80,90,100,110)) + scale_x_continuous( breaks = c(1.0,1.2,1.4,1.6,1.8,2.0,2.2,2.4,2.6)) + scale_size_area(max_size = 12, guide = &quot;none&quot;) + theme_minimal(base_size = 14) + labs(color = &quot;Medium&quot;, x = &quot;# Silben pro Wort&quot;, y = &quot;Lesbarkeitsindex&quot;) ggplotly(p, height = 400) 16.9 Zeitungen im Vergleich # global options # options(contrasts=c(&#39;contr.sum&#39;,&#39;contr.poly&#39;)) lesbarkeitsindex$news_name = as.factor(lesbarkeitsindex$news_name) # set contrast to &quot;contr.sum&quot; contrasts(lesbarkeitsindex$news_name) &lt;- &quot;contr.sum&quot; contrasts(lesbarkeitsindex$news_name) # take a look ## [,1] [,2] [,3] [,4] [,5] ## faz_cor 1 0 0 0 0 ## focus_c 0 1 0 0 0 ## romane 0 0 1 0 0 ## spiegel 0 0 0 1 0 ## stern_g 0 0 0 0 1 ## welt_co -1 -1 -1 -1 -1 lesbarkeitsindex %&gt;% lm(flesch_ease_de ~ news_name, data = .) %&gt;% summary() ## ## Call: ## lm(formula = flesch_ease_de ~ news_name, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -68.487 -5.290 -0.581 5.397 53.357 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 57.2894 0.5892 97.241 &lt; 2e-16 *** ## news_name1 -6.6618 0.6173 -10.793 &lt; 2e-16 *** ## news_name2 -7.2765 1.9908 -3.655 0.000259 *** ## news_name3 15.6675 2.2062 7.102 1.34e-12 *** ## news_name4 -3.8684 0.6028 -6.417 1.47e-10 *** ## news_name5 4.5982 0.6858 6.705 2.16e-11 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 9.02 on 8004 degrees of freedom ## Multiple R-squared: 0.07494, Adjusted R-squared: 0.07436 ## F-statistic: 129.7 on 5 and 8004 DF, p-value: &lt; 2.2e-16 lesbarkeitsindex %&gt;% lm(flesch_ease_de ~ news_name, data = .) %&gt;% tidy() %&gt;% # filter(term != &quot;(Intercept)&quot;) %&gt;% mutate(term = str_replace(term, &quot;news_name&quot;, &quot;&quot;)) %&gt;% arrange(estimate) ## # A tibble: 6 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2 -7.28 1.99 -3.66 2.59e- 4 ## 2 1 -6.66 0.617 -10.8 5.71e-27 ## 3 4 -3.87 0.603 -6.42 1.47e-10 ## 4 5 4.60 0.686 6.70 2.16e-11 ## 5 3 15.7 2.21 7.10 1.34e-12 ## 6 (Intercept) 57.3 0.589 97.2 0 # global default option # options(contrasts=c(&#39;contr.treatment&#39;,&#39;contr.poly&#39;)) # set contrast back to default (&quot;contr.treatment&quot;) contrasts(lesbarkeitsindex$news_name) &lt;- NULL contrasts(lesbarkeitsindex$news_name) # take a look ## focus_c romane spiegel stern_g welt_co ## faz_cor 0 0 0 0 0 ## focus_c 1 0 0 0 0 ## romane 0 1 0 0 0 ## spiegel 0 0 1 0 0 ## stern_g 0 0 0 1 0 ## welt_co 0 0 0 0 1 lesbarkeitsindex %&gt;% lm(flesch_ease_de ~ news_name, data = .) %&gt;% summary() ## ## Call: ## lm(formula = flesch_ease_de ~ news_name, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -68.487 -5.290 -0.581 5.397 53.357 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 50.6275 0.2255 224.511 &lt;2e-16 *** ## news_namefocus_c -0.6147 2.3399 -0.263 0.793 ## news_nameromane 22.3293 2.6136 8.543 &lt;2e-16 *** ## news_namespiegel 2.7934 0.2744 10.179 &lt;2e-16 *** ## news_namestern_g 11.2601 0.4856 23.190 &lt;2e-16 *** ## news_namewelt_co 4.2029 0.2863 14.682 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 9.02 on 8004 degrees of freedom ## Multiple R-squared: 0.07494, Adjusted R-squared: 0.07436 ## F-statistic: 129.7 on 5 and 8004 DF, p-value: &lt; 2.2e-16 lesbarkeitsindex %&gt;% lm(flesch_ease_de ~ news_name, data = .) %&gt;% tidy() %&gt;% # filter(term != &quot;(Intercept)&quot;) %&gt;% mutate(term = str_replace(term, &quot;news_name&quot;, &quot;&quot;), term = str_replace(term, &quot;(Intercept)&quot;, &quot;faz_cor&quot;)) %&gt;% arrange(estimate) ## # A tibble: 6 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 focus_c -0.615 2.34 -0.263 7.93e- 1 ## 2 spiegel 2.79 0.274 10.2 3.46e- 24 ## 3 welt_co 4.20 0.286 14.7 3.53e- 48 ## 4 stern_g 11.3 0.486 23.2 3.37e-115 ## 5 romane 22.3 2.61 8.54 1.54e- 17 ## 6 (faz_cor) 50.6 0.226 225. 0 library(effects) lesbarkeitsindex %&gt;% lm(flesch_ease_de ~ news_name, data = .) -&gt; mymodel plot(allEffects(mymodel)) 16.10 Alle Texte im Vergleich Die ausgewählten zwölf Romane haben einen deutlich höheren Lesbarkeitsindex als die Zeitungstexte. Woran liegt das: an der Wortlänge, der Silbenanzahl oder an der Satzlänge? lesbarkeitsindex %&gt;% mutate(wordnum_utterance = (words/sentences), sylnum_utterance = (syllables/sentences)) %&gt;% lm(flesch_ease_de ~ news_name*wordnum_utterance + news_name*sylnum_utterance, data = .) %&gt;% tidy() %&gt;% mutate(term = str_replace(term, &quot;news_name&quot;, &quot;&quot;)) %&gt;% arrange(-estimate) ## # A tibble: 18 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 68.7 0.210 327. 0 ## 2 romane 23.7 2.45 9.67 5.18e-22 ## 3 stern_g 10.2 0.539 18.9 4.70e-78 ## 4 wordnum_utterance 5.49 0.0420 131. 0 ## 5 welt_co 4.29 0.250 17.1 1.46e-64 ## 6 spiegel 1.99 0.284 7.02 2.48e-12 ## 7 romane:sylnum_utterance 0.558 0.409 1.37 1.72e- 1 ## 8 focus_c:wordnum_utterance 0.389 0.918 0.424 6.72e- 1 ## 9 spiegel:wordnum_utterance 0.211 0.0561 3.76 1.71e- 4 ## 10 welt_co:sylnum_utterance -0.0184 0.0253 -0.728 4.67e- 1 ## 11 focus_c:sylnum_utterance -0.131 0.395 -0.333 7.39e- 1 ## 12 spiegel:sylnum_utterance -0.182 0.0261 -6.98 3.20e-12 ## 13 stern_g:sylnum_utterance -0.219 0.0563 -3.90 9.88e- 5 ## 14 stern_g:wordnum_utterance -0.220 0.114 -1.92 5.44e- 2 ## 15 welt_co:wordnum_utterance -0.227 0.0531 -4.28 1.88e- 5 ## 16 romane:wordnum_utterance -2.22 0.668 -3.33 8.75e- 4 ## 17 focus_c -2.45 4.03 -0.607 5.44e- 1 ## 18 sylnum_utterance -3.39 0.0195 -174. 0 Nur statistisch signifikante Interaktionen: lesbarkeitsindex %&gt;% mutate(wordnum_utterance = (words/sentences), sylnum_utterance = (syllables/sentences)) %&gt;% lm(flesch_ease_de ~ news_name*wordnum_utterance + news_name*sylnum_utterance, data = .) %&gt;% tidy() %&gt;% mutate(term = str_replace(term, &quot;news_name&quot;, &quot;&quot;)) %&gt;% mutate(pval = case_when( p.value &lt; 0.05 ~ &quot;significant&quot;, TRUE ~ &quot;---&quot;)) %&gt;% mutate(pval = ifelse(term == &quot;(Intercept)&quot;, &quot;xxx&quot;, pval)) %&gt;% filter(pval == &quot;significant&quot; | pval == &quot;xxx&quot;) %&gt;% filter(str_detect(term, &quot;:&quot;)) %&gt;% arrange(-estimate) ## # A tibble: 5 x 6 ## term estimate std.error statistic p.value pval ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 spiegel:wordnum_utterance 0.211 0.0561 3.76 1.71e- 4 significant ## 2 spiegel:sylnum_utterance -0.182 0.0261 -6.98 3.20e-12 significant ## 3 stern_g:sylnum_utterance -0.219 0.0563 -3.90 9.88e- 5 significant ## 4 welt_co:wordnum_utterance -0.227 0.0531 -4.28 1.88e- 5 significant ## 5 romane:wordnum_utterance -2.22 0.668 -3.33 8.75e- 4 significant In den Romanen sind die Wörter im Durchschnitt kürzer als in den Zeitungstexten (Spiegel ). Tidy-Version: lesbarkeitsindex %&gt;% group_by(news_name) %&gt;% summarise(syl_per_wrd = mean(syllables/words), sd_syl_per_wrd = sd(syllables/words)) ## # A tibble: 6 x 3 ## news_name syl_per_wrd sd_syl_per_wrd ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 faz_cor 1.91 0.143 ## 2 focus_c 1.93 0.0888 ## 3 romane 1.47 0.0719 ## 4 spiegel 1.89 0.116 ## 5 stern_g 1.75 0.109 ## 6 welt_co 1.86 0.135 Die Anzahl der Silben pro Äußerung in den Romanen ist vergleichbar mit der in Zeitungstexten (z.B. Spiegel). lesbarkeitsindex %&gt;% group_by(news_name) %&gt;% summarise(syl_per_utt = mean(syllables/sentences), sd_syl_per_utt = sd(syllables/sentences)) ## # A tibble: 6 x 3 ## news_name syl_per_utt sd_syl_per_utt ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 faz_cor 33.8 8.61 ## 2 focus_c 33.3 5.88 ## 3 romane 31.0 8.88 ## 4 spiegel 30.6 5.91 ## 5 stern_g 27.9 5.89 ## 6 welt_co 30.4 8.74 Die Romane haben durchschnittlich mehr Wörter pro Äußerung. lesbarkeitsindex %&gt;% group_by(news_name) %&gt;% summarise(wrds_per_utt = mean(words/sentences), sd_wrds_per_utt = sd(words/sentences)) ## # A tibble: 6 x 3 ## news_name wrds_per_utt sd_wrds_per_utt ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 faz_cor 17.6 3.99 ## 2 focus_c 17.2 2.53 ## 3 romane 20.9 5.43 ## 4 spiegel 16.2 2.75 ## 5 stern_g 15.9 2.93 ## 6 welt_co 16.2 4.37 lesbarkeit = lesbarkeitsindex %&gt;% mutate(functiontype = case_when( news_name == &quot;romane&quot; ~ &quot;literatur&quot;, news_name != &quot;romane&quot; ~ &quot;zeitung&quot;, TRUE ~ &quot;other&quot; )) %&gt;% mutate(syl_per_wrd = (syllables/words), wordnum_utterance = (words/sentences), sylnum_utterance = (syllables/sentences)) lesbarkeit %&gt;% slice_sample(n = 30) %&gt;% select(-text) %&gt;% rmarkdown::paged_table() Die Romane haben kürzere Wörter als die Zeitungstexte (d.h. weniger Silben). # set contrast back to default (&quot;contr.treatment&quot;) contrasts(lesbarkeitsindex$news_name) &lt;- NULL levels(lesbarkeitsindex$news_name) ## [1] &quot;faz_cor&quot; &quot;focus_c&quot; &quot;romane&quot; &quot;spiegel&quot; &quot;stern_g&quot; &quot;welt_co&quot; contrasts(lesbarkeitsindex$news_name) &lt;- contr.treatment(6, base = 3) # base = romane ! contrasts(lesbarkeitsindex$news_name) # take a look ## 1 2 4 5 6 ## faz_cor 1 0 0 0 0 ## focus_c 0 1 0 0 0 ## romane 0 0 0 0 0 ## spiegel 0 0 1 0 0 ## stern_g 0 0 0 1 0 ## welt_co 0 0 0 0 1 lesbarkeit %&gt;% lm(syl_per_wrd ~ news_name, data = .) %&gt;% summary() ## ## Call: ## lm(formula = syl_per_wrd ~ news_name, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.73696 -0.07736 0.00306 0.07656 0.56661 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.910836 0.003187 599.592 &lt; 2e-16 *** ## news_namefocus_c 0.016906 0.033068 0.511 0.609 ## news_nameromane -0.438972 0.036937 -11.884 &lt; 2e-16 *** ## news_namespiegel -0.023832 0.003878 -6.145 8.39e-10 *** ## news_namestern_g -0.163793 0.006862 -23.869 &lt; 2e-16 *** ## news_namewelt_co -0.048874 0.004045 -12.081 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.1275 on 8004 degrees of freedom ## Multiple R-squared: 0.08559, Adjusted R-squared: 0.08502 ## F-statistic: 149.8 on 5 and 8004 DF, p-value: &lt; 2.2e-16 Die Romane haben durchschnittlich mehr Wörter pro Äußerung. contrasts(lesbarkeitsindex$news_name) &lt;- NULL levels(lesbarkeitsindex$news_name) ## [1] &quot;faz_cor&quot; &quot;focus_c&quot; &quot;romane&quot; &quot;spiegel&quot; &quot;stern_g&quot; &quot;welt_co&quot; contrasts(lesbarkeitsindex$news_name) &lt;- contr.treatment(6, base = 3) # base = romane ! contrasts(lesbarkeitsindex$news_name) # take a look ## 1 2 4 5 6 ## faz_cor 1 0 0 0 0 ## focus_c 0 1 0 0 0 ## romane 0 0 0 0 0 ## spiegel 0 0 1 0 0 ## stern_g 0 0 0 1 0 ## welt_co 0 0 0 0 1 lesbarkeit %&gt;% lm(wordnum_utterance ~ news_name, data = .) %&gt;% summary() ## ## Call: ## lm(formula = wordnum_utterance ~ news_name, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -10.245 -2.098 -0.345 1.811 66.755 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 17.58859 0.09039 194.575 &lt; 2e-16 *** ## news_namefocus_c -0.37430 0.93796 -0.399 0.68986 ## news_nameromane 3.35050 1.04770 3.198 0.00139 ** ## news_namespiegel -1.39927 0.11001 -12.720 &lt; 2e-16 *** ## news_namestern_g -1.67816 0.19464 -8.622 &lt; 2e-16 *** ## news_namewelt_co -1.34374 0.11475 -11.710 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.616 on 8004 degrees of freedom ## Multiple R-squared: 0.02589, Adjusted R-squared: 0.02528 ## F-statistic: 42.55 on 5 and 8004 DF, p-value: &lt; 2.2e-16 Noch deutlicher sichtbar in der Gegenüberstellung (Literatur vs. Zeitung): lesbarkeit %&gt;% lm(wordnum_utterance ~ functiontype, data = .) %&gt;% summary() ## ## Call: ## lm(formula = wordnum_utterance ~ functiontype, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -10.474 -2.239 -0.258 1.602 66.526 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 20.939 1.056 19.826 &lt; 2e-16 *** ## functiontypezeitung -4.465 1.057 -4.225 2.42e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.659 on 8008 degrees of freedom ## Multiple R-squared: 0.002224, Adjusted R-squared: 0.002099 ## F-statistic: 17.85 on 1 and 8008 DF, p-value: 2.42e-05 Längere Wörter (mehr Silben pro Wort) in Zeitungen als in Romanen. lesbarkeit %&gt;% lm(syl_per_wrd ~ functiontype, data = .) %&gt;% summary() ## ## Call: ## lm(formula = syl_per_wrd ~ functiontype, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.75095 -0.08350 0.00680 0.08442 0.55262 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.47186 0.03821 38.52 &lt;2e-16 *** ## functiontypezeitung 0.40409 0.03824 10.57 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.1324 on 8008 degrees of freedom ## Multiple R-squared: 0.01376, Adjusted R-squared: 0.01363 ## F-statistic: 111.7 on 1 and 8008 DF, p-value: &lt; 2.2e-16 Aber die Anzahl der Silben pro Äußerung in den Romanen und Zeitungstexten unterscheidet sich nicht wesentlich (p = 0,979). lesbarkeit %&gt;% lm(sylnum_utterance ~ functiontype, data = .) %&gt;% summary() ## ## Call: ## lm(formula = sylnum_utterance ~ functiontype, data = .) ## ## Residuals: ## Min 1Q Median 3Q Max ## -24.274 -4.649 -0.522 3.946 125.976 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 30.96610 2.20905 14.018 &lt;2e-16 *** ## functiontypezeitung 0.05815 2.21071 0.026 0.979 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 7.652 on 8008 degrees of freedom ## Multiple R-squared: 8.64e-08, Adjusted R-squared: -0.0001248 ## F-statistic: 0.0006919 on 1 and 8008 DF, p-value: 0.979 16.11 Flesch-Kincade Grade Level (USA, GB) https://paldhous.github.io/NICAR/2019/r-text-analysis.html The code below uses the quanteda functions ntoken, nsentence and nsyllable to count the words, sentences, and syllables in each addresss. Then it uses those values to calculate the Flesch-Kincaid reading grade level, a widely used measure of linguistic complexity. sou = read_csv(&quot;data/sou.csv&quot;) # word, sentence, and syllable counts, plus reading scores sou = sou %&gt;% mutate(syllables = nsyllable(text), sentences = nsentence(text), words = ntoken(text, remove_punct = TRUE), fk_grade = 0.39*(words/sentences) + 11.8*(syllables/words) - 15.59) %&gt;% arrange(date) The following chart shows how the reading grade level of State of the Union addresses has declined over the years. The points on the chart are colored by party, and scaled by the length of the address in words. # color palette for parties party_pal &lt;- c(&quot;#1482EE&quot;,&quot;#228B22&quot;,&quot;#E9967A&quot;,&quot;#686868&quot;,&quot;#FF3300&quot;,&quot;#EEC900&quot;) # reading score chart ggplot(sou, aes(x = date, y = fk_grade, color = party, size = words)) + geom_point(alpha = 0.5) + geom_smooth(se = FALSE, color = &quot;black&quot;, method = &quot;lm&quot;, size = 0.5, linetype = &quot;dotted&quot;) + scale_size_area(max_size = 10, guide = &quot;none&quot;) + scale_color_manual(values = party_pal, name = &quot;&quot;, breaks = c(&quot;Democratic&quot;,&quot;Republican&quot;,&quot;Whig&quot;,&quot;Democratic-Republican&quot;,&quot;Federalist&quot;,&quot;None&quot;)) + scale_y_continuous(limits = c(4,27), breaks = c(5,10,15,20,25)) + theme_minimal(base_size = 18) + xlab(&quot;&quot;) + ylab(&quot;Reading level&quot;) + guides(col = guide_legend(ncol = 2, override.aes = list(size = 4))) + theme(legend.position = c(0.4,0.22), legend.text = element_text(color=&quot;#909090&quot;, size = 16), panel.grid.minor = element_blank()) library(plotly) # color palette for parties party_pal &lt;- c(&quot;#1482EE&quot;,&quot;#228B22&quot;,&quot;#E9967A&quot;,&quot;#686868&quot;,&quot;#FF3300&quot;,&quot;#EEC900&quot;) # reading score chart u &lt;- ggplot(sou, aes(x = date, y = fk_grade, color = party, size = words)) + geom_point(alpha = 0.5) + geom_smooth(se = FALSE, color = &quot;black&quot;, method = &quot;lm&quot;, size = 0.5, linetype = &quot;dotted&quot;) + scale_size_area(max_size = 10, guide = &quot;none&quot;) + scale_color_manual(values = party_pal, name = &quot;&quot;, breaks = c(&quot;Democratic&quot;,&quot;Republican&quot;,&quot;Whig&quot;,&quot;Democratic-Republican&quot;,&quot;Federalist&quot;,&quot;None&quot;)) + scale_y_continuous(limits = c(4,27), breaks = c(5,10,15,20,25)) + theme_minimal(base_size = 18) + xlab(&quot;&quot;) + ylab(&quot;Reading level&quot;) + guides(col = guide_legend(ncol = 2, override.aes = list(size = 4))) + theme(legend.position = c(0.4,0.22), legend.text = element_text(color=&quot;#909090&quot;, size = 16), panel.grid.minor = element_blank()) ggplotly(u, height = 500, width = 1000) 16.12 Wiener Sachtextformel https://de.wikipedia.org/wiki/Lesbarkeitsindex Die Wiener Sachtextformel dient zur Berechnung der Lesbarkeit deutschsprachiger Texte. Sie gibt an, für welche Schulstufe ein Sachtext geeignet ist. Die Skala beginnt bei Schulstufe 4 und endet bei 15, wobei ab der Stufe 12 eher von Schwierigkeitsstufen als von Schulstufen gesprochen werden sollte. Ein Wert von 4 steht demnach für sehr leichten Text, dagegen bezeichnet 15 einen sehr schwierigen Text. Die Formel wurde aufgestellt von Richard Bamberger und Erich Vanecek. MS ist der Prozentanteil der Wörter mit drei oder mehr Silben, SL ist die mittlere Satzlänge (Anzahl Wörter), IW ist der Prozentanteil der Wörter mit mehr als sechs Buchstaben, ES ist der Prozentanteil der einsilbigen Wörter. Die erste Wiener Sachtextformel WSTF1 = 0.1935 * MS + 0.1672 * SL + 0.1297 * IW - 0.0327 * ES - 0.875 Die zweite Wiener Sachtextformel WSTF2 = 0.2007 * MS + 0.1682 * SL + 0.1373 * IW - 2.7 Die dritte Wiener Sachtextformel WSTF3 = 0.2963 * MS + 0.1905 * SL - 1.114 Die vierte Wiener Sachtextformel (im Hinblick auf die Jahrgangsstufe) WSTF4 = 0.2744 * MS + 0.2656 * SL - 1.69 # Das Beispiel mit den Entchen liefert mit der ersten WSTF einen Index von 3.8: satz=&quot;Alle meine Entchen schwimmen auf dem See, Köpfchen unters Wasser, Schwänzchen in die Höh.&quot; WSTF1 = 0.1935 * 0 + 0.1672 * 14 + 0.1297 * 29 - 0.0327 * 43 - 0.875 In unserem Korpus: lesbarkeitsindex %&gt;% filter(news_name == &quot;faz_cor&quot;) %&gt;% add_count(news_name) %&gt;% unnest_tokens(word, text) %&gt;% mutate(ms = ifelse(nsyllable(word) &gt; 2, 1, 0), # Wort mit mehr als 2 Silben iw = ifelse(nchar(word) &gt; 5, 1, 0), # Wort mit mehr als 5 Buchstaben es = ifelse(nsyllable(word) &lt; 2, 1, 0)) %&gt;% # Wort mit einer Silbe drop_na() %&gt;% group_by(news_name) %&gt;% summarise(MS = sum(100*ms/(words*n)), # MS: Prozentanteil der Wörter mit 3 oder mehr Silben SL = mean(words/sentences), # SL: mittlere Satzlänge (Anzahl Wörter) IW = sum(100*iw/(words*n)), # IW: Prozentanteil der Wörter mit mehr als 6 Buchstaben ES = sum(100*es/(words*n))) %&gt;% # ES: Prozentanteil der einsilbigen Wörter mutate(WSTF1 = 0.1935 * MS + 0.1672 * SL + 0.1297 * IW - 0.0327 * ES - 0.875, WSTF2 = 0.2007 * MS + 0.1682 * SL + 0.1373 * IW - 2.7, WSTF3 = 0.2963 * MS + 0.1905 * SL - 1.114, WSTF4 = 0.2744 * MS + 0.2656 * SL - 1.69) ## # A tibble: 1 x 9 ## news_name MS SL IW ES WSTF1 WSTF2 WSTF3 WSTF4 ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 faz_cor 25.4 17.8 43.8 47.1 11.1 11.4 9.80 10.0 lesbarkeitsindex %&gt;% filter(news_name == &quot;spiegel&quot;) %&gt;% add_count(news_name) %&gt;% unnest_tokens(word, text) %&gt;% mutate(ms = ifelse(nsyllable(word) &gt; 2, 1, 0), # Wort mit mehr als 2 Silben iw = ifelse(nchar(word) &gt; 5, 1, 0), # Wort mit mehr als 5 Buchstaben es = ifelse(nsyllable(word) &lt; 2, 1, 0)) %&gt;% # Wort mit einer Silbe drop_na() %&gt;% group_by(news_name) %&gt;% summarise(MS = sum(100*ms/(words*n)), # MS: Prozentanteil der Wörter mit 3 oder mehr Silben SL = mean(words/sentences), # SL: mittlere Satzlänge (Anzahl Wörter) IW = sum(100*iw/(words*n)), # IW: Prozentanteil der Wörter mit mehr als 6 Buchstaben ES = sum(100*es/(words*n))) %&gt;% # ES: Prozentanteil der einsilbigen Wörter mutate(WSTF1 = 0.1935 * MS + 0.1672 * SL + 0.1297 * IW - 0.0327 * ES - 0.875, WSTF2 = 0.2007 * MS + 0.1682 * SL + 0.1373 * IW - 2.7, WSTF3 = 0.2963 * MS + 0.1905 * SL - 1.114, WSTF4 = 0.2744 * MS + 0.2656 * SL - 1.69) ## # A tibble: 1 x 9 ## news_name MS SL IW ES WSTF1 WSTF2 WSTF3 WSTF4 ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 spiegel 24.8 16.3 44.2 47.3 10.8 11.1 9.33 9.43 lesbarkeitsindex %&gt;% filter(news_name == &quot;welt_co&quot;) %&gt;% add_count(news_name) %&gt;% unnest_tokens(word, text) %&gt;% mutate(ms = ifelse(nsyllable(word) &gt; 2, 1, 0), # Wort mit mehr als 2 Silben iw = ifelse(nchar(word) &gt; 5, 1, 0), # Wort mit mehr als 5 Buchstaben es = ifelse(nsyllable(word) &lt; 2, 1, 0)) %&gt;% # Wort mit einer Silbe drop_na() %&gt;% group_by(news_name) %&gt;% summarise(MS = sum(100*ms/(words*n)), # MS: Prozentanteil der Wörter mit 3 oder mehr Silben SL = mean(words/sentences), # SL: mittlere Satzlänge (Anzahl Wörter) IW = sum(100*iw/(words*n)), # IW: Prozentanteil der Wörter mit mehr als 6 Buchstaben ES = sum(100*es/(words*n))) %&gt;% # ES: Prozentanteil der einsilbigen Wörter mutate(WSTF1 = 0.1935 * MS + 0.1672 * SL + 0.1297 * IW - 0.0327 * ES - 0.875, WSTF2 = 0.2007 * MS + 0.1682 * SL + 0.1373 * IW - 2.7, WSTF3 = 0.2963 * MS + 0.1905 * SL - 1.114, WSTF4 = 0.2744 * MS + 0.2656 * SL - 1.69) ## # A tibble: 1 x 9 ## news_name MS SL IW ES WSTF1 WSTF2 WSTF3 WSTF4 ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 welt_co 24.0 16.4 43.1 48.6 10.5 10.8 9.11 9.24 lesbarkeitsindex %&gt;% filter(news_name == &quot;stern_g&quot;) %&gt;% add_count(news_name) %&gt;% unnest_tokens(word, text) %&gt;% mutate(ms = ifelse(nsyllable(word) &gt; 2, 1, 0), # Wort mit mehr als 2 Silben iw = ifelse(nchar(word) &gt; 5, 1, 0), # Wort mit mehr als 5 Buchstaben es = ifelse(nsyllable(word) &lt; 2, 1, 0)) %&gt;% # Wort mit einer Silbe drop_na() %&gt;% group_by(news_name) %&gt;% summarise(MS = sum(100*ms/(words*n)), # MS: Prozentanteil der Wörter mit 3 oder mehr Silben SL = mean(words/sentences), # SL: mittlere Satzlänge (Anzahl Wörter) IW = sum(100*iw/(words*n)), # IW: Prozentanteil der Wörter mit mehr als 6 Buchstaben ES = sum(100*es/(words*n))) %&gt;% # ES: Prozentanteil der einsilbigen Wörter mutate(WSTF1 = 0.1935 * MS + 0.1672 * SL + 0.1297 * IW - 0.0327 * ES - 0.875, WSTF2 = 0.2007 * MS + 0.1682 * SL + 0.1373 * IW - 2.7, WSTF3 = 0.2963 * MS + 0.1905 * SL - 1.114, WSTF4 = 0.2744 * MS + 0.2656 * SL - 1.69) ## # A tibble: 1 x 9 ## news_name MS SL IW ES WSTF1 WSTF2 WSTF3 WSTF4 ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 stern_g 20.3 16.0 39.8 49.1 9.28 9.53 7.95 8.13 lesbarkeitsindex %&gt;% filter(news_name == &quot;focus_c&quot;) %&gt;% add_count(news_name) %&gt;% unnest_tokens(word, text) %&gt;% mutate(ms = ifelse(nsyllable(word) &gt; 2, 1, 0), # Wort mit mehr als 2 Silben iw = ifelse(nchar(word) &gt; 5, 1, 0), # Wort mit mehr als 5 Buchstaben es = ifelse(nsyllable(word) &lt; 2, 1, 0)) %&gt;% # Wort mit einer Silbe drop_na() %&gt;% group_by(news_name) %&gt;% summarise(MS = sum(100*ms/(words*n)), # MS: Prozentanteil der Wörter mit 3 oder mehr Silben SL = mean(words/sentences), # SL: mittlere Satzlänge (Anzahl Wörter) IW = sum(100*iw/(words*n)), # IW: Prozentanteil der Wörter mit mehr als 6 Buchstaben ES = sum(100*es/(words*n))) %&gt;% # ES: Prozentanteil der einsilbigen Wörter mutate(WSTF1 = 0.1935 * MS + 0.1672 * SL + 0.1297 * IW - 0.0327 * ES - 0.875, WSTF2 = 0.2007 * MS + 0.1682 * SL + 0.1373 * IW - 2.7, WSTF3 = 0.2963 * MS + 0.1905 * SL - 1.114, WSTF4 = 0.2744 * MS + 0.2656 * SL - 1.69) ## # A tibble: 1 x 9 ## news_name MS SL IW ES WSTF1 WSTF2 WSTF3 WSTF4 ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 focus_c 26.2 16.9 45.2 46.0 11.4 11.6 9.86 9.98 lesbarkeitsindex %&gt;% filter(news_name == &quot;romane&quot;) %&gt;% add_count(news_name) %&gt;% unnest_tokens(word, text) %&gt;% mutate(ms = ifelse(nsyllable(word) &gt; 2, 1, 0), # Wort mit mehr als 2 Silben iw = ifelse(nchar(word) &gt; 5, 1, 0), # Wort mit mehr als 5 Buchstaben es = ifelse(nsyllable(word) &lt; 2, 1, 0)) %&gt;% # Wort mit einer Silbe drop_na() %&gt;% group_by(news_name) %&gt;% summarise(MS = sum(100*ms/(words*n)), # MS: Prozentanteil der Wörter mit 3 oder mehr Silben SL = mean(words/sentences), # SL: mittlere Satzlänge (Anzahl Wörter) IW = sum(100*iw/(words*n)), # IW: Prozentanteil der Wörter mit mehr als 6 Buchstaben ES = sum(100*es/(words*n))) %&gt;% # ES: Prozentanteil der einsilbigen Wörter mutate(WSTF1 = 0.1935 * MS + 0.1672 * SL + 0.1297 * IW - 0.0327 * ES - 0.875, WSTF2 = 0.2007 * MS + 0.1682 * SL + 0.1373 * IW - 2.7, WSTF3 = 0.2963 * MS + 0.1905 * SL - 1.114, WSTF4 = 0.2744 * MS + 0.2656 * SL - 1.69) ## # A tibble: 1 x 9 ## news_name MS SL IW ES WSTF1 WSTF2 WSTF3 WSTF4 ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 romane 13.3 19.0 31.1 51.9 7.21 7.44 6.45 7.01 wstf1_idx = lesbarkeitsindex_romane %&gt;% unnest_tokens(word, text) %&gt;% mutate(ms = ifelse(nsyllable(word) &gt; 2, 1, 0), iw = ifelse(nchar(word) &gt; 5, 1, 0), es = ifelse(nsyllable(word) &lt; 2, 1, 0)) %&gt;% drop_na() %&gt;% group_by(book_name) %&gt;% summarise(MS = sum(100*ms/words), SL = mean(words/sentences), IW = sum(100*iw/words), ES = sum(100*es/words)) wstf1_idx %&gt;% rmarkdown::paged_table() lesbarkeitsindex_romane %&gt;% # filter(str_detect(book_name, &quot;Der Prozess&quot;)) %&gt;% unnest_tokens(word, text) %&gt;% mutate(ms = ifelse(nsyllable(word) &gt; 2, 1, 0), iw = ifelse(nchar(word) &gt; 5, 1, 0), es = ifelse(nsyllable(word) &lt; 2, 1, 0)) %&gt;% drop_na() %&gt;% group_by(book_name) %&gt;% summarise(MS = sum(100*ms/words), SL = mean(words/sentences), IW = sum(100*iw/words), ES = sum(100*es/words)) %&gt;% mutate(WSTF1 = 0.1935 * MS + 0.1672 * SL + 0.1297 * IW - 0.0327 * ES - 0.875, WSTF2 = 0.2007 * MS + 0.1682 * SL + 0.1373 * IW - 2.7, WSTF3 = 0.2963 * MS + 0.1905 * SL - 1.114, WSTF4 = 0.2744 * MS + 0.2656 * SL - 1.69) %&gt;% rmarkdown::paged_table() "],["untertitel.html", "Kapitel 17 Untertitel 17.1 Programme starten 17.2 Daten laden 17.3 Datensätze vorbereiten 17.4 Morphologie der Untertitel 17.5 Syntax: Dependenz", " Kapitel 17 Untertitel 17.1 Programme starten library(tidyverse) library(tidytext) library(scales) library(udpipe) stringsAsFactors = FALSE 17.2 Daten laden Die englischen und deutschen Untertitel zum Film Avatar stammen aus der Datensammlung von Natalia Levshina (Levshina 2015), die slowenischen Untertitel stammen von der Webseite nachschauen. Zuerst laden wir sechs Dateien mit Untertiteln zum Film Avatar. Hauptsächlich werden wir mit den Untertiteln in englischer, deutscher und slowenischer Sprache arbeiten. library(tidyverse) avatar_eng = read_lines(&quot;data/sub/Avatar_eng.txt&quot;) avatar_deu = read_lines(&quot;data/sub/Avatar_deu.txt&quot;) avatar_slv = read_lines(&quot;data/sub/Avatar_slv.txt&quot;) avatar_fra = read_lines(&quot;data/sub/Avatar_fra.txt&quot;) avatar_ita = read_lines(&quot;data/sub/Avatar_ita.txt&quot;) avatar_tur = read_lines(&quot;data/sub/Avatar_tur.txt&quot;) head(avatar_eng); head(avatar_deu); head(avatar_slv) ## [1] &quot;1&quot; ## [2] &quot;00:00:39,799 --&gt; 00:00:42,039&quot; ## [3] &quot;When I was lying there in the VA hospital,&quot; ## [4] &quot;&quot; ## [5] &quot;2&quot; ## [6] &quot;00:00:42,176 --&gt; 00:00:45,136&quot; ## [1] &quot;1&quot; ## [2] &quot;00:00:39,798 --&gt; 00:00:42,091&quot; ## [3] &quot;Als ich da im Veteranen-Krankenhaus lag,&quot; ## [4] &quot;&quot; ## [5] &quot;2&quot; ## [6] &quot;00:00:42,176 --&gt; 00:00:45,136&quot; ## [1] &quot;&quot; ## [2] &quot;1&quot; ## [3] &quot;00:00:38,160 --&gt; 00:00:40,720&quot; ## [4] &quot;&lt;i&gt;Ko sem leal v veteranski bolninici&lt;/i&gt;&quot; ## [5] &quot;&quot; ## [6] &quot;2&quot; 17.3 Datensätze vorbereiten 17.3.1 Textspalte vorbereiten Untertitel haben ein besonderes Format. Recht einfach sind Datenmodifizierungen mit den tidyverse-Funktionen. Die Voraussetzung für ihre Verwendung ist die Umwandlung der Texte ins Tabellenformat. Dann können wir z.B. auch neue Tabellenspalten mit den Zeitangaben bilden. a1 = avatar_eng %&gt;% as_tibble() %&gt;% mutate(row_tc = row_number()) %&gt;% filter(str_detect(value, &quot;--&gt;&quot;)) %&gt;% rename(timecode = value) a2 = avatar_eng %&gt;% as_tibble() %&gt;% mutate(row_id = row_number()) %&gt;% filter(str_detect(value, &quot;[a-zA-Z]&quot;)) %&gt;% rename(text = value) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;/i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(language = &quot;eng&quot;) avatar_eng = bind_cols(a1,a2) %&gt;% select(timecode, text) %&gt;% separate(timecode, into = c(&quot;start&quot;, &quot;end&quot;), sep = &quot;\\\\-\\\\-\\\\&gt;&quot;) %&gt;% rmarkdown::paged_table() a2a = a2 %&gt;% mutate(sentence_id = row_number()) Da die Anfangs- und Endzeit der Untertitel in den drei Sprachen nicht übereinstimmt, wollen wir lediglich die Untertiteltexte beibehalten. b1 = avatar_deu %&gt;% as_tibble() %&gt;% mutate(row_tc = row_number()) %&gt;% filter(str_detect(value, &quot;--&gt;&quot;)) %&gt;% rename(timecode = value) b2 = avatar_deu %&gt;% as_tibble() %&gt;% mutate(row_id = row_number()) %&gt;% filter(str_detect(value, &quot;[a-zA-Z]&quot;)) %&gt;% rename(text = value) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;/i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(language = &quot;deu&quot;) # avatar_deu = bind_cols(a1,a2) # select(timecode, text) %&gt;% # separate(timecode, into = c(&quot;start&quot;, &quot;end&quot;), sep = &quot;\\\\-\\\\-\\\\&gt;&quot;) # tail(avatar_deu) b2a = b2 %&gt;% mutate(sentence_id = row_number()) c1 = avatar_slv %&gt;% as_tibble() %&gt;% mutate(row_tc = row_number()) %&gt;% filter(str_detect(value, &quot;--&gt;&quot;)) %&gt;% rename(timecode = value) c2 = avatar_slv %&gt;% as_tibble() %&gt;% mutate(row_id = row_number()) %&gt;% filter(str_detect(value, &quot;[a-zA-Z]&quot;)) %&gt;% rename(text = value) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;/i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(language = &quot;slv&quot;) # avatar_slv = bind_cols(a1,a2) # select(timecode, text) %&gt;% # separate(timecode, into = c(&quot;start&quot;, &quot;end&quot;), sep = &quot;\\\\-\\\\-\\\\&gt;&quot;) # tail(avatar_slv) c2a = c2 %&gt;% mutate(sentence_id = row_number()) avatar_fra = avatar_fra %&gt;% as_tibble() %&gt;% mutate(row_id = row_number()) %&gt;% filter(str_detect(value, &quot;[a-zA-Z]&quot;)) %&gt;% rename(text = value) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;/i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(language = &quot;fra&quot;) %&gt;% mutate(sentence_id = row_number()) avatar_ita = avatar_ita %&gt;% as_tibble() %&gt;% mutate(row_id = row_number()) %&gt;% filter(str_detect(value, &quot;[a-zA-Z]&quot;)) %&gt;% rename(text = value) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;/i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(language = &quot;ita&quot;) %&gt;% mutate(sentence_id = row_number()) avatar_tur = avatar_tur %&gt;% as_tibble() %&gt;% mutate(row_id = row_number()) %&gt;% filter(str_detect(value, &quot;[a-zA-Z]&quot;)) %&gt;% rename(text = value) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(text = str_replace(text, &quot;\\\\&lt;/i\\\\&gt;&quot;, &quot;&quot;)) %&gt;% mutate(language = &quot;tur&quot;) %&gt;% mutate(sentence_id = row_number()) 17.3.2 Datensätze verknüpfen Nun verknüpfen wir die drei Datensätze zu einem einzigen. avatar = bind_rows(a2a,b2a,c2a, avatar_fra, avatar_ita, avatar_tur) 17.3.3 Merkmale hinzufügen Mit Hilfe von quanteda-Funktionen fügen wir dem Datensatz noch weitere Kenngrößen hinzu, und zwar die Anzahl der Wortformerscheinungen oder Tokens pro Äußerung (sentlen), die Anzahl der Silben pro Äußerung (syllables), die Wortlänge (wordlen), die Anzahl der verschiedenen Wortformen (Types) und das Type-Token-Verhältnis als bekanntes Maß für lexikalische Diversität. avatar = avatar %&gt;% mutate(txt = str_replace_all(text, &quot;[:punct:]&quot;, &quot;&quot;)) %&gt;% mutate(sentlen = quanteda::ntoken(txt)) %&gt;% mutate(syllables = nsyllable::nsyllable(txt)) %&gt;% mutate(types = quanteda::ntype(txt)) %&gt;% mutate(wordlen = syllables/sentlen) %&gt;% mutate(ttr = types/sentlen) %&gt;% select(-txt) Speichern für spätere Verwendung. write_rds(avatar, &quot;data/avatar.rds&quot;) write_csv(avatar, &quot;data/avatar.csv&quot;) avatar = read_rds(&quot;data/avatar.rds&quot;) 17.3.4 Konkordanzrecherche Ein Beispiel einer Konkordanzrecherche mit Hilfe von kwic - dem Konkordanz-Tool in quanteda: x = quanteda::corpus(avatar, text_field = &quot;text&quot;) %&gt;% quanteda::tokens() quanteda::kwic(x, pattern = &quot;planet&quot;) %&gt;% as_tibble() %&gt;% rmarkdown::paged_table() 17.3.5 Textzerlegung Zerlegung der Untertitellinien in Wörter: library(tidytext) avatar_words = avatar %&gt;% unnest_tokens(word, text, drop = FALSE) %&gt;% select(-text) avatar_words %&gt;% rmarkdown::paged_table() 17.3.6 Zerlegung und Annotation Zuerst müssen wir für jede Sprache ein udpipe-Sprachmodell laden, um für jede der drei Untertitelversionen eine morphosyntaktische Annotation vorzunehmen. Englisch: library(udpipe) destfile = &quot;english-ewt-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ language_model &lt;- udpipe_download_model(language = &quot;english&quot;) engmod &lt;- udpipe_load_model(language_model$file_model) } else { file_model = destfile engmod &lt;- udpipe_load_model(file_model) } x = udpipe_annotate(engmod, x = avatar$text[avatar$language == &quot;eng&quot;], trace = FALSE) udeng = as.data.frame(x) Deutsch: library(udpipe) destfile = &quot;german-hdt-ud-2.5-191206.udpipe&quot; # destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ language_model &lt;- udpipe_download_model(language = &quot;german&quot;) deumod &lt;- udpipe_load_model(language_model$file_model) } else { file_model = destfile deumod &lt;- udpipe_load_model(file_model) } x = udpipe_annotate(deumod, x = avatar$text[avatar$language == &quot;deu&quot;], trace = F) uddeu = as.data.frame(x) Slowenisch: library(udpipe) destfile = &quot;slovenian-ssj-ud-2.5-191206.udpipe&quot; # destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ language_model &lt;- udpipe_download_model(language = &quot;slovenian&quot;) slvmod &lt;- udpipe_load_model(language_model$file_model) } else { file_model = destfile slvmod &lt;- udpipe_load_model(file_model) } x = udpipe_annotate(slvmod, x = avatar$text[avatar$language == &quot;slv&quot;], trace = F) udslv = as.data.frame(x) Französisch: library(udpipe) destfile = &quot;french-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ language_model &lt;- udpipe_download_model(language = &quot;french-gsd&quot;) framod &lt;- udpipe_load_model(language_model$file_model) } else { file_model = destfile framod &lt;- udpipe_load_model(file_model) } x = udpipe_annotate(framod, x = avatar$text[avatar$language == &quot;fra&quot;], trace = FALSE) udfra = as.data.frame(x) Italienisch: library(udpipe) destfile = &quot;italian-isdt-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ language_model &lt;- udpipe_download_model(language = &quot;italian-isdt&quot;) itamod &lt;- udpipe_load_model(language_model$file_model) } else { file_model = destfile itamod &lt;- udpipe_load_model(file_model) } x = udpipe_annotate(itamod, x = avatar$text[avatar$language == &quot;ita&quot;], trace = FALSE) udita = as.data.frame(x) Türkisch: library(udpipe) destfile = &quot;turkish-imst-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ language_model &lt;- udpipe_download_model(language = &quot;turkish-imst&quot;) turmod &lt;- udpipe_load_model(language_model$file_model) } else { file_model = destfile turmod &lt;- udpipe_load_model(file_model) } x = udpipe_annotate(turmod, x = avatar$text[avatar$language == &quot;tur&quot;], trace = FALSE) udtur = as.data.frame(x) Anpassung der Tabellenspalte token_id als numeric(). udfra = udfra %&gt;% separate(token_id, into = c(&quot;token_id&quot;, &quot;token_id2&quot;), sep = &quot;-&quot;) %&gt;% mutate(token_id = as.numeric(token_id)) %&gt;% select(-token_id2) udita = udita %&gt;% separate(token_id, into = c(&quot;token_id&quot;, &quot;token_id2&quot;), sep = &quot;-&quot;) %&gt;% mutate(token_id = as.numeric(token_id)) %&gt;% select(-token_id2) udtur = udtur %&gt;% separate(token_id, into = c(&quot;token_id&quot;, &quot;token_id2&quot;), sep = &quot;-&quot;) %&gt;% mutate(token_id = as.numeric(token_id)) %&gt;% select(-token_id2) Die Datensätze wollen wir für anderweitige Verwendungen speichern, und zwar sowohl im conllu-Format als auch im csv-Format. In beiden Fällen erhalten wir Textdateien. write.table(as_conllu(udeng), file = &quot;data/Avatar_ud_eng.conllu&quot;, sep = &quot;\\t&quot;, quote = F, row.names = F) write.table(as_conllu(uddeu), file = &quot;data/Avatar_ud_deu.conllu&quot;, sep = &quot;\\t&quot;, quote = F, row.names = F) write.table(as_conllu(udslv), file = &quot;data/Avatar_ud_slv.conllu&quot;, sep = &quot;\\t&quot;, quote = F, row.names = F) write.table(as_conllu(udfra), file = &quot;data/Avatar_ud_fra.conllu&quot;, sep = &quot;\\t&quot;, quote = F, row.names = F) write.table(as_conllu(udita), file = &quot;data/Avatar_ud_ita.conllu&quot;, sep = &quot;\\t&quot;, quote = F, row.names = F) write.table(as_conllu(udtur), file = &quot;data/Avatar_ud_tur.conllu&quot;, sep = &quot;\\t&quot;, quote = F, row.names = F) write_csv(udeng, &quot;data/Avatar_ud_eng.csv&quot;) write_csv(uddeu, &quot;data/Avatar_ud_deu.csv&quot;) write_csv(udslv, &quot;data/Avatar_ud_slv.csv&quot;) write_csv(udfra, &quot;data/Avatar_ud_fra.csv&quot;) write_csv(udita, &quot;data/Avatar_ud_ita.csv&quot;) write_csv(udtur, &quot;data/Avatar_ud_tur.csv&quot;) udeng = read_csv(&quot;data/Avatar_ud_eng.csv&quot;) uddeu = read_csv(&quot;data/Avatar_ud_deu.csv&quot;) udslv = read_csv(&quot;data/Avatar_ud_slv.csv&quot;) udfra = read_csv(&quot;data/Avatar_ud_fra.csv&quot;) udita = read_csv(&quot;data/Avatar_ud_ita.csv&quot;) udtur = read_csv(&quot;data/Avatar_ud_tur.csv&quot;) Den drei annotierten Datensätzen wollen wir noch einige weitere Merkmale hinzufügen (und zwar mit den mutate()-Befehlen, in denen auch einfache quanteda-Funktionen verwendet werden). Außerdem soll die komplexe Tabellenspalte feats (features) in einzelne Spalten aufgeteilt werden (und zwar mit der cbind_morphological()-Funktion von udpipe). Da wir dies mit allen drei Datensätzen anstellen wollen, bilden wir eine Funktion dazu, die als Input eine Tabelle (tbl) verlangt, in denen die Spalten word, token, feats, sentence zur Verfügung stehen: tokenize_annotate = function(tbl){ tbl %&gt;% unnest_tokens(word, token, drop = F) %&gt;% cbind_morphological(term = &quot;feats&quot;, which = c(&quot;PronType&quot;,&quot;NumType&quot;,&quot;Poss&quot;,&quot;Reflex&quot;, &quot;Foreign&quot;,&quot;Abbr&quot;,&quot;Typo&quot;, &quot;Gender&quot;,&quot;Animacy&quot;,&quot;NounClass&quot;, &quot;Case&quot;,&quot;Number&quot;,&quot;Definite&quot;,&quot;Degree&quot;, &quot;VerbForm&quot;,&quot;Person&quot;,&quot;Tense&quot;,&quot;Mood&quot;, &quot;Aspect&quot;,&quot;Voice&quot;,&quot;Evident&quot;, &quot;Polarity&quot;,&quot;Polite&quot;,&quot;Clusivity&quot;)) %&gt;% mutate(txt = str_replace_all(sentence, &quot;[:punct:]&quot;, &quot;&quot;)) %&gt;% mutate(sentlen = quanteda::ntoken(txt)) %&gt;% mutate(syllables = nsyllable::nsyllable(txt)) %&gt;% mutate(types = quanteda::ntype(txt)) %&gt;% mutate(wordlen = syllables/sentlen) %&gt;% mutate(ttr = types/sentlen) %&gt;% select(-txt, -feats) } Die für die Verwendung der Funktion entsprechenden Tabellen sind die zuvor gebildeten Tabellen udeng, uddeu und udslv. Nach der Anreicherung der Datensätze verknüpfen wir sie zu einem einzigen. avatar_eng_udpiped &lt;- udeng %&gt;% tokenize_annotate() %&gt;% mutate(language = &quot;eng&quot;) avatar_deu_udpiped &lt;- uddeu %&gt;% tokenize_annotate() %&gt;% mutate(language = &quot;deu&quot;) avatar_slv_udpiped &lt;- udslv %&gt;% tokenize_annotate() %&gt;% mutate(language = &quot;slv&quot;) avatar_fra_udpiped &lt;- udfra %&gt;% tokenize_annotate() %&gt;% mutate(language = &quot;fra&quot;) avatar_ita_udpiped &lt;- udita %&gt;% tokenize_annotate() %&gt;% mutate(language = &quot;ita&quot;) avatar_tur_udpiped &lt;- udtur %&gt;% tokenize_annotate() %&gt;% mutate(language = &quot;tur&quot;) avatar_words_udpiped = bind_rows(avatar_eng_udpiped, avatar_deu_udpiped, avatar_slv_udpiped, avatar_fra_udpiped, avatar_ita_udpiped, avatar_tur_udpiped) avatar_words_udpiped %&gt;% rmarkdown::paged_table() Für spätere Verwendungen speichern wir den Datensatz in zwei verschiedenen Formaten. write_rds(avatar_words_udpiped, &quot;data/avatar_words_udpiped.rds&quot;) write_csv(avatar_words_udpiped, &quot;data/avatar_words_udpiped.csv&quot;) avatar_words_udpiped = read_rds(&quot;data/avatar_words_udpiped.rds&quot;) 17.4 Morphologie der Untertitel Um einzelne Wörter und ihre Funktionen im Text aufzuspüren, brauchen wir nur die filter()- und die select()-Funktion einzugeben. Beispielsweise das Lemma brother in den englischen Untertiteln: avatar_words_udpiped %&gt;% filter(lemma == &quot;brother&quot;) %&gt;% select(sentence, token, lemma, upos, dep_rel) %&gt;% rmarkdown::paged_table() Dasselbe mit dem deutschen Bruder und dem slowenischen brat: avatar_words_udpiped %&gt;% filter(lemma == &quot;Bruder&quot;) %&gt;% select(sentence, token, lemma, upos, dep_rel) %&gt;% rmarkdown::paged_table() avatar_words_udpiped %&gt;% filter(lemma == &quot;brat&quot;) %&gt;% select(sentence, token, lemma, upos, dep_rel) %&gt;% rmarkdown::paged_table() Das Lemma brother bzw. scheint in den englischen Untertiteln ein wenig häufiger vorzukommen als die deutsche bzw. slowenische Entsprechung Bruder bzw. brat. 17.4.1 XRay Brother An welchen Stellen kommt das Wort in den Untertiteln vor? quanteda.textplots::textplot_xray( quanteda::kwic(avatar %&gt;% pull(text), pattern = c(&quot;brother&quot;,&quot;Bruder&quot;,&quot;brat&quot;)), scale = &quot;relative&quot;) Um die Stellen aus drei Texten besser vergleichen zu können, müssen wir drei xray-Diagramme erstellen und sie mit Hilfe von patchwork zusammenkleben. p1 = quanteda.textplots::textplot_xray( quanteda::kwic(avatar %&gt;% filter(language == &quot;eng&quot;) %&gt;% pull(text), pattern = &quot;brother&quot;), scale = &quot;relative&quot;) p2 = quanteda.textplots::textplot_xray( quanteda::kwic(avatar %&gt;% filter(language == &quot;deu&quot;) %&gt;% pull(text), pattern = &quot;Bruder&quot;), scale = &quot;relative&quot;) p3 = quanteda.textplots::textplot_xray( quanteda::kwic(avatar %&gt;% filter(language == &quot;slv&quot;) %&gt;% pull(text), pattern = &quot;brat&quot;), scale = &quot;relative&quot;) library(patchwork) p1|p2|p3 17.4.2 Substantive im Plural Als nächstes wollen wir alle als Substantive (Noun) identifizierte Einheiten herausfinden, die im Plural auftreten. #Find all plural nouns (tokens) avatar_words_udpiped %&gt;% filter(language == &quot;eng&quot; &amp; upos == &quot;NOUN&quot; &amp; morph_number == &quot;Plur&quot;) %&gt;% select(sentence, token, lemma, upos, morph_number) %&gt;% rmarkdown::paged_table() avatar_words_udpiped %&gt;% filter(language == &quot;deu&quot; &amp; upos == &quot;NOUN&quot; &amp; morph_number == &quot;Plur&quot;) %&gt;% select(sentence, token, lemma, upos, morph_number) %&gt;% rmarkdown::paged_table() avatar_words_udpiped %&gt;% filter(language == &quot;slv&quot; &amp; upos == &quot;NOUN&quot; &amp; morph_number == &quot;Plur&quot;) %&gt;% select(sentence, token, lemma, upos, morph_number) %&gt;% rmarkdown::paged_table() avatar_words_udpiped %&gt;% select(language, token, lemma, upos, morph_number) %&gt;% group_by(language) %&gt;% filter(upos == &quot;NOUN&quot;) %&gt;% count(morph_number) %&gt;% pivot_wider(names_from = language, values_from = n) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% mutate(morph_number = str_replace(morph_number, &quot;0&quot;, &quot;Unknown&quot;)) %&gt;% mutate(morph_number = fct_relevel( morph_number, levels = c(&quot;Sing&quot;,&quot;Plur&quot;,&quot;Dual&quot;,&quot;Unknown&quot;))) %&gt;% arrange(morph_number) %&gt;% rmarkdown::paged_table() 17.4.3 Adjektive im Komparativ In unserer nächsten Recherche wollen wir Komparativformen von Adjektiven ausfindig machen und ihre Stelle im Untertitel. Zuerst zählen wir die Wortarten (upos). Hier fällt auf, dass der Anteil einiger Wortarten in den slowenischen Untertiteln größer ist als in den anderen beiden Sprachen (z.B. Verben, Substantive), in anderen Fällen jedoch kleiner (z.B. Pronomen, die ja im Slowenischen nicht obligatorisch auftreten müssen). # Frequencies of parts of speech avatar_words_udpiped %&gt;% group_by(language) %&gt;% count(upos, sort = TRUE) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% arrange(upos) %&gt;% rmarkdown::paged_table() In den englischen Untertiteln wurden 17 Komparativformen identifiziert, in den deutschen 20 und in den slownischen 4. Der Anteil der Komparativformen ist also in den englischen und deutschen Untertiteln größer als in den slowenischen. Ähnlich verhält es sich mit den Superlativformen: deutsch (35 = 6%), englisch (14 = 2,77%), slowenisch (6 = 1,65) avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(language == &quot;eng&quot; | language == &quot;deu&quot; | language == &quot;slv&quot;) %&gt;% filter(upos == &quot;ADJ&quot;) %&gt;% count(morph_degree, sort = TRUE) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% mutate(morph_degree = str_replace(morph_degree, &quot;0&quot;, &quot;Unknown&quot;)) %&gt;% mutate(morph_degree = fct_relevel( morph_degree, levels = c(&quot;Pos&quot;,&quot;Cmp&quot;,&quot;Sup&quot;,&quot;Abs&quot;,&quot;Unkown&quot;))) %&gt;% arrange(morph_degree) %&gt;% rmarkdown::paged_table() Anmerkung: Die Klassifzierung für die deutsche Sprache (Variante: german-gsd) enthält diese Kategorie nicht. Wir haben daher die german-hdt-Variante gewählt. 17.5 Syntax: Dependenz Programme wie udpipe oder spacyr sind auch in der Lage, syntaktische Dependenzrelationen gemäß der Stanforder sprachübergreifenden Typologie zu identifizieren und als Annotation auszugeben. Typologische Grundlage für die Annotation: Universal Stanford Dependencies: A cross-linguistic typology (de Marneffe et al. 2014). knitr::include_graphics(&quot;pictures/Screenshot 2021-08-27 at 12-14-22 Universal Dependency Relations.png&quot;) Mehr über das Datenformat: CoNLL-U Format Frequenzwerte der syntaktischen Abhängigkeitsrelationen in den Avatar-Untertiteln (englisch, deutsch, slowenisch): avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(language == &quot;eng&quot; | language == &quot;deu&quot; | language == &quot;slv&quot;) %&gt;% count(dep_rel, sort = TRUE) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% mutate(dep_rel = str_replace(dep_rel, &quot;0&quot;, &quot;Unknown&quot;)) %&gt;% rmarkdown::paged_table() Gemäß udpipe erscheinen in den englischen und deutschen Untertiteln die Dependenzrelationen root, nsubj, advmod, det, obj am häufigsten. In den slowenischen Untertiteln haben die Relationen root, advmod, obj, case, nsubj die größten Frequenzwerte. Die Dependenzrelation root gibt uns Auskunft darüber, ob eine Wortfolge als Satz identifiziert wurde. Sie wird gewöhnlich mit Hilfe des (finiten) Verbs im Satz bestimmt. In elliptischen Sätzen wird eine der vorkommenden Wortformen mit root assoziiert. In der Tabelle ist (unter root) zu sehen, dass in den englischen Untertiteln 2026 satzwertige Einheiten identifiziert wurden, in den deutschen 2366 und in den slowenischen 1807. In der Tabelle zeigen die Prozentzahlen beispielsweise einen bemerkenswerten Unterschied in der Häufigkeit der Dependenzrelation nsubj, d.h. die Anzahl der identifizierten Subjekte. In den slowenischen Untertiteln liegt der Anteil deutlich unter dem in den englischen und deutschen. Das hängt damit zusammen, dass Slowenisch eine Pro-drop-Sprache ist, dass also unbetonte Personalpronomen (in Subjekt-Funktion) nicht sprachlich realisiert zu sein brauchen. Besonder deutlich wird dies, wenn wir einen Beispielsatz aus allen drei Texten visualisieren. Mit Hilfe der folgenden Funktion können wir die Dependenzrelationen im Satz visualisieren. Wir geben der Funktion den Namen plot_annotation(). library(igraph) library(ggraph) library(ggplot2) plot_annotation &lt;- function(x, size = 3){ stopifnot(is.data.frame(x) &amp; all(c(&quot;sentence_id&quot;, &quot;token_id&quot;, &quot;head_token_id&quot;, &quot;dep_rel&quot;, &quot;token_id&quot;, &quot;token&quot;, &quot;lemma&quot;, &quot;upos&quot;, &quot;xpos&quot;, &quot;feats&quot;) %in% colnames(x))) x &lt;- x[!is.na(x$head_token_id), ] x &lt;- x[x$sentence_id %in% min(x$sentence_id), ] edges &lt;- x[x$head_token_id != 0, c(&quot;token_id&quot;, &quot;head_token_id&quot;, &quot;dep_rel&quot;)] edges$label &lt;- edges$dep_rel g &lt;- graph_from_data_frame(edges, vertices = x[, c(&quot;token_id&quot;, &quot;token&quot;, &quot;lemma&quot;, &quot;upos&quot;, &quot;xpos&quot;, &quot;feats&quot;)], directed = TRUE) windowsFonts(&quot;Arial Narrow&quot; = windowsFont(&quot;Arial&quot;)) ggraph(g, layout = &quot;linear&quot;) + geom_edge_arc(ggplot2::aes(label = dep_rel, vjust = -0.20), arrow = grid::arrow(length = unit(4, &#39;mm&#39;), ends = &quot;last&quot;, type = &quot;closed&quot;), end_cap = ggraph::label_rect(&quot;wordswordswords&quot;), label_colour = &quot;red&quot;, check_overlap = TRUE, label_size = size) + geom_node_label(ggplot2::aes(label = token), col = &quot;darkgreen&quot;, size = size, fontface = &quot;bold&quot;) + geom_node_text(ggplot2::aes(label = upos), nudge_y = -0.35, size = size) + theme_graph(base_family = &quot;Arial Narrow&quot;) + labs(title = &quot;udpipe output&quot;, subtitle = &quot;tokenisation, parts of speech tagging &amp; dependency relations&quot;) } Hier ist ein Beispiel eines Avatar-Untertitels in drei Sprachen. Wegen der deutschen bzw. slowenischen Sonderzeichen wandeln wir den Text mit Hilfe der Funktion enc2utf8() ins erforderliche UTF8-Format um. # English mytext = udpipe(&quot;I started having these dreams of flying&quot;, &quot;english&quot;) x1 = plot_annotation(mytext, size = 3) # German mytext = &quot;Ich träumte auf einmal vom Fliegen&quot; %&gt;% enc2utf8() x = udpipe(mytext, &quot;german&quot;) x2 = plot_annotation(x, size = 3) # Slovenian mytext = &quot;Zael sem sanjati o letenju&quot; %&gt;% enc2utf8() x = udpipe(mytext, &quot;slovenian&quot;) x3 = plot_annotation(x, size = 3) Englischer Satz: PRON: Personalpronomen mit Subjekt-Funktion (nsubj) NOUN, VERB: Substantiv, Verb AUX: das Hilfs- oder Auxiliarverb xcomp: hier eine Relation zwischen zwei Verben, die gemeinsam das Prädikat des Satzes bilden DET: Determiner (Determinans), Begleiter eines Substantivs (meist handelt es sich um einen Artikel) obj: Objektfunktion (hier ist these dreams das Objekt des Verbs have) SCONJ: subordinierende Konjunktion (aber hier wäre prep für Präposition angebracht) acl: gewöhnlich bezogen auf einen finiten oder infiniten Satz, der eine Nominalphrase modifiziert (im Kontrast zu advcl, die ein Prädikat modifizieren) mark: ein Marker, der eine untergerodnete Phrase / Satz kennzeichnet. x1 Deutscher Satz: PRON: Personalpronomen mit Subjekt-Funktion (nsubj) NOUN, VERB, ADP, ADV: Substantiv, Verb, Adposition (hier: Präposition), Adverb DET: Determiner (Determinans), Begleiter eines Substantivs (meist handelt es sich um einen Artikel) obl: eine Art von Adjunkt, in der Valenzgrammatik gewöhnlich als Präpositionalobjekt klassifizert (hier ist vom Fliegen das Objekt des Verbs have) case: Element, das den Kasus einer Phrase regiert (z.B. von regiert den Dativ der Nominalphrase dem Fliegen) advmod: Element, das das Prädikat modifizert (Adverbialphrase). x2 Slowenischer Satz: Das Personalpronomen mit Subjekt-Funktion fehlt, daher auch keine Subjekt-Relation (nsubj) angezeigt. In slowenischen Nominalphrasen sind Begleiter (DET) nicht obligatorisch bzw. default (slow. privzeto) wie etwa im Englischen oder Deutschen. NOUN, VERB, ADP: Substantiv, Verb, Adposition (hier: Präposition) AUX: das Hilfs- oder Auxiliarverb DET: Determiner (Determinans), Begleiter eines Substantivs (meist handelt es sich um einen Artikel) xcomp: hier eine Relation zwischen zwei Verben, die gemeinsam das Prädikat des Satzes bilden (zael sanjati) obl: eine Art von Adjunkt, in der Valenzgrammatik gewöhnlich als Präpositionalobjekt klassifizert (hier ist o letenju das Objekt des Verbs sanjati) case: Element, das den Kasus einer Phrase regiert (z.B. die Präposition o regiert den Dativ der Nominalphrase letenju). x3 Aus den drei Diagrammen ist ersichtlich, dass die Subjekt-Relation (nsubj) im englischen und deutschen Satz mittels eines Personalpronomens (PRON) realisiert wird, während das Subjekt im slowenischen Satz mittels der finiten Verbform, einem Hilfs- oder Auxiliarverbs (AUX), (mit)ausgedrückt wird, also im Hilfsverb versteckt auftritt. Im slowenischen Satz ist PRON syntaktisch nicht notwendig, im englischen und deutschen schon. Das wirkt sich natürlich auf die Frequenzwerte bzw. den Pronzenanteil aus (s. Tabelle). Die Diagramme zeigen strukturelle Ähnlichkeiten und Unterschiede zwischen den Sprachversionen: sowohl im englischen Untertitel als auch in der slowenischen Version wird eine xcomp-Relation angegeben, d.h. dass das Satzprädikat mit Hilfe von zwei Verben konstituiert wird (started having vs. zael sanjati). Die Verben started bzw. zaeti modifizeren das Hauptverb have bzw. sanjati temporal. Im deutschen Untertitel wird stattdessen ein einfaches Prädikat (träumte) verwendet, dass durch eine Adverbialphrase (auf einmal) temporal modifiziert wird. das englische Substantiv dream wird im deutschen und slowenischen Untertitel im Satzprädikat ausgedrückt (träumte, sanjati) der englische Subordinationsmarker of, der sich sowohl auf Nominalphrasen als auch auf Sätze beziehen kann, wird im deutschen und slowenischen Untertitel mit einer spezifischeren Wortklasse ausgedrückt, nämlich mit einer Präposition (ADP, Adposition). Universal POS tags Universal features UDPipe 17.5.1 Aktiv und Passiv Wie groß ist der Anteil aktivischer und passivischer Sätze in den drei Sprachversionen? Dies können wir mit Hilfe der nsubj-Relation erfahren. In den englischen und deutschen Untertiteln wurden je 34 passivische Subjekte identifizert, in den slowenischen keiner. avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(language == &quot;eng&quot; | language == &quot;deu&quot; | language == &quot;slv&quot;) %&gt;% filter(str_detect(dep_rel, &quot;nsubj&quot;)) %&gt;% count(dep_rel, sort = TRUE) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% mutate(dep_rel = str_replace(dep_rel, &quot;0&quot;, &quot;Unknown&quot;)) %&gt;% rmarkdown::paged_table() Schauen wir uns ein paar dieser Untertitel in allen drei Sprachen an: avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(language == &quot;eng&quot;) %&gt;% filter(str_detect(dep_rel, &quot;nsubj:pass&quot;)) %&gt;% ungroup() %&gt;% select(sentence, sentence_id) %&gt;% distinct() %&gt;% head(5) %&gt;% rmarkdown::paged_table() Wir wählen einen englischen Untertitel als Beispiel, und zwar: And the concept is that ervery driver is matched to his own avatar*. Deutsche Version: Die Idee ist, dass jeder Operator auf seinen eigenen Avatar abgestimmt wird. Slowenische Version: Vsak upravljavec dobi svojega avatarja. avatar %&gt;% filter(language == &quot;deu&quot;) %&gt;% filter(str_detect(text, &quot;jeder Operator auf&quot;) | str_detect(text, &quot;Avatar abgestimmt&quot;)) %&gt;% select(text) %&gt;% rmarkdown::paged_table() avatar %&gt;% filter(language == &quot;slv&quot;) %&gt;% filter(str_detect(text, &quot;dobi svojega avatarja&quot;)) %&gt;% select(text) %&gt;% rmarkdown::paged_table() Wiederum visualisieren wir die drei Sprachversionen. # English mytext = udpipe(&quot;And the concept is that ervery driver is matched to his own avatar&quot;, &quot;english&quot;) x1 = plot_annotation(mytext, size = 3) # German mytext = &quot;Die Idee ist, dass jeder Operator auf seinen eigenen Avatar abgestimmt wird&quot; %&gt;% enc2utf8() x = udpipe(mytext, &quot;german&quot;) x2 = plot_annotation(x, size = 3) # Slovenian mytext = &quot;Vsak upravljavec dobi svojega avatarja&quot; %&gt;% enc2utf8() x = udpipe(mytext, &quot;slovenian&quot;) x3 = plot_annotation(x, size = 3) x1 x2 x3 Die slowenische Version ist syntaktisch am einfachsten, denn sie besteht lediglich aus einem Hauptsatz, im englischen und deutschen Untertitel dagegen aus Haupt- und Nebensatz, wobei letztere die hauptsächliche Information trägt (die auch im slowenischen Hauptsatz zu Tage tritt). Der Hauptsatz im englischen und deutschen Untertitel kann kommunikativ betrachtet als Vorreiter oder Vorschaltung eingeordnet werden, also als Ausdruck, der vor allem zur Orientierung oder Einordnung eines Gedankens (der im Nebensatz ausgedrückt wird) in ein Gedankenschema oder Frame dient. Die passivische Relation, die im englischen und deutschen Untertitel mittels passivischer Verbformen realisiert wird, wird im slowenischen Untertitel mit dem Verb dobiti zum Ausdruck gebracht (deutsch: bekommen, englisch: get). Das Subjekt des slowenischen Verb dobiti (hier: vsak upravljalec) ist semantisch gesehen ein Benefaktiv oder Nutznießer (benefaktive Relation), also ein Rezipient, für den eine Handlung vorteilhaft oder nutzbringend ist. Entsprechendes gilt auch für das deutsche bekommen-Passiv (z.B. jeder Operator bekommt einen Avatar. Die Ausdrucksweise im slowenischen Untertitel ist im Vergleich zu den anderen Sprachversionen semantisch ungenau, denn es bleibt dem Leser überlassen, ob er die im Film realisierte symbiotische Verbindung zwischen Reiter und Tier nachvollziehen kann. Die Ausdrucksweise im englischen und deutschen Untertitel ist dagegen spezifischer, d.h. es handelt sich um eher eine technische (fachbezogene) Ausdrucksweise (engl. matching, deutsch Abstimmung). Da es sich in diesem Fall um einen Vorgang oder Prozess handelt, gibt es keinen menschlichen Verursacher der Abstimmung, denn sowohl der Operator (driver, upravljalec) sind so wie das gerittene Tier lediglich Reagentien im Prozess. Das ist in allen drei Sprachversionen deckungsgleich. In allen drei Sprachversionen wird wird der (menschliche) Benefaktiv (d.h. das syntaktische Subjekt) als Ausgangspunkt einer neuen oder wichtigen Information verwendet. Die neue Information seinen eigenen Avatar wird ins Rampenlicht gerückt, also zum Rhema des Satzes gemacht. Die typische Verteilung Thema vor Rhema wird hiermit in allen drei Sprachversionen gewahrt. Außerdem wird damit auch die häufigere Reihenfolge Subjekt vor Objekt eingehalten. Im slowenischen Satz handelt es sich um ein direktes Objekt (Akkusativobjekt), im englischen und deutschen dagegen um ein Präpositionalobjekt (match to , abstimmen auf ). 17.5.2 Substantive und Pronomen als Satzglieder Nun lenken wir unsere Sichtweise auf die Wortklassen Substantiv (NOUN) und Pronomen (PRON) in Subjekt- oder Objekt-Funktion. avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(upos == &quot;NOUN&quot; | upos == &quot;PRON&quot;) %&gt;% filter(str_detect(dep_rel, &quot;nsubj|obj|obl&quot;)) %&gt;% count(upos, dep_rel) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% arrange(upos) %&gt;% rmarkdown::paged_table() Ein erster Blick auf die Tabelle zeigt uns mehrere Unterschiede: - Pronomen erscheinen in den englischen und deutschen Untertiteln häufiger in Subjekt-Funktion als Substantive. In den slowenischen Untertiteln ist es umgekehrt, was wahrscheinlich damit zusammenhängt, dass Slowenisch eine Pro-Drop-Sprache ist (s.o.). - In Objekt-Funktion scheint das Verhältnis zwischen den beiden Wortklassen (NOUN, PRON) ausgewogener zu sein. - Das indirekte Objekt (iobj), dass sich, semantisch betrachtet, oft auf einen Adressaten oder Rezipienten bezieht, wird vorzugsweise mit einem Pronomen ausgedrückt, selten oder gar nicht mit einem Substantiv. - Für einige Satzglied-Funktionen liegen keine Zahlen vor. Das kann daran liegen, dass diese Funktionen in der verwendeten Grammatik einer der ausgewählten Sprachen nicht unterschieden wird. Für genauere Feststellungen empfiehlt es sich, nur jeweils zwei Satzgliedfunktionen miteinander zu vergleichen. 17.5.3 Subjekt nominal / pronominal Wie viele Subjekte im Aktiv oder Passiv werden mit Hilfe von Substantiven oder Personalpronomen ausgedrückt? avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(language == &quot;eng&quot; | language == &quot;deu&quot; | language == &quot;slv&quot;) %&gt;% filter(upos == &quot;NOUN&quot; | upos == &quot;PRON&quot;) %&gt;% filter(str_detect(dep_rel, &quot;nsubj&quot;)) %&gt;% count(upos, dep_rel) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% arrange(upos) %&gt;% rmarkdown::paged_table() Treten Pronomen genau so häufig als Passiv-Subjekte auf wie Substantive? Die obige Tabelle scheint für die englischen und deutschen Untertitel das Gegenteil zu zeigen. Machen für doch für diese beiden Sprachversionen je einen Chi-Quadrat-Test! pivot_by_nsubj &lt;- function(tbl) { tbl %&gt;% filter(upos == &quot;NOUN&quot; | upos == &quot;PRON&quot;) %&gt;% filter(str_detect(dep_rel, &quot;nsubj&quot;)) %&gt;% count(upos, dep_rel) %&gt;% group_by(upos) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = upos, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) } x = avatar_words_udpiped %&gt;% filter(language == &quot;eng&quot;) %&gt;% pivot_by_nsubj() x %&gt;% rmarkdown::paged_table() In der letzten Tabelle fällt auf, dass der Anteil der Pronomen (pct_PRON) in der nsubj:pass-Funktion größer ist als der der Substantive (pct_NOUN). Ist dieser Unterschied zufällig (aufgrund der Stichprobenauswahl entstanden) oder können wir ihn auf die Grundgesamtheit (auf umgangssprachliche Dialoge in der englischen Sprache) verallgemeinern? Eine Antwort darauf soll uns der Chi-Quadrat-Test geben. Für den Chi-Quadrat-Test benötigen wir lediglich die beiden Spalten mit den absoluten Zahlenwerten (also die zweite und dritte). In Base-R kann man dies sehr ökonomisch mit einer Bedingung in eckigen Klammern [] erreichen, mit der tidyverse-Funktion select() zwar transparenter und in Tabellenform, dafür muss man jedoch etwas mehr schreiben. # Base-R chisq.test(x[,c(2:3)]) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: x[, c(2:3)] ## X-squared = 2.2472, df = 1, p-value = 0.1339 # tidyverse x %&gt;% select(n_NOUN, n_PRON) %&gt;% chisq.test() %&gt;% tidy() ## # A tibble: 1 x 4 ## statistic p.value parameter method ## &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 2.25 0.134 1 Pearson&#39;s Chi-squared test with Yates&#39; continuity~ Der Chi-Quadrat-Test bestätigt mit dem p-Wert (0,1339) die Null-Hypothese, d.h. das es zwischen Pronomen und Substantiven als Subjekte in den englischen Untertiteln keinen statistisch signifikanten Unterschied gibt und dass der prozentuelle Unterschied aufgrund unserer Stichprobenauswahl entstanden ist (also zufällig). Dasselbe können wir mit den deutschen Pronomen und Substantiven in Subjekt-Funktion machen. In diesem Fall ist der prozentuelle Unterschied zwischen Substantiven und Pronomen als aktivische oder passivische Subjekte größer zu sein als in der englischen Stichprobe. x = avatar_words_udpiped %&gt;% filter(language == &quot;deu&quot;) %&gt;% pivot_by_nsubj() x %&gt;% rmarkdown::paged_table() In den deutschen Untertiteln können wir mit dem Chi-Quadrat-Test einen statistisch signifikanten Unterschied zwischen Pronomen und Substantiven nachweisen (p &lt; 0,05): Pronomen scheinen in Subjekt-Funktion seltener in Passivsätzen verwendet worden zu sein als Substantive. Möglicherweise gilt dies auch für die Grundgesamtheit in deutsche Sprache (hier vor allem für umgangssprachliche Dialoge). Anders ausgedrückt: wir haben eine (nicht zufällige) Tendenz nachgewiesen, dass das Subjekt in den deutschen Passivsätzen häufiger mit Substantiven, also autosemantischen Ausdrücken realisiert wurde. # Base-R chisq.test(x[,c(2:3)]) %&gt;% tidy() ## # A tibble: 1 x 4 ## statistic p.value parameter method ## &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 14.4 0.000149 1 Pearson&#39;s Chi-squared test with Yates&#39; continuit~ Wir können uns die entsprechenden Belege mit Passivsubjekten auch anschauen. Aus der Tabelle ist auch ersichtlich, dass die grammatische Analyse des Programms auch einige Fehler enthält (z.B. Avatar in (auf) seinen eigenen Avatar abgestimmt wird ist Bestandteil eines Präpositionalobjekts und kein Passivsubjekt) oder eine andere Klassifizierung sinnvoller wäre (z.B. Was ist hier passiert? - was wurde als Passivsubjekt des Verbs passieren eingeordnet). Im Untertitel wenn du nicht gekommen wärst scheint das Programm den sein-Passiv übergeneralisierend auf Sätze mit einem Verb im Perfekt anzuwenden. Einige Fehler kommen aufgrund unvollständiger Sätze als Input vor, andere wiederum aufgrund der Tatsache, dass bestimmte sprachliche Formen mehrere Funktionen in der Sprache erfüllen können. avatar_words_udpiped %&gt;% select(sentence, upos, dep_rel, language) %&gt;% filter(language == &quot;deu&quot;) %&gt;% filter(upos == &quot;NOUN&quot; | upos == &quot;PRON&quot;) %&gt;% filter(str_detect(dep_rel, &quot;nsubj:pass&quot;)) %&gt;% rmarkdown::paged_table() 17.5.4 Objekt nominal / pronominal Wird das direkte Objekt (obj), im Deutschen und Slowenischen auch Akkusativojekt genannt, in den Untertiteln häufiger nominal oder pronominal ausgedrückt? x = avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(upos == &quot;NOUN&quot; | upos == &quot;PRON&quot;) %&gt;% filter(dep_rel == &quot;obj&quot;) %&gt;% count(upos, dep_rel) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% arrange(upos) x %&gt;% rmarkdown::paged_table() Die Tabelle deutet daraufhin, dass in den englischen Untertiteln kein wesentlicher Unterschied auftritt, in den deutschen und slowenischen Untertiteln dagegen schon. Das können wir wiederum testen. Der erste Chi-Quadrat-Test bestätigt für die englischen Untertitel die Null-Hypothese (bei p &gt; 0,05 also keinen Unterschied), für die deutschen und slowenischen Untertitel dagegen die alternative Hypothese (d.h. dass es bei p &lt; 0,05 einen Wahrscheinlichkeitsunterschied gibt, ob das Objekt nominal oder pronominal ausgedrückt ist). englisch = chisq.test(x[,4]) %&gt;% tidy() %&gt;% mutate(language = &quot;eng&quot;) deutsch = chisq.test(x[,3]) %&gt;% tidy() %&gt;% mutate(language = &quot;deu&quot;) slowenisch = chisq.test(x[,5]) %&gt;% tidy() %&gt;% mutate(language = &quot;slv&quot;) chisqtabelle = bind_rows(englisch, deutsch, slowenisch) %&gt;% select(language, statistic, p.value) chisqtabelle %&gt;% rmarkdown::paged_table() 17.5.5 Wortklasse von Subjekt / Objekt Welche sprachübergreifende (cross-linguistic) Tendenz werden mit den englisch- und deutschsprachigen Daten bestätigt? avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(upos == &quot;NOUN&quot; | upos == &quot;PRON&quot;) %&gt;% filter(dep_rel == &quot;nsubj&quot; | dep_rel == &quot;obj&quot;) %&gt;% count(upos, dep_rel) %&gt;% # group_by(upos) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% arrange(upos) %&gt;% rmarkdown::paged_table() Englisch: pivot_by_obj &lt;- function(tbl) { tbl %&gt;% filter(upos == &quot;NOUN&quot; | upos == &quot;PRON&quot;) %&gt;% filter(dep_rel == &quot;nsubj&quot; | dep_rel == &quot;obj&quot;) %&gt;% count(upos, dep_rel) %&gt;% group_by(upos) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = upos, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) } x = avatar_words_udpiped %&gt;% filter(language == &quot;eng&quot;) %&gt;% pivot_by_obj() x %&gt;% rmarkdown::paged_table() Deutsch: x = avatar_words_udpiped %&gt;% filter(language == &quot;deu&quot;) %&gt;% pivot_by_obj() x %&gt;% rmarkdown::paged_table() Sowohl in den englischen als auch deutschen Untertiteln wird das Subjekt häufiger pronominal und seltener nominal ausgedrückt. Beim direkten Objekt ist es umgekehrt, denn dieses wird häufiger nominal ausgedrückt. Das man darauf zurückgeführen, dass das Subjekt häufig definit ist (etwas vom Hörer / Leser Identifizierbares ausdrückt), das Objekt dagegen etwas (noch) nicht Identifziertes. Dieses Verhältnis können wir in den slowenischen Untertiteln nicht nachweisen, was wir wiederum auf die Tatsache zurückführen können, dass Slowenisch eine Pro-Drop-Sprachen ist und daher die Anzahl pronominalisierter Subjekte wesentlich geringer sein muss, da ein pronominalisiertes Subjekt nur bei Hervorhebung obligatorisch im Satz vorkommt. x = avatar_words_udpiped %&gt;% filter(language == &quot;slv&quot;) %&gt;% pivot_by_obj() x %&gt;% rmarkdown::paged_table() 17.5.6 Gattungs- und Eigennamen Treten Gattungsnamen (Appelativa) und Eigennamen häufiger in Subjekt- oder in Objekt-Funktion auf? Englisch: pivot_by_propn &lt;- function(tbl) { tbl %&gt;% filter(upos %in% c(&quot;NOUN&quot;, &quot;PROPN&quot;)) %&gt;% filter(dep_rel == &quot;nsubj&quot; | dep_rel == &quot;obj&quot;) %&gt;% count(upos, dep_rel) %&gt;% group_by(upos) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = upos, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) } x = avatar_words_udpiped %&gt;% filter(language == &quot;eng&quot;) %&gt;% pivot_by_propn() x %&gt;% rmarkdown::paged_table() Deutsch: x = avatar_words_udpiped %&gt;% filter(language == &quot;deu&quot;) %&gt;% pivot_by_propn() x %&gt;% rmarkdown::paged_table() Slowenisch: x = avatar_words_udpiped %&gt;% filter(language == &quot;slv&quot;) %&gt;% pivot_by_propn() x %&gt;% rmarkdown::paged_table() In allen drei Sprachversionen treten die Eigennamen (PROPN) häufiger in Subjekt-Funktion als in Objekt-Funktion auf, was man wieder darauf zurückführen kann, dass Eigennamen eine definite (d.h. identifizierbare) Einheit bezeichnen. 17.5.7 Konstituentenfolge In SOV-Sprachen ist die Reihenfolge Modifizierer vor Kopf häufiger zu beobachten, in SVO-Sprachen dagegen Modifizierer nach Kopf. Das prüfen wir in unserem bisherigen Sprachmaterial. Als Modifizierer wählen wird attributive Adjektive, als Kopf von Nominalphrasen die davor oder dahinter stehenden Substantive oder andere Wortklassen (z.B. Pronomen). Englisch und Slowenisch werden gewöhnlich als SVO-Sprachen eingeordnet, Deutsch mit der Konstituentenfolge SVO in Hauptsätzen und SOV in Nebensätzen wird im Atlas Wals (https://wals.info) dagegen als Sprache ohne dominante Konstituentenfolge bezeichnet. Was zeigt nun unser Sprachmaterial? avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(dep_rel == &quot;amod&quot; &amp; upos == &quot;ADJ&quot;) %&gt;% mutate(word_order = ifelse(token_id &lt; head_token_id, &quot;adj before head&quot;, &quot;adj after head&quot;)) %&gt;% count(dep_rel, word_order) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% mutate(dep_rel = str_replace(dep_rel, &quot;0&quot;, &quot;Unknown&quot;)) %&gt;% select(-dep_rel) %&gt;% rmarkdown::paged_table() Im Englischen, Deutschen und Slowenischen und Türkischen dominiert die Reihenfolge Adjektiv vor Substantiv, also Modifizierer vor Kopf. Im Französischen und Italienischen dagegen ist die umgekehrte Reihenfolge dominant bzw. sind sowohl vor- als auch nachgestellte adjektivische Attribute fast gleich gut vertreten. Schauen wir uns noch an, in welchen Untertiteln unser Programm nachgestellte Adjektive identifiziert hat! avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(dep_rel == &quot;amod&quot; &amp; upos == &quot;ADJ&quot;) %&gt;% mutate(word_order = ifelse(token_id &lt; head_token_id, &quot;adj before head&quot;, &quot;adj after head&quot;)) %&gt;% filter(word_order == &quot;adj after head&quot;) %&gt;% ungroup() %&gt;% select(sentence, token, word_order, -language) ## # A tibble: 276 x 3 ## sentence token word_order ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 You could do something important. important adj after h~ ## 2 There&#39;s nothing like an old-school safety brief to pu~ brief adj after h~ ## 3 I&#39;m a man short. short adj after h~ ## 4 However, it does present an opportunity both timely a~ timely adj after h~ ## 5 to the root of the tree next to it. next adj after h~ ## 6 Don&#39;t do anything unusually stupid. stupid adj after h~ ## 7 There is something really interesting going on in the~ interest~ adj after h~ ## 8 - Stay down, sir. sir adj after h~ ## 9 I&#39;m talking about something real, real adj after h~ ## 10 something measurable in the biology of the forest. measurab~ adj after h~ ## # ... with 266 more rows Im slowenischen Untertitel Gre za nekaj resninega wird das Adjektiv resninega als nachgestelltes Attribut zum Kopf nekaj, einem Pronomen, eingeordnet. Entsprechend im englischen Untertitel: Something measurable. Aber einige der Belege entpuppen sich als Fehlmeldung. 17.5.8 Kontexte von Modifizierern avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(dep_rel == &quot;amod&quot; &amp; upos == &quot;ADJ&quot;) %&gt;% mutate(word_order = ifelse(token_id &lt; head_token_id, &quot;adj before head&quot;, &quot;adj after head&quot;)) %&gt;% filter(lemma == &quot;big&quot; | lemma == &quot;groß&quot; | lemma == &quot;velik&quot;) %&gt;% ungroup() %&gt;% select(word_order, lemma, sentence) ## # A tibble: 30 x 3 ## word_order lemma sentence ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 adj before head big with a big hole blown through the middle of my life, ## 2 adj before head big I know it&#39;s a big inconvenience for everyone. ## 3 adj before head big Try and use big words. ## 4 adj before head big I might just give you a big wet kiss. ## 5 adj before head big That is one big damn tree. ## 6 adj before head big You big baby. ## 7 adj before head big Charlie 2-1, got big movement. ## 8 adj before head big Bravo 1-1, I got a big seating. ## 9 adj before head groß Möge die Große Mutter ## 10 adj before head groß dem größten Unobtanium-Vorkommen ## # ... with 20 more rows avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(dep_rel == &quot;amod&quot; &amp; upos == &quot;ADJ&quot;) %&gt;% mutate(word_order = ifelse(token_id &lt; head_token_id, &quot;adj before head&quot;, &quot;adj after head&quot;)) %&gt;% filter(lemma == &quot;big&quot; | lemma == &quot;groß&quot; | lemma == &quot;velik&quot;) %&gt;% count(lemma) ## # A tibble: 3 x 3 ## # Groups: language [3] ## language lemma n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 deu groß 11 ## 2 eng big 8 ## 3 slv velik 11 17.5.9 Greenbergs Universalie 25 If the pronominal object follows the verb, so does the nominal object. Zuerst wollen wir direkte Objekte (im Deutschen und Slowenischen auch als Akkusativobjekte bezeichnet) ausfinding machen, die sowohl Gattungsnamen als auch Eigennamen enthalten und die dem Kopf der Verbalphrase vorangehen (OV) oder folgen (VO). pivot_by_verb_obj = function(tbl){ tbl %&gt;% mutate(word_order = ifelse(token_id &gt; head_token_id, &quot;VO&quot;, &quot;OV&quot;)) %&gt;% count(dep_rel, word_order) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = language, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% mutate(dep_rel = str_replace(dep_rel, &quot;0&quot;, &quot;Unknown&quot;)) %&gt;% select(-dep_rel) } vo_nominal = avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(dep_rel == &quot;obj&quot; &amp; upos %in% c(&quot;NOUN&quot;, &quot;PROPN&quot;)) %&gt;% pivot_by_verb_obj() %&gt;% mutate(word_class = &quot;NOUN&quot;) Nun machen wir dasselbe mit den pronominalen Objekten. vo_pronominal = avatar_words_udpiped %&gt;% group_by(language) %&gt;% filter(dep_rel == &quot;obj&quot; &amp; upos %in% c(&quot;PRON&quot;)) %&gt;% pivot_by_verb_obj() %&gt;% mutate(word_class = &quot;PRON&quot;) Dann fügen wir beide Tabellen zusammen. verb_object = bind_rows(vo_nominal, vo_pronominal) %&gt;% select(word_class, word_order:pct_tur) verb_object %&gt;% rmarkdown::paged_table() verb_object %&gt;% select(word_class, word_order, pct_deu:pct_tur) %&gt;% pivot_longer(pct_deu:pct_tur, names_to = &quot;language&quot;, values_to = &quot;pct&quot;) %&gt;% mutate(language = str_replace(language, &quot;pct_&quot;, &quot;&quot;)) %&gt;% ggplot(aes(pct, word_class, fill = word_order)) + geom_col() + facet_wrap(~ language) + theme(legend.position = &quot;top&quot;) ggsave(&quot;pictures/barplot_avatar_VO-OV_NN_PRON.png&quot;) verb_object %&gt;% select(word_class, word_order, n_deu:n_tur) %&gt;% pivot_longer(n_deu:n_tur, names_to = &quot;language&quot;, values_to = &quot;n&quot;) %&gt;% mutate(language = str_replace(language, &quot;n_&quot;, &quot;&quot;)) %&gt;% pivot_wider(names_from = c(word_order, word_class), values_from = n) %&gt;% group_by(language) %&gt;% summarise(ov_nouns_prop = OV_NOUN/(VO_NOUN + OV_NOUN), ov_prons_prop = OV_PRON/(VO_PRON + OV_PRON)) %&gt;% ggplot(aes(ov_nouns_prop, ov_prons_prop, fill = language, group = language)) + # geom_text(aes(label = language, check.overlap = TRUE)) + geom_label(aes(label = language, check.overlap = TRUE)) + theme(legend.position = &quot;none&quot;) + labs(x = &quot;OV-Anteil bei Substantiven&quot;, y = &quot;OV-Anteil bei Pronomen&quot;) ggsave(&quot;pictures/koord_avatar_VO-OV_NN_PRON.png&quot;) Übersichtsgraphik mit Korrelationsberechnung: library(GGally) ggpairs(verb_object[,c(1:8)]) Korrelationsgraphik: library(correlation) library(see) results = summary(correlation(verb_object[,c(1:8)])) p = plot(results) p + scale_fill_material_c(palette = &quot;rainbow&quot;) + theme_abyss() library(ggpage) avatar_deu[1:100] %&gt;% ggpage_build() %&gt;% mutate(long_word = stringr::str_length(word) &gt; 8) %&gt;% ggpage_plot(aes(fill = long_word)) + labs(title = &quot;Longer words throughout the Avatar subtitles&quot;) + scale_fill_manual(values = c(&quot;grey70&quot;, &quot;blue&quot;), labels = c(&quot;8 or less&quot;, &quot;9 or more&quot;), name = &quot;Word length&quot;) library(ggwordcloud) library(tidytext) stoplist_eng = as_tibble(c(&quot;not&quot;,&quot;hey&quot;,&quot;yeah&quot;,&quot;to&quot;,&quot;go&quot;,&quot;get&quot;)) %&gt;% rename(word = value) x = avatar_words_udpiped %&gt;% filter(language == &quot;eng&quot;) %&gt;% anti_join(stop_words) %&gt;% # anti_join(stoplist_eng) %&gt;% # filter(!lemma %in% c(stoplist_eng)) %&gt;% filter(!str_detect(lemma, c(&quot;not&quot;,&quot;hey&quot;,&quot;yeah&quot;,&quot;to&quot;,&quot;go&quot;,&quot;get&quot;))) %&gt;% count(lemma, sort = TRUE) x %&gt;% ggplot(aes(label = lemma, size = n)) + geom_text_wordcloud() + scale_size_area(max_size = 40) + theme_minimal() Schnell eine Graphik mit dem Datensatz erstellen, ohne zu programmieren: References "],["modals-in-slovene-texts.html", "Kapitel 18 Modals in Slovene Texts 18.1 Programi 18.2 Branje besedil 18.3 Korpus 18.4 Besedne oblike in matrika 18.5 Pogostnost oblik 18.6 Konkordance 18.7 Kolokacije 18.8 Konkordance (po povedih) 18.9 Konkordance (fraze) 18.10 Delei glagolov 18.11 Udpipe analiza 18.12 Kwic udpipe 18.13 Slovnina pronost 18.14 Disperzijska analiza 18.15 Semantika: kompozicijonalnost", " Kapitel 18 Modals in Slovene Texts 18.1 Programi library(tidyverse) library(scales) library(janitor) library(readtext) library(quanteda) library(quanteda.textmodels) library(quanteda.textstats) library(quanteda.textplots) library(tidytext) library(readxl) library(writexl) 18.2 Branje besedil ivki slovenskih politikov. slovtwit1 &lt;- read_rds(&quot;data/tmls_all_slo_politicians_2021-03-21.rds&quot;) head(slovtwit1) ## # A tibble: 6 x 90 ## user_id status_id created_at screen_name text source ## &lt;chr&gt; &lt;chr&gt; &lt;dttm&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 258856900 1373313507467403266 2021-03-20 16:40:29 JJansaSDS &quot;Alojzij~ Twitt~ ## 2 258856900 1373313373677424643 2021-03-20 16:39:57 JJansaSDS &quot;Aleluja~ Twitt~ ## 3 258856900 1373308627658928134 2021-03-20 16:21:06 JJansaSDS &quot;Pozor, ~ Twitt~ ## 4 258856900 1373308499942375424 2021-03-20 16:20:35 JJansaSDS &quot;Ne poza~ Twitt~ ## 5 258856900 1373308106206277633 2021-03-20 16:19:02 JJansaSDS &quot;Mödendo~ Twitt~ ## 6 258856900 1373307672087429124 2021-03-20 16:17:18 JJansaSDS &quot;V etrt~ Twitt~ ## # ... with 84 more variables: display_text_width &lt;dbl&gt;, ## # reply_to_status_id &lt;chr&gt;, reply_to_user_id &lt;chr&gt;, ## # reply_to_screen_name &lt;chr&gt;, is_quote &lt;lgl&gt;, is_retweet &lt;lgl&gt;, ## # favorite_count &lt;int&gt;, retweet_count &lt;int&gt;, quote_count &lt;int&gt;, ## # reply_count &lt;int&gt;, hashtags &lt;list&gt;, symbols &lt;list&gt;, urls_url &lt;list&gt;, ## # urls_t.co &lt;list&gt;, urls_expanded_url &lt;list&gt;, media_url &lt;list&gt;, ## # media_t.co &lt;list&gt;, media_expanded_url &lt;list&gt;, media_type &lt;list&gt;, ... slovtwit &lt;- read_rds(&quot;data/tmls_all_slo_politicians_2021-09-18.rds&quot;) head(slovtwit) ## # A tibble: 6 x 90 ## user_id status_id created_at screen_name text source ## &lt;chr&gt; &lt;chr&gt; &lt;dttm&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 258856900 1439192528507621376 2021-09-18 11:40:12 JJansaSDS &quot;V Zagor~ Twitt~ ## 2 258856900 1439191956303777797 2021-09-18 11:37:55 JJansaSDS &quot;Iskrena~ Twitt~ ## 3 258856900 1439190521843421185 2021-09-18 11:32:13 JJansaSDS &quot;Discuss~ Twitt~ ## 4 258856900 1439190476091973635 2021-09-18 11:32:03 JJansaSDS &quot;e 1995~ Twitt~ ## 5 258856900 1439190233589895170 2021-09-18 11:31:05 JJansaSDS &quot;#Taliba~ Twitt~ ## 6 258856900 1439190017390358528 2021-09-18 11:30:13 JJansaSDS &quot;Tako se~ Twitt~ ## # ... with 84 more variables: display_text_width &lt;dbl&gt;, ## # reply_to_status_id &lt;chr&gt;, reply_to_user_id &lt;chr&gt;, ## # reply_to_screen_name &lt;chr&gt;, is_quote &lt;lgl&gt;, is_retweet &lt;lgl&gt;, ## # favorite_count &lt;int&gt;, retweet_count &lt;int&gt;, quote_count &lt;int&gt;, ## # reply_count &lt;int&gt;, hashtags &lt;list&gt;, symbols &lt;list&gt;, urls_url &lt;list&gt;, ## # urls_t.co &lt;list&gt;, urls_expanded_url &lt;list&gt;, media_url &lt;list&gt;, ## # media_t.co &lt;list&gt;, media_expanded_url &lt;list&gt;, media_type &lt;list&gt;, ... Izbor asopisnih lankov, preteno v rubriki zdravje oz. koronavirus. parent_folder&lt;-&quot;data/&quot; filenames &lt;- list.files(parent_folder, recursive=TRUE, full.names = T, pattern = &quot;\\\\.json$&quot;) head(filenames, 3) ## [1] &quot;data//casniki/delo_korona2.json&quot; &quot;data//casniki/delo_mnenja2.json&quot; ## [3] &quot;data//casniki/delo_novice2.json&quot; # slovbes &lt;- lapply(filenames,load,.GlobalEnv) slovcas &lt;- readtext(filenames, text_field = &quot;text&quot;, encoding = &quot;latin1&quot;, verbosity = 0, ignore_missing_files = T) slovcas ## readtext object consisting of 2674 documents and 4 docvars. ## # Description: df [2,674 x 6] ## doc_id text date title intro url ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 delo_korona2.json.1 &quot;\\&quot;Vladni gov\\&quot;...&quot; 2020-08-19 Hrvaka ~ Vlada b~ https:/~ ## 2 delo_korona2.json.2 &quot;\\&quot;Ladja grk\\&quot;...&quot; 2020-08-19 Po zasid~ Kaj se ~ https:/~ ## 3 delo_korona2.json.3 &quot;\\&quot;V torek so\\&quot;...&quot; 2020-08-19 V Sloven~ Aktivno~ https:/~ ## 4 delo_korona2.json.4 &quot;\\&quot;KLJUNI PO\\&quot;...&quot; 2020-08-19 Na Hrva~ V lank~ https:/~ ## 5 delo_korona2.json.5 &quot;\\&quot;tevilo ok\\&quot;...&quot; 2020-08-18 Kacin: U~ Na Hrva~ https:/~ ## 6 delo_korona2.json.6 &quot;\\&quot;Nestrpnost\\&quot;...&quot; 2020-08-19 Vroina ~ V izbor~ https:/~ ## # ... with 2,668 more rows 18.3 Korpus sltwit_corp &lt;- corpus(slovtwit, text_field = &quot;text&quot;) slcas_corp &lt;- corpus(slovcas) library(DT) slcas_stat &lt;- summary(slcas_corp, n = 2674) # DT::datatable(slcas_stat, fillContainer = TRUE, filter = &quot;top&quot;, # options = list(pageLength = 4)) DT::datatable(head(slcas_stat, 30), filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;Text&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) Ponovno zdrui statistiko in text v eno podatkovno zbirko. slcas &lt;- slcas_stat %&gt;% rename(doc_id = Text) %&gt;% left_join(slovcas) slcas_summary &lt;- textstat_summary(slcas_corp) %&gt;% rename(doc_id = document) slcas1 &lt;- as_tibble(slcas) %&gt;% left_join(slcas_summary, by = &quot;doc_id&quot;) DT::datatable(head(slcas1, 30), filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;doc_id&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) 18.3.0.1 Zapii na disk. # write_csv2(slcas1, &quot;data/slovenski_casniki.csv&quot;) 18.4 Besedne oblike in matrika slcas_toks &lt;- tokens(slcas_corp, remove_numbers = T, remove_punct = T, remove_symbols = T, remove_url = T) slcas_dfm &lt;- dfm(slcas_toks) 18.5 Pogostnost oblik freqs &lt;- textstat_frequency(slcas_dfm) DT::datatable(head(freqs, 30), filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;feature&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) 18.6 Konkordance Za sestavo konkordanc, ki vsebujejo zaelene naklonske zgradbe, uporabljamo funkcijo kwic() programa quanteda. Konkordanco lahko ustvarimo iz jezikovnega gradiva (corpus) ali besednega seznama (tokens). Prednostni nain je slednji, saj nam omogoa tudi izloanje nezaelenih izrazov (npr. url, tevilk idr.). slcas_toks2 &lt;- tokens(slcas_corp, remove_numbers = T, remove_punct = FALSE, remove_symbols = T, remove_url = T) treba &lt;- kwic(slcas_toks2, pattern = &quot;treba&quot;) S funkcijo as_tibble() pretvorimo konkordanni seznam v podatkovni niz ali tabelo (prim. Excel). To nam omogoa lepi in pregledneji izpis preglednice in raunanje deleev in drugih koliin s funkcijami programskega svenja tidyverse. treba_kwic &lt;- as_tibble(treba) DT::datatable(treba_kwic, filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) morati &lt;- kwic(slcas_toks2, pattern = c(&quot;morati&quot;, &quot;mora&quot;, &quot;moram&quot;, &quot;mora&quot;, &quot;morava&quot;, &quot;morata&quot;, &quot;morajo&quot;, &quot;moramo&quot;, &quot;moral&quot;, &quot;morala&quot;, &quot;morali&quot;, &quot;morale&quot;, &quot;moralo&quot;)) morati_kwic &lt;- as_tibble(morati) DT::datatable(morati_kwic, filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) morati_kwic %&gt;% count(pattern, sort = T) %&gt;% mutate(pattern = fct_reorder(pattern, n)) %&gt;% ggplot(aes(n, pattern, fill = rainbow(12))) + geom_col() + theme(legend.position = &quot;none&quot;) Next, we calculate the frequency and dispersion of tokens per narrative, which contain the terms dark and light. term1 &lt;- kwic(slcas_toks2, &quot;treba&quot;, valuetype = &quot;regex&quot;, case_insensitive = T) %&gt;% group_by(docname) %&gt;% summarise(hits = n()) %&gt;% mutate(percentage = hits/(slcas_stat$Tokens[1:length(hits)]/100), searchterm = &quot;treba&quot;) %&gt;% arrange(desc(percentage)) term2 &lt;- kwic(slcas_toks2, &quot;mora*&quot;, valuetype = &quot;regex&quot;, case_insensitive = T) %&gt;% group_by(docname) %&gt;% summarise(hits = n()) %&gt;% mutate(percentage = hits/(slcas_stat$Tokens[1:length(hits)]/100), searchterm = &quot;mora*&quot;) %&gt;% arrange(desc(percentage)) term1 %&gt;% arrange(-percentage) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) term2 %&gt;% arrange(-percentage) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) 18.7 Kolokacije collo2 &lt;- textstat_collocations(slcas_corp) write_rds(collo2, &quot;data/slcas_corp_collocations2.rds&quot;) write_csv(collo2, &quot;data/slcas_corp_collocations2.csv&quot;) collo2 %&gt;% filter(str_detect(collocation, &quot;\\\\btreba\\\\b&quot;)) %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;collocation&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) collo2 %&gt;% filter(str_detect(collocation, &quot;\\\\bmora&quot;)) %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;collocation&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) collo3 &lt;- textstat_collocations(slcas_corp, size = 3, tolower = T) collo3 %&gt;% filter(str_detect(collocation, &quot;\\\\btreba\\\\b&quot;)) %&gt;% arrange(-count) %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;collocation&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) collo3 %&gt;% filter(str_detect(collocation, &quot;\\\\bmora&quot;)) %&gt;% arrange(-count) %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;collocation&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) 18.8 Konkordance (po povedih) Ena monost je tokenizacija po povedih, tako da lahko izvleemo zgradbo iz posameznih povedi. To ima prednost, da lahko doloim dolino in morebitne druge lastnosti povedi, ki vsebuje naklonsko zgradbo, v primerjavi s povedmi brez naklonske zgradbe. Nastavitev window = 1 doloa, da elimo zajeti eno poved pred iskano zgradbo in eno po iskani zgradbi. text &lt;- slovcas$text toks &lt;- tokens(text, what = &#39;sentence&#39;) Keyword je v tem primeru poved z iskano naklonsko zgradbo, pre je poved pred njo, post pa poved, ki ji sledi. kwic_mora_poved &lt;- as_tibble(kwic( # toks, phrase(&#39;\\\\bmora*\\\\b\\\\s\\\\b[a-z]*ti\\\\b&#39;), # follow each other toks, phrase(&#39;\\\\bmora*\\\\b&#39;), # there may be other words in between valuetype = &#39;regex&#39;, window = 1)) DT::datatable(kwic_mora_poved, filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) To bi naredili e za druge naklonske zgradbe. 18.9 Konkordance (fraze) Druga monost izvlee besedne zveze iz jezikovnega gradiva (corpus). V tem primeru uporabljamo kwic() in kot vzorec (pattern) izberemo phrase(). morati2 &lt;- kwic(slcas_corp, valuetype = &quot;glob&quot;, pattern = phrase(c(&quot;mora* *ti&quot;, &quot;mora* *i&quot;)), case_insensitive = T) morati2_kwic &lt;- as_tibble(morati2) morati2_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) treba2 &lt;- kwic(slcas_corp, valuetype = &quot;glob&quot;, pattern = phrase(c(&quot;treba *ti&quot;, &quot;treba *i&quot;)), case_insensitive = T) treba2_kwic &lt;- as_tibble(treba2) treba2_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) potrebno2 &lt;- kwic(slcas_corp, valuetype = &quot;glob&quot;, pattern = phrase(c(&quot;potrebno *ti&quot;, &quot;potrebno *i&quot;)), case_insensitive = T) potrebno2_kwic &lt;- as_tibble(potrebno2) potrebno2_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) 18.9.1 asniki Zgoraj smo e pridobili konkordance iz besednega seznama (tokens), ki smo organizirali po povedih (sentences) namesto po besedilih (doc_id). Konkordance so prikazovale tri povedi (keyword, pre- in post-). Spodnji nain najprej predvideva pretvorbo jezikovnega gradiva (corpus) v povedi (sentences), in sicer s funkcijo corpus_reshape(), ki je sestavni del programa quanteda. Na tak nain prikazujemo naklonsko zgradbo kot keyword, funkcija kwic() pa ima nastavljeno iroko okno, tj. window = 50. slcas_corp_sent &lt;- corpus_reshape(slcas_corp, to = &quot;sentences&quot;, use_docvars = T) Poizvedba: med naklonskim izrazom morati oz. treba in nedolonikom so lahko tudi druge besede. Vsi izrazi so znotraj doloene povedi. morati3 &lt;- kwic(slcas_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;mora* *ti&quot;, &quot;mora* *i&quot;)), case_insensitive = T) treba3 &lt;- kwic(slcas_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;treba *ti&quot;, &quot;treba *i&quot;)), case_insensitive = T) Prikaz konkordanne preglednice. morati3_kwic &lt;- as_tibble(morati3) morati3_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) treba3_kwic &lt;- as_tibble(treba3) treba3_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) potrebno3 &lt;- kwic(slcas_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;potrebno *ti&quot;, &quot;potrebno *i&quot;)), case_insensitive = T) potrebno3_kwic &lt;- as_tibble(potrebno3) potrebno3_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) 18.9.2 twitter Pretvorba jezikovnega gradiva, tako da bo osnovna enota poved (sentences). sltwit_corp_sent &lt;- corpus_reshape(sltwit_corp, to = &quot;sentences&quot;, use_docvars = T) Poizvedba in prikaz konkordanne preglednice. morati3tw &lt;- kwic(sltwit_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;mora* *ti&quot;, &quot;mora* *i&quot;)), case_insensitive = T) morati3tw_kwic &lt;- as_tibble(morati3tw) morati3tw_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) treba3tw &lt;- kwic(sltwit_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;treba *ti&quot;, &quot;treba *i&quot;)), case_insensitive = T) treba3tw_kwic &lt;- as_tibble(treba3tw) treba3tw_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) potrebno3tw &lt;- kwic(sltwit_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;potrebno *ti&quot;, &quot;potrebno *i&quot;)), case_insensitive = T) potrebno3tw_kwic &lt;- as_tibble(potrebno3tw) potrebno3tw_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) imeti3tw &lt;- kwic(sltwit_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;ima* za *ti&quot;, &quot;ima* za *i&quot;, &quot;imel* za *ti&quot;, &quot;imel* za *i&quot;)), case_insensitive = T) imeti3tw_kwic &lt;- as_tibble(imeti3tw) imeti3tw_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) imeti3twr &lt;- kwic(sltwit_corp_sent, valuetype = &quot;regex&quot;, window = 50, pattern = phrase(c(&quot;\\\\bima*\\\\b \\\\bza\\\\b t$&quot;, &quot;\\\\bima*\\\\b \\\\bza\\\\b ti$&quot;)), case_insensitive = T) imeti3twr_kwic &lt;- as_tibble(imeti3twr) imeti3twr_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 10, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) rabiti3tw &lt;- kwic(sltwit_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;rabi* za *ti&quot;, &quot;rabi* za *i&quot;)), case_insensitive = T) rabiti3tw_kwic &lt;- as_tibble(rabiti3tw) rabiti3tw_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 3, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) rabiti3twr &lt;- kwic(sltwit_corp_sent, valuetype = &quot;regex&quot;, window = 50, pattern = phrase(c(&quot;\\\\brab*\\\\b \\\\bza\\\\b t$&quot;, &quot;\\\\brab*\\\\b \\\\bza\\\\b ti$&quot;)), case_insensitive = T) rabiti3twr_kwic &lt;- as_tibble(rabiti3twr) rabiti3twr_kwic %&gt;% DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 3, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) )) %&gt;% formatStyle(&quot;keyword&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) 18.10 Delei glagolov V nadaljevanju uporabljajo konkordance iz prejnjega odseka, ki vsebujejo zveze naklonskega glagola in nedolonika kot, tj. phrase(). Izraunali bomo delee nedolonikov, ki spremljajo naklonski glagol morati in treba (in nekatere druge). 18.10.1 twitter m1tw &lt;- morati3tw_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% mutate(syl_inf = nsyllable::nsyllable(inf)) %&gt;% mutate(modal = &quot;morati&quot;, sample = &quot;twitter&quot;) m1tw %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) morati3tw_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% filter(n &gt;5) %&gt;% mutate(inf = fct_reorder(inf, n)) %&gt;% ggplot(aes(procent, inf, fill = inf)) + geom_col() + theme(legend.position = &quot;none&quot;) t1tw &lt;- treba3tw_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% mutate(syl_inf = nsyllable::nsyllable(inf)) %&gt;% mutate(modal = &quot;treba&quot;, sample = &quot;twitter&quot;) t1tw %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) treba3tw_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% filter(n &gt; 2) %&gt;% mutate(inf = fct_reorder(inf, n)) %&gt;% ggplot(aes(procent, inf, fill = inf)) + geom_col() + theme(legend.position = &quot;none&quot;) p1tw &lt;- potrebno3tw_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% mutate(syl_inf = nsyllable::nsyllable(inf)) %&gt;% mutate(modal = &quot;potrebno&quot;, sample = &quot;twitter&quot;) p1tw %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) potrebno3tw_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% filter(n &gt; 2) %&gt;% mutate(inf = fct_reorder(inf, n)) %&gt;% ggplot(aes(procent, inf, fill = inf)) + geom_col() + theme(legend.position = &quot;none&quot;) 18.10.2 asniki m1 &lt;- morati3_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% mutate(syl_inf = nsyllable::nsyllable(inf)) %&gt;% mutate(modal = &quot;morati&quot;, sample = &quot;casniki&quot;) m1 %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) morati3_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% filter(n &gt;15) %&gt;% mutate(inf = fct_reorder(inf, n)) %&gt;% ggplot(aes(procent, inf, fill = inf)) + geom_col() + theme(legend.position = &quot;none&quot;) t1 &lt;- treba3_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% mutate(syl_inf = nsyllable::nsyllable(inf)) %&gt;% mutate(modal = &quot;treba&quot;, sample = &quot;casniki&quot;) t1 %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) treba3_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% filter(n &gt;5) %&gt;% mutate(inf = fct_reorder(inf, n)) %&gt;% ggplot(aes(procent, inf, fill = inf)) + geom_col() + theme(legend.position = &quot;none&quot;) p1 &lt;- potrebno3_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% mutate(syl_inf = nsyllable::nsyllable(inf)) %&gt;% mutate(modal = &quot;potrebno&quot;, sample = &quot;asniki&quot;) p1 %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) potrebno3_kwic %&gt;% separate(keyword, into = c(&quot;modal&quot;, &quot;inf&quot;), sep = &quot; &quot;) %&gt;% count(inf, sort = T) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% filter(n &gt;5) %&gt;% mutate(inf = fct_reorder(inf, n)) %&gt;% ggplot(aes(procent, inf, fill = inf)) + geom_col() + theme(legend.position = &quot;none&quot;) 18.10.3 vsa besedila modalinf0 &lt;- bind_rows(m1,t1,m1tw,t1tw) %&gt;% select(sample, modal, inf, n, procent, syl_inf) %&gt;% mutate(modal = tolower(modal), inf = tolower(inf)) modalinf0 %&gt;% DT::datatable(slcas_stat, fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) modalinf0_all &lt;- modalinf0 %&gt;% group_by(modal, inf) %&gt;% arrange(inf) %&gt;% summarise(freq = sum(n)) %&gt;% mutate(pct = round(100*freq / sum(freq), 2)) %&gt;% mutate(syl_inf = nsyllable::nsyllable(inf)) %&gt;% arrange(-pct) modalinf0_all %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) # write_rds(modalinf0, &quot;data/modalinf0.rds&quot;) # write_csv(modalinf0, &quot;data/modalinf0.csv&quot;) # write_rds(modalinf0_all, &quot;data/modalinf0_all.rds&quot;) # write_csv(modalinf0_all, &quot;data/modalinf0_all.csv&quot;) modalinf &lt;- rbind(m1,t1,p1,m1tw,t1tw,p1tw) %&gt;% select(sample, modal, inf, n, procent, syl_inf) %&gt;% mutate(modal = tolower(modal), inf = tolower(inf)) modalinf %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) modalinf_all &lt;- modalinf %&gt;% group_by(modal, inf) %&gt;% arrange(inf) %&gt;% summarise(freq = sum(n)) %&gt;% mutate(pct = round(100*freq / sum(freq), 2)) %&gt;% mutate(syl_inf = nsyllable::nsyllable(inf)) %&gt;% arrange(-pct) modalinf_all %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) # write_rds(modalinf, &quot;data/modalinf.rds&quot;) # write_csv(modalinf, &quot;data/modalinf.csv&quot;) # write_rds(modalinf_all, &quot;data/modalinf_all.rds&quot;) # write_csv(modalinf_all, &quot;data/modalinf_all.csv&quot;) 18.10.3.1 glmer library(lme4) m000 &lt;- glmer(n ~ 1 + (1|sample), poisson, data = modalinf0) m001 &lt;- glmer(n ~ 1 + modal*syl_inf + (1|sample), poisson, data = modalinf0) anova(m000, m001) ## Data: modalinf0 ## Models: ## m000: n ~ 1 + (1 | sample) ## m001: n ~ 1 + modal * syl_inf + (1 | sample) ## npar AIC BIC logLik deviance Chisq Df Pr(&gt;Chisq) ## m000 2 12451 12461 -6223.6 12447 ## m001 5 10621 10646 -5305.5 10611 1836.1 3 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 library(effects) plot(allEffects(m001), multiline = T) png(&quot;pictures/modalinf0_glmer.png&quot;) plot(allEffects(m001), multiline = T) dev.off() ## svg ## 2 18.10.3.2 asniki modalinf %&gt;% filter(sample == &quot;asniki&quot;) %&gt;% top_n(30, procent) %&gt;% ungroup() %&gt;% mutate(inf = reorder_within(inf, procent, paste0(&quot;(&quot;, procent, &quot;)&quot;), sep = &quot; &quot;)) %&gt;% ggplot(aes(procent, inf, fill = inf)) + geom_col() + theme(legend.position = &quot;none&quot;) + facet_wrap(~ modal, scales = &quot;free&quot;) # both scales are free (instead of free_x, free_y) 18.10.3.3 twitter modalinf %&gt;% filter(sample == &quot;twitter&quot;) %&gt;% top_n(30, procent) %&gt;% ungroup() %&gt;% mutate(inf = reorder_within(inf, procent, paste0(&quot;(&quot;, procent, &quot;)&quot;), sep = &quot; &quot;)) %&gt;% ggplot(aes(procent, inf, fill = inf)) + geom_col() + theme(legend.position = &quot;none&quot;) + facet_wrap(~ modal, scales = &quot;free&quot;) # both scales are free (instead of free_x, free_y) 18.10.3.4 vsa modalinf_all %&gt;% top_n(30, pct) %&gt;% ungroup() %&gt;% mutate(inf = reorder_within(inf, pct, paste0(&quot;(&quot;, pct, &quot;)&quot;), sep = &quot; &quot;)) %&gt;% ggplot(aes(pct, inf, fill = inf)) + geom_col() + scale_y_reordered() + theme(legend.position = &quot;none&quot;) + facet_wrap(~ modal, scales = &quot;free&quot;) + labs(x = &quot;procent&quot;, y = &quot;&quot;) 18.10.3.5 brez biti modalinf %&gt;% filter(procent &gt; 1) %&gt;% filter(inf != &quot;biti&quot;) %&gt;% mutate(inf = fct_reorder(inf, n)) %&gt;% ggplot(aes(procent, inf, fill = inf)) + geom_col() + theme(legend.position = &quot;none&quot;) + facet_wrap(~ modal, scales = &quot;free_x&quot;) modalinf_all %&gt;% filter(inf != &quot;biti&quot;) %&gt;% top_n(30, pct) %&gt;% ungroup() %&gt;% mutate(inf = reorder_within(inf, pct, paste0(&quot;(&quot;, pct, &quot;)&quot;), sep = &quot; &quot;)) %&gt;% ggplot(aes(pct, inf, fill = inf)) + geom_col() + scale_y_reordered() + theme(legend.position = &quot;none&quot;) + facet_wrap(~ modal, scales = &quot;free&quot;) + labs(x = &quot;procent&quot;, y = &quot;&quot;) 18.10.4 Vekratno pojavljanje Glagoli se pojavljajo enkrat ali vekrat: x &lt;- as_tibble(rbind(veckrat = c(212,82), enkrat = c(470-212,214-82))) %&gt;% rename(morati = V1, treba = V2) chisq.test(x) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: x ## X-squared = 2.4951, df = 1, p-value = 0.1142 18.10.5 imeti + nedolonik imeti3 &lt;- kwic(slcas_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;ima* za *ti&quot;, &quot;ima* za *i&quot;, &quot;imel* za *ti&quot;, &quot;imel* za *i&quot;)), case_insensitive = T) imeti3_kwic &lt;- as_tibble(imeti3) imeti3_kwic %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) imeti3tw &lt;- kwic(sltwit_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;ima* za *ti&quot;, &quot;ima* za *i&quot;, &quot;imel* za *ti&quot;, &quot;imel* za *i&quot;, &quot;ima* *ti&quot;, &quot;ima* *i&quot;, &quot;imel* *ti&quot;, &quot;imel* *i&quot;)), case_insensitive = T) imeti3tw_kwic &lt;- as_tibble(imeti3tw) imeti3tw_kwic %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) 18.10.6 rabiti + nedolonik rabiti3tw &lt;- kwic(sltwit_corp_sent, valuetype = &quot;glob&quot;, window = 50, pattern = phrase(c(&quot;rabi* za *ti&quot;, &quot;rabi* za *i&quot;, &quot;rabi* *ti&quot;, &quot;rabi* *i&quot;)), case_insensitive = T) rabiti3tw_kwic &lt;- as_tibble(rabiti3tw) rabiti3tw_kwic %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) 18.11 Udpipe analiza 18.11.1 Load model library(udpipe) destfile = &quot;slovenian-ssj-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ language_model &lt;- udpipe_download_model(language = &quot;slovenian&quot;) ud_sl &lt;- udpipe_load_model(language_model$file_model) } else { file_model = destfile ud_sl &lt;- udpipe_load_model(file_model) } 18.11.2 Annotate library(udpipe) slovcas_udpiped &lt;- udpipe_annotate(ud_sl, slovcas$text, trace = FALSE) slovcas_udpiped &lt;- as.data.frame(slovcas_udpiped) 18.11.2.1 Save # write_rds(slovcas_udpiped, &quot;data/slovcas_udpiped.rds&quot;) # write_csv(slovcas_udpiped, &quot;data/slovcas_udpiped.csv&quot;) 18.11.3 Clean tweets clean_tweet = gsub(&quot;&amp;amp&quot;, &quot; &quot;, slovtwit$text) clean_tweet = gsub(&quot;(RT|via)((?:\\\\b\\\\W*@\\\\w+)+)&quot;, &quot; &quot;, clean_tweet) clean_tweet = gsub(&quot;@\\\\w+&quot;, &quot; &quot;, clean_tweet) # clean_tweet = gsub(&quot;[[:punct:]]&quot;, &quot; &quot;, clean_tweet) clean_tweet = gsub(&quot;[[:digit:]]&quot;, &quot; &quot;, clean_tweet) # Get rid of URLs clean_tweet = gsub( &quot;\\\\s?(f|ht)(tp)(s?)(://)([^\\\\.]*)[\\\\.|/](\\\\S*)&quot;, &quot;&quot;, clean_tweet) # clean_tweet = gsub(&quot;https\\\\w+&quot;, &quot; &quot;, clean_tweet) # clean_tweet = gsub(&quot;http\\\\w+&quot;, &quot; &quot;, clean_tweet) clean_tweet = gsub(&quot;[ \\t]{2,}&quot;, &quot; &quot;, clean_tweet) clean_tweet = gsub(&quot;^\\\\s+|\\\\s+$&quot;, &quot; &quot;, clean_tweet) # Get rid of URLs # clean_tweet &lt;- str_replace_all( # clean_tweet,&quot;http://t.co/[a-z,A-Z,0-9]*{8}&quot;,&quot;&quot;) # Take out retweet header, there is only one clean_tweet &lt;- str_replace(clean_tweet,&quot;RT @[a-z,A-Z]*: &quot;,&quot; &quot;) # Get rid of hashtags clean_tweet &lt;- str_replace_all(clean_tweet,&quot;#[a-z,A-Z]*&quot;,&quot; &quot;) # Get rid of references to other screennames clean_tweet &lt;- str_replace_all(clean_tweet,&quot;@[a-z,A-Z]*&quot;,&quot; &quot;) #get rid of unnecessary spaces clean_tweet &lt;- str_replace_all(clean_tweet,&quot; &quot;,&quot; &quot;) slovtwit$text_cleaned &lt;- clean_tweet The above expression explained: ? optional space (f|ht) match f or ht tp match tp (s?) optionally match s if its there (://) match :// (.) match every character (everything) up to [.|/] a period or a forward-slash (.) then everything after that # regex &quot;((http|ftp|https):\\/\\/[\\w\\-]+(\\.[\\w\\-]+)+([\\w\\-\\.,@?^=%&amp;amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;amp;/~\\+#])?)&quot; 18.11.4 Annotate tweets slovtwit_udpiped &lt;- udpipe_annotate(ud_sl, slovtwit$text_cleaned, trace = F) slovtwit_udpiped &lt;- as.data.frame(slovtwit_udpiped) 18.11.4.1 Save tweets # write_rds(slovtwit_udpiped, &quot;data/slovtwit_udpiped.rds&quot;) # write_csv(slovtwit_udpiped, &quot;data/slovtwit_udpiped.csv&quot;) 18.11.5 tidytext tokenize_annotate = function(tbl){ tbl %&gt;% unnest_tokens(word, token, drop = F) %&gt;% cbind_morphological(term = &quot;feats&quot;, which = c(&quot;PronType&quot;,&quot;NumType&quot;,&quot;Poss&quot;,&quot;Reflex&quot;, &quot;Foreign&quot;,&quot;Abbr&quot;,&quot;Typo&quot;, &quot;Gender&quot;,&quot;Animacy&quot;,&quot;NounClass&quot;, &quot;Case&quot;,&quot;Number&quot;,&quot;Definite&quot;,&quot;Degree&quot;, &quot;VerbForm&quot;,&quot;Person&quot;,&quot;Tense&quot;,&quot;Mood&quot;, &quot;Aspect&quot;,&quot;Voice&quot;,&quot;Evident&quot;, &quot;Polarity&quot;,&quot;Polite&quot;,&quot;Clusivity&quot;)) %&gt;% mutate(txt = str_replace_all(sentence, &quot;[:punct:]&quot;, &quot;&quot;)) %&gt;% mutate(sentlen = quanteda::ntoken(txt)) %&gt;% mutate(syllables = nsyllable::nsyllable(txt)) %&gt;% mutate(types = quanteda::ntype(txt)) %&gt;% mutate(wordlen = syllables/sentlen) %&gt;% mutate(ttr = types/sentlen) %&gt;% select(-txt, -feats) } 18.11.5.1 Odpri udpiped # slovtwit_udpiped &lt;- read_rds(&quot;data/slovtwit_udpiped.rds&quot;) # slovcas_udpiped &lt;- read_rds(&quot;data/slovcas_udpiped.rds&quot;) slovtwit_df &lt;- slovtwit_udpiped %&gt;% tokenize_annotate() %&gt;% mutate(language = &quot;slv&quot;, texttype = &quot;twitter&quot;) slovcas_df &lt;- slovcas_udpiped %&gt;% tokenize_annotate() %&gt;% mutate(language = &quot;slv&quot;, texttype = &quot;news&quot;) slovtxts &lt;- bind_rows(slovtwit_df, slovcas_df) 18.11.5.2 Shrani ud # write_rds(slovtxts, &quot;data/slovtxts.rds&quot;) # write_csv(slovtxts, &quot;data/slovtxts.csv&quot;) 18.11.5.3 Odpri ud # slovtxts &lt;- read_rds(&quot;data/slovtxts.rds&quot;) 18.11.5.4 Sample ud Majhen vzorec za oceno, kolikokrat je uporabljen morati v primeru zunanje nujnosti (ali drugih pomenov). twitter100 &lt;- slovtxts %&gt;% filter(texttype == &quot;twitter&quot;) %&gt;% filter(lemma == &quot;morati&quot; | lemma == &quot;treba&quot;) %&gt;% slice_sample(n = 100, replace = TRUE) # writexl::write_xlsx(twitter100, &quot;data/twitter100.xlsx&quot;) 18.11.6 Dependenca slo_deprel &lt;- slovtxts %&gt;% group_by(texttype) %&gt;% # filter(texttype == &quot;news&quot; | texttype == &quot;twitter&quot;) %&gt;% count(dep_rel, sort = TRUE) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = texttype, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% mutate(dep_rel = str_replace(dep_rel, &quot;0&quot;, &quot;Unknown&quot;)) slo_deprel %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) 18.11.7 Vizualizacija library(igraph) library(ggraph) library(ggplot2) plot_annotation &lt;- function(x, size = 3){ stopifnot(is.data.frame(x) &amp; all(c(&quot;sentence_id&quot;, &quot;token_id&quot;, &quot;head_token_id&quot;, &quot;dep_rel&quot;, &quot;token_id&quot;, &quot;token&quot;, &quot;lemma&quot;, &quot;upos&quot;, &quot;xpos&quot;, &quot;feats&quot;) %in% colnames(x))) x &lt;- x[!is.na(x$head_token_id), ] x &lt;- x[x$sentence_id %in% min(x$sentence_id), ] edges &lt;- x[x$head_token_id != 0, c(&quot;token_id&quot;, &quot;head_token_id&quot;, &quot;dep_rel&quot;)] edges$label &lt;- edges$dep_rel g &lt;- graph_from_data_frame(edges, vertices = x[, c(&quot;token_id&quot;, &quot;token&quot;, &quot;lemma&quot;, &quot;upos&quot;, &quot;xpos&quot;, &quot;feats&quot;)], directed = TRUE) windowsFonts(&quot;Arial Narrow&quot; = windowsFont(&quot;Arial&quot;)) ggraph(g, layout = &quot;linear&quot;) + geom_edge_arc(ggplot2::aes(label = dep_rel, vjust = -0.20), arrow = grid::arrow(length = unit(4, &#39;mm&#39;), ends = &quot;last&quot;, type = &quot;closed&quot;), end_cap = ggraph::label_rect(&quot;wordswordswords&quot;), label_colour = &quot;red&quot;, check_overlap = TRUE, label_size = size) + geom_node_label(ggplot2::aes(label = token), col = &quot;darkgreen&quot;, size = size, fontface = &quot;bold&quot;) + geom_node_text(ggplot2::aes(label = upos), nudge_y = -0.35, size = size) + theme_graph(base_family = &quot;Arial Narrow&quot;) + labs(title = &quot;udpipe output&quot;, subtitle = &quot;tokenisation, parts of speech tagging &amp; dependency relations&quot;) } # Slovenian mytext = &quot;Ali jo bodo morali zapustiti&quot; %&gt;% enc2utf8() x = udpipe(mytext, &quot;slovenian&quot;) x3 = plot_annotation(x, size = 3) x3 png(&quot;pictures/morati_zapustiti.png&quot;) x3 dev.off() ## svg ## 2 # Slovenian mytext = &quot;Ali jo bo treba zapustiti&quot; %&gt;% enc2utf8() x = udpipe(mytext, &quot;slovenian&quot;) x4 = plot_annotation(x, size = 3) x4 png(&quot;pictures/treba_zapustiti.png&quot;) x4 dev.off() ## svg ## 2 18.11.8 Predmet pred/za modal predmet je NOUN ali PRON x = slovtxts %&gt;% group_by(lemma) %&gt;% filter(lemma == &quot;morati&quot; | lemma == &quot;treba&quot; | lemma == &quot;potreben&quot;) x %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) pivot_by_verb_obj = function(tbl){ tbl %&gt;% mutate(word_order = ifelse(token_id &gt; head_token_id, &quot;VO&quot;, &quot;OV&quot;)) %&gt;% count(dep_rel, word_order) %&gt;% mutate(pct = round(100*n/sum(n),2)) %&gt;% pivot_wider(names_from = texttype, values_from = c(n, pct)) %&gt;% mutate(across(everything(), ~ replace_na(.x, 0))) %&gt;% mutate(dep_rel = str_replace(dep_rel, &quot;0&quot;, &quot;Unknown&quot;)) %&gt;% select(-dep_rel) } vo_nominal_morati = slovtxts %&gt;% group_by(texttype) %&gt;% # filter(str_detect(sentence, &quot;\\\\bmora*|\\\\btreba\\\\b&quot;)) %&gt;% filter(str_detect(sentence, &quot;\\\\bmora*&quot;)) %&gt;% filter(dep_rel == &quot;obj&quot; &amp; upos %in% c(&quot;NOUN&quot;, &quot;PROPN&quot;)) %&gt;% pivot_by_verb_obj() %&gt;% mutate(word_class = &quot;NOUN&quot;) %&gt;% mutate(modal = &quot;morati&quot;) vo_nominal_morati %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) vo_nominal_treba = slovtxts %&gt;% group_by(texttype) %&gt;% # filter(str_detect(sentence, &quot;\\\\bmora*|\\\\btreba\\\\b&quot;)) %&gt;% filter(str_detect(sentence, &quot;\\\\btreba\\\\b&quot;)) %&gt;% filter(dep_rel == &quot;obj&quot; &amp; upos %in% c(&quot;NOUN&quot;, &quot;PROPN&quot;)) %&gt;% pivot_by_verb_obj() %&gt;% mutate(word_class = &quot;NOUN&quot;) %&gt;% mutate(modal = &quot;treba&quot;) vo_nominal_treba %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) vo_pronominal_morati = slovtxts %&gt;% group_by(texttype) %&gt;% # filter(str_detect(sentence, &quot;\\\\bmora*|\\\\btreba\\\\b&quot;)) %&gt;% filter(str_detect(sentence, &quot;\\\\bmora*&quot;)) %&gt;% filter(dep_rel == &quot;obj&quot; &amp; upos %in% c(&quot;PRON&quot;)) %&gt;% pivot_by_verb_obj() %&gt;% mutate(word_class = &quot;PRON&quot;) %&gt;% mutate(modal = &quot;morati&quot;) vo_pronominal_morati %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) vo_pronominal_treba = slovtxts %&gt;% group_by(texttype) %&gt;% # filter(str_detect(sentence, &quot;\\\\bmora*|\\\\btreba\\\\b&quot;)) %&gt;% filter(str_detect(sentence, &quot;\\\\btreba\\\\b&quot;)) %&gt;% filter(dep_rel == &quot;obj&quot; &amp; upos %in% c(&quot;PRON&quot;)) %&gt;% pivot_by_verb_obj() %&gt;% mutate(word_class = &quot;PRON&quot;) %&gt;% mutate(modal = &quot;treba&quot;) vo_pronominal_treba %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) verb_object = bind_rows(vo_nominal_morati, vo_nominal_treba, vo_pronominal_morati, vo_pronominal_treba) verb_object %&gt;% # select(-pct_news,-pct_twitter) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) treba, noun: ve OV kot VO v twitterju v primerjavi s asniki. verb_object[3:4,2:3] ## # A tibble: 2 x 2 ## n_news n_twitter ## &lt;dbl&gt; &lt;dbl&gt; ## 1 238 132 ## 2 631 268 verb_object[3:4,2:3] %&gt;% chisq.test() ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: . ## X-squared = 3.9095, df = 1, p-value = 0.04801 treba, pron: ve VO kot OV v twitterju v primerjavi s asniki. verb_object[7:8,2:3] ## # A tibble: 2 x 2 ## n_news n_twitter ## &lt;dbl&gt; &lt;dbl&gt; ## 1 261 84 ## 2 54 43 verb_object[7:8,2:3] %&gt;% chisq.test() ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: . ## X-squared = 13.803, df = 1, p-value = 0.000203 # library(esquisse) # esquisser(verb_object) ggplot(verb_object) + aes(x = word_order, y = pct_twitter, fill = modal) + geom_boxplot(shape = &quot;circle&quot;) + scale_fill_hue(direction = 1) + theme_minimal() ggplot(verb_object) + aes(x = word_order, y = pct_news, fill = modal) + geom_boxplot(shape = &quot;circle&quot;) + scale_fill_hue(direction = 1) + theme_minimal() ggplot(verb_object) + aes(x = word_class, y = pct_news, fill = word_order) + geom_col() + scale_fill_hue(direction = 1) + theme_minimal() + facet_wrap(vars(modal)) ggplot(verb_object) + aes(x = word_class, y = pct_twitter, fill = word_order) + geom_col() + scale_fill_hue(direction = 1) + theme_minimal() + facet_wrap(vars(modal)) 18.12 Kwic udpipe Cilj: analiza nedolonikov z udpipe in funkcijo tokenize_annotate(), ki sem jo sestavil zgoraj. Izbral sem tabelo, ki vsebuje le naklonske zgradbe morati /treba + nedolonik. kwic_ud &lt;- modalinf0 %&gt;% pull(inf) %&gt;% udpipe_annotate(ud_sl, ., trace = F) kwic_ud &lt;- as.data.frame(kwic_ud) kwic_ud &lt;- kwic_ud %&gt;% tokenize_annotate() kwic_ud_select &lt;- kwic_ud %&gt;% select(token, lemma, upos, xpos, morph_aspect, syllables) 18.12.1 Zdrui modalinf0_ud &lt;- modalinf0 %&gt;% bind_cols(kwic_ud_select) %&gt;% select(-token, -lemma, -syllables) 18.12.2 Pregled napak Kateri nedoloniki sploh niso nedoloniki in obratno? modalinf0_ud %&gt;% filter(upos != &quot;VERB&quot; &amp; upos != &quot;AUX&quot;) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) 18.12.2.1 Shrani write_lines(modalinf0_ud %&gt;% pull(inf), &quot;data/modalinf0_ud_inf.txt&quot;) 18.12.3 Obeliks xml Zgoraj sem uporabil udpipe za doloevanje oblikoslovnih lastnosti nedolonikov. Primerjam e z analizo programa OBELIKS, ki je analiziral nedolonike iz datoteke data/modalinf0_ud_inf.txt. Obeliksova izhodna datoteka ima format xml. Datoteko moram pretvoriti. Pri tem mi pomaga library(xml2). Poglej tudi tabele na spletni strani IJS za pretvorbo specifikacij josMSD: https://nl.ijs.si/jos/josMSD-en.html. Parsing of xml documents with library(xml2): gastonsanchez library(rvest) library(xml2) obeliks &lt;- read_xml(&quot;data/modalinf0_ud_inf.xml&quot;) obeliks ## {xml_document} ## &lt;TEI xmlns=&quot;http://www.tei-c.org/ns/1.0&quot;&gt; ## [1] &lt;text&gt;\\n &lt;body&gt;\\n &lt;p&gt;\\n &lt;s&gt;\\n &lt;w msd=&quot;Gp-n&quot; lemma=&quot;biti&quot;&gt; ... We use the xml_length() to know how many elements or nodes are in the root node: xml_length(obeliks) ## [1] 1 Only one node in this xml document. I need the information msd from child5. root = xml_root(obeliks) child1 = xml_children(root) child2 = xml_children(child1) child3 = xml_children(child2) child4 = xml_children(child3) child5 = xml_children(child4) # Access the children nodes of (root) node 1 xml_child(obeliks, search = 1) ## {xml_node} ## &lt;text&gt; ## [1] &lt;body&gt;\\n &lt;p&gt;\\n &lt;s&gt;\\n &lt;w msd=&quot;Gp-n&quot; lemma=&quot;biti&quot;&gt;biti&lt;/w&gt;\\n &lt;/ ... # The function xml_attrs() gives you the attributes of a node. In this case, the node child5 has the attributes msd and lemma. xml_attrs(child5)[1:3] ## [[1]] ## msd lemma ## &quot;Gp-n&quot; &quot;biti&quot; ## ## [[2]] ## msd lemma ## &quot;Ggnn&quot; &quot;imeti&quot; ## ## [[3]] ## msd lemma ## &quot;Ggdn&quot; &quot;narediti&quot; # Number of children nodes inside a given node. In this case it is 0. xml_length(child5)[1:3] ## [1] 0 0 0 # move along the children nodes xml_name(xml_children(child5)) # no name ## character(0) xml_name(xml_children(child4))[1:3] # name = &quot;w&quot; ## [1] &quot;w&quot; &quot;w&quot; &quot;w&quot; xml_name(xml_children(child3))[1:3] # name = &quot;s&quot; ## [1] &quot;s&quot; &quot;s&quot; &quot;s&quot; xml_name(xml_children(child2))[1:3] # name = &quot;p&quot; ## [1] &quot;p&quot; &quot;p&quot; &quot;p&quot; xml_name(xml_children(child1)) # name = &quot;body&quot; ## [1] &quot;body&quot; xml_name(xml_children(root)) # name = &quot;text&quot; ## [1] &quot;text&quot; title1 &lt;- xml_child(child4, &quot;w&quot;) # in this case: NA cont &lt;- xml_contents(title1) # in this case: 0 titletxt &lt;- xml_text(title1) # in this case : NA 18.12.3.1 Save child5 to csv file: child5char &lt;- as.character(child5) write_lines(child5char, &quot;data/obeliks_child5char.txt&quot;) 18.12.3.2 Open child5char and parse into data frame. obeliks_delim &lt;- read_delim(&quot;data/obeliks_child5char.txt&quot;, delim = &quot; &quot;, col_names = F) %&gt;% clean_names() %&gt;% select(-x1) %&gt;% separate(x2, into = c(&quot;x2&quot;, &quot;xpos2&quot;), sep = &quot;=&quot;, extra = &quot;merge&quot;) %&gt;% separate(x3, into = c(&quot;x3&quot;, &quot;inf2&quot;), sep = &quot;=&quot;, extra = &quot;merge&quot;) %&gt;% separate(inf2, into = c(&quot;inf2&quot;, &quot;x4&quot;), sep = &quot;&gt;&quot;, extra = &quot;merge&quot;) %&gt;% separate(x4, into = c(&quot;inf0&quot;, &quot;x4&quot;), sep = &quot;&lt;&quot;, extra = &quot;merge&quot;) %&gt;% mutate(xpos2 = str_remove_all(xpos2, &#39;&quot;&#39;), inf2 = str_remove_all(inf2, &#39;&quot;&#39;)) %&gt;% select(xpos2, inf0) 18.12.3.3 Save data frame. write_csv(obeliks_delim, &quot;data/obeliks_delim.csv&quot;) 18.12.4 Zdrui kwic in obeliks Zdruim oba podatkovna niza in v nadaljevanju popravljam napake, ki jih je naredil predvsem udpipe, v manji meri obeliks. Slednji je trainiran na slovenska besedila. # modalinf0_udobx modalinf0_udoblx &lt;- modalinf0_ud %&gt;% bind_cols(obeliks_delim) %&gt;% mutate(upos2 = case_when( str_detect(xpos2, &quot;^Gg&quot;) ~ &quot;VERB&quot;, str_detect(xpos2, &quot;^Gp&quot;) ~ &quot;AUX&quot;, TRUE ~ &quot;UNK&quot; )) %&gt;% mutate(morph_aspect2 = case_when( xpos2 == &quot;Ggnn&quot; ~ &quot;Imp&quot;, xpos2 == &quot;Ggdn&quot; ~ &quot;Perf&quot;, xpos2 == &quot;Ggvn&quot; ~ &quot;Both&quot;, xpos2 == &quot;Gp-n&quot; ~ &quot;Imp&quot;, TRUE ~ &quot;UNK&quot;)) %&gt;% mutate(inf = str_replace(inf, &quot;poceti&quot;, &quot;poeti&quot;), inf = str_replace(inf, &quot;bti&quot;, &quot;biti&quot;), inf = str_replace(inf, &quot;poveavati&quot;, &quot;poveavati&quot;), inf = str_replace(inf, &quot;prepricati&quot;, &quot;prepriati&quot;), inf = str_replace(inf, &quot;splacati&quot;, &quot;splaati&quot;), inf = str_replace(inf, &quot;spostovati&quot;, &quot;spotovati&quot;)) %&gt;% mutate(upos2 = case_when( upos == &quot;VERB&quot; &amp; upos2 == &quot;UNK&quot; ~ &quot;VERB&quot;, TRUE ~ upos2 )) %&gt;% mutate(upos2 = case_when( inf == &quot;morebiti&quot; ~ &quot;UNK&quot;, inf == &quot;biti&quot; ~ &quot;AUX&quot;, inf == &quot;temeljiti&quot; ~ &quot;VERB&quot;, inf == &quot;vesti&quot; ~ &quot;VERB&quot;, inf == &quot;pasti&quot; ~ &quot;VERB&quot;, inf == &quot;maksimizirati&quot; ~ &quot;VERB&quot;, inf == &quot;poeti&quot; ~ &quot;VERB&quot;, inf == &quot;poveavati&quot; ~ &quot;VERB&quot;, inf == &quot;prepriati&quot; ~ &quot;VERB&quot;, inf == &quot;splaati&quot; ~ &quot;VERB&quot;, inf == &quot;spotovati&quot; ~ &quot;VERB&quot;, inf == &quot;sesuti&quot; ~ &quot;VERB&quot;, TRUE ~ upos2 )) %&gt;% mutate(morph_aspect2 = case_when( upos2 == &quot;VERB&quot; &amp; upos == &quot;VERB&quot; &amp; morph_aspect2 == &quot;UNK&quot; ~ morph_aspect, TRUE ~ morph_aspect2 )) %&gt;% mutate(xpos2 = case_when( inf == &quot;biti&quot; ~ &quot;Gp-n&quot;, inf == &quot;sprejeti&quot; ~ &quot;Ggdn&quot;, inf == &quot;rei&quot; ~ &quot;Ggdn&quot;, inf == &quot;vesti&quot; ~ &quot;Ggnn&quot;, inf == &quot;izraziti&quot; ~ &quot;Ggdn&quot;, inf == &quot;zavzeti&quot; ~ &quot;Ggdn&quot;, inf == &quot;pasti&quot; ~ &quot;Ggdn&quot;, inf == &quot;temeljiti&quot; ~ &quot;Ggnn&quot;, inf == &quot;maksimizirati&quot; ~ &quot;Ggvn&quot;, inf == &quot;poeti&quot; ~ &quot;Ggvn&quot;, inf == &quot;prepriati&quot; ~ &quot;Ggdn&quot;, inf == &quot;poveavati&quot; ~ &quot;Ggnn&quot;, inf == &quot;razviti&quot; ~ &quot;Ggdn&quot;, inf == &quot;splaati&quot; ~ &quot;Ggvn&quot;, inf == &quot;sesuti&quot; ~ &quot;Ggdn&quot;, inf == &quot;spotovati&quot; ~ &quot;Ggnn&quot;, inf == &quot;zauiti&quot; ~ &quot;Ggdn&quot;, TRUE ~ xpos2 )) %&gt;% mutate(morph_aspect2 = case_when( xpos2 == &quot;Ggnn&quot; ~ &quot;Imp&quot;, xpos2 == &quot;Ggdn&quot; ~ &quot;Perf&quot;, xpos2 == &quot;Ggvn&quot; ~ &quot;Both&quot;, xpos2 == &quot;Gp-n&quot; ~ &quot;Imp&quot;, TRUE ~ &quot;UNK&quot;)) %&gt;% select(-upos, -xpos, -inf0, -morph_aspect) %&gt;% rename(upos = upos2, xpos = xpos2, morph_aspect = morph_aspect2) 18.12.4.1 Shrani zdrueno write_rds(modalinf0_udoblx, &quot;data/casniki_twitter_modalinf0_udoblx.rds&quot;) write_csv(modalinf0_udoblx, &quot;data/casniki_twitter_modalinf0_udoblx.csv&quot;) 18.12.5 Pretvorba josMSD sl&gt;en Najprej odpremo in prilagodimo tabelo josMSD, ki sem jo dobil na spletni strani IJS, josMSD: https://nl.ijs.si/jos/josMSD-en.html. josmsd = read.delim2( &quot;data/josMSD.tbl&quot;, # stolpci so loeni tabulatorsko sep = &quot;\\t&quot;, # univerzalno kodiranje rk encoding = &quot;UTF-8&quot;, # dodamo imena stolpcev (lemma, word) col.names = c(&quot;koda&quot;, &quot;msdslo&quot;, &quot;msdeng&quot;), # preberi kot rkovne nize stringsAsFactors = F) %&gt;% select(-koda) Drugi korak: pretvori podatkovni niz v loena znakovna niza. # v tem stolpcu je osnovna oblika besede lemma = as.character(josmsd$msdeng) # v tem stolpcu je ena izmed besednih oblik word = as.character(josmsd$msdslo) S funkcijo tokens_replace() programa quanteda pretvorimo slovensko specifikacijo v angleko. modalinf0_x &lt;- # zamenjava seznama (tokens_replace), s pomojo pull() tokens_replace( modalinf0_udoblx %&gt;% pull(xpos) %&gt;% tokens(), # obliko, ki jo elimo zamenjati pattern = word, # zamenjava replacement = lemma, # pazi na zaetnico case_insensitive = FALSE, # natanno ujemanje oblik valuetype = &quot;fixed&quot;) # zdaj imamo angleko specifikacijo (e je program nael zamenjavo) modalinf0_x %&gt;% head(3) ## Tokens consisting of 3 documents. ## text1 : ## [1] &quot;Va-n&quot; ## ## text2 : ## [1] &quot;Vmpn&quot; ## ## text3 : ## [1] &quot;Vmen&quot; modalinf0_udoblx$xpos2 &lt;- as.character(modalinf0_x) modalinf0_udoblx %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) 18.12.5.1 shrani xpos eng write_rds(modalinf0_udoblx, &quot;data/casniki_twitter_modalinf0_udoblx.rds&quot;) write_csv(modalinf0_udoblx, &quot;data/casniki_twitter_modalinf0_udoblx.csv&quot;) 18.12.5.2 Odpri modalinf0_udoblx &lt;- read_rds(&quot;data/casniki_twitter_modalinf0_udoblx.rds&quot;) 18.12.6 Oblikoslovje nedolonikov aspekt &lt;- modalinf0_udoblx %&gt;% filter(morph_aspect != &quot;UNK&quot;) %&gt;% group_by(modal) %&gt;% count(morph_aspect) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% pivot_wider(names_from = &quot;modal&quot;, values_from = c(&quot;n&quot;, &quot;procent&quot;)) aspekt %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) Brez biti: aspekt_brez_biti &lt;- modalinf0_udoblx %&gt;% filter(morph_aspect != &quot;UNK&quot;) %&gt;% filter(inf != &quot;biti&quot;) %&gt;% group_by(modal) %&gt;% count(morph_aspect) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% pivot_wider(names_from = &quot;modal&quot;, values_from = c(&quot;n&quot;, &quot;procent&quot;)) aspekt_brez_biti %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) chisq.test(aspekt[,2:3]) ## ## Pearson&#39;s Chi-squared test ## ## data: aspekt[, 2:3] ## X-squared = 0.27055, df = 2, p-value = 0.8735 chisq.test(aspekt_brez_biti[,2:3]) ## ## Pearson&#39;s Chi-squared test ## ## data: aspekt_brez_biti[, 2:3] ## X-squared = 0.17605, df = 2, p-value = 0.9157 Namesto pojavnic razlinice (types). aspect_types &lt;- modalinf0_udoblx %&gt;% distinct(modal, inf, .keep_all = T) %&gt;% filter(morph_aspect != &quot;UNK&quot;) %&gt;% # filter(inf != &quot;biti&quot;) %&gt;% group_by(modal) %&gt;% count(morph_aspect) %&gt;% mutate(procent = round(100*n / sum(n), 2)) %&gt;% pivot_wider(names_from = &quot;modal&quot;, values_from = c(&quot;n&quot;, &quot;procent&quot;)) aspect_types %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) chisq.test(aspect_types[,2:3]) ## ## Pearson&#39;s Chi-squared test ## ## data: aspect_types[, 2:3] ## X-squared = 0.16298, df = 2, p-value = 0.9217 18.13 Slovnina pronost Barkema (1996): grammatische Flexibilität Barkema je elel pokazati, da je mnogo ustaljenih izrazov (feste Fügungen) mnogo pronejih, kot se na splono trdi. Stefanowitsch (2006): obratno ta metoda smiselna tudi za dokazovanje, da so mariskatere jezikovne zgradbe, ki se ravnajo po splonem pravilu, manj pronih, kot na splono priakujejo. To formalno utemeljitev eli uveljaviti za ugotavljanje neke zgradbe kot konstrukcije v smislu konstrukcijske gramatike. Najprej ustvarimo ustrezno konkordanco za vsa besedila v asnikih in ivkih (tweetih). 18.13.1 konkordanca dveh zgradb morati4_kwic &lt;- morati3_kwic %&gt;% mutate(sample = &quot;casniki&quot;) treba4_kwic &lt;- treba3_kwic %&gt;% mutate(sample = &quot;casniki&quot;) morati4tw_kwic &lt;- morati3tw_kwic %&gt;% mutate(sample = &quot;twitter&quot;) treba4tw_kwic &lt;- treba3tw_kwic %&gt;% mutate(sample = &quot;twitter&quot;) konkordance_all &lt;- bind_rows(morati4_kwic, treba4_kwic, morati4tw_kwic, treba4tw_kwic) %&gt;% mutate(keyword = str_to_lower(keyword)) %&gt;% separate(keyword, into = c(&quot;keyword&quot;, &quot;inf&quot;), sep = &quot; &quot;, extra = &quot;merge&quot;) Naslednja preglednica prikazuje oblikoslovni profil glagolskih oblik glagola morati. konkordance_all %&gt;% count(keyword, sort = TRUE) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) konkordance_all %&gt;% count(keyword, inf, sort = TRUE) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) 18.13.2 Oblike glagolov (types) Zgoraj smo izvedli oblikoslovno oznaevanje (udpipe). Tu preizkuamo razlinice (types) glagola morati in drugih glagolov. morati_oblike &lt;- slovtxts %&gt;% filter(upos == &quot;VERB&quot; | upos == &quot;AUX&quot;) %&gt;% filter(lemma != &quot;biti&quot;) %&gt;% filter(lemma == &quot;morati&quot;) %&gt;% group_by(lemma, token) %&gt;% count(xpos, morph_number, morph_person, morph_tense, morph_mood, morph_aspect) %&gt;% arrange(desc(n, xpos)) glagoli_oblike &lt;- slovtxts %&gt;% filter(upos == &quot;VERB&quot; | upos == &quot;AUX&quot;) %&gt;% filter(lemma != &quot;biti&quot;) %&gt;% filter(lemma != &quot;morati&quot;) %&gt;% group_by(lemma, token) %&gt;% count(xpos, morph_number, morph_person, morph_tense, morph_mood, morph_aspect) %&gt;% arrange(desc(n, xpos)) 18.13.2.1 morph_num Glagol morati se pogosteje pojavlja v bolj zaznamovanih tevilih dvojina in mnoina kot preostali glagoli v vzorcu. morati_num &lt;- morati_oblike %&gt;% ungroup() %&gt;% count(morph_number, sort = F, name = &quot;n_morati&quot;) %&gt;% drop_na() %&gt;% mutate(pct_morati = round(100*n_morati / sum(n_morati), 2)) glagoli_num &lt;- glagoli_oblike %&gt;% ungroup() %&gt;% count(morph_number, sort = F, name = &quot;n_glagoli&quot;) %&gt;% drop_na() %&gt;% mutate(pct_glagoli = round(100*n_glagoli / sum(n_glagoli), 2)) glagoli_morph_num &lt;- bind_cols(morati_num, glagoli_num[,2:3]) glagoli_morph_num[, c(2,4)] %&gt;% chisq.test() ## ## Pearson&#39;s Chi-squared test ## ## data: . ## X-squared = 8.6688, df = 2, p-value = 0.01311 18.13.2.2 morph_pers morati_pers &lt;- morati_oblike %&gt;% ungroup() %&gt;% count(morph_person, sort = F, name = &quot;n_morati&quot;) %&gt;% drop_na() %&gt;% mutate(pct_morati = round(100*n_morati / sum(n_morati), 2)) glagoli_pers &lt;- glagoli_oblike %&gt;% ungroup() %&gt;% count(morph_person, sort = F, name = &quot;n_glagoli&quot;) %&gt;% drop_na() %&gt;% mutate(pct_glagoli = round(100*n_glagoli / sum(n_glagoli), 2)) glagoli_morph_pers &lt;- bind_cols(morati_pers, glagoli_pers[,2:3]) glagoli_morph_pers[, c(2,4)] %&gt;% chisq.test() ## ## Pearson&#39;s Chi-squared test ## ## data: . ## X-squared = 3.5748, df = 2, p-value = 0.1674 18.13.2.3 morph_tense morati_tense &lt;- morati_oblike %&gt;% ungroup() %&gt;% mutate(morph_tense = ifelse(is.na(morph_tense), &quot;other&quot;, morph_tense)) %&gt;% count(morph_tense, sort = F, name = &quot;n_morati&quot;) %&gt;% # drop_na() %&gt;% mutate(pct_morati = round(100*n_morati / sum(n_morati), 2)) glagoli_tense &lt;- glagoli_oblike %&gt;% ungroup() %&gt;% mutate(morph_tense = ifelse(is.na(morph_tense), &quot;other&quot;, morph_tense)) %&gt;% mutate(morph_tense = ifelse(morph_tense == &quot;Fut&quot;, &quot;other&quot;, morph_tense)) %&gt;% count(morph_tense, sort = F, name = &quot;n_glagoli&quot;) %&gt;% # drop_na() %&gt;% mutate(pct_glagoli = round(100*n_glagoli / sum(n_glagoli), 2)) glagoli_morph_tense &lt;- bind_cols(morati_tense, glagoli_tense[,2:3]) glagoli_morph_tense[, c(2,4)] %&gt;% chisq.test() ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: . ## X-squared = 2.3495, df = 1, p-value = 0.1253 18.13.2.4 morph_mood morati_mood &lt;- morati_oblike %&gt;% ungroup() %&gt;% mutate(morph_mood = ifelse(is.na(morph_mood), &quot;other&quot;, morph_mood)) %&gt;% count(morph_mood, sort = F, name = &quot;n_morati&quot;) %&gt;% # drop_na() %&gt;% mutate(pct_morati = round(100*n_morati / sum(n_morati), 2)) glagoli_mood &lt;- glagoli_oblike %&gt;% ungroup() %&gt;% mutate(morph_mood = ifelse(is.na(morph_mood), &quot;other&quot;, morph_mood)) %&gt;% mutate(morph_mood = case_when( morph_mood == &quot;Imp&quot; ~ &quot;other&quot;, morph_mood == &quot;Cnd&quot; ~ &quot;other&quot;, TRUE ~ morph_mood)) %&gt;% count(morph_mood, sort = F, name = &quot;n_glagoli&quot;) %&gt;% # drop_na() %&gt;% mutate(pct_glagoli = round(100*n_glagoli / sum(n_glagoli), 2)) glagoli_morph_mood &lt;- bind_cols(morati_mood, glagoli_mood[,2:3]) glagoli_morph_mood[, c(2,4)] %&gt;% chisq.test() ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: . ## X-squared = 2.2621, df = 1, p-value = 0.1326 18.13.2.5 morph_aspect morati_aspect &lt;- morati_oblike %&gt;% ungroup() %&gt;% mutate(morph_aspect = case_when( morph_aspect == &quot;Perf&quot; ~ &quot;other&quot;, is.na(morph_aspect) ~ &quot;other&quot;, TRUE ~ morph_aspect)) %&gt;% count(morph_aspect, sort = F, name = &quot;n_morati&quot;) %&gt;% # drop_na() %&gt;% mutate(pct_morati = round(100*n_morati / sum(n_morati), 2)) glagoli_aspect &lt;- glagoli_oblike %&gt;% ungroup() %&gt;% mutate(morph_aspect = case_when( morph_aspect == &quot;Perf&quot; ~ &quot;other&quot;, is.na(morph_aspect) ~ &quot;other&quot;, TRUE ~ morph_aspect)) %&gt;% count(morph_aspect, sort = F, name = &quot;n_glagoli&quot;) %&gt;% # drop_na() %&gt;% mutate(pct_glagoli = round(100*n_glagoli / sum(n_glagoli), 2)) glagoli_morph_aspect &lt;- bind_cols(morati_aspect, glagoli_aspect[,2:3]) glagoli_morph_aspect[, c(2,4)] %&gt;% chisq.test() ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: . ## X-squared = 30.129, df = 1, p-value = 4.043e-08 18.13.3 Oblike glagolov (tokens) # slovtxts &lt;- read_rds(&quot;data/slovtxts.rds&quot;) morati_count &lt;- slovtxts %&gt;% mutate(lemma = str_to_lower(lemma), token = str_to_lower(token)) %&gt;% filter(upos == &quot;VERB&quot; | upos == &quot;AUX&quot;) %&gt;% filter(lemma == &quot;morati&quot;) %&gt;% count(token, sort = T, name = &quot;freq&quot;) library(udpipe) morati_ud &lt;- morati_count %&gt;% pull(token) %&gt;% udpipe_annotate(ud_sl, ., trace = F) %&gt;% as.data.frame() %&gt;% cbind_morphological() morati_types_token &lt;- morati_ud %&gt;% left_join(morati_count, by = &quot;token&quot;) morati_xpos_freq &lt;- morati_types_token %&gt;% select(token, lemma, upos, xpos, freq) %&gt;% filter(token != &quot;mor&quot; &amp; token != &quot;morijo&quot;) %&gt;% filter(upos == &quot;VERB&quot;) glagoli_count &lt;- slovtxts %&gt;% mutate(lemma = str_to_lower(lemma), token = str_to_lower(token)) %&gt;% filter(upos == &quot;VERB&quot; | upos == &quot;AUX&quot;) %&gt;% filter(lemma != &quot;morati&quot;) %&gt;% count(token, sort = T, name = &quot;freq&quot;) glagoli_ud &lt;- glagoli_count %&gt;% pull(token) %&gt;% udpipe_annotate(ud_sl, ., trace = F) %&gt;% as.data.frame() %&gt;% cbind_morphological() glagoli_types_token &lt;- glagoli_ud %&gt;% left_join(glagoli_count, by = &quot;token&quot;) %&gt;% filter(lemma != &quot;biti&quot;) glagoli_types_token %&gt;% filter(upos == &quot;VERB&quot;) %&gt;% slice_sample(n = 100) %&gt;% select(token, lemma, upos, xpos, freq) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) oblike_glagolov &lt;- &quot;Vmpr3s$|Vmpp-pm$|Vmpr1p$|Vmpr3p$|Vmpp-sm$|Vmpp-sf$|Vmpr1s$|Vmpr2p$|Vmpp-sn$|Vmpr2s$|Vmpp-pf$|Vmpr3d$|Vmpr2d$&quot; glagoli_xpos_freq &lt;- glagoli_types_token %&gt;% filter(upos == &quot;VERB&quot;) %&gt;% select(xpos, freq) %&gt;% group_by(xpos) %&gt;% summarise(freq_sum = sum(freq)) %&gt;% arrange(desc(freq_sum)) %&gt;% filter(str_detect(xpos, oblike_glagolov)) Ali se pogostnost oblik glagola morati razlikuje od pogostnosti oblik preostalih (polnopomenskih) glagolov? Izvedemo lahko binomialni preizkus: binom.test(51, 235, 1/6, alternative = two.sided) V nadaljevanju sem uporabil hi kvadrat preizkus chisq.test(). Oba podatkovna zdruujemo in odstranimo nepotrebne stolpce. xpos_freq &lt;- merge(morati_xpos_freq, glagoli_xpos_freq) %&gt;% select(-upos, -lemma, token, xpos, freq, freq_sum) %&gt;% rename(freq_morati = freq, freq_glagoli = freq_sum) %&gt;% arrange(xpos) Hi kvadrat preizkus lahko opravimo za vsako glagolsko razlinico posebej, npr. za prvo na seznamu. x &lt;- as_tibble(xpos_freq[1,3:4]) y &lt;- bind_cols(sum(xpos_freq[2:12,3]), sum(xpos_freq[2:12,4])) %&gt;% rename(freq_morati = &quot;...1&quot;, freq_glagoli = &quot;...2&quot;) z &lt;- bind_rows(x,y) chisq.test(z) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: z ## X-squared = 18.475, df = 1, p-value = 1.721e-05 Elegantneja je zanka for() ali funkcija map(). Pregledneja je for()-zanka. options = (scipen = 999) for(i in 1:length(xpos_freq)){ # frequencies of verb types in question x &lt;- xpos_freq[i,3:4] # sum of verb types frequencies without the above verb types y &lt;- bind_cols( sum(xpos_freq[-i,3]), sum(xpos_freq[-i,4])) %&gt;% rename(freq_morati = &quot;...1&quot;, freq_glagoli = &quot;...2&quot;) # create a little data frame z &lt;- bind_rows(x,y) # chi-square test results chi &lt;- chisq.test(z) # expected freuqencies expected_morati &lt;- chi$expected[1,1] %&gt;% as.numeric() expected_glagoli &lt;- chi$expected[1,2] %&gt;% as.numeric() # test the frequencies and pull the p-values out p_value &lt;- chisq.test(z) %&gt;% tidy() %&gt;% pull(p.value) %&gt;% as.numeric() # append the p-values row by row to the data frame xpos_freq$p_value[i] &lt;- round(p_value, 5) # append the expected freqs row by row to the data frame xpos_freq$expected_morati[i] &lt;- round(expected_morati, 2) xpos_freq$expected_glagoli[i] &lt;- round(expected_glagoli, 2) } # Add percentages xpos_freq &lt;- xpos_freq %&gt;% mutate(pct_morati = round(100*freq_morati/sum(freq_morati), 2), pct_glagoli = round(100*freq_glagoli/sum(freq_glagoli), 2)) %&gt;% arrange(desc(pct_morati, pct_glagoli)) # write_rds(xpos_freq, &quot;data/xpos_freq.rds&quot;) # write_csv(xpos_freq, &quot;data/xpos_freq.csv&quot;) xpos_freq %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) Razlinice glagola morati imajo statistino razlino pogostnost od razlinic drugih glagolov v jezikovnem gradivu, z izjemo oblike Vmpp-sm (delenik na -l mokega spola, npr. moral, gledal, obkljukal, ) in Vmpp-sn (npr. moralo, gledalo, ). library(tidytext) library(scales) xpos_freq %&gt;% pivot_longer(pct_morati:pct_glagoli, names_to = &quot;types&quot;, values_to = &quot;pct&quot;) %&gt;% group_by(types) %&gt;% # mutate(xpos = reorder_within( # xpos, types, paste0(&quot; (&quot;,pct,&quot;%)&quot;), sep = &quot;&quot;)) %&gt;% mutate(xpos = fct_reorder(xpos, pct)) %&gt;% ggplot(aes(pct/100, xpos, fill = types)) + geom_col() + theme(legend.position = &quot;none&quot;) + scale_x_continuous(labels = percent) + facet_wrap(~ types, scales = &quot;free_y&quot;) + labs(x = &quot;&quot;, y = &quot;&quot;) 18.13.4 Znailni nedoloniki Kateri glagoli se pogosteje povezujejo z morati oz. s treba? Kateri nedoloniki so signifikantni distinktivni kolleksemi enot morati in treba? # modalinf0_all &lt;- read_rds(&quot;data/modalinf0_all.rds&quot;) modalinf0_all_by_verbs &lt;- modalinf0_all %&gt;% pivot_wider(names_from = modal, values_from = c(freq, pct)) %&gt;% select(inf, freq_morati:pct_treba, syl_inf) %&gt;% mutate(freq_morati = ifelse(is.na(freq_morati), 0, freq_morati), freq_treba = ifelse(is.na(freq_treba), 0, freq_treba)) options = (scipen = 999) for(i in 1:length(modalinf0_all_by_verbs)){ # frequencies of verb types in question x &lt;- modalinf0_all_by_verbs[i,2:3] # sum of verb types frequencies without the above verb types y &lt;- bind_cols( sum(modalinf0_all_by_verbs[-i,2]), sum(modalinf0_all_by_verbs[-i,3])) %&gt;% rename(freq_morati = &quot;...1&quot;, freq_treba = &quot;...2&quot;) # create a little data frame z &lt;- bind_rows(x,y) # chi-square test results chi &lt;- chisq.test(z) # expected frequencies expected_morati &lt;- chi$expected[1,1] %&gt;% as.numeric() expected_treba &lt;- chi$expected[1,2] %&gt;% as.numeric() # test the frequencies and pull the p-values out p_value &lt;- chisq.test(z) %&gt;% tidy() %&gt;% pull(p.value) %&gt;% as.numeric() # append the p-values / expected freqs row by row to the data frame modalinf0_all_by_verbs$p_value[i] &lt;- round(p_value, 5) modalinf0_all_by_verbs$expected_morati[i] &lt;- round( expected_morati, 2) modalinf0_all_by_verbs$expected_treba[i] &lt;- round( expected_treba, 2) } # Add percentages modalinf0_all_by_verbs &lt;- modalinf0_all_by_verbs %&gt;% mutate(pct_morati = round(100*freq_morati/sum(freq_morati), 2), pct_treba = round(100*freq_treba/sum(freq_treba), 2)) %&gt;% arrange(desc(pct_morati, pct_treba)) # write_rds(modalinf0_all_by_verbs, &quot;data/modalinf0_all_by_verbs.rds&quot;) # write_csv(modalinf0_all_by_verbs, &quot;data/modalinf0_all_by_verbs.csv&quot;) modalinf0_all_by_verbs %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) Pri naslednjih (malotevilnih) glagolih ni statistino znailne razlike. modalinf0_all_by_verbs %&gt;% filter(p_value &gt; .05) ## # A tibble: 0 x 9 ## # ... with 9 variables: inf &lt;chr&gt;, freq_morati &lt;dbl&gt;, freq_treba &lt;dbl&gt;, ## # pct_morati &lt;dbl&gt;, pct_treba &lt;dbl&gt;, syl_inf &lt;int&gt;, p_value &lt;dbl&gt;, ## # expected_morati &lt;dbl&gt;, expected_treba &lt;dbl&gt; 18.13.5 Hapax legomena Produktivnost opredeljena z deleem nedolonikov, ki se le enkrat pojavljajo z morati oz. treba. s_morati &lt;- modalinf0_all_by_verbs %&gt;% filter(freq_morati &gt; 0) %&gt;% count() h_morati &lt;- modalinf0_all_by_verbs %&gt;% filter(freq_morati == 1) %&gt;% count() produktiv_morati &lt;- h_morati/s_morati produktiv_morati ## n ## 1 0.5098361 s_treba &lt;- modalinf0_all_by_verbs %&gt;% filter(freq_treba &gt; 0) %&gt;% count() h_treba &lt;- modalinf0_all_by_verbs %&gt;% filter(freq_treba == 1) %&gt;% count() produktiv_treba &lt;- h_treba/s_treba produktiv_treba ## n ## 1 0.5889968 Z ozirom na Baayenovo ((Baayen?) 1991) kvantitativno opredelitev produktivnosti bi bila zgradba treba + inf (0,589) nekoliko produktivneja kot morati + inf (0,51), razlika pa je statistino znailna (p = 0,028). h = cbind(h_morati, h_treba) s = cbind(s_morati, s_treba) z = rbind(h, s-h) chisq.test(z) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: z ## X-squared = 4.8551, df = 1, p-value = 0.02756 18.14 Disperzijska analiza Carrols D2 (Carrol 1970) ima vrednosti med 0 in 1: V koliko razlinih registrih, anrih itd. (v uravnoteenem korpusu moramo imeti za vsak anr / register eno datoteko). \\[a = log\\Sigma{p_{1-n}}\\] \\[b = \\Sigma{p_{1-n}}\\log{p_{1-n}}\\] \\[c = \\Sigma{p_{1-n}}\\] \\[d = \\log{n}\\] \\[ D = \\frac{log\\Sigma{p_{1-n}} - (\\frac{\\Sigma{p_{1-n}}\\log{p_{1-n}}}{\\Sigma{p_{1-n}}})}{\\log{n}} \\] \\[p_{1-n}\\] je verjetnost pojavljanja nekega obeleja v datotekah 1 do \\[n\\], in \\[n\\] je tevilo korpusnih datotek. Verjetnost pojavljanja je relativna koliina, tj. pogostnost z ozirom na velikost datoteke. Za izraun disperzije (razprenosti) besede, podajamo tevilo vseh besed (konstrukcij), kar predstavlja velikost datoteke. Ali je treba + nedolonik manj razprena kot morati + nedolonik? Ali je torej za doloene besedilne vrste bolj znailna, medtem ko v drugih redko kdaj nastopa? Nemka HZI-konstrukcija ima manjo disperzijo kot müssen. HZI je bolje zastopan v pravilnikih, manj pa pripovednih (narativnih) besedilih. knitr::include_graphics(&quot;pictures/disperzija_hzi.png&quot;) 18.15 Semantika: kompozicijonalnost Stefanowitsch(2006: 21): Zunächst stellt sich aber aus konstruktionsgrammatischer Perspektive die Frage, ob sich diese spezielleren Beschränkungen kompositionell aus der Bedeutung der einzelnen Komponenten der Struktur ableiten lassen. A priori scheint es unwahrscheinlich, dass dies der Fall ist, da die Komponenten haben, zu und der Infinitiv eine Vielzahl grammatischer Funktionen haben, sodass fraglich ist, ob sie überhaupt invariante Bedeutungen haben.  es gibt hier Erfolg versprechende Ansätze, die sich dieser Fragestellung über den Vergleich der Kollokate einer komplexen Struktur mit den Kollokaten der einzelnen Komponenten nähern. Diese Ansätze erfordern allerdings größere Datenmengen. Stattdessen will ich hier sprachvergleichende Überlegungen heranziehen  Die allgemeine Bedeutung dieser Struktur ist, ebenso wie im Deutschen, VERPFLICHTUNG.  Wenn diese sich kompositionell herleiten lassen, sollten sie sich auch bei der englischen Konstruktion finden. Betrachten wir aber die distinktiven Kollexeme der englischen Konstruktion im Vergleich zum übergeordneten Verb must müssen , so findet sich keinerlei Evidenz für eine ähnliche speziellere Bedeutung. Wie das deutsche müssen hat auch must trotz des ausgewogeneren Häufigkeitsverhältnisses wenige distinktive Kollexeme, die stark an die von müssen erinnern: es sind be sein (have to 27/must 159, 4.80E18), have haben (9/49, 1.10E05), know wissen/kennen (1/13, 5.45E03) und stand stehen (0/7, 2.23E02). Für [have + to + Infinitiv] gibt es eine Reihe von distinktiven Kollexemen. Allerdings handelt es sich dabei ausschließlich um sehr gebräuchliche Verben, die keiner klaren semantischen Klasse zugeordnet werden können. Es lässt sich allenfalls festhalten, dass es sich überwiegend um dynamische Verben handelt, während die wenigen distinktiven Kollexeme von must statische Verben sind. Ebenso wie im Falle von müssen dürften die epistemischen Verwendungen von must die Ursache für diese Kollexeme sein, denn diese sind für have to zwar möglich, aber selten. Anders als bei der deutschen HZI-Struktur ergeben die distinktiven Kollexeme bei [have + to + Infinitiv] also keine klaren Hinweise auf einen BEHÖRDEN-Frame oder eine andere spezifischere Bedeutung der Struktur. knitr::include_graphics(&quot;pictures/distinktive_kollexeme.png&quot;) Dies wird auch durch eine Analyse der Dispersion von [have + to + Infinitiv] im BROWN-Korpus bestätigt, die eindeutig zeigt, dass diese Struktur auch in Bezug auf ihre typischen Gebrauchskontexte nicht eingeschränkt ist: sie hat eine Dispersion von 0,96 und ist damit genauso allgemein verwendbar wie [must + Infinitiv], das ebenfalls eine Dispersion von 0,96 im BROWN-Korpus hat.  Da die deutsche Konstruktion aber die stärker eingeschränkte Bedeutung hat, scheint die Schlussfolgerung plausibel, dass es diese ist, die weniger kompositionell ist. "],["konnektoren-1.html", "Kapitel 19 Konnektoren 19.1 Pakete 19.2 Text einlesen 19.3 UDPipe laden 19.4 Text annotieren 19.5 Wortklassen und Konnektoren", " Kapitel 19 Konnektoren 19.1 Pakete library(tidyverse) library(scales) library(janitor) library(readtext) library(quanteda) library(quanteda.textmodels) library(quanteda.textstats) library(quanteda.textplots) library(tidytext) library(readxl) library(writexl) library(udpipe) 19.2 Text einlesen txt = readtext(&quot;data/books/*.txt&quot;, encoding = &quot;UTF-8&quot;) txt ## readtext object consisting of 2 documents and 0 docvars. ## # Description: df [2 x 2] ## doc_id text ## &lt;chr&gt; &lt;chr&gt; ## 1 prozess.txt &quot;\\&quot;Der Prozes\\&quot;...&quot; ## 2 tom.txt &quot;\\&quot;Tom Sawyer\\&quot;...&quot; 19.3 UDPipe laden library(udpipe) destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ sprachmodell &lt;- udpipe_download_model(language = &quot;german&quot;) udmodel_de &lt;- udpipe_load_model(sprachmodell$file_model) } else { file_model = destfile udmodel_de &lt;- udpipe_load_model(file_model) } 19.4 Text annotieren https://universaldependencies.org/ # Na zaetku je readtext prebral besedila, shranili smo jih v spremenljivki &quot;txt&quot;. x &lt;- udpipe_annotate(udmodel_de, x = txt$text, trace = TRUE) ## 2021-11-28 22:04:35 Annotating text fragment 1/2 ## 2021-11-28 22:06:39 Annotating text fragment 2/2 # # samo prvo besedilo: # x &lt;- udpipe_annotate(udmodel_de, x = txt$text[1], trace = TRUE) x &lt;- as.data.frame(x) # write_rds(x, &quot;data/prozess_tom_udpiped.rds&quot;) # x = read_rds(&quot;data/prozess_tom_udpiped.rds&quot;) 19.5 Wortklassen und Konnektoren tabela = x %&gt;% group_by(doc_id) %&gt;% count(upos) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;) head(tabela) %&gt;% rmarkdown::paged_table() vezniki = tabela %&gt;% filter(upos %in% c(&quot;CCONJ&quot;, &quot;SCONJ&quot;)) %&gt;% mutate(prozent = n/sum(n)) %&gt;% pivot_wider(id_cols = upos, names_from = doc_id, values_from = n:prozent) head(vezniki) %&gt;% rmarkdown::paged_table() konnektoren = x %&gt;% mutate(token = str_to_lower(token)) %&gt;% group_by(doc_id, token) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;) %&gt;% filter(upos %in% c(&quot;CCONJ&quot;, &quot;SCONJ&quot;)) %&gt;% count(upos, sort = T) connectors = x %&gt;% mutate(token = str_to_lower(token)) %&gt;% group_by(token) %&gt;% filter(!is.na(upos), upos != &quot;PUNCT&quot;) %&gt;% filter(upos %in% c(&quot;CCONJ&quot;, &quot;SCONJ&quot;)) %&gt;% count(upos, sort = T) connectors %&gt;% filter(upos == &quot;CCONJ&quot;) %&gt;% pull(token) %&gt;% head(50) ## [1] &quot;und&quot; &quot;aber&quot; &quot;oder&quot; ## [4] &quot;denn&quot; &quot;sondern&quot; &quot;wie&quot; ## [7] &quot;als&quot; &quot;weder&quot; &quot;doch&quot; ## [10] &quot;noch&quot; &quot;schrie&quot; &quot;kroch&quot; ## [13] &quot;desto&quot; &quot;um&quot; &quot;woher&quot; ## [16] &quot;du&quot; &quot;entweder&quot; &quot;hatte&quot; ## [19] &quot;sowie&quot; &quot;statt&quot; &quot;,aber&quot; ## [22] &quot;,und&quot; &quot;sowohl&quot; &quot;irgendwie&quot; ## [25] &quot;unnötigerweise&quot; &quot;,denn&quot; &quot;,nun&quot; ## [28] &quot;aschfahl&quot; &quot;aß&quot; &quot;ausnahmsweise&quot; ## [31] &quot;besinn&quot; &quot;brauch&quot; &quot;daß&quot; ## [34] &quot;dazu&quot; &quot;dennoch&quot; &quot;genau&quot; ## [37] &quot;hoch&quot; &quot;insbesondere&quot; &quot;kund&quot; ## [40] &quot;laß&quot; &quot;manch&quot; &quot;ob&quot; ## [43] &quot;sinn&quot; &quot;stahl&quot; &quot;such&quot; ## [46] &quot;unvorsichtigerweise&quot; &quot;verzeih&quot; &quot;wieder&quot; ## [49] &quot;wozu&quot; connectors %&gt;% filter(upos == &quot;SCONJ&quot;) %&gt;% pull(token) %&gt;% head(50) ## [1] &quot;daß&quot; &quot;wenn&quot; &quot;als&quot; &quot;wie&quot; &quot;da&quot; ## [6] &quot;denn&quot; &quot;während&quot; &quot;ob&quot; &quot;bis&quot; &quot;weil&quot; ## [11] &quot;obwohl&quot; &quot;indem&quot; &quot;laß&quot; &quot;nachdem&quot; &quot;damit&quot; ## [16] &quot;sobald&quot; &quot;ehe&quot; &quot;ohne&quot; &quot;solange&quot; &quot;soweit&quot; ## [21] &quot;bevor&quot; &quot;das&quot; &quot;aber&quot; &quot;seit&quot; &quot;seitdem&quot; ## [26] &quot;strich&quot; &quot;gleich&quot; &quot;begann&quot; &quot;falls&quot; &quot;vergaß&quot; ## [31] &quot;worum&quot; &quot;halb&quot; &quot;hätt&quot; &quot;maß&quot; &quot;sehe&quot; ## [36] &quot;statt&quot; &quot;warum&quot; &quot;wohl&quot; &quot;,das&quot; &quot;,denn&quot; ## [41] &quot;,ich&quot; &quot;befahl&quot; &quot;bestrich&quot; &quot;dann&quot; &quot;dasaß&quot; ## [46] &quot;dass&quot; &quot;fern&quot; &quot;fortwährend&quot; &quot;fühl&quot; &quot;gebührend&quot; Z medmreja lahko tudi potegnemo sezname prirednih in podrednih veznikov ter veznikih prislovov (Konjunktionaladverbien). Potem jih lahko natanneje pretejemo case_when str_detect(seznam_prirednih_konektorjev, ||) str_detect(seznam_podrednih_konektorjev, ||) str_detect(seznam_prislovnih_konektorjev, ||) "],["rolling-stones-auf-twitter.html", "Kapitel 20 Rolling Stones auf Twitter 20.1 Der Tod von Charlie Watts 20.2 Programme 20.3 Datenstrom holen 20.4 Tweets holen 20.5 Datensatz erstellen 20.6 Datensatz speichern 20.7 Datensatz laden 20.8 Verfasser der Tweets 20.9 Timeplot 20.10 User-Informationen 20.11 Geographische Verteilung 20.12 Speichern des erweiterten Datensatzes 20.13 Laden des erweiterten Datensatzes 20.14 Zeitlicher geographischer Verlauf 20.15 Lange Wörter 20.16 Topwörter 20.17 Netzwerke 20.18 Sentiment &amp; Emotion 20.19 Sentiment (Animation)", " Kapitel 20 Rolling Stones auf Twitter 20.1 Der Tod von Charlie Watts 20.2 Programme library(tidyverse) library(tidytext) library(rtweet) library(lubridate) library(plotly) library(leaflet) library(glue) library(htmlwidgets) library(DT) library(gganimate) library(gifski) library(ggthemes) Das rtweet-Programm ermöglicht den Zugang zu Twitter-Texten und Twitter-Usern. Dazu benötigt man einen Twitter-Account, außerdem muss man eine Twitter-App einstellen. Das erfordert eine Telefonnummer zur Verifizierung. Genauere Angaben sind auf verschiedenen Internetseiten zu finden, z.B. Twitter-App setup. Im rtweet package stehen mehrere Funktionen zur Verfügung, um tweets vom Twitter-API zu erfassen: search_tweets()  erfasst Tweets der letzten 6-9 Tage, die einem vom User festgelegten Stichwort (query) entsprechen. stream_tweets()  erfasst Tweets aus dem live Datenstrom get_timelines()  erfasst Tweets von ausgewählten Twitter-Nutzern. Die Tweets (d.h. der Text und zahlreiche Metadaten) werden in der Form eines Datensatzes (data.frame bzw. tibble) organisiert und können auch auf der Festplatte gespeichert werden. 20.3 Datenstrom holen Eine Möglichkeit ist die Tweets live einzufangen, und zwar mit der Funktion stream_tweets(). library(tidyverse) library(rtweet) ## Stream keywords used to filter tweets q &lt;- &quot;RollingStones&quot; ## Stream for 30 minutes streamtime &lt;- 30 * 60 ## Filename to save json data (backup) filename &lt;- &quot;data/rollingstones.json&quot; ## Stream tweets rt_rollingstones &lt;- stream_tweets(q = q, timeout = streamtime, file_name = filename) Laden der gespeicherten Daten von Disk: library(jsonlite) fromJSON(&quot;data/rollingstones.json&quot;) 20.4 Tweets holen Typischerweise laden wir die Tweets der letzten sechs bis neun Tage herunter, indem wir in die Funktion search_tweets() ein Schlagwort (q) eingeben, das unserem Ziel entspricht. Die Anzahl der Tweets in unserer Recherche ist begrenzt (n = 18000 Tweets). Will man zwei oder mehrere miteinander auftretende Wörter (etwa Kollokationen) in einer Recherche verwenden, sollte man ein Pluszeichen zwischen die Wörter setzen, z.B. q = \"Charlie+Watts\". Die Argumente q und n sind notwendig zur Recherche. Die Suchfunktion hat mehrere optionale Argumente, z.B. die Sprache lang, Herausfiltern von Retweets mit Hilfe des Schalters include_rts = FALSE u.a. Tweets in deutscher Sprache zum Thema RollingStones: library(tidyverse) library(rtweet) q &lt;- &quot;RollingStones&quot; tweets_rollingstones_de &lt;- search_tweets(q = q, n = 18000, token = bearer_token(), include_rts = FALSE, `-filter` = &quot;replies&quot;, lang = &quot;de&quot;) tweets_rollingstones_de Ein Retweet bedeutet, dass ein Nutzer den Tweet einer anderen Person teilt, so dass auch die Follower den Beitrag sehen können. Tweets und Retweets kann man separat aus dem Datensatz abrufen. Tweets in slowenischer Sprache zum Thema RollingStones: q &lt;- &quot;RollingStones&quot; tweets_rollingstones_sl &lt;- search_tweets(q = q, n = 18000, token = bearer_token(), include_rts = FALSE, `-filter` = &quot;replies&quot;, lang = &quot;sl&quot;) tweets_rollingstones_sl Tweets in englischer Sprache zum Thema RollingStones: q &lt;- &quot;RollingStones&quot; tweets_rollingstones_en &lt;- search_tweets(q = q, n = 18000, token = bearer_token(), include_rts = FALSE, `-filter` = &quot;replies&quot;, lang = &quot;en&quot;) tweets_rollingstones_en 20.5 Datensatz erstellen Die drei sprachspezifischen Tabellen wollen wir in einer gemeinsamen Tabelle speichern. Die Tabellenspalte lang enthält eine Angabe darüber, welche Sprache in den einzelnen Tweets verwendet wurden. tweets_rollingstones &lt;- bind_rows(tweets_rollingstones_sl, tweets_rollingstones_de, tweets_rollingstones_en) 20.6 Datensatz speichern Die gemeinsame Tabelle können wir nun auf Festplatte speichern. Die Datei mit der Endung rds kann nur vom Programm R gelesen werden. Eine Excel-Datei kann man beispielsweise mit dem writexl-Packet schreiben. library(writexl) write_xlsx(tweets_rollingstones, &quot;data/tweets_rollingstones.xlsx&quot;) write_rds(tweets_rollingstones, &quot;data/tweets_rollingstones.rds&quot;) 20.7 Datensatz laden Am nächsten Tag fahren wir mit unsere Analyse fort und laden unseren Datensatz. tweets_rollingstones &lt;- read_rds(&quot;data/tweets_rollingstones.rds&quot;) 20.8 Verfasser der Tweets Unter den Twitternutzern, die Tweets anlässlich des Todes von Charlie Watts, dem Drummer der Rolling Stones, sind einige uns bekannte Namen zu finden, z.B. der slowenische Radiosender Val202. Die Schreiber der Tweets findet man in der Tabellenspalte screen_name. tweets_rollingstones %&gt;% filter(str_detect(screen_name, &quot;Val202&quot;)) %&gt;% rmarkdown::paged_table() tweets_rollingstones_sl &lt;- subset(tweets_rollingstones, lang == &quot;sl&quot;) ## plot multiple time series by first grouping the data by screen name tweets_rollingstones_sl %&gt;% dplyr::group_by(screen_name) %&gt;% ts_plot() + ggplot2::labs( title = &quot;Tweets after the death of Charlie Watts, drummer&quot;, subtitle = &quot;Tweets collected, parsed, and plotted using `rtweet`&quot; ) Tweets der deutschen Zeitung FAZ (Frankfurter Allgemeine Zeitung): tweets_rollingstones %&gt;% filter(str_detect(screen_name, &quot;faznet&quot;)) %&gt;% rmarkdown::paged_table() Der Tagesspiegel: tweets_rollingstones %&gt;% filter(str_detect(screen_name, &quot;Tagesspiegel&quot;)) %&gt;% rmarkdown::paged_table() tweets_rollingstones_de &lt;- subset(tweets_rollingstones, lang == &quot;de&quot;) ## plot multiple time series by first grouping the data by screen name tweets_rollingstones_de %&gt;% group_by(created_at, screen_name) %&gt;% count(screen_name, sort = TRUE) %&gt;% ungroup() %&gt;% mutate(screen_name = fct_lump(screen_name, 9)) %&gt;% dplyr::group_by(screen_name) %&gt;% ts_plot() + ggplot2::labs(y = &quot;log10(# Tweets)&quot;, title = &quot;Tweets after the death of Charlie Watts, drummer&quot;, subtitle = &quot;Tweets collected, parsed, and plotted using `rtweet`&quot; ) + scale_y_log10() tweets_rollingstones_en &lt;- subset(tweets_rollingstones, lang == &quot;en&quot;) ## plot multiple time series by first grouping the data by screen name tweets_rollingstones_en %&gt;% group_by(created_at, screen_name) %&gt;% count(screen_name, sort = TRUE) %&gt;% ungroup() %&gt;% mutate(screen_name = fct_lump(screen_name, 9)) %&gt;% dplyr::group_by(screen_name) %&gt;% ts_plot() + ggplot2::labs(y = &quot;log10(# Tweets)&quot;, title = &quot;Tweets after the death of Charlie Watts, drummer&quot;, subtitle = &quot;Tweets collected, parsed, and plotted using `rtweet`&quot; ) + scale_y_log10() 20.9 Timeplot Die Anzahl der veröffentlichten Tweets zum Thema können wir in einem Diagramm chronologisch darstellen. Im folgenden Diagramm bildet die Anzahl der Tweets innerhalb von drei Stunden jeweils einen Datenpunkt. Zunächst bilden wir die englischsprachigen Tweets ab. ## subset dataframe tweets_rollingstones_en = subset(tweets_rollingstones, lang == &quot;en&quot;) ## plot time series of tweets p1 &lt;- ts_plot(tweets_rollingstones_en, &quot;3 hours&quot;, color = &quot;red&quot;) + ggplot2::theme_minimal() + ggplot2::theme(plot.title = ggplot2::element_text(face = &quot;bold&quot;)) + ggplot2::labs( x = NULL, y = NULL, title = &quot;Frequency of #rollingstones Twitter statuses from past 9 days&quot;, subtitle = &quot;Twitter status (tweet) counts aggregated using three-hour intervals&quot;, caption = &quot;\\nSource: Data collected from Twitter&#39;s REST API via rtweet&quot;) p1 Ein interaktives Diagramm können wir mit plotly erstellen. library(plotly) ggplotly(p1) %&gt;% layout() Die deutschsprachigen Tweets: ## subset dataframe tweets_rollingstones_de = subset(tweets_rollingstones, lang == &quot;de&quot;) ## plot time series of tweets p2 &lt;- ts_plot(tweets_rollingstones_de, &quot;3 hours&quot;, color = &quot;darkgreen&quot;) + ggplot2::theme_minimal() + ggplot2::theme(plot.title = ggplot2::element_text(face = &quot;bold&quot;)) + ggplot2::labs( x = NULL, y = NULL, title = &quot;Frequency of #rollingstones Twitter statuses from past 9 days&quot;, subtitle = &quot;Twitter status (tweet) counts aggregated using three-hour intervals&quot;, caption = &quot;\\nSource: Data collected from Twitter&#39;s REST API via rtweet&quot;) p2 Ein interaktives Diagramm können wir wiederum mit plotly erstellen. library(plotly) ggplotly(p2) %&gt;% layout() In beiden Fällen flacht die Verlaufskurve schnell ab. 20.10 User-Informationen Aus unserem Datensatz können wir mit users_data() auch Informationen über die Twitter-Nutzer herausholen, die einen Tweet zum Thema #RollingStones (in den vergangenen 6-9 Tagen) verfasst hat, z.B. wie viele Follower sie haben, wie viele Freunde, wie viele Tweets sie verfasst haben, Beschreibungen über sich selbst u.a. tweets_rollingstones %&gt;% users_data() %&gt;% rmarkdown::paged_table() Ähnliche (obwohl weniger nützliche) Funktionen sind users_with_tweets() und tweets_with_users(). users_with_tweets(tweets_rollingstones) tweets_with_users(tweets_rollingstones) 20.11 Geographische Verteilung Aus welchen Ländern stammen die englischsprachigen Tweets? In der Tabellenspalte country finden wir leider in den meisten Fällen keine Angabe (NA), aber die am häufigsten angezeigten Staaten sind die USA, Großbritannien, Ausralien, Kanada und Irland, in denen Englisch Amtssprache ist. tweets_rollingstones_en %&gt;% count(country, sort = TRUE) ## # A tibble: 48 x 2 ## country n ## &lt;chr&gt; &lt;int&gt; ## 1 &lt;NA&gt; 17024 ## 2 United States 393 ## 3 United Kingdom 153 ## 4 Australia 69 ## 5 Canada 53 ## 6 Ireland 20 ## 7 France 19 ## 8 Argentina 15 ## 9 Brazil 15 ## 10 Italy 15 ## # ... with 38 more rows Wählen wir die Tabellenspalte location als Ausgangspunkt, dann erhalten wir recht chaotische Sammlung von Stadt-, Staats- und anderen geographischen Bezeichnungen, die man nach vorheriger Bereinigung nutzen könnte, z.B. kartographisch. tweets_rollingstones_en %&gt;% count(location, sort = TRUE) ## # A tibble: 6,264 x 2 ## location n ## &lt;chr&gt; &lt;int&gt; ## 1 &quot;&quot; 4682 ## 2 &quot;United States&quot; 155 ## 3 &quot;London, England&quot; 130 ## 4 &quot;London&quot; 126 ## 5 &quot;Los Angeles, CA&quot; 109 ## 6 &quot;United Kingdom&quot; 106 ## 7 &quot;Canada&quot; 101 ## 8 &quot;Chicago, IL&quot; 95 ## 9 &quot;New York, NY&quot; 91 ## 10 &quot;UK&quot; 75 ## # ... with 6,254 more rows Für eine graphische Darstellung wählen wir an dieser Stelle die (unkomplizierte) country-Spalte. library(lubridate) p3 &lt;- tweets_rollingstones_en %&gt;% select(created_at, country) %&gt;% mutate(date = lubridate::as_date(created_at)) %&gt;% group_by(date, country) %&gt;% count(country, sort = TRUE) %&gt;% drop_na() %&gt;% ungroup() %&gt;% mutate(country = fct_lump(country, 9)) %&gt;% # nur 9+1 Staaten ggplot(aes(date, n, fill = country)) + geom_col() p3 library(plotly) ggplotly(p3) %&gt;% layout() Die graphische Darstellung für die deutschen Tweets nach Staaten: p4 &lt;- tweets_rollingstones_de %&gt;% select(created_at, country) %&gt;% mutate(date = lubridate::as_date(created_at)) %&gt;% group_by(date, country) %&gt;% count(country, sort = TRUE) %&gt;% drop_na() %&gt;% ungroup() %&gt;% mutate(country = fct_lump(country, 9)) %&gt;% ggplot(aes(date, n, fill = country)) + geom_col() p4 library(plotly) ggplotly(p4) %&gt;% layout() library(ggthemes) m1 &lt;- tweets_rollingstones %&gt;% unnest(geo_coords) %&gt;% unnest(coords_coords) %&gt;% separate(geo_coords, into = c(&quot;latitude&quot;,&quot;longit&quot;), sep = &quot;;&quot;, remove = FALSE, extra = &quot;merge&quot;) %&gt;% separate(coords_coords, into = c(&quot;longitude&quot;,&quot;latit&quot;), sep = &quot;;&quot;, remove = FALSE, extra = &quot;merge&quot;) %&gt;% mutate(latitude = parse_number(latitude), longitude = parse_number(longitude)) %&gt;% select(country, latitude, longitude, screen_name, status_id, location, text) %&gt;% filter(latitude != &quot;&quot; | longitude != &quot;&quot;) %&gt;% distinct(status_id, .keep_all = TRUE) %&gt;% ggplot(aes(longitude, latitude, color = country)) + borders() + geom_point() + theme_map() + theme(legend.position = &quot;bottom&quot;) + labs(title = &quot;Tweets around the World after Death of Charlie Watts&quot;, color = &quot;Country&quot;) m1 Ein interaktives Diagramm können wir wiederum mit plotly erstellen. library(plotly) ggplotly(m1) %&gt;% layout() Es gibt mehrere Datensätze, in denen die geographische Lage von Städten (also Längen- und Breitengrad) gespeichert ist. Das rtweet-Paket verfügt über einen kleineren Datensatz, erreichbar durch: rtweet:::citycoords %&gt;% rmarkdown::paged_table() Einen wesentlich umfangreicheren Datensatz findet man auf der Webseite von simplempas, neben den Angaben zur geographischen Lage und Staatszugehörigkeit auch die Einwohnerzahl. world_cities &lt;- read_csv(&quot;data/worldcities.csv&quot;) world_cities &lt;- world_cities %&gt;% select(city_ascii, country, lat, lng) %&gt;% rename(city = city_ascii, state_country = country) world_cities %&gt;% rmarkdown::paged_table() Die letztere Datensammlung fügen wir mit der Funktion left_join() unserem Twitter-Datensatz hinzu. Im Twitter-Datensatz nehmen wir außerdem mehrere Korrekturen vor, und zwar mit den tidyverse-Funktionen separate() zur Trennung von Tabellenspalten, str_replace() zum Austausch von Angaben in den Tabellenspalten, str_to_sentence() zur Vereinheitlichung der Schreibweise sowie ifelse() und str_detect(), um Bezeichnungen unter passenden Bedingungen in einer Tabellenspalte ausfindig zu machen und zu ersetzen. tweets_rollingstones_cities &lt;- tweets_rollingstones %&gt;% separate(location, into = c(&quot;city&quot;, &quot;state_country&quot;), extra = &quot;merge&quot;, fill = &quot;right&quot;, sep = &quot;, &quot;, remove = FALSE) %&gt;% separate(location, into = c(&quot;city&quot;, &quot;state_country&quot;), extra = &quot;merge&quot;, fill = &quot;right&quot;, sep = &quot; &quot;, remove = FALSE) %&gt;% mutate(state_country = str_replace(state_country, &quot;- &quot;, &quot;&quot;)) %&gt;% mutate(state_country = str_replace(state_country, &quot;\\\\| &quot;, &quot;&quot;)) %&gt;% mutate(city = str_replace(city, &quot;,&quot;, &quot;&quot;)) %&gt;% mutate(city = str_to_sentence(city)) %&gt;% mutate(state_country = str_to_sentence(state_country)) %&gt;% mutate(state_country = ifelse( country == &quot;United States&quot;, &quot;United States&quot;, state_country)) %&gt;% mutate(state_country = ifelse( country == &quot;United Kingdom&quot;, &quot;United Kingdom&quot;, state_country)) %&gt;% mutate(state_country = ifelse( str_detect(country, &quot;Ireland&quot;), &quot;Ireland&quot;, state_country)) %&gt;% mutate(state_country = ifelse( str_detect(country, &quot;Australia&quot;), &quot;Australia&quot;, state_country)) %&gt;% mutate(state_country = str_replace( state_country, &quot;Western australia&quot;, &quot;Australia&quot;)) %&gt;% mutate(state_country = str_replace(state_country, &quot;Slovenija&quot;, &quot;Slovenia&quot;)) %&gt;% mutate(state_country = str_replace(state_country, &quot;Deutschland&quot;, &quot;Germany&quot;)) %&gt;% mutate(state_country = str_replace(state_country, &quot;Österreich&quot;, &quot;Austria&quot;)) %&gt;% mutate(state_country = str_replace(state_country, &quot;Schweiz&quot;, &quot;Switzerland&quot;)) %&gt;% mutate(state_country = str_replace(state_country, &quot;England&quot;, &quot;United Kingdom&quot;)) %&gt;% mutate(state_country = str_replace(state_country, &quot;am Main&quot;, &quot;Germany&quot;)) %&gt;% mutate(city = str_replace(city, &quot;Zürich&quot;, &quot;Zurich&quot;)) %&gt;% mutate(city = str_replace(city, &quot;Wien&quot;, &quot;Vienna&quot;)) %&gt;% mutate(city = str_replace(city, &quot;München&quot;, &quot;Munich&quot;)) %&gt;% mutate(city = str_replace(city, &quot;Köln&quot;, &quot;Cologne&quot;)) %&gt;% mutate(city = str_replace(city, &quot;Düsseldorf&quot;, &quot;Dusseldorf&quot;)) %&gt;% mutate(city = str_replace(city, &quot;Gießen&quot;, &quot;Giessen&quot;)) %&gt;% mutate(state_country = ifelse( city %in% c(&quot;Ljubljana&quot;,&quot;Maribor&quot;,&quot;Celje&quot;,&quot;Kranj&quot;, &quot;Lucija&quot;), &quot;Slovenia&quot;, state_country)) %&gt;% mutate(state_country = ifelse(city %in% c(&quot;Zurich&quot;,&quot;Basel&quot;), &quot;Switzerland&quot;, state_country)) %&gt;% mutate(state_country = ifelse(city %in% c(&quot;Vienna&quot;,&quot;Graz&quot;), &quot;Austria&quot;, state_country)) %&gt;% mutate(state_country = ifelse(city %in% c(&quot;Teheran&quot;), &quot;Iran&quot;, state_country)) %&gt;% mutate(state_country = ifelse(city %in% c(&quot;Strasbourg&quot;), &quot;France&quot;, state_country)) %&gt;% mutate(state_country = ifelse( city %in% c(&quot;Berlin&quot;,&quot;Munich&quot;,&quot;Hamburg&quot;,&quot;Essen&quot;,&quot;Heilbronn&quot;, &quot;Dortmund&quot;,&quot;Cologne&quot;,&quot;Frankfurt&quot;,&quot;Hannover&quot;, &quot;Giessen&quot;,&quot;Konstanz&quot;,&quot;Rostock&quot;,&quot;Dusseldorf&quot;, &quot;Augsburg&quot;,&quot;Lohmar&quot;), &quot;Germany&quot;, state_country)) %&gt;% mutate(state_country = ifelse( str_detect(location, &quot;United Kingdom&quot;), &quot;United Kingdom&quot;, state_country)) %&gt;% mutate(city = ifelse(location == &quot;United Kingdom&quot;, &quot;United Kingdom&quot;, city)) %&gt;% mutate(state_country = ifelse( str_detect(location, &quot;United States&quot;), &quot;United States&quot;, state_country)) %&gt;% mutate(city = ifelse(location == &quot;United States&quot;, &quot;&quot; , city)) %&gt;% mutate(state_country = ifelse( str_detect(location, &quot;Germany&quot;), &quot;Germany&quot;, state_country)) %&gt;% mutate(city = ifelse(location == &quot;Germany&quot;, &quot;&quot; , city)) %&gt;% mutate(city = ifelse(location == &quot;Las Vegas, NV&quot;, &quot;Las Vegas&quot; , city)) %&gt;% mutate(state_country = ifelse(location == &quot;Las Vegas, NV&quot;, &quot;United States&quot; , state_country)) %&gt;% mutate(city = ifelse(location == &quot;Toronto/Las Vegas&quot;, &quot;Toronto&quot; , city)) %&gt;% mutate(state_country = ifelse(location == &quot;Toronto/Las Vegas&quot;, &quot;Canada&quot; , state_country)) %&gt;% mutate(city = ifelse(location == &quot;san francisco&quot;, &quot;San Francisco&quot; , city)) %&gt;% mutate(state_country = ifelse(location == &quot;san francisco&quot;, &quot;United States&quot; , state_country)) Der korrigierte und mit left_join() erweiterte Datensatz: tweets_rollingstones_cities_joined &lt;- tweets_rollingstones_cities %&gt;% left_join(world_cities, by = c(&quot;city&quot;, &quot;state_country&quot;)) tweets_rollingstones_cities_joined %&gt;% select(location, country, city, state_country, lat, lng) %&gt;% rmarkdown::paged_table() 20.12 Speichern des erweiterten Datensatzes write_rds(tweets_rollingstones_cities_joined, &quot;data/tweets_rollingstones_cities_joined.rds&quot;) library(writexl) write_xlsx(tweets_rollingstones_cities_joined, &quot;data/tweets_rollingstones_cities_joined.xlsx&quot;) 20.13 Laden des erweiterten Datensatzes Am nächsten Tag brauchen wir nicht all die oben durchgeführten Schritte noch einmal durchzuführen, sondern hier an dieser Stelle den relevanten Datensatz laden und weitermachen. tweets_rollingstones_cities_joined &lt;- read_rds(&quot;data/tweets_rollingstones_cities_joined.rds&quot;) Eine einfache Weltkarte aus dem ggthemes-Paket, auf der die einzelnen Twitterorte als farbige Punkte eingetragen sind. library(ggthemes) m2 &lt;- tweets_rollingstones_cities_joined %&gt;% # unnest(geo_coords) %&gt;% # unnest(coords_coords) %&gt;% # separate(geo_coords, into = c(&quot;latitude&quot;,&quot;longit&quot;), # sep = &quot;;&quot;, remove = FALSE, extra = &quot;merge&quot;) %&gt;% # separate(coords_coords, into = c(&quot;longitude&quot;,&quot;latit&quot;), # sep = &quot;;&quot;, remove = FALSE, extra = &quot;merge&quot;) %&gt;% # mutate(latitude = parse_number(latitude), # longitude = parse_number(longitude)) %&gt;% select(country, lat, lng, state_country, screen_name, status_id, location, text) %&gt;% filter(lat != &quot;&quot; | lng != &quot;&quot;) %&gt;% # distinct(status_id, .keep_all = TRUE) %&gt;% ggplot(aes(lng, lat, color = state_country, alpha = 0.3)) + borders() + geom_point() + theme_map() + theme(legend.position = &quot;none&quot;) + labs(title = &quot;Tweets around the World after Death of Charlie Watts&quot;, color = &quot;Country&quot;) ggsave(&quot;pictures/worldmap_tweets_rollingstones.png&quot;, width = 12, height = 9) m2 Ein interaktives Diagramm können wir wiederum mit plotly erstellen. library(plotly) ggplotly(m2) %&gt;% layout() Eine detailliertere und vergrößerbare Weltkarte (Paket leaflet) mit den Twitterorten aus unserem Twitter-Datensatz über den Drummer Charlie Watts und die Rolling Stones. library(leaflet) library(glue) library(htmlwidgets) library(DT) template &lt;- &quot;&lt;&gt;{ city }&lt;/p&gt;&lt;p&gt;{ state_country }&lt;/p&gt;&quot; tweet_map &lt;- tweets_rollingstones_cities_joined %&gt;% gather(key, value, city) %&gt;% mutate(key = str_to_title(str_replace_all(key, &quot;_&quot;, &quot; &quot;)), key = paste0(&quot;&lt;b&gt;&quot;, key, &quot;&lt;/b&gt;&quot;)) %&gt;% replace_na(list(value = &quot;Unknown&quot;)) %&gt;% nest(data = c(key, value)) %&gt;% mutate(html = map(data, knitr::kable, format = &quot;html&quot;, escape = FALSE, col.names = c(&quot;&quot;, &quot;&quot;))) %&gt;% leaflet() %&gt;% addTiles() %&gt;% addCircleMarkers(lat = ~ lat, lng = ~ lng, color = ~ state_country, popup = ~ html, radius = 3) %&gt;% addMeasure() tweet_map 20.14 Zeitlicher geographischer Verlauf Mit dem Paket gganimate sind auch Animationen möglich, die die Entwicklung eines Prozesses graphisch darstellen. In diesem Fall soll gezeigt werden, wann und wo auf der Welt Tweets nach dem Tod von Charlie Watts verfasst wurden. Nach den oben durchgeführten Korrekturen und Erweiterungen verfügen wir zumindest über fast 1000 Tweets mit ausgewiesenen Twitterorten (d.h. mit den Koordinaaten ihrer geographischen Lage), was für eine Demonstration der Animation ausreicht. Im ersten Schritt leiten wir mit Hilfe von mutate() aus der Tabellenspalte created at eine Datumsspalte (date_time) ab und fügen sie unserem Datensatz hinzu. Im folgenden Chunk haben wir noch zwei weitere Datumsspalten als Varianten geschaffen, die wir bei Bedarf verwenden könnten. tweets_rollingstones_time &lt;- tweets_rollingstones_cities_joined %&gt;% mutate(date_time = lubridate::as_datetime(created_at)) %&gt;% mutate(dates = lubridate::as_date(created_at)) %&gt;% mutate(seconds = as.numeric(lubridate::as_datetime(created_at))) tweets_rollingstones_time %&gt;% select(date_time, dates, seconds) %&gt;% arrange(date_time) %&gt;% head(3) ## # A tibble: 3 x 3 ## date_time dates seconds ## &lt;dttm&gt; &lt;date&gt; &lt;dbl&gt; ## 1 2021-08-24 16:38:55 2021-08-24 1629823135 ## 2 2021-08-24 16:40:43 2021-08-24 1629823243 ## 3 2021-08-24 16:42:03 2021-08-24 1629823323 Nun wird die Animation vorbereitet, angezeigt und als gif-Datei gespeichert. library(gganimate) library(gifski) library(ggthemes) start = lubridate::as_datetime(&quot;2021-08-24 16:38:55&quot;) # start = as_date(&quot;2021-08-24 16:38:55&quot;) anim_graph &lt;- tweets_rollingstones_time %&gt;% arrange(date_time) %&gt;% filter(!is.na(lat) &amp; !is.na(lng)) %&gt;% filter(date_time &gt;= start) %&gt;% add_count(city, name = &quot;city_count&quot;) %&gt;% mutate(volume = city_count) %&gt;% ggplot(aes(lng, lat)) + borders() + geom_point(aes(size = volume, color = volume)) + theme_map() + scale_color_gradient2(low = &quot;blue&quot;, high = &quot;red&quot;, midpoint = log10(.01), trans = &quot;log10&quot;, guide = &quot;none&quot;) + scale_size_continuous(range = c(1, 6)) + # 38 # transition_reveal(start_date) + transition_time(date_time) + labs( title = &quot;Tweets about the Rolling Stones: { round(frame_time) }&quot;) + theme(legend.position = &quot;none&quot;) # animation.hook=&quot;gifski&quot; animate(anim_graph, nframes = 300, fps = 5, device = &quot;png&quot;) anim_save(&quot;pictures/rolling_stones_tweets_animated.png&quot;) anim_graph 20.15 Lange Wörter Ein spezielles Paket (ggpage), mit dem wir uns eine grobe graphische Übersicht über bestimmte quantifizierte Eigenschaften von Texten verschaffen können, und zwar über die Länge von Wörtern und ihre Textstelle. Diese graphische Darstellung kann insbesondere bei kürzeren Texten effektvoll eingesetzt werden. library(ggpage) tweets_rollingstones_de %&gt;% ggpage_build() %&gt;% mutate(long_word = stringr::str_length(word) &gt; 8) %&gt;% ggpage_plot(aes(fill = long_word)) + labs(title = &quot;Longer words throughout the German Tweets&quot;) + scale_fill_manual(values = c(&quot;grey70&quot;, &quot;blue&quot;), labels = c(&quot;8 or less&quot;, &quot;9 or more&quot;), name = &quot;Word length&quot;) 20.16 Topwörter Für die Textzerlegung und Analyse stehen uns mehrere Pakete zur Verfügung, z.B. quanteda, udpipe oder tidytext, mit denen wir schon gearbeitet haben. Wir wählen hier das tidytext-Programm für die Textzerlegung. Zuerst bereiten wir eine Stoppwordliste für die deutsche Sprache vor. Dann wählen wir für die Zerlegung des Textes in Wörter eine besondere Einstellung, nämlich token = \"tweets\", bei der hashtags (#) und URL erhalten bleiben, so dass man danach suchen kann oder sie auch abzählen oder analysieren kann. Will man nur den reinen Text analysieren, ist es notwendig, diese besonderen Zeichenfolgen aus den Tweets zu entfernen. Verwendet man die tidytext-Funktionen, kann man das Argument token = \"tweets\" einfach weglassen oder eine der anderen Optionen verwenden (z.B. token = \"words\"). Je nach Zielsetzung erhalten wir Großbuchstaben (to_lower = FALSE) oder nicht (to_lower = TRUE). Wörter in deutschen Tweets: library(tidytext) stoplist_de &lt;- as_tibble(quanteda::stopwords(&quot;german&quot;)) %&gt;% rename(word = value) tw_rs_de_words &lt;- tweets_rollingstones_de %&gt;% unnest_tokens(word, text, token = &quot;tweets&quot;, to_lower = TRUE) %&gt;% anti_join(stoplist_de) %&gt;% count(word, sort = TRUE) tw_rs_de_words %&gt;% rmarkdown::paged_table() Wortwolke aus deutschen Tweets: set.seed(1321) library(wordcloud2) w1 &lt;- wordcloud2(tw_rs_de_words) w1 # save it in html library(webshot) library(htmlwidgets) saveWidget(w1,&quot;tmp3.html&quot;,selfcontained = F) # save as png and pdf webshot(&quot;tmp3.html&quot;,&quot;pictures/wcloud_tweets_rs_de.png&quot;, delay =5, vwidth = 1000, vheight=800) webshot(&quot;tmp3.html&quot;,&quot;pictures/wcloud_tweets_rs_de.pdf&quot;, delay =5, vwidth = 800, vheight=600) Englische Tweets: stoplist_en &lt;- stop_words tw_rs_en_words &lt;- tweets_rollingstones_en %&gt;% unnest_tokens(word, text, token = &quot;tweets&quot;, to_lower = TRUE) %&gt;% anti_join(stoplist_en) %&gt;% count(word, sort = TRUE) tw_rs_en_words %&gt;% rmarkdown::paged_table() Die am häufigsten verwendeten Schlagwörter (topfeatures) sind in beiden Sprachen annähernd gleich. set.seed(1321) library(wordcloud2) w2 &lt;- wordcloud2(tw_rs_en_words) w2 # save it in html library(webshot) library(htmlwidgets) saveWidget(w2,&quot;tmp4.html&quot;,selfcontained = F) # save as png and pdf webshot(&quot;tmp4.html&quot;,&quot;pictures/wcloud_tweets_rs_en.png&quot;, delay =5, vwidth = 1000, vheight=800) webshot(&quot;tmp4.html&quot;,&quot;pictures/wcloud_tweets_rs_en.pdf&quot;, delay =5, vwidth = 800, vheight=600) 20.17 Netzwerke Welche Wörter erscheinen häufiger gemeinsam in Tweets? Welche Wortpaare (also ngrams mit n = 2 Mitgliedern) lassen sich aus den Tweets herausholen? Arbeitet man mit tidyverse-Funktionen, kann man das Programm widyr verwenden. Im quanteda.textstats-Programm gibt es die Funktion textstat_collocations(). Auch das Programm udpipe hat Funktionen zur Ermittlung von ngrams, Kollokationen und Netzwerk-Diagramme. library(widyr) # remove punctuation, convert to lowercase, add id for each tweet! tweets_rollingstones_paired_words_de &lt;- tweets_rollingstones_de %&gt;% unnest_tokens(paired_words, text, token = &quot;ngrams&quot;, n = 2) tweets_rollingstones_paired_words_de %&gt;% count(paired_words, sort = TRUE) ## # A tibble: 8,770 x 2 ## paired_words n ## &lt;chr&gt; &lt;int&gt; ## 1 https t.co 464 ## 2 charlie watts 203 ## 3 rollingstones https 106 ## 4 charliewatts rollingstones 86 ## 5 die rollingstones 74 ## 6 der rollingstones 73 ## 7 rolling stones 57 ## 8 80 jahren 46 ## 9 rollingstones charliewatts 40 ## 10 charliewatts https 38 ## # ... with 8,760 more rows Wir verwenden wiederum die Stoppwortliste, um Funktionswörter herauszufiltern, so dass möglichst nur Kollokationen mit Inhaltswörtern übrig bleiben. library(tidyr) # Wörter in getrennten Tabllenspalten tweets_rs_separated_words_de &lt;- tweets_rollingstones_paired_words_de %&gt;% separate(paired_words, c(&quot;word1&quot;, &quot;word2&quot;), sep = &quot; &quot;) # Stoppwortliste erweitern stoplist_de &lt;- c(pull(stoplist_de), &quot;https&quot;,&quot;t.co&quot;) %&gt;% as_tibble() %&gt;% rename(word = value) # Filtern rs_tweets_filtered_de &lt;- tweets_rs_separated_words_de %&gt;% filter(!word1 %in% stoplist_de$word) %&gt;% filter(!word2 %in% stoplist_de$word) # new bigram counts: rs_words_counts_de &lt;- rs_tweets_filtered_de %&gt;% count(word1, word2, sort = TRUE) head(rs_words_counts_de) %&gt;% rmarkdown::paged_table() Aus der vorher erstellten Stoppwortliste haben wir auch die URL-Bestandteile (https, t.co) entfernt, die zwar in vielen Beiträgen vorkommen, aber keine konventionellen Wörter der deutschen Sprache darstellen. Oben wurde schon erwähnt, dass man die URL mit tidytext- oder quanteda-Funktionen bequem entfernen kann. Eine zwar unübersichtliche, aber ökonomische Methode ist die Verwendung eines regulären Ausdrucks (Regex), um die gesamte URL (und nicht nur die beiden oben angeführten Bestandteile) aus den Tweets zu entfernen, z.B. diese mit der Funktion gsub(), die nach einem vorgegebenen Muster (pattern) den Inhalt eines Textes oder einer Tabellenspalte durch eine (leere) Zeichenfolge ersetzt (replacement). # Remove all urls gsub(pattern = &quot;\\\\s?(f|ht)(tp)(s?)(://)([^\\\\.]*)[\\\\.|/](\\\\S*)&quot;, replacement = &quot;&quot;, tweets_rollingstones$text) # unser Tweet-Text Das Netzwerk-Diagramm zeigt, welche Wörter (vor allem Inhaltswörter) in den deutschen Tweets häufiger miteinander auftreten. library(igraph) library(ggraph) # plot climate change word network # (plotting graph edges is currently broken) rs_words_counts_de %&gt;% filter(n &gt;= 5) %&gt;% # Wie häufig muss ein Wort sein? graph_from_data_frame() %&gt;% ggraph(layout = &quot;fr&quot;) + # geom_edge_link(aes(edge_alpha = n, edge_width = n)) geom_edge_link(aes(edge_alpha = n, edge_width = n)) + geom_node_point(color = &quot;darkslategray4&quot;, size = 3) + geom_node_text(aes(label = name), vjust = 1.8, size = 3) + labs( title = &quot;Word Network: Tweets using the hashtag - RollingStones&quot;, subtitle = &quot;Text mining twitter data &quot;, x = &quot;&quot;, y = &quot;&quot;) 20.18 Sentiment &amp; Emotion Ein Paket mit zahlreichen Möglichkeiten (in verschiedenen Sprachen) für die Sentiment-Analyse ist library(syuzhet). Zusätzliche Möglichkeiten bietet auch das Paket udpipe, und zwar mit der Negationsumkehrung. Da wir bereits Twitter-Texte in unserem Datensatz geladen haben, ist unser erster Schritt die Umwandlung der Tweets in Äußerungen. Das wird mit der Funktion get_sentences() bewerkstelligt. library(syuzhet) # We need to parse the text into sentences. v_en &lt;- get_sentences(tweets_rollingstones_en$text) Dann wird mit der Funktion get_sentiment() der Sentiment-Wert für jede einzelne Äußerung (z.B. die Summe der einzelnen Werte für die Wörter in einer Äußerung) ermittelt, und zwar auf der Grundlage von Wortlisten, in denen Wörtern emotionale Zahlenwerte zugeordnet wurden (d.h. positive oder negative Werte). # Then we calculate a sentiment value for each sentence. rs_sentiment &lt;- get_sentiment(v_en) head(rs_sentiment) ## [1] 0.00 0.00 0.00 1.80 0.00 -0.25 Mit der Funktion get_nrc_sentiment() können außer den polarisierten Werten (positiv vs. negativ) auch verschiedene Emtionen wie etwa Freude (joy), Trauer (sadness) und einige weitere ermittelt werden, und zwar wieder auf der Grundlage von Wortlisten, die von Versuchspersonen emotional bewertete Wörter enthalten. rs_nrc_sentiment &lt;- get_nrc_sentiment(v_en) joy_items &lt;- which(rs_nrc_sentiment$joy &gt; 0) head(v_en[joy_items], 4) ## [1] &quot;We ended up no more than 20ft off the stage that night and right by the catwalk it was brilliant.&quot; ## [2] &quot;I know this is late to the table but in honour of Charlie Watts @RShrubb I thought I share a great @harleydavidson tribute to @RollingStones #CharlieWatts RIP https://t.co/qeyqaMB8Fc&quot; ## [3] &quot;She and I queued and then ran when gates open straight to the mosh and sat there for 10hrs waiting in the sun on the hottest day of that year!!!&quot; ## [4] &quot;&lt;U+0001F538&gt;#Robonzo &lt;U+0001F941&gt; \\n&lt;U+0001F539&gt;#Song: &#39;On Top Of The World&#39; \\n[#alternative, #psychadelic~#Rock\\n#drummer #guitarist #musician\\n#RollingStones #Spotify #YouTube \\n#Apple~#Music #Amazon #Pandora]\\n&lt;U+0001F538&gt;#Website:\\n&lt;U+23E9&gt; https://t.co/zBW0D0wk6U\\n&lt;U+0001F538&gt;#Video via: (@RobonzoDrummer)\\n&lt;U+23E9&gt; https://t.co/SKRzZWNOrz https://t.co/ECWAc4tysM&quot; Hier ist ein Ausschnitt aus solch einer Tabelle, die wir nach der Ermittlung der emotionalen Werte von Wörtern erhalten: rs_nrc_sentiment[1:10, 1:10] %&gt;% rmarkdown::paged_table() Die emotionale Valenz (d.h. wie positiv oder negativ die Bedeutung eines Wortes bewertet wird): valence_rs &lt;- (rs_nrc_sentiment[, 9]*-1) + rs_nrc_sentiment[, 10] head(valence_rs) ## [1] 0 0 0 1 0 -1 In den englischen Tweets wurden Wörter gefunden, die häufig Emotionen wie Freude, Zuversicht, Erwartung, Trauer ausdrücken. Das Ergebnis können wir wenigen Zeilen graphisch darstellen. barplot( sort(colSums(prop.table(rs_nrc_sentiment[, 1:8]))), horiz = TRUE, cex.names = 0.7, las = 1, col = 9:2, main = &quot;Emotions in Tweets&quot;, xlab=&quot;Percentage&quot; ) Hier ist eine ästhetisch etwas ansprechendere, aber auch erweiterbare graphische Darstellung mit ggplot(): library(scales) rs_nrc_sentiment[,1:8] %&gt;% summarise(across(everything(), ~ mean(.))) %&gt;% pivot_longer(anger:trust, names_to = &quot;emotion&quot;, values_to = &quot;pct&quot;) %&gt;% mutate(emotion = fct_reorder(emotion, pct)) %&gt;% ggplot(aes(pct, emotion, fill = emotion)) + geom_col() + theme(legend.position = &quot;none&quot;) + scale_x_continuous(labels = percent) + labs(x = &quot;&quot;, y = &quot;&quot;, title = &quot;Emotion in English Tweets after Death of Charlie Watts&quot;) ggsave(&quot;pictures/rs_emotions_en.png&quot;) Zum Vergleich die deutschen Tweets: Zunächst wiederum die Umwandlung in Äußerungen, gefolgt von der Ermittlung der emtionalen Werte von Wörtern. v_de &lt;- get_sentences(tweets_rollingstones_de$text) rs_nrc_sentiment_de &lt;- get_nrc_sentiment(v_de, language = &quot;german&quot;) joy_items_de &lt;- which(rs_nrc_sentiment_de$joy &gt; 0) head(v_de[joy_items_de], 4) ## [1] &quot;Wir gedenken dem @RollingStones Drummer mit einem stündigen #PopRoutes Special abem 9ni uf @srf3 \\n\\nhttps://t.co/yXUtyb12y4&quot; ## [2] &quot;Synagoge von Vilnius gefunden.&quot; ## [3] &quot;Und ganz ehrlich ich freue mich auf jeden Ton, der noch von ihnen kommt.&quot; ## [4] &quot;Niemand ist unsterblich.&quot; Die graphische Darstellung der emotionalen Werte in deutschen Tweets: rs_nrc_sentiment_de[,1:8] %&gt;% summarise(across(everything(), ~ mean(.))) %&gt;% pivot_longer(anger:trust, names_to = &quot;emotion&quot;, values_to = &quot;pct&quot;) %&gt;% mutate(emotion = fct_reorder(emotion, pct)) %&gt;% ggplot(aes(pct, emotion, fill = emotion)) + geom_col() + theme(legend.position = &quot;none&quot;) + scale_x_continuous(labels = percent) + labs(x = &quot;&quot;, y = &quot;&quot;, title = &quot;Emotion in German Tweets after Death of Charlie Watts&quot;) ggsave(&quot;pictures/rs_emotions_de.png&quot;) Was für ein Unterschied! Woran das wohl liegen mag? Das müsste man sich auf jeden Fall mal genauer anschauen. 20.19 Sentiment (Animation) Auch hier können wir es mit einer Animation des Sentiments in den englischen Tweets versuchen. Da die Berechnung länger dauern könnte, wählen wir nur etwa 500 Tweets zur graphischen Darstellung des Sentiments aus. library(ggpage) library(purrr) library(gganimate) library(tidytext) library(zoo) # Beschränkung auf die Tweets 1000 bis 1500 prebuild &lt;- tweets_rollingstones_en$text[1000:1500] %&gt;% ggpage_build() %&gt;% left_join(get_sentiments(&quot;afinn&quot;), by = &quot;word&quot;) midbuild &lt;- map_df(.x = 0:50 * 10 + 1, ~ prebuild %&gt;% mutate(score = ifelse(is.na(value), 0, value), score_smooth = zoo::rollmean(score, .x, 0), score_smooth = score_smooth / max(score_smooth), rolls = .x)) anim_pages &lt;- midbuild %&gt;% ggpage_plot(aes(fill = score_smooth)) + scale_fill_gradient2(low = &quot;red&quot;, high = &quot;blue&quot;, mid = &quot;grey&quot;, midpoint = 0) + guides(fill = &quot;none&quot;) + labs( title = &quot;Smoothed sentiment of Rolling Stones Tweets, rolling average of {round(frame_time)}&quot;) + transition_time(rolls) anim_pages "],["taliban-in-afghanistan.html", "Kapitel 21 Taliban in Afghanistan 21.1 Fetch Stream 21.2 Fetch tweets 21.3 Gather tweets 21.4 Save tweets 21.5 Load tweets 21.6 Who wrote about 21.7 Timeplot 21.8 Reactable table", " Kapitel 21 Taliban in Afghanistan Ein brisantes politisches Thema. Was passiert in Afghanistan nach dem Abzug der NATO-Truppen und der Machtübernahme der Taliban? library(tidyverse) library(tidytext) library(rtweet) 21.1 Fetch Stream library(tidyverse) library(rtweet) ## Stream keywords used to filter tweets q &lt;- &quot;Afghanistan&quot; ## Stream for 30 minutes streamtime &lt;- 60 ## Filename to save json data (backup) filename &lt;- &quot;data/afghanistan2.json&quot; ## Stream tweets stream_afghan &lt;- stream_tweets(q = q, timeout = streamtime, file_name = filename, parse = FALSE) afghan_stream &lt;- rtweet::parse_stream(&quot;data/afghanistan2.json&quot;) writexl::write_xlsx(afghan_stream, &quot;data/afghan_stream.xlsx&quot;) 21.2 Fetch tweets library(tidyverse) library(rtweet) q &lt;- &quot;Afghanistan&quot; tweets_afghanistan_de &lt;- search_tweets(q = q, n = 18000, token = bearer_token(), include_rts = FALSE, `-filter` = &quot;replies&quot;, lang = &quot;de&quot;) tweets_afghanistan_de q &lt;- &quot;Afghanistan&quot; tweets_afghanistan_en &lt;- search_tweets(q = q, n = 18000, token = bearer_token(), include_rts = FALSE, `-filter` = &quot;replies&quot;, lang = &quot;en&quot;) tweets_afghanistan_en q &lt;- &quot;Afganistan&quot; tweets_afghanistan_sl &lt;- search_tweets(q = q, n = 18000, token = bearer_token(), include_rts = FALSE, `-filter` = &quot;replies&quot;, lang = &quot;sl&quot;) tweets_afghanistan_sl 21.3 Gather tweets tweets_afghanistan &lt;- bind_rows(tweets_afghanistan_sl, tweets_afghanistan_de, tweets_afghanistan_en) 21.4 Save tweets library(writexl) write_xlsx(tweets_afghanistan, &quot;data/tweets_afghanistan.xlsx&quot;) write_rds(tweets_afghanistan, &quot;data/tweets_afghanistan.rds&quot;) 21.5 Load tweets tweets_afghanistan &lt;- read_rds(&quot;data/tweets_afghanistan.rds&quot;) tweets_afghanistan_de &lt;- subset(tweets_afghanistan, lang == &quot;de&quot;) tweets_afghanistan_en &lt;- subset(tweets_afghanistan, lang == &quot;en&quot;) tweets_afghanistan_sl &lt;- subset(tweets_afghanistan, lang == &quot;sl&quot;) 21.6 Who wrote about tweets_afghanistan %&gt;% filter(str_detect(screen_name, &quot;spiegel&quot;)) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) tweets_afghanistan %&gt;% filter(str_detect(screen_name, &quot;Tonin&quot;)) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) tweets_afghanistan %&gt;% filter(str_detect(screen_name, &quot;SpletnaMladina&quot;)) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) tweets_afghanistan %&gt;% filter(str_detect(screen_name, &quot;Dnevnik&quot;)) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) tweets_afghanistan %&gt;% filter((screen_name == &quot;Delo&quot;)) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) tweets_afghanistan %&gt;% filter(str_detect(screen_name, &quot;Demokracija&quot;)) %&gt;% DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, options = list(pageLength = 4)) 21.7 Timeplot ## plot time series of tweets p1 &lt;- ts_plot(tweets_afghanistan, &quot;3 hours&quot;, color = &quot;red&quot;) + ggplot2::theme_minimal() + ggplot2::theme(plot.title = ggplot2::element_text(face = &quot;bold&quot;)) + ggplot2::labs( x = NULL, y = NULL, title = &quot;Frequency of #Afghanistan Twitter statuses from past 9 days&quot;, subtitle = &quot;Twitter status (tweet) counts aggregated using three-hour intervals&quot;, caption = &quot;\\nSource: Data collected from Twitter&#39;s REST API via rtweet&quot; ) library(plotly) ggplotly(p1) ## plot time series of tweets p2 &lt;- ts_plot(tweets_afghanistan_de, &quot;3 hours&quot;, color = &quot;darkgreen&quot;) + ggplot2::theme_minimal() + ggplot2::theme(plot.title = ggplot2::element_text(face = &quot;bold&quot;)) + ggplot2::labs( x = NULL, y = NULL, title = &quot;Frequency of #rollingstones Twitter statuses from past 9 days&quot;, subtitle = &quot;Twitter status (tweet) counts aggregated using three-hour intervals&quot;, caption = &quot;\\nSource: Data collected from Twitter&#39;s REST API via rtweet&quot; ) library(plotly) ggplotly(p2) ## plot time series of tweets p3 &lt;- ts_plot(tweets_afghanistan_sl, &quot;3 hours&quot;, color = &quot;darkgreen&quot;) + ggplot2::theme_minimal() + ggplot2::theme(plot.title = ggplot2::element_text(face = &quot;bold&quot;)) + ggplot2::labs( x = NULL, y = NULL, title = &quot;Frequency of #rollingstones Twitter statuses from past 9 days&quot;, subtitle = &quot;Twitter status (tweet) counts aggregated using three-hour intervals&quot;, caption = &quot;\\nSource: Data collected from Twitter&#39;s REST API via rtweet&quot; ) library(plotly) ggplotly(p3) 21.8 Reactable table tweet_table_data &lt;- select(tweets_afghanistan_sl, -user_id, -status_id) library(reactable) reactable(tweet_table_data, filterable = TRUE, searchable = TRUE, bordered = TRUE, striped = TRUE, highlight = TRUE, defaultPageSize = 25, showPageSizeOptions = TRUE, showSortable = TRUE, pageSizeOptions = c(25, 50, 75, 100, 200), defaultSortOrder = &quot;desc&quot;, columns = list( created_at = colDef(defaultSortOrder = &quot;asc&quot;), screen_name = colDef(defaultSortOrder = &quot;asc&quot;), text = colDef(html = TRUE, minWidth = 190, resizable = TRUE), favorite_count = colDef(filterable = FALSE), retweet_count = colDef(filterable = FALSE), urls_expanded_url = colDef(html = TRUE) ) ) Configure your reactable data table In the code chunk above, the filterable = TRUE argument added search filters below each column header, and searchable added the overall table search box at the top right. Turning on bordered, striped, and highlight does what you might expect: Adds a table border, adds alternating-row color stripes, and highlights a row if you put a cursor on it. I set my defaultPageSize to 25. The showPageSizeOptions argument lets me change the page length interactively, and then I define page size options that will show up in a drop-down menu below the table (not visible in the screen shot). The showSortable argument adds little arrow icons next to column names so users know they can click to sort. And I set each columns defaultSortOrder to descending instead of ascending. So if I click on the column of number of retweets or likes, I will see that as most to least, not least to most. Finally, there is the columns argument. Thats a list containing a column definition for each column. Look at the reactable help files for more details on other available options. In this example, I set the created_at and screen_name columns to have a default sort order of ascending. For the text column, I set it to display HTML as HTML so I can add clickable links. I also set a minimum column width of 190 pixels and made the column resizable  so users can click and drag to make it wider or narrower. I also turned off the filter boxes for favorite_count and reply_count. Thats because, unfortunately, reactable filters dont understand when columns are numbers and will filter them as character strings. While reactable sorts number columns properly, the filter boxes are problematic. Thats the major drawback to reactable vs. the DT package: DT understands column types and filters accordingly. But sorting numerically is enough for me for this purpose. You can check out the video at the top of this article to see what it looks like when you sort a column or make the tweet text column wider and narrower. Make your data table more useful A couple of things will make this table more useful. This code doesnt display images or videos included in tweets. Thats fine, because my purpose here is to scan text, not re-create a Twitter application. But that means it will sometimes be helpful to see the original tweet in order to view photos, videos, or comments. I think its convenient to add a small clickable something at the end of each tweets text that you can click to see the actual tweet on Twitter. I decided on &gt;&gt; although it could be any character or characters. To construct a URL, I need to know the format of a tweet, which if you look at any tweet on the Twitter website, you can see is https://twitter.com/username/status/tweetID. Using the glue package, that would be rendered like this: library(glue) #glue::glue(&quot;https://twitter.com/{screen_name}/status/{status_id}&quot;) My full code to create a column with a clickable link to the tweet after the tweet text: #Tweet = glue::glue(&quot;{text} &lt;a href=&#39;https://twitter.com/{screen_name}/status/{status_id}&#39;&gt;&gt;&gt; &lt;/a&gt;&quot;) And the code to create a data frame for an interactive table: tweet_table_data &lt;- tweets_afghanistan_sl %&gt;% select(user_id, status_id, created_at, screen_name, text, favorite_count, retweet_count, urls_expanded_url) %&gt;% mutate( Tweet = glue::glue(&quot;{text} &lt;a href=&#39;https://twitter.com/{screen_name}/status/{status_id}&#39;&gt;&gt;&gt; &lt;/a&gt;&quot;) )%&gt;% select(DateTime = created_at, User = screen_name, Tweet, Likes = favorite_count, RTs = retweet_count, URLs = urls_expanded_url) Id also like to make clickable links from the URL column, which is now just text. This is a bit complicated, because the URL column is a list column because some tweets include more than one URL. Im sure there is a more elegant way to create clickable links from a list column of plain-text URLs, but the code below works. First I create a function to generate the HTML if there are no URLs, one URL, or two or more: make_url_html &lt;- function(url) { if(length(url) &lt; 2) { if(!is.na(url)) { as.character(glue(&quot;&lt;a title = {url} target = &#39;_new&#39; href = &#39;{url}&#39;&gt;{url}&lt;/a&gt;&quot;) ) } else { &quot;&quot; } } else { paste0(purrr::map_chr(url, ~ paste0(&quot;&lt;a title = &#39;&quot;, .x, &quot;&#39; target = &#39;_new&#39; href = &#39;&quot;, .x, &quot;&#39;&gt;&quot;, .x, &quot;&lt;/a&gt;&quot;, collapse = &quot;, &quot;)), collapse = &quot;, &quot;) } } I run purrr::map_chr() on the URL value if there are two or more URLs so that each URL gets its own HTML; then I paste them together and collapse them into a single character string to appear in the table. Once my function works, I use purrr::map_chr() again to iterate over each item in the column: tweet_table_data$URLs &lt;- purrr::map_chr(tweet_table_data$URLs, make_url_html) Dont worry if you dont understand this part, since its really more about purrr and list columns than rtweet and reactable. And its not necessary to search and sort the tweets; you can always click to the original tweet and see clickable links there. Finally, I can run my customized reactable() code on the new tweet table data: reactable(tweet_table_data, filterable = TRUE, searchable = TRUE, bordered = TRUE, striped = TRUE, highlight = TRUE, showSortable = TRUE, defaultSortOrder = &quot;desc&quot;, defaultPageSize = 25, showPageSizeOptions = TRUE, pageSizeOptions = c(25, 50, 75, 100, 200), columns = list( DateTime = colDef(defaultSortOrder = &quot;asc&quot;), User = colDef(defaultSortOrder = &quot;asc&quot;), Tweet = colDef(html = TRUE, minWidth = 190, resizable = TRUE), Likes = colDef(filterable = FALSE, format = colFormat(separators = TRUE)), RTs = colDef(filterable = FALSE, format = colFormat(separators = TRUE)), URLs = colDef(html = TRUE) ) ) If youve been following along, you should have your own interactive table that can search, sort, and filter conference or topic tweets. "],["slovenska-imena.html", "Kapitel 22 Slovenska imena 22.1 Podatkovna niza 22.2 Priprava 22.3 Najpopularneja imena 2008 22.4 Najpopularneja imena 2020 22.5 Skupna imena", " Kapitel 22 Slovenska imena library(tidyverse) library(readxl) https://www.stat.si/StatWeb/news/Index/9597 https://pxweb.stat.si/SiStat/sl/Home/GetSearchResultsRedirect?searchQuery=05X1030S%20OR%2005X1005S%20OR%2005X1002S%20OR%2005X1010S%20OR%2005X1015S%20OR%2005X1016S%20OR%2005X1017S%20OR%2005X1018S&amp;searchString=05X1030S%20OR%2005X1005S%20OR%2005X1002S%20OR%2005X1010S%20OR%2005X1015S%20OR%2005X1016S%20OR%2005X1017S%20OR%2005X1018S https://pxweb.stat.si/SiStatData/pxweb/sl/Data/Data/05X1010S.px/ https://pxweb.stat.si/SiStatData/pxweb/sl/Data/Data/05X1005S.px/ 22.1 Podatkovna niza Glede na majhnost podatkovnih nizov so primerne tudi Excelove datoteke. xlsx_files &lt;- dir(&quot;data/names&quot;, pattern = &quot;*.xlsx&quot;, full.names = TRUE) moska_xlsx &lt;- read_xlsx(xlsx_files[1], skip = 3) %&gt;% janitor::clean_names() %&gt;% rename(name = x1) %&gt;% mutate(spol = &quot;moki&quot;) zenska_xlsx &lt;- read_xlsx(xlsx_files[2], skip = 3) %&gt;% janitor::clean_names() %&gt;% rename(name = x1) %&gt;% mutate(spol = &quot;enski&quot;) slo_imena_xlsx &lt;- bind_rows(moska_xlsx, zenska_xlsx) %&gt;% select(name,spol, x2008:x2021) slo_imena_xlsx %&gt;% slice_sample(n = 10) ## # A tibble: 10 x 16 ## name spol x2008 x2009 x2010 x2011 x2012 x2013 x2014 x2015 x2016 x2017 x2018 ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Kime~ ens~ 10 11 10 13 13 17 20 24 23 25 25 ## 2 Sabri moki 20 17 20 20 21 21 21 23 24 22 23 ## 3 Hasib moki 196 189 200 198 190 188 184 185 181 177 180 ## 4 Anto~ moki 7 7 6 6 6 6 6 6 6 5 5 ## 5 Neja ens~ 5 5 6 6 7 9 9 10 10 10 10 ## 6 Naks~ ens~ - - - - - - - - - - - ## 7 Kolja moki 15 17 20 22 25 28 29 30 33 32 30 ## 8 Osama moki - - - - - - - - - - - ## 9 Mimi~ ens~ 5 5 5 5 5 5 5 5 5 5 5 ## 10 Zlate ens~ 22 22 21 21 20 19 19 19 21 20 20 ## # ... with 3 more variables: x2019 &lt;chr&gt;, x2020 &lt;chr&gt;, x2021 &lt;chr&gt; e moramo prebrati tevilne in velike podatkovne nize so primerneje besedilne datoteke (csv, ). # Read files &lt;- dir(&quot;data/names&quot;, pattern = &quot;*.csv&quot;, full.names = TRUE) moska &lt;- read.delim(files[1], sep = &quot;,&quot;) %&gt;% janitor::clean_names() %&gt;% mutate(spol = &quot;moki&quot;) m1 &lt;- moska %&gt;% select(ime,spol) m2 &lt;- moska %&gt;% select(-ime, -spol) %&gt;% mutate_all(function(x) gsub(&quot;-&quot;,&quot;0&quot;, x)) %&gt;% mutate(across(where(is.character), as.numeric)) moska &lt;- bind_cols(m1, m2) zenska &lt;- read.delim(files[2], sep = &quot;,&quot;) %&gt;% janitor::clean_names() %&gt;% mutate(spol = &quot;enski&quot;) z1 &lt;- zenska %&gt;% select(ime,spol) z2 &lt;- zenska %&gt;% select(-ime, -spol) %&gt;% mutate_all(function(x) gsub(&quot;-&quot;,&quot;0&quot;, x)) %&gt;% mutate(across(where(is.character), as.numeric)) zenska &lt;- bind_cols(z1, z2) slo_imena &lt;- bind_rows(moska, zenska) %&gt;% select(ime, spol, stevilo_2008:stevilo_2021) %&gt;% rename_all(function(x) gsub(&quot;stevilo_&quot;, &quot;leto_&quot;, x)) slo_imena %&gt;% slice_sample(n = 10) ## ime spol leto_2008 leto_2009 leto_2010 leto_2011 leto_2012 ## 1 Sevad moki 9 8 11 10 11 ## 2 Safeta enski 87 89 90 92 96 ## 3 Eduart moki 0 0 0 0 0 ## 4 Rozalija enski 3601 3475 3367 3254 3152 ## 5 Mehdi moki 27 27 31 32 30 ## 6 Milada enski 38 39 39 38 38 ## 7 Ardi moki 5 6 9 10 11 ## 8 Memet moki 12 9 11 11 14 ## 9 Dijana enski 769 772 789 790 816 ## 10 Franc Valentin moki 5 5 5 0 0 ## leto_2013 leto_2014 leto_2015 leto_2016 leto_2017 leto_2018 leto_2019 ## 1 11 11 11 12 13 14 12 ## 2 97 98 102 105 104 111 112 ## 3 0 6 9 10 10 9 8 ## 4 3022 2916 2820 2725 2610 2508 2408 ## 5 32 33 31 30 28 29 30 ## 6 37 38 38 38 40 39 39 ## 7 13 13 11 12 12 12 15 ## 8 15 15 16 14 14 15 15 ## 9 826 822 828 821 816 811 823 ## 10 0 5 0 0 0 0 0 ## leto_2020 leto_2021 ## 1 17 17 ## 2 119 123 ## 3 9 10 ## 4 2318 2214 ## 5 33 37 ## 6 39 39 ## 7 18 22 ## 8 15 13 ## 9 849 867 ## 10 0 0 slo_names &lt;- slo_imena %&gt;% pivot_longer(leto_2008:leto_2021, names_to = c(&quot;leto&quot;), values_to = &quot;n&quot;) %&gt;% mutate(leto = as.numeric(str_remove(leto, &quot;leto_&quot;))) slo_names %&gt;% slice_sample(n = 10) ## # A tibble: 10 x 4 ## ime spol leto n ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Cene moki 2010 71 ## 2 Amal moki 2008 6 ## 3 Mateja enski 2019 10346 ## 4 Irhad moki 2018 11 ## 5 efik moki 2017 221 ## 6 Nelly enski 2011 36 ## 7 Irmica enski 2018 7 ## 8 Arvin moki 2010 0 ## 9 Stefanka enski 2018 5 ## 10 Tom moki 2013 284 22.2 Priprava topNames &lt;- slo_names %&gt;% filter(leto &gt;= 2008) %&gt;% group_by(ime, spol) %&gt;% summarize(n = as.numeric(sum(n))) %&gt;% filter(n &gt; 10) %&gt;% select(ime, spol) filteredNames &lt;- slo_names %&gt;% filter(leto &gt;= 2008) %&gt;% inner_join(topNames) yearlyNames &lt;- filteredNames %&gt;% group_by(leto, ime, spol) %&gt;% summarize(n = as.numeric(sum(n))) 22.3 Najpopularneja imena 2008 library(scales) topNames2008 &lt;- yearlyNames %&gt;% filter(leto == 2008) %&gt;% group_by(ime, spol) %&gt;% summarize(n = sum(n)) %&gt;% group_by(spol) %&gt;% mutate(rank = min_rank(desc(n))) %&gt;% filter(rank &lt; 5) %&gt;% arrange(spol, rank) %&gt;% select(ime, spol, rank) topNames2008Yearly &lt;- yearlyNames %&gt;% inner_join(topNames2008) ggplot(topNames2008Yearly, aes(leto, n, color = ime)) + geom_line() + geom_point() + # scale_y_log10() + facet_grid(~ spol, scales = &quot;free_y&quot;) + ggtitle(&quot;Najpopularneja imena 2008&quot;) ggsave(&quot;pictures/PopNames2008.png&quot;) 22.4 Najpopularneja imena 2020 topNames2020 &lt;- yearlyNames %&gt;% filter(leto == 2020) %&gt;% group_by(ime, spol) %&gt;% summarize(n = sum(n)) %&gt;% group_by(spol) %&gt;% mutate(rank = min_rank(desc(n))) %&gt;% filter(rank &lt; 5) %&gt;% arrange(spol, rank) %&gt;% select(ime, spol, rank) topNames2020Yearly &lt;- yearlyNames %&gt;% inner_join(topNames2020) ggplot(topNames2020Yearly, aes(leto, n, color = ime)) + geom_line() + geom_point() + # scale_y_log10() + facet_grid(~ spol, scales = &quot;free_y&quot;) + ggtitle(&quot;Najpopularneja imena 2020&quot;) ggsave(&quot;pictures/PopNames2008.png&quot;) 22.5 Skupna imena Katera imena so lahko tako moka kot enska imena? sharedName &lt;- slo_names %&gt;% mutate(male = ifelse(spol == &quot;moki&quot;, n, 0), female = ifelse(spol == &quot;enski&quot;, n, 0)) %&gt;% group_by(ime) %&gt;% summarize(Moski = as.numeric(sum(male)), Zenska = as.numeric(sum(female)), n = as.numeric(sum(n)), AvgYear = round(as.numeric(sum(leto * n) / sum(n)),0)) %&gt;% filter(Moski &gt; 50 &amp; Zenska &gt; 50) library(rbokeh) # or to set the theme for all future plots options(bokeh_theme = bk_default_theme) # bk_ggplot_theme figure(width = NULL, height = NULL, xlab = &quot;tevilo mokih&quot;, ylab = &quot;tevilo ensk&quot;, title = &quot;Skupna imena (2008 - 2020)&quot;) %&gt;% ly_points(Moski, Zenska, data = sharedName, color = AvgYear, size = scale(sqrt(n)), hover = list(ime, Moski, Zenska, AvgYear), legend = FALSE) %&gt;% ly_abline(0, 1, color = &quot;darkgreen&quot;) library(ggrepel) set.seed(43) shared2 &lt;- sharedName %&gt;% group_by(ime, Moski, Zenska) %&gt;% ggplot(aes(Moski, Zenska, color = AvgYear)) + scale_x_log10() + scale_y_log10() + # geom_point(aes(size = scale(sqrt(n)))) + # geom_text(aes(label = ime), check_overlap = T) + geom_text_repel(aes(label = ime)) + geom_abline(aes(intercept = 0, slope = 1), color = &quot;darkgreen&quot;) + theme_light() + theme(legend.position = &quot;none&quot;) + labs(x= &quot;tevilo mokih&quot;, y = &quot;tevilo ensk&quot;, title = &quot;Skupna imena (2008 - 2020)&quot;) ggsave(&quot;pictures/shared_names2.png&quot;) shared2 shared &lt;- sharedName %&gt;% group_by(ime, Moski, Zenska) %&gt;% ggplot(aes(Moski, Zenska, color = AvgYear)) + # scale_x_continuous(labels = scales::comma_format(accuracy = 1)) + scale_x_log10() + scale_y_log10() + # geom_point(aes(size = scale(sqrt(n)))) + geom_text(aes(label = ime), check_overlap = T) + geom_abline(aes(intercept = 0, slope = 1), color = &quot;darkgreen&quot;) + theme_light() + theme(legend.position = &quot;none&quot;) + labs(x= &quot;tevilo mokih&quot;, y = &quot;tevilo ensk&quot;, title = &quot;Skupna imena (2008 - 2020)&quot;) ggsave(&quot;pictures/shared_names.png&quot;) shared sharedName %&gt;% filter(ime == &quot;Saa&quot;) ## # A tibble: 1 x 5 ## ime Moski Zenska n AvgYear ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Saa 20600 45217 65817 56406 library(plotly) ggplotly(shared, tooltip = c(&quot;ime&quot;,&quot;Moski&quot;,&quot;Zenska&quot;,&quot;AvgYear&quot;)) %&gt;% layout(legend = list(x = 0.3, y = -0.05, itemsizing = &quot;trace&quot;, orientation = &quot;h&quot;)) library(plotly) plotly_p1 &lt;- ggplotly( shared, width = 850, height = 700, tooltip = c(&quot;ime&quot;,&quot;Moski&quot;,&quot;Zenska&quot;,&quot;AvgYear&quot;)) %&gt;% layout(dragmode = &quot;pan&quot;, legend = list(x = 0.3, y = -0.05, itemsizing = &quot;trace&quot;, orientation = &quot;h&quot;)) plotly_p1 ##### Save it locally library(htmlwidgets) htmlwidgets::saveWidget(as_widget(plotly_p1), &quot;plotly_pics/shared_names.html&quot;) library(plotly) x = seq(0, 10^5) y = seq(0, 10^5) fig &lt;- sharedName %&gt;% group_by(ime, Moski, Zenska, AvgYear) %&gt;% plot_ly(x = ~Moski, y = ~Zenska, # width = 850, height = 700 hoveron = c(&quot;ime&quot;,&quot;Moski&quot;,&quot;Zenska&quot;,&quot;AvgYear&quot;)) %&gt;% # add_markers(text = ~paste(&quot;AvgYear: &quot;, AvgYear), # name = &quot;Povpreje/leto&quot;, # symbol = I(&quot;circle&quot;), # size = I(4), # opacity = I(0.2)) %&gt;% add_markers(text = ~paste(&quot;Razmerje M/: &quot;, round(Moski/Zenska, 2)), color = ~Moski/Zenska, symbol = I(&quot;square&quot;), size = I(12), opacity = I(1), name = &quot;Razmerje M/&quot;) %&gt;% add_markers(text = ~paste(&quot;Ime: &quot;, ime), name = &quot;Osebno ime&quot;, color = ~Moski/Zenska, symbol = I(&quot;circle&quot;), size = I(1), opacity = I(0)) %&gt;% layout( title = &quot;tevilo skupnih imen&quot;, xaxis = list( title = &quot;tevilo mokih&quot;, rangeslider = list(type = &quot;x&quot;) ), yaxis = list( title = &quot;tevilo ensk&quot; ) ) fig ##### Save it locally library(htmlwidgets) htmlwidgets::saveWidget(as_widget(fig), &quot;plotly_pics/plotly_fig_shared_names.html&quot;) "],["deutsche-zungenbrecher.html", "Kapitel 23 Deutsche Zungenbrecher 23.1 Programme laden 23.2 Tabelle laden 23.3 EDA", " Kapitel 23 Deutsche Zungenbrecher Ein Experiment mit Studierenden der Germanistik in Maribor: - 11 deutsche Zungenbrecher (tongue twisters, lomilci jezika, besedna zavozlanka) - Webadresse: https://www.youtube.com/watch?v=wuK_znJRKhU 23.1 Programme laden library(tidyverse) library(scales) library(janitor) library(readxl) library(writexl) 23.2 Tabelle laden Wir laden die gemeinsame Google-Tabelle: zungenbrecher = read_xlsx(&quot;data/Zungenbrecher.xlsx&quot;) %&gt;% mutate(across(where(is.numeric), ~ if_else(is.na(.), 0, as.numeric(.)))) 23.3 EDA tabelle1 = zungenbrecher %&gt;% drop_na %&gt;% summarise(Fehler = mean(Fehlersumme), Fehlerzeit = mean(Fehlerquote), Fehler_sd = sd(Fehlersumme), Fehlerzeit_sd = sd(Fehlerquote)) tabelle1 ## # A tibble: 1 x 4 ## Fehler Fehlerzeit Fehler_sd Fehlerzeit_sd ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1.11 4826. 1.10 2058. Im Durchschnitt etwa {Fehler} Versprecher pro Zungenbrecher. Im Durchschnitt alle {Fehlerzeit} Millisekunden ein Versprecher. Fehler_insgesamt = tabelle1$Fehler Fehler_sd_insgesamt = tabelle1$Fehler_sd p1 = zungenbrecher %&gt;% group_by(ZungenbrNummer) %&gt;% drop_na %&gt;% summarise(Fehler = mean(Fehlersumme), Fehlerzeit = mean(Fehlerquote), Fehler_sd = sd(Fehlersumme), Fehlerzeit_sd = sd(Fehlerquote), .groups = &quot;keep&quot;) %&gt;% ggplot(aes(Fehler, ZungenbrNummer)) + geom_pointrange(aes(xmin = Fehler - Fehler_sd, xmax = Fehler + Fehler_sd)) + geom_vline(xintercept = Fehler_insgesamt, lty = 2, color = &quot;red&quot;) + geom_vline(xintercept = Fehler_insgesamt + Fehler_sd_insgesamt, lty = 2, color = &quot;blue&quot;) + geom_vline(xintercept = Fehler_insgesamt - Fehler_sd_insgesamt, lty = 2, color = &quot;darkgreen&quot;) + scale_x_continuous(breaks = seq(0, 6, 1)) + scale_y_continuous(breaks = seq(0, 11, 1)) + theme(legend.position = &quot;none&quot;) + labs(title = &quot;Mittlere Fehlerzahl pro Zungenbrecher&quot;) ggsave(&quot;pictures/zungenbrecher_versprecherzahl.png&quot;) p1 Fehlerzeit_insgesamt = tabelle1$Fehlerzeit Fehlerzeit_sd_insgesamt = tabelle1$Fehlerzeit_sd p2 = zungenbrecher %&gt;% group_by(ZungenbrNummer) %&gt;% drop_na %&gt;% summarise(Fehler = mean(Fehlersumme), Fehlerzeit = mean(Fehlerquote), Fehler_sd = sd(Fehlersumme), Fehlerzeit_sd = sd(Fehlerquote), .groups = &quot;keep&quot;) %&gt;% ggplot(aes(Fehlerzeit, ZungenbrNummer)) + geom_pointrange(aes(xmin = Fehlerzeit - Fehlerzeit_sd, xmax = Fehlerzeit + Fehlerzeit_sd)) + geom_vline(xintercept = Fehlerzeit_insgesamt, lty = 2, color = &quot;red&quot;) + geom_vline(xintercept = Fehlerzeit_insgesamt + Fehlerzeit_sd_insgesamt, lty = 2, color = &quot;blue&quot;) + geom_vline(xintercept = Fehlerzeit_insgesamt - Fehlerzeit_sd_insgesamt, lty = 2, color = &quot;darkgreen&quot;) + scale_x_continuous(breaks = seq(0, 12000, 1000)) + scale_y_continuous(breaks = seq(0, 11, 1)) + theme(legend.position = &quot;none&quot;) + labs(title = &quot;Mittlere Fehlerzeit pro Zungenbrecher&quot;) ggsave(&quot;pictures/zungenbrecher_versprecherzeit.png&quot;) p2 library(patchwork) p1+p2 ggsave(&quot;pictures/zungenbrecher_patch1.png&quot;, width = 12, height = 7) zungenbrecher %&gt;% drop_na %&gt;% ggplot(aes(Fehlersumme, fill = Versuchsperson)) + geom_density(alpha = 0.3) + scale_x_continuous(breaks = seq(0, 6, 1)) + labs(title = &quot;Anzahl der Fehler pro Zungenbrecher&quot;) zungenbrecher %&gt;% drop_na %&gt;% ggplot(aes(Fehlersumme, fill = Versuchsperson)) + geom_histogram(alpha = 0.5) + scale_x_continuous(breaks = seq(0, 6, 1)) + labs(title = &quot;Anzahl der Fehler pro Zungenbrecher&quot;) ggsave(&quot;pictures/zungenbrecher_versprecherzahl_histogram.png&quot;) zungenbrecher %&gt;% drop_na %&gt;% ggplot(aes(Fehlerquote, Versuchsperson, color = factor(ZungenbrNummer))) + geom_pointrange(xmin = 0, xmax = 12000) + scale_x_continuous(breaks = seq(0, 12000, 1000)) + theme(legend.position = &quot;none&quot;) + labs(title = &quot;Mittlere Fehlerzeit pro Zungenbrecher bei Versuchspersonen&quot;) ggsave(&quot;pictures/zungenbrecher_versprecherzeit_personen.png&quot;) zungenbrecher %&gt;% group_by(ZungenbrNummer) %&gt;% drop_na %&gt;% ggplot(aes(Fehlerquote, ZungenbrNummer, color = Versuchsperson)) + geom_pointrange(xmin = 0, xmax = 12000) + scale_x_continuous(breaks = seq(0, 12000, 1000)) + scale_y_continuous(breaks = seq(0, 11, 1)) + theme(legend.position = &quot;none&quot;) + labs(title = &quot;Mittlere Fehlerzeit pro Zungenbrecher bei Versuchspersonen&quot;) ggsave(&quot;pictures/zungenbrecher_versprecherzeit_personen.png&quot;) tabelle2 = zungenbrecher %&gt;% drop_na %&gt;% pivot_longer(Addition:Kontamination, names_to = &quot;Versprechertyp&quot;, values_to = &quot;Fehlerzahl&quot;) %&gt;% group_by(Versprechertyp) %&gt;% summarise(Versprecherzahl = mean(Fehlerzahl), Versprecherzahl_sd = sd(Fehlerzahl)) tabelle2 ## # A tibble: 4 x 3 ## Versprechertyp Versprecherzahl Versprecherzahl_sd ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Addition 0.2 0.483 ## 2 Deletion 0.235 0.427 ## 3 Kontamination 0.106 0.310 ## 4 Substitution 0.376 0.756 Versprecherzahl_insgesamt = mean(tabelle2$Versprecherzahl) Versprecherzahl_sd_insgesamt = mean(tabelle2$Versprecherzahl_sd) tabelle2 %&gt;% ggplot(aes(Versprecherzahl, Versprechertyp, color = Versprechertyp)) + geom_pointrange(aes(xmin = Versprecherzahl - Versprecherzahl_sd, xmax = Versprecherzahl + Versprecherzahl_sd)) + geom_vline(xintercept = Versprecherzahl_insgesamt, lty = 2, color = &quot;red&quot;) + geom_vline(xintercept = Versprecherzahl_insgesamt + Versprecherzahl_sd_insgesamt, lty = 2, color = &quot;blue&quot;) + geom_vline(xintercept = Versprecherzahl_insgesamt - Versprecherzahl_sd_insgesamt, lty = 2, color = &quot;darkgreen&quot;) + scale_x_continuous(breaks = seq(0, 1.2, 0.2)) + # scale_y_continuous(breaks = seq(0, 11, 1)) + theme(legend.position = &quot;none&quot;) + labs(title = &quot;Mittlere Fehlerzahl pro Zungenbrecher&quot;) ggsave(&quot;pictures/zungenbrecher_versprecherzahl_errortype.png&quot;) ## Saving 7 x 5 in image "],["komplexe-äußerungen.html", "Kapitel 24 Komplexe Äußerungen 24.1 Packages 24.2 Texte laden 24.3 Text 1 zerlegen 24.4 Texttabelle erstellen 24.5 Speichern der Tabelle 24.6 Auswahl nach Länge 24.7 Durchschnittslänge 24.8 Auswahl nach Konnektoren 24.9 Welche Konnektoren? 24.10 Text 2 zerlegen 24.11 Texttabelle erstellen 24.12 Speichern der Tabelle 24.13 Auswahl nach Länge 24.14 Durchschnittslänge 24.15 Auswahl nach Konnektoren 24.16 Welche Konnektoren? 24.17 Text 3 zerlegen 24.18 Texttabelle erstellen 24.19 Speichern der Tabelle 24.20 Auswahl nach Länge 24.21 Durchschnittslänge 24.22 Auswahl nach Konnektoren 24.23 Welche Konnektoren? 24.24 Vergleich der Äußerungslängen", " Kapitel 24 Komplexe Äußerungen 24.1 Packages library(tidyverse) library(scales) library(tidytext) library(ggtext) library(readtext) library(quanteda) library(quanteda.textstats) library(quanteda.textplots) library(udpipe) library(ggstatsplot) library(patchwork) 24.2 Texte laden kohlhaas &lt;- read_lines( &quot;data/books/kleist/Kleist_Kohlhaas_Projekt_Gutenberg.txt&quot;) steppenwolf &lt;- read_lines( &quot;data/books/hesse/Hermann Hesse Der Steppenwolf.txt&quot;) ausland2 &lt;- readRDS(&quot;data/spiegel_politik_deutschland2.rds&quot;) 24.3 Text 1 zerlegen Zunächst erstellen wir mit der quanteda-Funktion corpus() ein Korpus, das nach Dokumenten organisiert ist. Danach wird das Korpus mit der Funktion corpus_reshape() umgewandelt, so dass jede Einheit aus nur einer Äußerung besteht. kohlcrp &lt;- corpus(kohlhaas) kohlcorp &lt;- corpus_reshape(kohlcrp, to = &quot;sentences&quot;) 24.4 Texttabelle erstellen Das Äußerungskorpus wird in eine Tabelle umgewandelt. kohltxt &lt;- kohlcorp %&gt;% as_tibble(rownames = &quot;doc_id&quot;) %&gt;% rename(text = value) %&gt;% mutate(text = as.character(text) %&gt;% str_squish()) Die Äußerungstatistik erhält ebenfalls Tabellenform. kohlstats &lt;- summary(kohlcorp, n = 803) %&gt;% as_tibble() %&gt;% rename(doc_id = Text) Nun können wir die beiden Tabellen vereinen, und zwar mit Hilfe der gemeinsamen Spalte doc_id, die wir vorher in beiden Einzeltabellen vorbereitet und entsprechend benannt haben. Außerdem filtern wir auch die leeren Zeilen (d.h. jene ohne Tokens) heraus. Von den 803 Zeilen bleiben 767 Zeilen übrig. kohltab &lt;- kohlstats %&gt;% full_join(kohltxt, by = &quot;doc_id&quot;) %&gt;% filter(Tokens &gt; 0) 24.5 Speichern der Tabelle write_csv(kohltab, &quot;data/kohlhaas_tabelle.csv&quot;) 24.6 Auswahl nach Länge Die Tabelle wird zunächst mit der Funktion arrange() sortiert. Dann können wir die längsten Äußerungen auswählen und speichern. kohltab %&gt;% arrange(-Tokens) %&gt;% select(-Sentences) %&gt;% rmarkdown::paged_table() Die längste Äußerung enthält 437 Tokens (Interpunktionszeichen sind inbegriffen). Schauen wir uns mal diese Äußerung genauer an! Derartige Äußerungen mit mehreren Satzverbindungen vielen ineinander verschachtelten Nebensätzen nennt man eine Periode. kohlhaas_periode1 &lt;- kohltab %&gt;% filter(doc_id == &quot;text64.9&quot;) %&gt;% pull(text) write_lines( kohlhaas_periode1, &quot;data/kohlhaas_periode1.txt&quot;) Die zweitlängste Äußerung in der Novelle Michael Kohlhaas ist  Noch eine Periode. kohlhaas_periode2 &lt;- kohltab %&gt;% filter(doc_id == &quot;text62.16&quot;) %&gt;% pull(text) write_lines( kohlhaas_periode2, &quot;data/kohlhaas_periode2.txt&quot;) Perioden über Perioden. Hier sind eigentlich zwei zu sehen. Unser Programm hat die Interpunktionsfolge Punkt + Bindestrich wahrscheinlich nicht als Ende der ersten Äußerung gewertet. kohlhaas_periode3 &lt;- kohltab %&gt;% filter(doc_id == &quot;text22.11&quot;) %&gt;% pull(text) write_lines( kohlhaas_periode3, &quot;data/kohlhaas_periode3.txt&quot;) Das ist eine der mittellangen Äußerungen im Kohlhaas. kohlhaas_periode4 &lt;- kohltab %&gt;% filter(doc_id == &quot;text22.18&quot;) %&gt;% pull(text) write_lines( kohlhaas_periode4, &quot;data/kohlhaas_periode4.txt&quot;) Suchen wir mal die mittellangen Äußerungen heraus! Zu diesem Zweck verändern wir unsere Filtermethode. Wir wählen alle Äußerungen, die 50 bis 60 Tokens lang sind. Unser Programm hat 70 Äußerungen von dieser Länge gefunden. kohlhaas_utterances_50_60 &lt;- kohltab %&gt;% filter(Tokens &gt; 49 &amp; Tokens &lt; 61) %&gt;% pull(text) write_lines( kohlhaas_utterances_50_60, &quot;data/kohlhaas_utterances_50_60.txt&quot;) Äußerungen mit 20 bis 30 Tokens. kohlhaas_utterances_20_30 &lt;- kohltab %&gt;% filter(Tokens &gt; 19 &amp; Tokens &lt; 31) %&gt;% pull(text) write_lines( kohlhaas_utterances_20_30, &quot;data/kohlhaas_utterances_20_30.txt&quot;) Äußerungen mit 30 bis 40 Tokens. kohlhaas_utterances_30_40 &lt;- kohltab %&gt;% filter(Tokens &gt; 29 &amp; Tokens &lt; 41) %&gt;% pull(text) write_lines( kohlhaas_utterances_30_40, &quot;data/kohlhaas_utterances_30_40.txt&quot;) 24.7 Durchschnittslänge Wie lang sind die Äußerungen im Durchschnitt? - Etwa 54,76 Tokens pro Äußerung. kohl_mean &lt;- kohltab %&gt;% summarise(median_laenge = median(Tokens) %&gt;% round(2), mittlere_laenge = mean(Tokens) %&gt;% round(2), sd_laenge = sd(Tokens) %&gt;% round(2)) kohl_mean ## # A tibble: 1 x 3 ## median_laenge mittlere_laenge sd_laenge ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 45 54.8 45.0 Ist das viel? Das kann uns eigentlich nur ein Vergleich mit anderen Texten sagen. Das Histogramm zeigt die Spannbreite und welche Äußerungslängen für die Novelle charakteristisch sind. library(ggtext) ggk &lt;- kohltab %&gt;% ggplot(aes(Tokens)) + geom_histogram(aes(y=..density..), binwidth = 20, fill = &quot;darkgreen&quot;, alpha = 0.8, color = &quot;black&quot;) + scale_x_continuous(breaks = seq(0,500,20)) + # geom_freqpoly(binwidth = 20) + geom_density(fill = &quot;cyan&quot;, alpha = 0.4, size = 1) + geom_vline(xintercept = kohl_mean$median_laenge, color = &quot;blue&quot;, lty = 4, size = 1.3) + geom_vline(xintercept = kohl_mean$mittlere_laenge, color = &quot;red&quot;, lty = 2, size = 1) + geom_vline(xintercept = kohl_mean$mittlere_laenge + kohl_mean$sd_laenge, color = &quot;red&quot;, lty = 3, size = 1) + geom_vline(xintercept = kohl_mean$mittlere_laenge - kohl_mean$sd_laenge, color = &quot;red&quot;, lty = 3, size = 1) + labs(title = &quot;Äußerungslänge in _Kleists_ Novelle _Michael Kohlhaas_&quot;, caption = &#39;&lt;span style=&quot;color:red;&quot;&gt;**-.-.-. MEAN**&lt;/span&gt; +/- &lt;span style=&quot;color:red;&quot;&gt;**..... st. deviation**&lt;/span&gt; ; &lt;span style=&quot;color:blue;&quot;&gt;**-.-.-. MEDIAN**&lt;/span&gt;&#39;) + theme_bw() + theme(plot.title=element_markdown(size=18, color = &quot;darkred&quot;), plot.caption = element_markdown(color = &quot;darkgreen&quot;), axis.title.y=element_text(size = 12, vjust=+0.2), axis.title.x=element_text(size = 12, vjust=-0.2), axis.text.y=element_text(size = 10), axis.text.x=element_text(size = 10), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) ggk 24.8 Auswahl nach Konnektoren kohlhaas_utterances_aber1 &lt;- kohltab %&gt;% filter(str_detect(text, &quot;aber&quot;)) %&gt;% # filter(Tokens &gt; 29 &amp; Tokens &lt; 41) %&gt;% pull(text) write_lines( kohlhaas_utterances_aber1, &quot;data/kohlhaas_utterances_aber1.txt&quot;) 24.9 Welche Konnektoren? Die grammatische Analyse führen wir mit udpipe durch. Zuerst laden wir ein entsprechendes Sprachmodell. library(udpipe) destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ sprachmodell &lt;- udpipe_download_model(language = &quot;german&quot;) udmodel_de &lt;- udpipe_load_model(sprachmodell$file_model) } else { file_model = destfile udmodel_de &lt;- udpipe_load_model(file_model) } Das Programm udpipe annotiert den Text mit Hilfe des Sprachmodells. x &lt;- udpipe_annotate(udmodel_de, x = kohlhaas, trace = FALSE) k &lt;- as.data.frame(x) %&gt;% mutate(doc_id = &quot;kleist_kohlhaas&quot;) Nun sind wir in der Lage, Wortklassen zu zählen, die udpipe identifiziert hat. Dazu verwenden wir die Funktion count(). Gezählt werden die Kategorien in der Spalte upos. k %&gt;% group_by(doc_id) %&gt;% count(upos, sort = TRUE) %&gt;% rmarkdown::paged_table() In der Spalte upos interessieren uns nur die Kategorien CCONJ (Junktoren) und SCONJ (Subjunktoren). Deshalb filtern wir alle anderen Kategorien heraus. k %&gt;% filter(upos == &quot;CCONJ&quot; | upos == &quot;SCONJ&quot;) %&gt;% count(upos, sort = TRUE) %&gt;% mutate(pct = round(100*n/sum(n), 2)) ## upos n pct ## 1 CCONJ 1232 53.47 ## 2 SCONJ 1072 46.53 Die Anzahl der Junktoren und Subjunktoren ist ziemlich ausgeglichen. Der Anteil der Nebensätze in Kleists Novelle scheint demnach höher zu sein in alltagssprachlichen Texten oder in modernen Zeitungstexten. tabelle_cconj_sconj &lt;- k %&gt;% filter(upos == &quot;CCONJ&quot; | upos == &quot;SCONJ&quot;) %&gt;% mutate(lemma = str_remove(lemma, &quot;[:PUNCT:]&quot;), lemma = str_to_lower(lemma), token = str_remove(token, &quot;[:PUNCT:]&quot;)) %&gt;% count(lemma, sort = TRUE) tabelle_cconj_sconj %&gt;% rmarkdown::paged_table() Steppenwolf von Hermann Hesse 24.10 Text 2 zerlegen Die einzelnen Textparapgraphen werden in einen einzigen vereint. steppenwolf &lt;- steppenwolf %&gt;% paste(collapse = &quot; &quot;) %&gt;% str_squish() str_sub(steppenwolf, start = 1, end = 227) ## [1] &quot;Hermann Hesse Der Steppenwolf Erzählung Vorwort des Herausgebers Dieses Buch enthält die uns geblichenen Aufzeichnungen jenes Mannes, welchen wir mit einem Ausdruck, den er selbst mehrmals gebrauchte, den «Steppenwolf» nannten.&quot; Wir erstellen nun ein Korpus, das aus einzelnen Äußerungen besteht, und zwar mit dem Namen stepcorp. stepcrp &lt;- corpus(steppenwolf) stepcorp &lt;- corpus_reshape(stepcrp, to = &quot;sentences&quot;) 24.11 Texttabelle erstellen Das Äußerungskorpus wird in eine Tabelle umgewandelt. steptxt &lt;- stepcorp %&gt;% as_tibble(rownames = &quot;doc_id&quot;) %&gt;% rename(text = value) %&gt;% mutate(text = as.character(text) %&gt;% str_squish()) Die Äußerungstatistik erhält ebenfalls Tabellenform. stepstats &lt;- summary(stepcorp, n = 3142) %&gt;% as_tibble() %&gt;% rename(doc_id = Text) Nun können wir die beiden Tabellen vereinen, und zwar mit Hilfe der gemeinsamen Spalte doc_id, die wir vorher in beiden Einzeltabellen vorbereitet und entsprechend benannt haben. Außerdem filtern wir auch die leeren Zeilen (d.h. jene ohne Tokens) heraus. steptab &lt;- stepstats %&gt;% full_join(steptxt, by = &quot;doc_id&quot;) %&gt;% filter(Tokens &gt; 0) 24.12 Speichern der Tabelle write_csv(steptab, &quot;data/steppenwolf_tabelle.csv&quot;) 24.13 Auswahl nach Länge Die Tabelle wird zunächst mit der Funktion arrange() sortiert. Dann können wir die längsten Äußerungen auswählen und speichern. steptab %&gt;% arrange(-Tokens) %&gt;% select(-Sentences) %&gt;% rmarkdown::paged_table() Die längste Äußerung enthält 157 Tokens (Interpunktionszeichen sind inbegriffen). Schauen wir uns mal diese Äußerung genauer an! Derartige Äußerungen mit mehreren Satzverbindungen vielen ineinander verschachtelten Nebensätzen nennt man eine Periode. steppenwolf_periode1 &lt;- steptab %&gt;% filter(doc_id == &quot;text1.232&quot;) %&gt;% pull(text) write_lines( steppenwolf_periode1, &quot;data/steppenwolf_periode1.txt&quot;) Die zweitlängste Äußerung in der Novelle Michael Kohlhaas ist  Noch eine Periode. steppenwolf_periode2 &lt;- steptab %&gt;% filter(doc_id == &quot;text1.230&quot;) %&gt;% pull(text) write_lines( steppenwolf_periode2, &quot;data/steppenwolf_periode2.txt&quot;) Perioden über Perioden. Hier sind eigentlich zwei zu sehen. Unser Programm hat die Interpunktionsfolge Punkt + Bindestrich wahrscheinlich nicht als Ende der ersten Äußerung gewertet. steppenwolf_periode3 &lt;- steptab %&gt;% filter(doc_id == &quot;text1.231&quot;) %&gt;% pull(text) write_lines( steppenwolf_periode3, &quot;data/steppenwolf_periode3.txt&quot;) Das ist eine der mittellangen Äußerungen im Kohlhaas. steppenwolf_periode4 &lt;- steptab %&gt;% filter(doc_id == &quot;text1.3037&quot;) %&gt;% pull(text) write_lines( steppenwolf_periode4, &quot;data/steppenwolf_periode4.txt&quot;) Suchen wir mal die mittellangen Äußerungen heraus! Zu diesem Zweck verändern wir unsere Filtermethode. Wir wählen alle Äußerungen, die 50 bis 60 Tokens lang sind. Unser Programm hat 70 Äußerungen von dieser Länge gefunden. steppenwolf_utterances_50_60 &lt;- steptab %&gt;% filter(Tokens &gt; 49 &amp; Tokens &lt; 61) %&gt;% pull(text) write_lines( steppenwolf_utterances_50_60, &quot;data/steppenwolf_utterances_50_60.txt&quot;) Äußerungen mit 20 bis 30 Tokens. steppenwolf_utterances_20_30 &lt;- steptab %&gt;% filter(Tokens &gt; 19 &amp; Tokens &lt; 31) %&gt;% pull(text) write_lines( steppenwolf_utterances_20_30, &quot;data/steppenwolf_utterances_20_30.txt&quot;) Äußerungen mit 30 bis 40 Tokens. steppenwolf_utterances_30_40 &lt;- steptab %&gt;% filter(Tokens &gt; 29 &amp; Tokens &lt; 41) %&gt;% pull(text) write_lines( steppenwolf_utterances_30_40, &quot;data/steppenwolf_utterances_30_40.txt&quot;) 24.14 Durchschnittslänge Wie lang sind die Äußerungen im Durchschnitt? - Etwa 25,58 Tokens pro Äußerung. Vergleichen Sie mit Kleists Kohlhaas: 54,76 Tokens pro Äußerung. step_mean &lt;- steptab %&gt;% summarise(median_laenge = median(Tokens) %&gt;% round(2), mittlere_laenge = mean(Tokens) %&gt;% round(2), sd_laenge = sd(Tokens) %&gt;% round(2)) step_mean ## # A tibble: 1 x 3 ## median_laenge mittlere_laenge sd_laenge ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 20 25.6 20.4 Das Histogramm zeigt die Spannbreite und welche Äußerungslängen für die Novelle charakteristisch sind. library(ggtext) ggs &lt;- steptab %&gt;% ggplot(aes(Tokens)) + geom_histogram(aes(y=..density..), binwidth = 20, fill = &quot;darkgreen&quot;, alpha = 0.8, color = &quot;black&quot;) + scale_x_continuous(breaks = seq(0,500,20)) + # geom_freqpoly(binwidth = 20) + geom_density(fill = &quot;cyan&quot;, alpha = 0.4, size = 1) + geom_vline(xintercept = step_mean$median_laenge, color = &quot;blue&quot;, lty = 4, size = 1.3) + geom_vline(xintercept = step_mean$mittlere_laenge, color = &quot;red&quot;, lty = 2, size = 1) + geom_vline(xintercept = step_mean$mittlere_laenge + step_mean$sd_laenge, color = &quot;red&quot;, lty = 3, size = 1) + geom_vline(xintercept = step_mean$mittlere_laenge - step_mean$sd_laenge, color = &quot;red&quot;, lty = 3, size = 1) + labs(title = &quot;Äußerungslänge in _Hesses_ Roman _Steppenwolf_&quot;, caption = &#39;&lt;span style=&quot;color:red;&quot;&gt;**-.-.-. MEAN**&lt;/span&gt; +/- &lt;span style=&quot;color:red;&quot;&gt;**..... st. deviation**&lt;/span&gt; ; &lt;span style=&quot;color:blue;&quot;&gt;**-.-.-. MEDIAN**&lt;/span&gt;&#39;) + theme_bw() + theme(plot.title=element_markdown(size=18, color = &quot;darkred&quot;), plot.caption = element_markdown(color = &quot;darkgreen&quot;), axis.title.y=element_text(size = 12, vjust=+0.2), axis.title.x=element_text(size = 12, vjust=-0.2), axis.text.y=element_text(size = 10), axis.text.x=element_text(size = 10), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) ggs 24.15 Auswahl nach Konnektoren steppenwolf_utterances_aber1 &lt;- steptab %&gt;% filter(str_detect(text, &quot;aber&quot;)) %&gt;% # filter(Tokens &gt; 29 &amp; Tokens &lt; 41) %&gt;% pull(text) write_lines( steppenwolf_utterances_aber1, &quot;data/steppenwolf_utterances_aber1.txt&quot;) 24.16 Welche Konnektoren? Die grammatische Analyse führen wir mit udpipe durch. Zuerst laden wir ein entsprechendes Sprachmodell. library(udpipe) destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ sprachmodell &lt;- udpipe_download_model(language = &quot;german&quot;) udmodel_de &lt;- udpipe_load_model(sprachmodell$file_model) } else { file_model = destfile udmodel_de &lt;- udpipe_load_model(file_model) } Das Programm udpipe annotiert den Text mit Hilfe des Sprachmodells. x &lt;- udpipe_annotate(udmodel_de, x = steppenwolf, trace = FALSE) s &lt;- as.data.frame(x) %&gt;% mutate(doc_id = &quot;hesse_steppenwolf&quot;) Nun sind wir in der Lage, Wortklassen zu zählen, die udpipe identifiziert hat. Dazu verwenden wir die Funktion count(). Gezählt werden die Kategorien in der Spalte upos. s %&gt;% group_by(doc_id) %&gt;% count(upos, sort = TRUE) %&gt;% rmarkdown::paged_table() In der Spalte xpos interessieren uns nur die Kategorien CCONJ (Junktoren) und SCONJ (Subjunktoren). Deshalb filtern wir alle anderen Kategorien heraus. s %&gt;% filter(upos == &quot;CCONJ&quot; | upos == &quot;SCONJ&quot;) %&gt;% count(upos, sort = TRUE) %&gt;% mutate(pct = round(100*n/sum(n), 2)) ## upos n pct ## 1 CCONJ 3857 79.13 ## 2 SCONJ 1017 20.87 Der Anteil der Junktoren beträgt fast vier Fünftel, der der Subjunktoren dagegen nur ein Fünftel. Der Anteil der Nebensätze in Kleists Novelle scheint höher zu sein als in Hesses Roman, einem Text aus dem 20. Jahrhundert. tabelle_cconj_sconj &lt;- s %&gt;% filter(upos == &quot;CCONJ&quot; | upos == &quot;SCONJ&quot;) %&gt;% mutate(lemma = str_remove(lemma, &quot;[:PUNCT:]&quot;), lemma = str_to_lower(lemma), token = str_remove(token, &quot;[:PUNCT:]&quot;)) %&gt;% count(lemma, sort = TRUE) tabelle_cconj_sconj %&gt;% rmarkdown::paged_table() Signifikanter Unterschied zwischen den durchschnittlichen Äußerungslängen im Kohlhaas und im Steppenwolf. step_tokens &lt;- steptab[,3] %&gt;% rename(step_tokens = Tokens) kohl_tokens &lt;- kohltab[,3] %&gt;% rename(kohl_tokens = Tokens) t.test(kohl_tokens, step_tokens, var.equal = FALSE) ## ## Welch Two Sample t-test ## ## data: kohl_tokens and step_tokens ## t = 17.538, df = 844.34, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## 25.91454 32.44608 ## sample estimates: ## mean of x mean of y ## 54.76402 25.58370 Nur Äußerungen mit weniger als 200 Tokens. kohltab_200 &lt;- kohltab %&gt;% filter(Tokens &lt; 200) steptab_200 &lt;- steptab %&gt;% filter(Tokens &lt; 200) ggks &lt;- ggplot() + geom_density(aes(Tokens, fill = &quot;kohltab_200&quot;), alpha = .4, data = kohltab_200) + geom_density(aes(Tokens, fill = &quot;steptab_200&quot;), alpha = .4, data = steptab_200) + expand_limits(x = c(1,200), y = c(0, 0.03)) + scale_fill_manual(name = &quot;Texte&quot;, labels = c(&quot;Kohlhaas&quot;, &quot;Steppenwolf&quot;), values = c(kohltab_200 = &quot;darkred&quot;, steptab_200 = &quot;darkgreen&quot;)) + scale_y_continuous(labels = percent_format(accuracy = 1)) + scale_x_continuous(breaks = c(1,5,10,20,30,40,50,75,100,125,150,175,200)) + coord_cartesian(expand = FALSE, clip = &quot;off&quot;) + # don&#39;t expand margin + no clipping geom_vline(xintercept = step_mean$median_laenge, color = &quot;darkgreen&quot;, lty = 4, size = 1.3) + geom_vline(xintercept = kohl_mean$median_laenge, color = &quot;darkred&quot;, lty = 4, size = 1.3) + labs(x = &quot;Tokens (Wörter + Interpunktionszeichen)&quot;, y = &quot;Anteil&quot;, title = &quot;Äußerungslänge in _Kohlhaas_ und _Steppenwolf_&quot;, caption = &quot;red = **mean** +/- **st.deviation**; blue = **median**&quot;) + theme_light() + theme(legend.position = &quot;top&quot;, plot.margin = margin(10, 10, 5, 10), plot.title=element_markdown(size=18, color = &quot;darkred&quot;), plot.title.position = &quot;panel&quot;, plot.caption = element_markdown(color = &quot;darkgreen&quot;), axis.title.y=element_text(size = 12, vjust=+0.2), axis.title.x=element_text(size = 12, vjust=-0.2), axis.text.y=element_text(size = 10), axis.text.x=element_text(size = 10)#, # panel.grid.major = element_blank(), # panel.grid.minor = element_blank() ) ggsave(&quot;pictures/kohlhaas_steppenwolf_utterance_length.png&quot;) ggks Mit library(patchwork) alle Äußerungen. library(patchwork) p1 &lt;- ggk / ggs ggsave(&quot;pictures/patch1_utterances_kohlhaas_steppenwolf.png&quot;) p1 24.17 Text 3 zerlegen Wir erstellen ein Korpus, das aus einzelnen Äußerungen besteht, und zwar mit dem Namen spiegelcorp. spiegelcrp &lt;- corpus(ausland2, text_field = &quot;text&quot;) spiegelcorp &lt;- corpus_reshape(spiegelcrp, to = &quot;sentences&quot;) 24.18 Texttabelle erstellen Das Äußerungskorpus wird in eine Tabelle umgewandelt. spiegeltxt &lt;- spiegelcorp %&gt;% as_tibble(rownames = &quot;doc_id&quot;) %&gt;% rename(text = value) %&gt;% mutate(text = as.character(text) %&gt;% str_squish()) Die Äußerungstatistik erhält ebenfalls Tabellenform. spiegelstats &lt;- summary(spiegelcorp, n = 430041) %&gt;% as_tibble() %&gt;% rename(doc_id = Text) Nun können wir die beiden Tabellen vereinen, und zwar mit Hilfe der gemeinsamen Spalte doc_id, die wir vorher in beiden Einzeltabellen vorbereitet und entsprechend benannt haben. Außerdem filtern wir auch die leeren Zeilen (d.h. jene ohne Tokens) heraus. spiegeltab &lt;- spiegelstats %&gt;% full_join(spiegeltxt, by = &quot;doc_id&quot;) %&gt;% filter(Tokens &gt; 0) 24.19 Speichern der Tabelle # write_csv(spiegeltab, &quot;data/spiegel_ausland2_tabelle.csv&quot;) # write_rds(spiegeltab, &quot;data/spiegel_ausland2_tabelle.rds&quot;) 24.20 Auswahl nach Länge Die Tabelle wird zunächst mit der Funktion arrange() sortiert. Dann können wir die längsten Äußerungen auswählen und speichern. spiegeltab %&gt;% arrange(-Tokens) %&gt;% select(-Sentences) %&gt;% head(10) %&gt;% rmarkdown::paged_table() Die längsten Äußerungen in den Spiegel-Artikeln enthalten lange Aufzählungen von Personen, Orten und Titeln (möglicherweise in Tabellenform). Sie sind eigentlich nicht repräsentativ für den Schreibstil in Spiegel-Artikeln zum Thema Auslandspolitik. Die längste Äußerung enthält 589 Tokens (Interpunktionszeichen sind inbegriffen). Mit dem Befehl cat(spiegel_periode1) können wir sie uns ansehen. spiegel_periode1 &lt;- spiegeltab %&gt;% filter(doc_id == &quot;text930.21&quot;) %&gt;% pull(text) write_lines( spiegel_periode1, &quot;data/spiegel_periode1.txt&quot;) Suchen wir mal mittellange Äußerungen in den Spiegel-Artikeln heraus! Zu diesem Zweck verändern wir unsere Filtermethode. Wir wählen alle Äußerungen, die 50 bis 60 Tokens lang sind. Unser Programm hat mehr als 1000 Äußerungen von dieser Länge gefunden. spiegel_utterances_50_60 &lt;- spiegeltab %&gt;% filter(Tokens &gt; 49 &amp; Tokens &lt; 61) %&gt;% pull(text) write_lines( spiegel_utterances_50_60, &quot;data/spiegel_utterances_50_60.txt&quot;) cat(spiegel_utterances_50_60[25]) ## Nachdem der NDR im Zuge eines Sparprogramms das Ende der Literatursendung &quot;Bücherjournal&quot; bekannt gegeben hatte, hatte es Proteste von namhaften Schriftstellern und Verlegerinnen gegeben, Felicitas von Lovenberg gab etwa zu bedenken: &quot;Leser*in wird und bleibt nur, wer die passenden Bücher für sich findet. 24.21 Durchschnittslänge Wie lang sind die Äußerungen im Durchschnitt? - Etwa 19,71 Tokens pro Äußerung. Im Vergleich mit Hermann Hesses Steppenwolf (25,58 Tokens) und Kleists Kohlhaas (54,76 Tokens) deutlich weniger. spiegel_mean &lt;- spiegeltab %&gt;% summarise(median_laenge = median(Tokens) %&gt;% round(2), mittlere_laenge = mean(Tokens) %&gt;% round(2), sd_laenge = sd(Tokens) %&gt;% round(2)) spiegel_mean ## # A tibble: 1 x 3 ## median_laenge mittlere_laenge sd_laenge ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 18 19.7 11.8 Das Histogramm zeigt die Spannbreite und welche Äußerungslängen für die Novelle charakteristisch sind. library(ggtext) ggsp &lt;- spiegeltab %&gt;% ggplot(aes(Tokens)) + geom_histogram(aes(y=..density..), binwidth = 20, fill = &quot;darkgreen&quot;, alpha = 0.8, color = &quot;black&quot;) + scale_x_continuous(breaks = c(0,20,40,60,80,100,250,500,600)) + # geom_freqpoly(binwidth = 20) + geom_density(fill = &quot;cyan&quot;, alpha = 0.4, size = 1) + geom_vline(xintercept = step_mean$median_laenge, color = &quot;blue&quot;, lty = 4, size = 1.3) + geom_vline(xintercept = step_mean$mittlere_laenge, color = &quot;red&quot;, lty = 2, size = 1) + geom_vline(xintercept = step_mean$mittlere_laenge + step_mean$sd_laenge, color = &quot;red&quot;, lty = 3, size = 1) + geom_vline(xintercept = step_mean$mittlere_laenge - step_mean$sd_laenge, color = &quot;red&quot;, lty = 3, size = 1) + labs(title = &quot;Äußerungslänge in _Spiegel_-Artikeln über _Auslandspolitik_&quot;, caption = &#39;&lt;span style=&quot;color:red;&quot;&gt;**-.-.-. MEAN**&lt;/span&gt; +/- &lt;span style=&quot;color:red;&quot;&gt;**..... st. deviation**&lt;/span&gt; ; &lt;span style=&quot;color:blue;&quot;&gt;**-.-.-. MEDIAN**&lt;/span&gt;&#39;) + theme_bw() + theme(plot.title=element_markdown(size=18, color = &quot;darkred&quot;), plot.caption = element_markdown(color = &quot;darkgreen&quot;), axis.title.y=element_text(size = 12, vjust=+0.2), axis.title.x=element_text(size = 12, vjust=-0.2), axis.text.y=element_text(size = 10), axis.text.x=element_text(size = 10), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) ggsp 24.22 Auswahl nach Konnektoren spiegel_utterances_aber1 &lt;- spiegeltab %&gt;% filter(str_detect(text, &quot;aber&quot;)) %&gt;% # filter(Tokens &gt; 29 &amp; Tokens &lt; 41) %&gt;% pull(text) write_lines( spiegel_utterances_aber1, &quot;data/spiegel_utterances_aber1.txt&quot;) cat(spiegel_utterances_aber1[1]) ## Für deutsche Bewerber in der Schweiz heißt das: Durchaus selbstbewusst, aber bitte nicht arrogant auftreten und nicht zu dick auftragen. 24.23 Welche Konnektoren? Die grammatische Analyse führen wir mit udpipe durch. Zuerst laden wir ein entsprechendes Sprachmodell (falls es noch nicht geladen ist). library(udpipe) destfile = &quot;german-gsd-ud-2.5-191206.udpipe&quot; if(!file.exists(destfile)){ sprachmodell &lt;- udpipe_download_model(language = &quot;german&quot;) udmodel_de &lt;- udpipe_load_model(sprachmodell$file_model) } else { file_model = destfile udmodel_de &lt;- udpipe_load_model(file_model) } Das Programm udpipe annotiert die Texte mit Hilfe des Sprachmodells. Da es sich um Abertausende von Artikeln handelt, dauert das auf handelsüblichen Computern im Jahr 2021 mehr als 10 Minuten. Falls man nicht so lange warten möchte, nimmt man nur eine Stichprobe. Zu Demonstrationszwecken sollen 100 Artikel mal genug sein. set.seed(2020) spiegel_sample &lt;- slice_sample(ausland2, n = 100) x &lt;- udpipe_annotate(udmodel_de, x = as.character(spiegel_sample$text), trace = FALSE) sp &lt;- as.data.frame(x) %&gt;% mutate(doc_id = &quot;spiegel_auslandspolitik&quot;) Nun sind wir in der Lage, Wortklassen zu zählen, die udpipe identifiziert hat. Dazu verwenden wir die Funktion count(). Gezählt werden die Kategorien in der Spalte upos. sp %&gt;% group_by(doc_id) %&gt;% count(upos, sort = TRUE) %&gt;% rmarkdown::paged_table() In der Spalte upos interessieren uns nur die Kategorien CCONJ (Junktoren) und SCONJ (Subjunktoren). Deshalb filtern wir alle anderen Kategorien heraus. sp %&gt;% filter(upos == &quot;CCONJ&quot; | upos == &quot;SCONJ&quot;) %&gt;% count(upos, sort = TRUE) %&gt;% mutate(pct = round(100*n/sum(n), 2)) ## upos n pct ## 1 CCONJ 1526 71.11 ## 2 SCONJ 620 28.89 Der Anteil der Junktoren beträgt fast drei Viertel, der der Subjunktoren mehr als ein Viertel. Der Anteil der Nebensätze in Kleists Novelle scheint höher zu sein in modernen Zeitungstexten. tabelle_cconj_sconj &lt;- sp %&gt;% filter(upos == &quot;CCONJ&quot; | upos == &quot;SCONJ&quot;) %&gt;% mutate(lemma = str_remove(lemma, &quot;[:PUNCT:]&quot;), lemma = str_to_lower(lemma), token = str_remove(token, &quot;[:PUNCT:]&quot;)) %&gt;% count(lemma, sort = TRUE) tabelle_cconj_sconj %&gt;% rmarkdown::paged_table() 24.24 Vergleich der Äußerungslängen Wir prüfen das noch mit einem parametrischen Test, einer Anova, und einem nicht-parametrischen Test, einem Kruskal-Wallis-Test, ob sich die durchschnittlichen Äußerungslängen voneinander signifikant unterscheiden. Zu diesem Zweck vereinen wir die drei Datensätze in den Datensatz utter_length. Eine Anova mit einer einzigen unabhängigen Variable (hier: doc_id) und einer numerischen abhängigen Variable (hier: Tokens) kann man in R mit Hilfe der Funktion oneway.test() durchführen, einen entsprechenden nicht-parametrischen Test, den Kruskal-Wallis-Test, mit der Funktion kruskal.test(). step_tokens &lt;- steptab[,3] %&gt;% mutate(doc_id = &quot;steppenwolf&quot;) kohl_tokens &lt;- kohltab[,3] %&gt;% mutate(doc_id = &quot;kohlhaas&quot;) spiegel_tokens &lt;- spiegeltab[,3] %&gt;% mutate(doc_id = &quot;spiegel&quot;) utter_length &lt;- rbind(kohl_tokens, step_tokens, spiegel_tokens) # parametric test (One-Way Anova) anova1 &lt;- oneway.test(Tokens ~ doc_id, data = utter_length) anova1 ## ## One-way analysis of means (not assuming equal variances) ## ## data: Tokens and doc_id ## F = 362.58, num df = 2.0, denom df = 1644.1, p-value &lt; 2.2e-16 # non-parametric test (Kruskal-Wallis-Test) kruskal1 &lt;- kruskal.test(Tokens ~ doc_id, data = utter_length) kruskal1 ## ## Kruskal-Wallis rank sum test ## ## data: Tokens by doc_id ## Kruskal-Wallis chi-squared = 808.87, df = 2, p-value &lt; 2.2e-16 Sowohl der parametrische als auch der nicht-parametrische Test bestätigen signifikante Unterschiede. Die Signifikanz der Unterschiede zwischen den Gruppen (Kohlhaas, Steppenwolf, Spiegel) lässt sich mit einem Post-hoc-Test bestätigen, hier mit den Funktionen aov() und TukeyHSD(). anova2 &lt;- aov(Tokens ~ doc_id, data = utter_length) TukeyHSD(anova2, which = &quot;doc_id&quot;) ## Tukey multiple comparisons of means ## 95% family-wise confidence level ## ## Fit: aov(formula = Tokens ~ doc_id, data = utter_length) ## ## $doc_id ## diff lwr upr p adj ## spiegel-kohlhaas -35.051679 -36.066812 -34.036545 0 ## steppenwolf-kohlhaas -29.180311 -30.311580 -28.049042 0 ## steppenwolf-spiegel 5.871368 5.368433 6.374302 0 Mit dem Package ggstatsplot kann man gleichzeitig einen statistischen Test und eine graphische Darstellung ausgeben lassen. library(ggstatsplot) set.seed(2020) plot1 &lt;- utter_length %&gt;% ggbetweenstats(x = doc_id, y = Tokens, type = &quot;parametric&quot;, pairwise.comparisons = TRUE, p.adjust.method = &quot;holm&quot;, bf.message = FALSE, var.equal = FALSE) plot1 In der folgenden graphischen Darstellung werden nur Äußerungen mit weniger als 200 Tokens berücksichtigt. kohltab_200 &lt;- kohltab %&gt;% filter(Tokens &lt; 200) steptab_200 &lt;- steptab %&gt;% filter(Tokens &lt; 200) spiegeltab_200 &lt;- spiegeltab %&gt;% filter(Tokens &lt; 200) # Normal distribution with Spiegel data x &lt;- seq(from = 1, to = 100, length.out = 300) x &lt;- spiegeltab_200$Tokens dens &lt;- data.frame(x = x, y = dnorm(x, mean = 19.71, sd = 11.76)) mycaption &lt;- &#39;&lt;span style=&quot;color:black;&quot;&gt;**MEDIAN**:&lt;/span&gt; : &lt;span style=&quot;color:darkred;&quot;&gt;**-.-.- _Kohlhaas_**&lt;/span&gt; ; &lt;span style=&quot;color:darkgreen;&quot;&gt;**-.-.- _Steppenwolf_**&lt;/span&gt; ; &lt;span style=&quot;color:magenta;&quot;&gt;**-.-.- _Spiegel_**&lt;/span&gt;&#39; ggksp &lt;- ggplot() + geom_density(aes(Tokens, fill = &quot;kohltab_200&quot;), alpha = .4, data = kohltab_200) + geom_density(aes(Tokens, fill = &quot;steptab_200&quot;), alpha = .4, data = steptab_200) + geom_density(aes(Tokens, fill = &quot;spiegeltab_200&quot;), alpha = .2, data = spiegeltab_200) + # normal distribution with Spiegel mean and sd values geom_line(aes(x,y, color = &quot;red&quot;), size = 2, alpha = .6, data = dens) + expand_limits(x = c(1,200), y = c(0, 0.03)) + scale_color_manual(name = &quot;Normalverteilung (theoretisch)&quot;, labels = &quot;Spiegel&quot;, values = &quot;red&quot;) + scale_fill_manual(name = &quot;Texte&quot;, labels = c(&quot;Kohlhaas&quot;, &quot;Steppenwolf&quot;, &quot;Spiegel&quot;), values = c(kohltab_200 = &quot;darkred&quot;, steptab_200 = &quot;darkgreen&quot;, spiegeltab_200 = &quot;magenta&quot;)) + scale_y_continuous(labels = percent_format(accuracy = 1)) + scale_x_continuous(breaks = c(1,5,10,20,30,40,50,75,100,125,150,175,200)) + coord_cartesian(expand = FALSE, clip = &quot;off&quot;) + # don&#39;t expand margin + no clipping geom_vline(xintercept = kohl_mean$median_laenge, color = &quot;darkred&quot;, lty = 4, size = 1.3) + geom_vline(xintercept = step_mean$median_laenge, color = &quot;darkgreen&quot;, lty = 4, size = 1.3) + geom_vline(xintercept = spiegel_mean$median_laenge, color = &quot;magenta&quot;, lty = 4, size = 1.3) + labs(x = &quot;Tokens (Wörter + Interpunktionszeichen)&quot;, y = &quot;Anteil&quot;, title = &quot;Äußerungslänge in _Kohlhaas_, _Steppenwolf_ und _Spiegel_-Artikeln&quot;, subtitle = &quot;Normalverteilung mit Spiegel-Werten für _mean_ und _sd_ in roter Farbe&quot;, caption = mycaption ) + theme_light() + theme(legend.position = &quot;top&quot;, plot.margin = margin(10, 10, 5, 10), plot.title=element_markdown(size=18, color = &quot;darkred&quot;), plot.title.position = &quot;plot&quot;, plot.caption = element_markdown(color = &quot;darkgreen&quot;), axis.title.y=element_text(size = 12, vjust=+0.2), axis.title.x=element_text(size = 12, vjust=-0.2), axis.text.y=element_text(size = 10), axis.text.x=element_text(size = 10)#, # panel.grid.major = element_blank(), # panel.grid.minor = element_blank() ) ggsave(&quot;pictures/kohlhaas_steppenwolf_spiegel_utterance_length.png&quot;) ggksp Mit logarithmierter x-Achsenskala (bei Verwendung des Datensatzes utter_length). ggksp2 &lt;- utter_length %&gt;% filter(Tokens &lt; 200 &amp; Tokens &gt; 0) %&gt;% ggplot() + geom_density(aes(Tokens, fill = doc_id), alpha = .4) + scale_fill_manual(name = &quot;Texte&quot;, labels = c(&quot;Kohlhaas&quot;, &quot;Steppenwolf&quot;, &quot;Spiegel&quot;), values = c(&quot;darkred&quot;, &quot;darkgreen&quot;, &quot;magenta&quot;)) + scale_x_log10(breaks = breaks_log(n = 10, base = 10)) + # scale_y_continuous(labels = percent_format(accuracy = 1)) + # expand_limits(x = c(1,200), y = c(0, 0.03)) + coord_cartesian(expand = FALSE, clip = &quot;off&quot;) + # don&#39;t expand margin + no clipping geom_vline(xintercept = kohl_mean$median_laenge, color = &quot;darkred&quot;, lty = 4, size = 1.3) + geom_vline(xintercept = step_mean$median_laenge, color = &quot;darkgreen&quot;, lty = 4, size = 1.3) + geom_vline(xintercept = spiegel_mean$median_laenge, color = &quot;magenta&quot;, lty = 4, size = 1.3) + labs(x = &quot;Tokens (Wörter + Interpunktionszeichen)&quot;, y = &quot;Anteil&quot;, title = &quot;Äußerungslänge in _Kohlhaas_, _Steppenwolf_ und _Spiegel_-Artikeln&quot;, caption = mycaption) + theme_light() + theme(legend.position = &quot;top&quot;, plot.margin = margin(10, 10, 5, 10), plot.title=element_markdown(size=18, color = &quot;darkred&quot;), plot.title.position = &quot;plot&quot;, plot.caption = element_markdown(color = &quot;darkgreen&quot;), axis.title.y=element_text(size = 12, vjust=+0.2), axis.title.x=element_text(size = 12, vjust=-0.2), axis.text.y=element_text(size = 10), axis.text.x=element_text(size = 10)#, # panel.grid.major = element_blank(), # panel.grid.minor = element_blank() ) ggsave(&quot;pictures/kohlhaas_steppenwolf_spiegel_utterance_length2.png&quot;) ggksp2 Mit dem Package (patchwork) kann man eine Collage der graphischen Darstellungen zusammenstellen. library(patchwork) p2 &lt;- (ggk+labs(x = &quot;&quot;, caption = &quot;&quot;)) / (ggs+labs(x = &quot;&quot;, caption = &quot;&quot;)) / ggsp ggsave(&quot;pictures/patch1_utterances_kohlhaas_steppenwolf.png&quot;) p2 "],["odzadnji-slovar.html", "Kapitel 25 Odzadnji slovar 25.1 Knjjinice 25.2 Branje podatkovnega niza 25.3 Ustvarjanje jezikovnega gradiva 25.4 Seznam pojavnic 25.5 Besedilno besedna matrika 25.6 Izvoz odzadnjega slovarja 25.7 Odzadnji slovar KWIC 25.8 Obraanje pojavnic 25.9 Sestava slovarja 25.10 Iskanje po slovarju 25.11 Izvoz kwic slovarja", " Kapitel 25 Odzadnji slovar Sestaviti elimo odzadnji slovar za nemki jezik in ga izvoziti v obliki preglednice Excel, tako da bo na razpolago uporabnikom, ki programskega jezika R ne uporabljajo. 25.1 Knjjinice library(tidyverse) library(stringi) library(writexl) library(quanteda) opt &lt;- quanteda_options() # Parallel computing of 10 processor cores opt$threads = 10 25.2 Branje podatkovnega niza Uporabljamo zbirko lankov iz nemkega asnika Der Spiegel. Zbirka je shranjena v obliki rds. Datoteko odpremo s funkcijo readRDS() ali read_rds(). Slednja je na razpolago, e smo prej zagnali knjinico (tidyverse). ausland2 &lt;- readRDS(&quot;data/spiegel_politik_deutschland2.rds&quot;) 25.3 Ustvarjanje jezikovnega gradiva Ustvarimo jezikovno gradivo s funkcijo corpus(), ki je sestavni del knjinice quanteda. Ime novega korpusa naj bo aus2. aus2 &lt;- corpus(ausland2) 25.4 Seznam pojavnic Korpus je osnova za sestavo seznama pojavnic. Za to nalogo imamo v knjinici quanteda funkcijo tokens(). S to funkcijo lahko odstranimo tudi sestavne dele besedil, ki jih za sestavo slovarja ne potrebujemo, in sicer s funkcijami remove_.... Funkcija proc.time() ni nujno potrebna, uporabljamo jo le za ponazorilo, kako lahko izmerimo trajanje postopka. start &lt;- proc.time() toks.aus2 &lt;- tokens(aus2, remove_punct = T, remove_numbers = T, remove_symbols = T, remove_url = T, remove_separators = T) end &lt;- proc.time() print(end - start) ## user system elapsed ## 17.95 0.53 13.93 25.5 Besedilno besedna matrika Iz besedilno besedne matrike (dfm - document feature matrix iz knjinice quanteda) bomo naredili podatkovni niz. S funkcijo t() (tj. transponirati, angl. transpose) obrnemo matriko in jo zatem pretvorimo v podatkovni niz (data.frame). Knjinica tidyverse ima namre veliko funkcij za prilagajanje tabel. dfmaus &lt;- dfm(toks.aus2, remove = c(&quot;zzzschh&quot;, &quot;zzzrrrk&quot;, &quot;zz&quot;)) dfmaust &lt;- t(dfmaus) dfmaust &lt;- convert(dfmaust[,1], to = &quot;data.frame&quot;) %&gt;% rename(Tokens = doc_id, Text = text1) e bi eleli v programskem okolju R poizvedovati po soglasnikih sklopih na koncu besed, bi to lahko opravili z regularnimi izrazi (regular expressions. V spodnjem zgledu iemo konni soglasniki sklop nf. Izhodie je tabela, ki vsebuje besede v stolpcu Tokens. elimo priklicati le besede brez ponavljanja, kar doloimo s funkcijo distinct(). Sledi izbor besed po gornjem merilu. Zato potrebujemo funkciji filter() in str_detect(). V oklepajih funkcije str_detect() navedemo v narekovajih regularni izraz. V tem primeru sledi iskanemu soglasnikemu sklopu znak $, kar oznauje konec znakovnega niza v stolpcu Tokens. consclust &lt;- dfmaust %&gt;% distinct(Tokens) %&gt;% filter(str_detect(Tokens, &quot;nd$|nt$|nz$|ns$|nsch$|nf$&quot;)) consclust %&gt;% slice_sample(n = 10) %&gt;% pull() ## [1] &quot;strampelnd&quot; &quot;eröffnungstermins&quot; &quot;garagenrock-sound&quot; ## [4] &quot;musikpavillons&quot; &quot;drouant&quot; &quot;teststand&quot; ## [7] &quot;mini-event&quot; &quot;misslingens&quot; &quot;pinnwand&quot; ## [10] &quot;percussions&quot; V naslednjem koraku bomo poveali tevilo konnih soglasnikih sklopov. S pomojo regularnega izraza bomo dodali bomo stolpec s konnim soglasnikim sklopom besedne oblike. Regularni izraz je sestavljen iz dveh parov oglatih oklepajev, v katerih so nanizani soglasniki, ki so programu na izbiro za sestavo sklopa, in znakom za dolar $, ki oznauje konec znakovnega niza. Dodajamo tudi stolpec, ki vsebuje obrnjene besedne oblike. Podatkovni niz conclust prikazujemo s funkcijo datatable() knjinice DT, ki omogoa filtriranje in shranjevanje tabele. consclust &lt;- dfmaust %&gt;% distinct(Tokens) %&gt;% mutate(Reversed = stri_reverse(Tokens)) %&gt;% mutate(final_cluster = str_extract(Tokens, &quot;[bdfghklmnprstz][bdfghklmnprstz]$&quot;)) %&gt;% filter(!is.na(final_cluster)) library(DT) consclust %&gt;% # DT::datatable(fillContainer = TRUE, filter = &quot;top&quot;, # options = list(pageLength = 6)) DT::datatable(filter = &quot;top&quot;, fillContainer = TRUE, extensions = &#39;Buttons&#39;, &quot;ColReorder&quot;, options = list(pageLength = 8, colReorder = TRUE, dom = &#39;Bfrtip&#39;, buttons = c(&#39;colvis&#39;,&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;))) %&gt;% formatStyle(&quot;Tokens&quot;, target = &#39;row&#39;, backgroundColor = styleEqual(c(0, 1), c(&#39;gray30&#39;, &#39;lightblue&#39;))) e bi v odzadnjem slovarju eleli zbrati le slovarske enote (leme) namesto besednih oblik, potem bi potrebovali knjinico udpipe ali spacyr za lematizacijo besednih oblik. 25.6 Izvoz odzadnjega slovarja Pridobljene besede s konnimi soglasnikimi sklopi shranimo v obliki tabele ali seznama na disk. library(writexl) write_xlsx(consclust, &quot;data/words_final_consonant_clusters.xlsx&quot;) S tem so pridobili odzadnji slovar. V nadaljevanju je prikazan postopek z uporobo funkcije kwic() iz knjinice quanteda. 25.7 Odzadnji slovar KWIC Nadaljujemo z besedilno besedno matriko (dfm), ki smo jo e sestavili. S funkcijo distinct() poskrbimo za to, da v tabeli ni podvojenih izrazov, in s funkcijo arrange(desc()) razvramo pojavnice padajoe. Nazadnje pa v oglatih oklepajih dfmaust[, 1] doloimo, da elimo obrati le stolpec s pojavnicami. library(tidyverse) dfmaust &lt;- dfmaust %&gt;% distinct() %&gt;% arrange(desc(Tokens)) dfmaust &lt;- dfmaust[,1] 25.8 Obraanje pojavnic Knjinica stringi ima funkcijo stri_reverse(), s katero obrnemo pojavnice. library(stringi) final_result &lt;- stri_reverse(dfmaust) 25.9 Sestava slovarja Poglejmo, kaj e imamo! Seznam navadnih pojavnic in seznam obrnjenih pojavnic. head(dfmaust) ## [1] &quot;ieks&quot; &quot;iek&quot; &quot;ic&quot; &quot;zywiec&quot; &quot;zyprischen&quot; ## [6] &quot;zyprische&quot; head(final_result) ## [1] &quot;skei&quot; &quot;kei&quot; &quot;ci&quot; &quot;ceiwyz&quot; &quot;nehcsirpyz&quot; ## [6] &quot;ehcsirpyz&quot; Za sestavo slovarja, ki ga lahko izvozimo v obliki Excelove tabele, pa nadaljujemo: najprej seznam obrnjenih in neobrnjenih pojavnic poveemo s funkcijo cbind() in as_tibble() v novo tabelo z imenom dict_rev. Novo tabelo lahko izvozimo v obliki Excelove preglednice (gl. spodaj), e to elimo. dict_rev &lt;- cbind(dfmaust, final_result) dict_rev &lt;- as_tibble(dict_rev) head(dict_rev) %&gt;% rmarkdown::paged_table() 25.10 Iskanje po slovarju Naredili bomo e eno tabelo, ki pa vsebuje samo doloene soglasnike sklope na koncu besed. To tabelo bomo kasneje tudi izvozili. Poizvedovanje opravimo s funkcijo kwic() iz knjinice quanteda. Seznam pojavnic z zaelenimi konnimi soglasnikimi sklopi poimenujemo reversed. Ta seznam pretvorimo s funkcijo as_tibble() v tabelo, tako da dobi vsak stolpec svoje ime, npr. keyword je iskana beseda, pattern pa iskani soglasniki sklop. Izberemo stolpec reversed$keyword in s funkcijo stri_reverse() obrnemo besede, tako da imamo tudi stolpec normalno obrnjenih besed. Oba stolpca poveemo s funkcijo cbind() v tabelo, v kateri so besede z zgoraj izbranimi konnimi soglasnikimi sklopi. Tabela dobi ime dict_both. Tabelo e malo oblikujemo, kar v tem primeru najhitreje opravimo z oglatimi oklepaji, v katere zapiemo zaeleni vrstni red izbranih stolpcev tabele: dict_both[, c(2,1,6,8)]. Tabelo razvrstimo po vzorcu soglasnikih sklopov: arrange(desc(pattern)). reversed &lt;- kwic(final_result, pattern = c(&quot;tn*&quot;, &quot;dn*&quot;, &quot;zn*&quot;, &quot;sn*&quot;, &quot;fn*&quot;, &quot;schn*&quot;)) reversed &lt;- as_tibble(reversed) nonreversed &lt;- stri_reverse(reversed$keyword) dict_both &lt;- cbind(nonreversed, reversed) dict_both &lt;- dict_both[, c(2,1,6,8)] %&gt;% arrange(desc(pattern)) head(dict_both) %&gt;% rmarkdown::paged_table() Kwic slovar vsebuje tudi stolpec docname z navedbo besedila, iz katerega je vzeta besedna oblika s konnim soglasnikim sklopom. 25.11 Izvoz kwic slovarja Obe obliki slovarja izvozimo s knjinico writexl, tako da ju lahko odpremo v Excelu ali drugem tabelarnem programu. library(writexl) write_xlsx(dict_rev, &quot;data/odzadnji_slovar_ruecklaeufiges_woerterbuch1.xlsx&quot;) write_xlsx(dict_both, &quot;data/odzadnji_slovar_ruecklaeufiges_woerterbuch2.xlsx&quot;) "],["appendix-a.html", "Kapitel 26 Appendix A", " Kapitel 26 Appendix A You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter ??. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 26.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 26.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 26.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 26.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2021) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],["rmarkdown-math.html", "Kapitel 27 Rmarkdown Math 27.1 math example", " Kapitel 27 Rmarkdown Math We describe our methods in this chapter. Math can be added in body using usual syntax like this 27.1 math example \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt(\\frac{p(1-p)}{n}) \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\] You can also use math in footnotes like this4. We will approximate standard error to 0.0275 where we mention \\(p = \\frac{a}{b}\\) \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt(\\frac{p(1-p)}{n}) \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\] "],["demonstration-chapters.html", "Kapitel 28 Demonstration chapters 28.1 Example one 28.2 Example two", " Kapitel 28 Demonstration chapters Some significant applications are demonstrated in this chapter. 28.1 Example one 28.2 Example two "],["final-words.html", "Kapitel 29 Final Words", " Kapitel 29 Final Words We have finished a nice book. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
